#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма             - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ                - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды")
		И ТипЗнч(Параметры.ПараметрКоманды) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("ЭтапПроизводства", Параметры.ПараметрКоманды);
		ЭтаФорма.ФормаПараметры.КлючНазначенияИспользования = "ПоДокументу";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЭтапыПроизводства = ЭтапыПроизводства(Настройки);
	Если ЭтапыПроизводства.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не задан этап производства.'");
	КонецЕсли;
	
	РасходМатериалов = РасходМатериалов(ЭтапыПроизводства);
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("РасходМатериалов", РасходМатериалов);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтапыПроизводства(Настройки)
	ЭтапыПроизводства = Новый Массив;
	
	ПараметрЭтапыПроизводства = Настройки.ПараметрыДанных.Элементы.Найти("ЭтапПроизводства");
	ПараметрДатаПроизводства  = Настройки.ПараметрыДанных.Элементы.Найти("ДатаПроизводства");
	
	Если ПараметрЭтапыПроизводства <> Неопределено
		И ПараметрЭтапыПроизводства.Использование Тогда
		
		Если ТипЗнч(ПараметрЭтапыПроизводства.Значение) = Тип("СписокЗначений") Тогда
			ЭтапыПроизводства = ПараметрЭтапыПроизводства.Значение.ВыгрузитьЗначения();
		ИначеЕсли ЗначениеЗаполнено(ПараметрЭтапыПроизводства.Значение) Тогда
			ЭтапыПроизводства.Добавить(ПараметрЭтапыПроизводства.Значение);
		КонецЕсли;
		
	ИначеЕсли ПараметрДатаПроизводства <> Неопределено
		И ПараметрДатаПроизводства.Использование Тогда
		ЭтапыПроизводства = бг_ЭтапПроизводства2_2.ЭтапыПроизводстваПоДатеВыпуска(
										ПараметрДатаПроизводства.Значение.ДатаНачала,
										ПараметрДатаПроизводства.Значение.ДатаОкончания);
	КонецЕсли;
	
	Возврат ЭтапыПроизводства;
КонецФункции

Функция РасходМатериалов(ЭтапыПроизводства)
	ТаблицаРасходМатериалов = Новый ТаблицаЗначений;
	ТаблицаРасходМатериалов.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	ТаблицаРасходМатериалов.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	ТаблицаРасходМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаРасходМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаРасходМатериалов.Колонки.Добавить("КоличествоОбеспечение", Новый ОписаниеТипов("Число"));
	ТаблицаРасходМатериалов.Колонки.Добавить("КоличествоПотребность", Новый ОписаниеТипов("Число"));
	ТаблицаРасходМатериалов.Колонки.Добавить("КоличествоРасхождение", Новый ОписаниеТипов("Число"));
	
	Для Каждого ЭтапПроизводства Из ЭтапыПроизводства Цикл
		ДанныеЭтапаПроизводства = ДанныеЭтапаПроизводства(ЭтапПроизводства);
		Если ДанныеЭтапаПроизводства = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПотребностьСогласноСпецификации          = бг_ЭтапПроизводства2_2.ПотребностьСогласноСпецификации(ДанныеЭтапаПроизводства);
		СоотношениеРасходаМатериаловСНормативами = бг_ЭтапПроизводства2_2.СоотношениеРасходаМатериаловСНормативами(ДанныеЭтапаПроизводства,
																					ПотребностьСогласноСпецификации, Ложь, Ложь);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СоотношениеРасходаМатериаловСНормативами, ТаблицаРасходМатериалов);
	КонецЦикла;
	
	ДополнитьРасходНеИзрасходованнымиМатериалами(ТаблицаРасходМатериалов, ЭтапыПроизводства);
	
	Возврат ТаблицаРасходМатериалов;
КонецФункции

Функция ДанныеЭтапаПроизводства(ЭтапПроизводства)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭтапПроизводства.Ссылка КАК Ссылка,
	|	ЭтапПроизводства.Спецификация КАК Спецификация
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства
	|ГДЕ
	|	ЭтапПроизводства.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.Характеристика КАК Характеристика,
	|	СУММА(ВыходныеИзделия.Количество) КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделия
	|ГДЕ
	|	ВыходныеИзделия.Ссылка = &Ссылка
	|	И НЕ ВыходныеИзделия.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходныеИзделия.Номенклатура,
	|	ВыходныеИзделия.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбеспечениеМатериаламиИРаботами.Ссылка КАК Ссылка,
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура КАК Номенклатура,
	|	ОбеспечениеМатериаламиИРаботами.Характеристика КАК Характеристика,
	|	ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ОбеспечениеМатериаламиИРаботами.Склад КАК Склад,
	|	ОбеспечениеМатериаламиИРаботами.Назначение КАК Назначение,
	|	ОбеспечениеМатериаламиИРаботами.Отменено КАК Отменено,
	|	ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|ГДЕ
	|	ОбеспечениеМатериаламиИРаботами.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ЭтапПроизводства);
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатШапкаДокумента  = Результат[0];
	РезультатВыходныеИзделия = Результат[1];
	РезультатОбеспечение     = Результат[2];
	
	Если РезультатШапкаДокумента.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЭтапаПроизводства = Новый Структура("Ссылка, Спецификация");
	ВыборкаШапка = РезультатШапкаДокумента.Выбрать();
	Если ВыборкаШапка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЭтапаПроизводства, ВыборкаШапка);
	КонецЕсли;
	
	ДанныеЭтапаПроизводства.Вставить("ВыходныеИзделия", РезультатВыходныеИзделия.Выгрузить());
	ДанныеЭтапаПроизводства.Вставить("ОбеспечениеМатериаламиИРаботами", РезультатОбеспечение.Выгрузить());
	
	Возврат ДанныеЭтапаПроизводства;
КонецФункции

Процедура ДополнитьРасходНеИзрасходованнымиМатериалами(ТаблицаРасходМатериалов, ЭтапыПроизводства)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭкономияМатериалов.Ссылка КАК ЭтапПроизводства,
	|	ЭкономияМатериалов.Ссылка.Спецификация КАК Спецификация,
	|	ЭкономияМатериалов.Номенклатура КАК Номенклатура,
	|	ЭкономияМатериалов.Характеристика КАК Характеристика,
	|	- ЭкономияМатериалов.Количество КАК КоличествоОбеспечение,
	|	- ЭкономияМатериалов.Количество КАК КоличествоРасхождение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ЭкономияМатериалов
	|ГДЕ
	|	ЭкономияМатериалов.Ссылка В(&Ссылка)";
	Запрос.УстановитьПараметр("Ссылка", ЭтапыПроизводства);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРасходМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
