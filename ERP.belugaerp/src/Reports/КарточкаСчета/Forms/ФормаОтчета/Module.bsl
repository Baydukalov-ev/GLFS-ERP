
&ИзменениеИКонтроль("СформироватьОтчетНаСервере")
&НаСервере
Функция бг_СформироватьОтчетНаСервере() Экспорт

	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("ЗаданиеВыполнено", Истина);
	РезультатВыполнения.Вставить("ОтказПроверкиЗаполнения", Ложь);

	Если Не ПроверитьЗаполнение() Тогда
		РезультатВыполнения.ОтказПроверкиЗаполнения = Истина;
		Возврат РезультатВыполнения;
	КонецЕсли;

	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);

	ИдентификаторЗадания = Неопределено;

	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");

	Если Не КомпоновщикИнициализирован Тогда
		ИнициализацияКомпоновщикаНастроек();
	КонецЕсли;

	Настройки = Отчет.КомпоновщикНастроек.Настройки;
	Настройки.Отбор.ИдентификаторПользовательскойНастройки              = "";
	Настройки.Порядок.ИдентификаторПользовательскойНастройки            = "";
	Настройки.УсловноеОформление.ИдентификаторПользовательскойНастройки = "";

	ПараметрыОтчета = Отчеты.КарточкаСчета.ПустыеПараметрыКомпоновкиОтчета();
	Отчеты.КарточкаСчета.ЗаполнитьПараметрыИзФормы(ПараметрыОтчета, ЭтотОбъект);
#Вставка
	НаборДанныхПроводки = ПараметрыОтчета.СхемаКомпоновкиДанных.НаборыДанных.Найти("Проводки");
	ТребуетсяИзменитьПолучениеРегистратора = СтрНайти(НаборДанныхПроводки.Запрос, "РеквизитыОперации") = 0;
	Если ТребуетсяИзменитьПолучениеРегистратора Тогда
		
		НаборДанныхПроводки.Запрос = СтрЗаменить(НаборДанныхПроводки.Запрос,
			"И ХозрасчетныйОстаткиИОбороты.НомерСтроки = ДвиженияССубконто.НомерСтроки",
			"И ХозрасчетныйОстаткиИОбороты.НомерСтроки = ДвиженияССубконто.НомерСтроки
			|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК РеквизитыОперации
			|ПО ДвиженияССубконто.Регистратор = РеквизитыОперации.Ссылка
			|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК РеквизитыРасходов
			|ПО ДвиженияССубконто.Регистратор = РеквизитыРасходов.Ссылка
			|ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗадолженности КАК РеквизитыКЗ
			|ПО ДвиженияССубконто.Регистратор = РеквизитыКЗ.Ссылка");
		ЗаменяемыйТекст = "ДвиженияССубконто.Регистратор КАК Регистратор";
		ПозицияЗаменяемогоТекста = СтрНайти(НаборДанныхПроводки.Запрос, ЗаменяемыйТекст, НаправлениеПоиска.СКонца);
		Если ПозицияЗаменяемогоТекста > 0 Тогда
			
			ТекстВыборкиРегистратора =
				"ВЫБОР
				|	КОГДА НЕ РеквизитыОперации.Ссылка ЕСТЬ NULL
				|		И НЕ РеквизитыОперации.бг_Основание = ЗНАЧЕНИЕ(Документ.битФакторинг.ПустаяСсылка)
				|		ТОГДА РеквизитыОперации.бг_Основание
				|	КОГДА НЕ РеквизитыРасходов.Ссылка ЕСТЬ NULL
				|		И НЕ РеквизитыРасходов.бг_Основание = ЗНАЧЕНИЕ(Документ.битФакторинг.ПустаяСсылка)
				|		ТОГДА РеквизитыРасходов.бг_Основание
				|	КОГДА НЕ РеквизитыКЗ.Ссылка ЕСТЬ NULL
				|		И НЕ РеквизитыКЗ.бг_Основание = ЗНАЧЕНИЕ(Документ.битФакторинг.ПустаяСсылка)
				|		ТОГДА РеквизитыКЗ.бг_Основание
				|	ИНАЧЕ ДвиженияССубконто.Регистратор
				|КОНЕЦ КАК Регистратор";
			НаборДанныхПроводки.Запрос = Лев(НаборДанныхПроводки.Запрос, ПозицияЗаменяемогоТекста - 1)
				+ ТекстВыборкиРегистратора
				+ Сред(НаборДанныхПроводки.Запрос, ПозицияЗаменяемогоТекста + СтрДлина(ЗаменяемыйТекст));
				
		КонецЕсли;
	
	КонецЕсли;
#КонецВставки

	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
		РезультатВыполнения = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет",
			ПараметрыОтчета,
			БухгалтерскиеОтчетыКлиентСервер.ПолучитьНаименованиеЗаданияВыполненияОтчета(ЭтаФорма));

		АдресХранилища       = РезультатВыполнения.АдресХранилища;
		ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
	КонецЕсли;

	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;

	КнопкаДействия = ?(Элементы.Выгрузить.Видимость, Элементы.Выгрузить, Элементы.Сформировать);
	КнопкаДействия.КнопкаПоУмолчанию = Истина;

	Возврат РезультатВыполнения;

КонецФункции