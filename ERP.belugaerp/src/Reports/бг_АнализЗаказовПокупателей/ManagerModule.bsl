#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
// Процедура - Добавляет команду открытия формы 
//		обработки "бг_ФормированиеЗаказовПоставщикам"
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения 
//
Процедура ДобавитьКомандуСозданияЗаказовПоставщикам(Форма) Экспорт

	Если Не НужноДобавитьКомандуСозданияЗаказов(Форма) Тогда
		Возврат;	
	КонецЕсли;
	
	ИмяКоманды = ДобавитьКомандуСозданияЗаказов(
		Форма, 
		Форма.Элементы.ОсновнаяКоманднаяПанель, 
		Истина, 
		"Подключаемый_Команда");

	ПостоянныеКоманды = Форма.ПостоянныеКоманды;
	ПостоянныеКоманды.Добавить(ИмяКоманды);
	
КонецПроцедуры

// Функция - Возвращает адрес с данными отчета
//
// Параметры:
//  КомпоновщикНастроек - КомпоновщикНастроекКомпоновкиДанных 
//  АдресСхемы - Строка 
// 
// Возвращаемое значение:
//   Строка - Адрес временного хранилища 
//
Функция ПодготовитьДанныеЗапросовИзСхемыКомпоновкиДанных(КомпоновщикНастроек, АдресСхемы) Экспорт

	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемы);
	СхемаКомпоновкиДанных.ПоляИтога.Очистить();
	
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
	// очистим установленные настройки
	НастройкиКомпоновки.Выбор.Элементы.Очистить();
	НастройкиКомпоновки.Порядок.Элементы.Очистить();	
	НастройкиКомпоновки.Структура.Очистить();
	
	ДобавитьВСтруктуруНастроекДетальныеЗаписи(НастройкиКомпоновки);
	ДобавитьВыводимыеПоляВНастройкиКомпоновки(НастройкиКомпоновки);
    ДобавитьОтборВНастройкиКомпоновки(НастройкиКомпоновки);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		НастройкиКомпоновки,,, 
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаОтчета = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
		
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОтчета);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НужноДобавитьКомандуСозданияЗаказов(Форма) 

	Возврат Форма.ИмяФормы = "Отчет.бг_АнализЗаказовПокупателей.Форма";
	
КонецФункции

Функция ДобавитьКомандуСозданияЗаказов(Форма, МестоРазмещенияКоманд, ТолькоВоВсехДействиях, Действие)
	
	ИмяКоманды = СтрШаблон(
		НСтр("ru='бг_%1СоздатьЗаказыПоставщикам'"), 
		МестоРазмещенияКоманд.Имя);
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие = Действие; // универсальный обработчик
	КомандаФормы.Заголовок = НСтр("ru = 'Создать заказы поставщикам'");
	КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НовыйЭлемент = Форма.Элементы.Добавить(
		МестоРазмещенияКоманд.Имя + ИмяКоманды, 
		Тип("КнопкаФормы"), 
		МестоРазмещенияКоманд);
		
	НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.ТолькоВоВсехДействиях = ТолькоВоВсехДействиях;
	НовыйЭлемент.Картинка = БиблиотекаКартинок.ФункциональнаяМодель;
	НовыйЭлемент.Отображение = ОтображениеКнопки.Картинка;
	
	Возврат ИмяКоманды;
	
КонецФункции

Процедура ДобавитьВСтруктуруНастроекДетальныеЗаписи(НастройкиКомпоновки)

	ДетальныеЗаписи = НастройкиКомпоновки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДетальныеЗаписи.Имя = "ДетальныеЗаписи";
	ДетальныеЗаписи.Использование = Истина;
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ЗаказНаОтгрузку.Организация");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ПервоначальнаяПотребность");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("КОбеспечениюБезРезерва");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Резервировать");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Отгрузить");
	
	ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));  
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ОсталосьОбеспечить");
	
КонецПроцедуры

Процедура ДобавитьВыводимыеПоляВНастройкиКомпоновки(НастройкиКомпоновки)

	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ЗаказНаОтгрузку.Организация");
	
	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");

	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ПервоначальнаяПотребность");
	
	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("КОбеспечениюБезРезерва");
	
	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Резервировать");
	
	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Отгрузить");
	
	ВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ОсталосьОбеспечить");
	
КонецПроцедуры

Процедура ДобавитьОтборВНастройкиКомпоновки(НастройкиКомпоновки)

	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОсталосьОбеспечить");
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 0;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли