
&НаСервере
&ИзменениеИКонтроль("ЗаполнитьИсходящиеЗапросы")
Процедура бг_ЗаполнитьИсходящиеЗапросы(МассивЗапросов, Отказ)
	
	ИсходящиеЗапросы.Очистить();
	
	Для Каждого ДанныеЗапроса Из МассивЗапросов Цикл
		
		ЗначенияПараметров = ПараметрыЗапроса();
		ЗаполнитьЗначенияСвойств(ЗначенияПараметров, ДанныеЗапроса);
		
		Если НЕ ЗначениеЗаполнено(ЗначенияПараметров.Операция) Тогда
			Продолжить;
		КонецЕсли;
		
		Информация = "";
		ВремОжидаемаяОперация = Неопределено;
		
		Если ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки1") Тогда
			
			Информация = СтрШаблон(НСтр("ru = 'Запрос на получение справки 1 по номеру %1';
										|en = 'Запрос на получение справки 1 по номеру %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросСправки1");
			
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2") Тогда
			
			Информация = СтрШаблон(НСтр("ru = 'Запрос на получение справки 2 по номеру %1';
										|en = 'Запрос на получение справки 2 по номеру %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросСправки2");
			
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАлкогольнойПродукции") Тогда
			
			Если ВРег(ЗначенияПараметров.ИмяПараметра) = "ИНН" Тогда
				Информация = СтрШаблон(НСтр("ru = 'Запрос на получение алкогольной продукции по ИНН производителя/импортера %1';
											|en = 'Запрос на получение алкогольной продукции по ИНН производителя/импортера %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ИначеЕсли ВРег(ЗначенияПараметров.ИмяПараметра) = "КОД" Тогда
				Информация = СтрШаблон(НСтр("ru = 'Запрос на получение алкогольной продукции по коду %1';
											|en = 'Запрос на получение алкогольной продукции по коду %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			КонецЕсли;
			
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросАлкогольнойПродукции");
			
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросДанныхОрганизации") Тогда
			
			Если ВРег(ЗначенияПараметров.ИмяПараметра) = "ИНН" Тогда
				Информация = СтрШаблон(НСтр("ru = 'Запрос на получение организации ЕГАИС по ИНН %1';
											|en = 'Запрос на получение организации ЕГАИС по ИНН %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ИначеЕсли ВРег(ЗначенияПараметров.ИмяПараметра) = "СИО" Тогда
				Информация = СтрШаблон(НСтр("ru = 'Запрос на получение организации ЕГАИС по коду ФСРАР %1';
											|en = 'Запрос на получение организации ЕГАИС по коду ФСРАР %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			КонецЕсли;
			
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросДанныхОрганизации");
			
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросТТН") Тогда
			
			Информация = СтрШаблон(НСтр("ru = 'Запрос на получение ТТН ЕГАИС (входящая) по идентификатору %1';
										|en = 'Запрос на получение ТТН ЕГАИС (входящая) по идентификатору %1'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ТТН");
			
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросПроверкиАкцизныхМарокНаОстаткахОрганизации") Тогда
			
			Информация = СтрШаблон(НСтр("ru = 'Запрос проверки акцизных марок %1 на остатках организации';
										|en = 'Запрос проверки акцизных марок %1 на остатках организации'"), СокрЛП(ЗначенияПараметров.ЗначениеПараметра));
			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросПроверкиАкцизныхМарокНаОстаткахОрганизации");
#Вставка
		ИначеЕсли ЗначенияПараметров.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП") Тогда

			Информация = СтрШаблон(
				НСтр("ru = 'Запрос на получение ССП по коду %1'"),
				СокрЛП(ЗначенияПараметров.ЗначениеПараметра));

			ВремОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ОтветНаЗапросССП");
#КонецВставки
			
		КонецЕсли;
		
		Если ПустаяСтрока(Информация) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы = ИсходящиеЗапросы.Добавить();
		СтрокаТаблицы.Пометка = Истина;
		СтрокаТаблицы.Информация = Информация;
		СтрокаТаблицы.ОжидаемаяОперация = ВремОжидаемаяОперация;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеЗапроса);
		
		Если ПустаяСтрока(СтрокаТаблицы.ПредставлениеПараметра) Тогда
			СтрокаТаблицы.ПредставлениеПараметра = ПредставлениеПараметра(ЗначенияПараметров, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
&ИзменениеИКонтроль("ПодготовитьМассивЗапросовКПередаче")
Функция бг_ПодготовитьМассивЗапросовКПередаче(МассивЗапросов)

	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Изменения",             Новый Массив);
	ВозвращаемоеЗначение.Вставить("СообщенияXMLКПередаче", Новый Массив);
	ВозвращаемоеЗначение.Вставить("НастройкиОбменаЕГАИС",  Новый Соответствие);

	Для Каждого ДанныеЗапроса Из МассивЗапросов Цикл

		ПодготовленныеДанные = Неопределено;

		Если ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки1")
			ИЛИ ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2") Тогда

			ПодготовленныеДанные = ИнтеграцияЕГАИСВызовСервера.ПодготовитьЗапросДанныхСправкиКПередаче(
			ДанныеЗапроса.ОрганизацияЕГАИС,
			ДанныеЗапроса.Операция,
			СокрЛП(ДанныеЗапроса.ЗначениеПараметра));

		ИначеЕсли ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАлкогольнойПродукции")
#Вставка
			ИЛИ ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП")
#КонецВставки
			ИЛИ ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросДанныхОрганизации") Тогда

			ПодготовленныеДанные = ИнтеграцияЕГАИСВызовСервера.ПодготовитьЗапросДанныхКлассификатораКПередаче(
			ДанныеЗапроса.ОрганизацияЕГАИС,
			ДанныеЗапроса.Операция,
			ДанныеЗапроса.ИмяПараметра,
			СокрЛП(ДанныеЗапроса.ЗначениеПараметра));

		ИначеЕсли ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросТТН") Тогда

			ПодготовленныеДанные = ИнтеграцияЕГАИСВызовСервера.ПодготовитьЗапросДанныхТТНКПередаче(ДанныеЗапроса.ОрганизацияЕГАИС, СокрЛП(ДанныеЗапроса.ЗначениеПараметра));

		ИначеЕсли ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросПроверкиАкцизныхМарокНаОстаткахОрганизации") Тогда

			АкцизныеМарки = СтрРазделить(ДанныеЗапроса.ЗначениеПараметра, " ", Ложь);

			ПодготовленныеДанные = ИнтеграцияЕГАИСВызовСервера.ПодготовитьЗапросДанныхТТНКПередаче(ДанныеЗапроса.ОрганизацияЕГАИС, АкцизныеМарки);

		КонецЕсли;

		Если ПодготовленныеДанные <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВозвращаемоеЗначение.Изменения, ПодготовленныеДанные.Изменения);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВозвращаемоеЗначение.СообщенияXMLКПередаче, ПодготовленныеДанные.СообщенияXMLКПередаче);
			ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(ВозвращаемоеЗначение.НастройкиОбменаЕГАИС, ПодготовленныеДанные.НастройкиОбменаЕГАИС, Истина);

			Если ПодготовленныеДанные.СообщенияXMLКПередаче.Количество() > 0 Тогда
				ДанныеЗапроса.ИсходящееСообщение = ПодготовленныеДанные.СообщенияXMLКПередаче[0].Ссылка;
			ИначеЕсли ПодготовленныеДанные.Изменения.Количество() > 0 Тогда
				ДанныеЗапроса.ИсходящееСообщение = ПодготовленныеДанные.Изменения[0].ИсходящееСообщение;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Возврат ВозвращаемоеЗначение;

КонецФункции

&НаКлиенте
&После("ПодготовитьЗапросКПередаче")
Процедура бг_ПодготовитьЗапросКПередаче(ОповещениеПриЗавершении)
	
	Если Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП") Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьЗапросДанныхКлассификатораКПередаче(
			ОповещениеПриЗавершении,
			ОрганизацияЕГАИС,
			Операция,
			ИмяПараметра,
			СокрЛП(ЗначениеПараметра),
			ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ПослеПодготовкиЗапросаКПередаче")
Процедура бг_ПослеПодготовкиЗапросаКПередаче(Изменения, ДополнительныеПараметры)

	Если Изменения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Результат = Изменения[0];

	Если НЕ ТипЗнч(Результат) = Тип("Структура")
		Или НЕ Результат.Свойство("ИсходящееСообщение") Тогда
		Возврат;
	КонецЕсли;

	ОжидаемаяОперация  = Неопределено;
	ИсходящееСообщение = Результат.ИсходящееСообщение;
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ПриЗавершенииОбмена(Изменения, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;

	Строки = Новый Массив;
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос';
	|en = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
	Строки.Добавить(" ");

	Если Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки1") Тогда

		Строки.Добавить(
		Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'на получение справки 1 по номеру %1 передан в ЕГАИС.';
		|en = 'на получение справки 1 по номеру %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросСправки1");

	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2") Тогда

		Строки.Добавить(
		Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'на получение справки 2 по номеру %1 передан в ЕГАИС.';
		|en = 'на получение справки 2 по номеру %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросСправки2");

	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАлкогольнойПродукции") Тогда

		Если ВРег(ИмяПараметра) = "ИНН" Тогда
			Строки.Добавить(
			Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'на получение алкогольной продукции по ИНН производителя/импортера %1 передан в ЕГАИС.';
			|en = 'на получение алкогольной продукции по ИНН производителя/импортера %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));
		ИначеЕсли ВРег(ИмяПараметра) = "КОД" Тогда
			Строки.Добавить(
			Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'на получение алкогольной продукции по коду %1 передан в ЕГАИС.';
			|en = 'на получение алкогольной продукции по коду %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));
		КонецЕсли;

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросАлкогольнойПродукции");

#Вставка
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП") Тогда

			Строки.Добавить(
			Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'на получение ССП по коду %1 передан в ЕГАИС.';
			|en = 'на получение ССП по коду %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ОтветНаЗапросССП");
		
#КонецВставки
	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросДанныхОрганизации") Тогда

		Если ВРег(ИмяПараметра) = "ИНН" Тогда
			Строки.Добавить(
			Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'на получение организации ЕГАИС по ИНН %1 передан в ЕГАИС.';
			|en = 'на получение организации ЕГАИС по ИНН %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));
		ИначеЕсли ВРег(ИмяПараметра) = "СИО" Тогда
			Строки.Добавить(
			Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'на получение организации ЕГАИС по коду ФСРАР %1 передан в ЕГАИС.';
			|en = 'на получение организации ЕГАИС по коду ФСРАР %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));
		КонецЕсли;

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросДанныхОрганизации");

	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросТТН") Тогда

		Строки.Добавить(
		Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'на получение ТТН ЕГАИС (входящая) по идентификатору %1 передан в ЕГАИС.';
		|en = 'на получение ТТН ЕГАИС (входящая) по идентификатору %1 передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ТТН");

	ИначеЕсли Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросПроверкиАкцизныхМарокНаОстаткахОрганизации") Тогда

		Строки.Добавить(
		Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'на проверку акцизных марок %1 на остатках организации передан в ЕГАИС.';
		|en = 'на проверку акцизных марок %1 на остатках организации передан в ЕГАИС.'"), СокрЛП(ЗначениеПараметра))));

		ОжидаемаяОперация = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ОтветНаЗапросПроверкиАкцизныхМарокНаОстаткахОрганизации");

	КонецЕсли;

	Строки.Добавить(Символы.ПС);
	Строки.Добавить(
	Новый ФорматированнаяСтрока(
	НСтр("ru = 'Получение ответа от сервера может занять продолжительное время.
	|Дождитесь ответа или закройте окно для продолжения
	|выполнения операции в фоновом режиме.';
	|en = 'Получение ответа от сервера может занять продолжительное время.
	|Дождитесь ответа или закройте окно для продолжения
	|выполнения операции в фоновом режиме.'")));

	ТекстОжидание = Новый ФорматированнаяСтрока(Строки);

	Элементы.Запросить.Видимость = Ложь;

	Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
	Элементы.Закрыть.Заголовок = НСтр("ru = 'Продолжить в фоне';
	|en = 'Продолжить в фоне'");

	Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаЗапросОжидание;
	ПодключитьОбработчикОжидания("ВыполнитьОбмен", 30, Ложь);

КонецПроцедуры

&НаСервере
&Вместо("ПредставлениеПараметра")
Функция бг_ПредставлениеПараметра(ДанныеЗапроса, Отказ)
	
	Результат = ПродолжитьВызов(ДанныеЗапроса, Отказ);
	
	Если ДанныеЗапроса.Операция = Перечисления.ВидыДокументовЕГАИС.бг_ЗапросССП Тогда
		
		Если ВРег(ДанныеЗапроса.ИмяПараметра) = "КОД" Тогда
			Результат = НСтр("ru = 'Код';
			                 |en = 'Код'");
		Иначе
			Отказ = Истина;
			Возврат Результат;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
&Вместо("ТекстОбработанногоЗапроса")
Функция бг_ТекстОбработанногоЗапроса(ДанныеЗапроса, Объект, ТекстОшибки = "", ИндексТаблицыЗапросов = "")
	
	Результат = ПродолжитьВызов(ДанныеЗапроса, Объект, ТекстОшибки, ИндексТаблицыЗапросов);
	
	ПредставлениеРезультата = Строка(Объект);
	
	Строки = Новый Массив;
	Строки.Добавить(НСтр("ru = 'На';
	                     |en = 'На'"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'запрос';
	                                                 |en = 'запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение" + ИндексТаблицыЗапросов));
	Строки.Добавить(" ");
	
	Если Объект <> Неопределено Тогда
		Если ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП") Тогда
			
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = 'ССП по коду %1 получен';
				|en = 'СПП по коду %1 получен'"), СокрЛП(ДанныеЗапроса.ЗначениеПараметра))));
			
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ответ';
				|en = 'ответ'"),, ЦветГиперссылки,, "ОткрытьВходящееСообщение" + ИндексТаблицыЗапросов));
			Строки.Добавить(".");
			Строки.Добавить(Символы.ПС);
			
			Если ТипЗнч(Объект) = Тип("Массив") И Объект.Количество() > 0 Тогда
				Строки.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'Загружено позиций: %1';
					|en = 'Загружено позиций: %1'"), Объект.Количество())));
				Строки.Добавить(".");
				Строки.Добавить(" ");
				Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Показать';
					|en = 'Показать'"),, ЦветГиперссылки,, "ОткрытьРезультат" + ИндексТаблицыЗапросов));
			Иначе
				Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Алкогольная продукция не найдена';
					|en = 'Алкогольная продукция не найдена'")));
				Строки.Добавить(".");
			КонецЕсли;
			Результат = Новый ФорматированнаяСтрока(Строки);
		КонецЕсли;
	Иначе
		Если ДанныеЗапроса.Операция = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.бг_ЗапросССП") Тогда
			
			Строки.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru = 'ССП по коду %1 получен';
				|en = 'ССП по коду %1 получен'"), СокрЛП(ДанныеЗапроса.ЗначениеПараметра))));
			
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ответ';
				|en = 'ответ'"),, ЦветГиперссылки,, "ОткрытьВходящееСообщение" + ИндексТаблицыЗапросов));
			Строки.Добавить(".");
			Строки.Добавить(Символы.ПС);
			
			Результат = Новый ФорматированнаяСтрока(Строки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
