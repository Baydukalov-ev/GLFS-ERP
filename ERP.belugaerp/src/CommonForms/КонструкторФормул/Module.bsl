
#Область СлужебныеПроцедурыИФункции

&ИзменениеИКонтроль("ОперандыФормулы")
&НаКлиенте
Функция бг_ОперандыФормулы()

	МассивОперандов = РаботаСФормуламиКлиентСервер.ОперандыТекстовойФормулы(Формула);

	// Поиск фиксированных операндов (например, видов цен), а также операндов пути данным.
	// Для операндов - путь к данным проверка осуществляется поиск только для первой части операнда (до первой точки),
	// т.к. дальнейший поиск затратен по времени.
	ОперандыНаУдаление = Новый Массив;
	Для Каждого Операнд Из МассивОперандов Цикл
		ПроверяемаяЧасть = Операнд;
		Если РазрешенныеОперанды.Найти(ПроверяемаяЧасть) = Неопределено Тогда
			ЧастиОперанда = РаботаСФормуламиКлиентСервер.ЧастиОперанда(Операнд);
			ПроверяемаяЧасть = ЧастиОперанда[0];
			Если ЧастиОперанда.Количество() > 1 Тогда
				ПроверяемаяЧасть = ПроверяемаяЧасть + ".";
#Вставка
				Если ЧастиОперанда.Количество() > 2 Тогда
					ПроверяемаяЧасть= ПроверяемаяЧасть + ЧастиОперанда[1];
				КонецЕсли;
#КонецВставки
			КонецЕсли;
			Если РазрешенныеОперанды.Найти(ПроверяемаяЧасть) = Неопределено Тогда
				ОперандыНаУдаление.Добавить(Операнд);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Операнд Из ОперандыНаУдаление Цикл
		Индекс = МассивОперандов.Найти(Операнд);
		Пока Индекс <> Неопределено Цикл
			МассивОперандов.Удалить(Индекс);
			Индекс = МассивОперандов.Найти(Операнд);
		КонецЦикла;

		ТекстОшибки = НСтр("ru = 'Не найден операнд ""[%1]""';
							|en = 'The ""[%1]"" operand is not found'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Операнд);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЦикла;

	Возврат МассивОперандов;

КонецФункции

#КонецОбласти
