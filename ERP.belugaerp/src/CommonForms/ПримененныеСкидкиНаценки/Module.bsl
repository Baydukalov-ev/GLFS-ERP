
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьРеквизитыФормы();
	бг_ДоработатьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
&ИзменениеИКонтроль("СформироватьИнформациюОРасчетеСкидокПоСтроке")
Процедура бг_СформироватьИнформациюОРасчетеСкидокПоСтроке(ВходящееДеревоСкидок, КлючСвязи)

	ДеревоСкидок = ВходящееДеревоСкидок.ДеревоСкидок.Скопировать(); // ДеревоЗначений
	ДеревоСкидок.Колонки.Добавить("ИндексКартинки",   Новый ОписаниеТипов("Число"));
	ДеревоСкидок.Колонки.Добавить("Действует",        Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("УсловияВыполнены", Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("НеПримениласьПоУсловиямСовместногоПрименения", Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Разворачивать",  Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("ЭтоУсловие",     Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Значение",       Новый ОписаниеТипов("СправочникСсылка.СкидкиНаценки, СправочникСсылка.УсловияПредоставленияСкидокНаценок"));
	ДеревоСкидок.Колонки.Добавить("Представление",  Новый ОписаниеТипов("Строка"));
	ДеревоСкидок.Колонки.Добавить("СуммаАвтоматическойСкидки", Новый ОписаниеТипов("Число"));
#Вставка
	ДеревоСкидок.Колонки.Добавить("бг_СуммаАвтоматическойСкидкиНачисленная", Новый ОписаниеТипов("Число"));
#КонецВставки

	РассчитатьИнформациюОРасчетеСкидокПоСтроке(ВходящееДеревоСкидок, ДеревоСкидок, КлючСвязи);

	ЗначениеВРеквизитФормы(ДеревоСкидок, "ИнформацияОРасчетеСкидокПоСтроке");

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("РазложитьПоКолонкам")
Процедура бг_РазложитьПоКолонкам(СтрокаДерева, НайденнаяСтрока)

	Для каждого СтрокаРасшифровки Из НайденнаяСтрока.Расшифровка Цикл
		СтрокаДерева.СуммаАвтоматическойСкидки = СтрокаДерева.СуммаАвтоматическойСкидки + СтрокаРасшифровки.Сумма;
#Вставка
		СтрокаДерева.бг_СуммаАвтоматическойСкидкиНачисленная = СтрокаДерева.бг_СуммаАвтоматическойСкидкиНачисленная
			+ СтрокаРасшифровки.бг_СуммаНачислено;
#КонецВставки
	КонецЦикла;

КонецПроцедуры

&НаСервере
&После("УстановитьУсловноеОформление")
Процедура бг_УстановитьУсловноеОформление()
	
	// бг_ИнформацияОРасчетеСкидокПоСтрокеСуммаНачислено

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.бг_ИнформацияОРасчетеСкидокПоСтрокеСуммаНачислено.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнформацияОРасчетеСкидокПоСтроке.ЭтоУсловие");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьРеквизитыФормы()
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_СуммаНачислено",
			Метаданные.ОпределяемыеТипы.ДенежнаяСуммаЛюбогоЗнака.Тип,
			"АвтоматическиеСкидки",
			НСтр("ru = 'Начислено'"),
			Ложь
		)
	);
	НовыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_СуммаАвтоматическойСкидкиНачисленная",
			Метаданные.ОпределяемыеТипы.ДенежнаяСуммаЛюбогоЗнака.Тип,
			"ИнформацияОРасчетеСкидокПоСтроке",
			НСтр("ru = 'Сумма начисленная'"),
			Ложь
		)
	);
	ИзменитьРеквизиты(НовыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура бг_ДоработатьЭлементыФормы()
	
	Элемент = Элементы.ИнформацияОРасчетеСкидокПоСтрокеСумма;
	Элемент.Заголовок      = НСтр("ru = 'Сумма применённая'");
	Элемент.Подсказка      = НСтр("ru = 'Сумма, применённая к строке с учётом ограничений'");
	Элемент.ШрифтЗаголовка = Новый Шрифт(Элемент.ШрифтЗаголовка,,, Истина);
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ИнформацияОРасчетеСкидокПоСтрокеСуммаНачислено",
		Элементы.ИнформацияОРасчетеСкидокПоСтроке,
		"ИнформацияОРасчетеСкидокПоСтроке.бг_СуммаАвтоматическойСкидкиНачисленная",
		,
		Элемент
	);
	Элемент.Ширина = 9;
	Элемент.ТолькоПросмотр = Истина;
	Элемент.Подсказка = НСтр("ru = 'Сумма, рассчитанная для строки по правилам расчёта скидки'");
	
КонецПроцедуры

#КонецОбласти
