
#Область СлужебныеПроцедурыИФункции

&НаСервере
&ИзменениеИКонтроль("ВывестиРодительскиеОбъекты")
Процедура бг_ВывестиРодительскиеОбъекты(ТекущийОбъект, ДеревоРодитель, ВыведенныеОбъекты,
	СлужебныеОбъекты = Неопределено, ИндексСвязейОбъектов = Неопределено)
	
	МетаданныеОбъекта = ТекущийОбъект.Метаданные();
	СписокРеквизитов  = Новый СписокЗначений;
	
	Если СлужебныеОбъекты = Неопределено Тогда 
		СлужебныеОбъекты = Новый Соответствие;
	КонецЕсли;
	
	Если ИндексСвязейОбъектов = Неопределено Тогда 
		ИндексСвязейОбъектов = Новый Соответствие;
	КонецЕсли;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
#Удаление		
		Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
#КонецУдаления
#Вставка
		Если Не (Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит)
			Или Метаданные.КритерииОтбора.бг_СвязанныеДокументы.Состав.Содержит(Реквизит)) Тогда
#КонецВставки		
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
			
			МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
			Если МетаданныеРеквизита = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
				Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
				И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
				И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеРеквизита = ТекущийОбъект[Реквизит.Имя];
			Если ЗначениеЗаполнено(ЗначениеРеквизита)
				И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
				И ЗначениеРеквизита <> ТекущийОбъект
				И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
				
				ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеРеквизита);
				
				Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
				Иначе
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1,1,1));
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ТЧ Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ИменаРеквизитов = "";
		СодержимоеТЧ = ТекущийОбъект[ТЧ.Имя].Выгрузить(); // ТаблицаЗначений
		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл

#Удаление		
			Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
#КонецУдаления
#Вставка
			Если Не (Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит)
            	Или Метаданные.КритерииОтбора.бг_СвязанныеДокументы.Состав.Содержит(Реквизит)) Тогда
#КонецВставки		
				Продолжить;
			КонецЕсли;
				
			Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
				
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
				Если МетаданныеРеквизита = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
					Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
					И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
					И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
					Продолжить;
				КонецЕсли;
				
				ИменаРеквизитов = ИменаРеквизитов + ?(ИменаРеквизитов = "", "", ", ") + Реквизит.Имя;
				Прервать;
				
			КонецЦикла;
			
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(ИменаРеквизитов);
		Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл
			
			Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл
			
				ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеЗначения) 
					Или Не ПравоДоступа("Чтение", МетаданныеЗначения) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеРеквизита = ТекущийОбъект
					Или СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеЗначения);
				Если Не ЯвляетсяДокументом И Не Метаданные.Справочники.Содержит(МетаданныеЗначения)
					И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеЗначения) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
				Иначе
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1, 1, 1));
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СписокРеквизитов.СортироватьПоПредставлению();
	
	Для каждого ЭлементСписка Из СписокРеквизитов Цикл
		
		Выборка = ПолучитьВыборкуПоРеквизитамОбъекта(ЭлементСписка.Значение);
		
		Если Выборка.Следующий() Тогда
			
			Если ИндексСвязейОбъектов[ТекущийОбъект] = Выборка.Ссылка Тогда 
				Продолжить;
			КонецЕсли;
			
			ИндексСвязейОбъектов.Вставить(ТекущийОбъект, Выборка.Ссылка);
			
			НоваяСтрока = ДобавитьСтрокуВДерево(ДеревоРодитель, Выборка, ВыведенныеОбъекты);
			
			Если НоваяСтрока <> Неопределено
				И Не ДобавляемыйОбъектИмеетсяСредиРодителей(ДеревоРодитель, ЭлементСписка.Значение) Тогда
				
				ВывестиРодительскиеОбъекты(ЭлементСписка.Значение, НоваяСтрока, ВыведенныеОбъекты,
					СлужебныеОбъекты, ИндексСвязейОбъектов);
				
			ИначеЕсли СлужебныеОбъекты[ЭлементСписка.Значение] = Неопределено Тогда 
				
				СлужебныеОбъекты.Вставить(ЭлементСписка.Значение, Истина);
				ВывестиРодительскиеОбъекты(ЭлементСписка.Значение, ДеревоРодитель, ВыведенныеОбъекты,
					СлужебныеОбъекты, ИндексСвязейОбъектов);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
&Вместо("ОбъектыПоКритериюОтбора")
Функция бг_ОбъектыПоКритериюОтбора(ЗначениеКритерияОтбора)
	
	ОбъектыПоКритериюОтбораТиповые = ПродолжитьВызов(ЗначениеКритерияОтбора);
	ОбъектыПоКритериюОтбораРасширения = ОбъектыПоКритериюОтбораРасширения(ЗначениеКритерияОтбора);
	
	Если ОбъектыПоКритериюОтбораТиповые = Неопределено Тогда
		Возврат ОбъектыПоКритериюОтбораРасширения;
	ИначеЕсли ОбъектыПоКритериюОтбораРасширения = Неопределено Тогда
		Возврат ОбъектыПоКритериюОтбораТиповые;
	КонецЕсли;
	
	ОписаниеТиповДокументовТиповое = ОбъектыПоКритериюОтбораТиповые.Колонки[0].ТипЗначения;
	ТипыДокументовОбъединенные = ОписаниеТиповДокументовТиповое.Типы();
	
	Для каждого ТипДокументаРасширения Из Метаданные.КритерииОтбора.бг_СвязанныеДокументы.Тип.Типы() Цикл
		ТипыДокументовОбъединенные.Добавить(ТипДокументаРасширения);
	КонецЦикла;
	
	ОбъектыПоКритериюОтбораОбъединенные = Новый ТаблицаЗначений;
	ОбъектыПоКритериюОтбораОбъединенные.Колонки.Добавить("Ссылка", Новый ОписаниеТипов(ТипыДокументовОбъединенные));
	
	Для каждого СтрокаОбъектыПоКритериюОтбораТиповые Из ОбъектыПоКритериюОтбораТиповые Цикл
		НоваяСтрокаРезультат = ОбъектыПоКритериюОтбораОбъединенные.Добавить();
		НоваяСтрокаРезультат.Ссылка = СтрокаОбъектыПоКритериюОтбораТиповые.Ссылка;
	КонецЦикла;
	
	Для каждого СтрокаОбъектыПоКритериюОтбораРасширения Из ОбъектыПоКритериюОтбораРасширения Цикл
		НоваяСтрокаРезультат = ОбъектыПоКритериюОтбораОбъединенные.Добавить();
		НоваяСтрокаРезультат.Ссылка = СтрокаОбъектыПоКритериюОтбораРасширения.Ссылка;
	КонецЦикла;
	
	Возврат ОбъектыПоКритериюОтбораОбъединенные;
	
КонецФункции

&НаСервере
Функция ОбъектыПоКритериюОтбораРасширения(ЗначениеКритерияОтбора)
	
	Если Не Метаданные.КритерииОтбора.бг_СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеДокументы.Ссылка
	|ИЗ
	|	КритерийОтбора.бг_СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти