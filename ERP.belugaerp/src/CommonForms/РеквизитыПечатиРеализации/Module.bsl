
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	бг_УстановитьДействиеДляЭлементов();
КонецПроцедуры

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьРеквизиты();
	бг_ДобавитьЭлементыУправления();
	
	Параметры.Свойство("бг_РеализацияТоваровУслуг"	   , ЭтотОбъект["бг_РеализацияТоваровУслуг"]);
	Параметры.Свойство("бг_ДанныеТранспортнаяНакладная", ЭтотОбъект["бг_ДанныеТранспортнаяНакладная"]);
	Параметры.Свойство("бг_АдресГрузоотправитля"	   , ЭтотОбъект["бг_АдресГрузоотправитля"]);
	Параметры.Свойство("бг_АдресГрузополучателя"	   , ЭтотОбъект["бг_АдресГрузополучателя"]);
	
	бг_ЗаполнитьСписокВыбораДоверенностьВыдана();
	бг_ДополнитьСписокВыбораАдресДоставки();
	бг_ЗаполнитьАдресаГрузотправителяИГрузополучателя(Грузоотправитель, Ложь);
	бг_ЗаполнитьАдресаГрузотправителяИГрузополучателя(Грузополучатель , Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура бг_ГрузополучательПриИзмененииПосле(Элемент)
	
	Если ЗначениеЗаполнено(Грузополучатель) Тогда
		бг_ГрузополучательПриИзмененииНаСервере();
		бг_АдресГрузополучателя = "";	
		бг_ЗаполнитьАдресаГрузотправителяИГрузополучателя(Грузополучатель, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ГрузоотправитльПриИзмененииПосле(Элемент)
	
	Если ЗначениеЗаполнено(Грузоотправитель) Тогда
		бг_АдресГрузоотправитля = "";
		бг_ЗаполнитьАдресаГрузотправителяИГрузополучателя(Грузоотправитель, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОтпустилПриИзменении(Элемент)
	
	бг_ОтпустилПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура бг_ОтпустилПриИзмененииНаСервере()
	
	Если Не ЗначениеЗаполнено(Отпустил) Тогда
		Возврат;	
	КонецЕсли;
	
	ОтпустилДолжность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Отпустил, "бг_Должность");	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
&Вместо("ИзменяемыеРеквизиты")
Функция бг_ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = ПродолжитьВызов(Источник);
	СтруктураПараметров.Вставить("бг_ДанныеТранспортнаяНакладная", Источник.бг_ДанныеТранспортнаяНакладная);
	СтруктураПараметров.Вставить("бг_АдресГрузоотправитля"		 , Источник.бг_АдресГрузоотправитля);
	СтруктураПараметров.Вставить("бг_АдресГрузополучателя"		 , Источник.бг_АдресГрузополучателя);
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура бг_ДобавитьРеквизиты()
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_РеализацияТоваровУслуг",
			Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг")));
	
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_ДанныеТранспортнаяНакладная",
			ОбщегоНазначения.ОписаниеТипаСтрока(1000)));

	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_АдресГрузоотправитля",
			ОбщегоНазначения.ОписаниеТипаСтрока(500)));
			
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_АдресГрузополучателя",
			ОбщегоНазначения.ОписаниеТипаСтрока(500)));
						
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьЭлементыУправления()
	
	бг_ДополнительныеРеквизиты = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		ЭтаФорма,
		"бг_ДополнительныеРеквизиты",
		Элементы.ГруппаПечать);
	бг_ДополнительныеРеквизиты.Заголовок = "Дополнительные реквизиты";
	
	бг_ДанныеТранспортнаяНакладная = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ДанныеТранспортнаяНакладная",
		Элементы["бг_ДополнительныеРеквизиты"],
		"бг_ДанныеТранспортнаяНакладная",
		"ПолеФормы");
	бг_ДанныеТранспортнаяНакладная.Заголовок = "Данные о транспорттировке и грузе (УПД)";
	бг_ДанныеТранспортнаяНакладная.МногострочныйРежим = Истина;

	бг_АдресГрузоотправитля = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_АдресГрузоотправитля",
		Элементы["ГруппаРеквизитыПоставщика"],
		"бг_АдресГрузоотправитля",
		"ПолеФормы");
	бг_АдресГрузоотправитля.Заголовок 			 	= "Адрес грузоотправителя";
	бг_АдресГрузоотправитля.КнопкаВыпадающегоСписка = Истина;
	
	бг_АдресГрузополучателя = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_АдресГрузополучателя",
		Элементы["ГруппаРеквизитыПокупателя"],
		"бг_АдресГрузополучателя",
		"ПолеФормы");
	бг_АдресГрузополучателя.Заголовок 			 	= "Адрес грузополучателя";
	бг_АдресГрузополучателя.КнопкаВыпадающегоСписка = Истина;
		
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьСписокВыбораДоверенностьВыдана()
	
	РеализацияТоваровУслуг = ЭтотОбъект["бг_РеализацияТоваровУслуг"];
	Если Не ЗначениеЗаполнено(РеализацияТоваровУслуг) Тогда
		Возврат;
	КонецЕсли;
	
	ТранспортнаяИнформацияДляТОРГ12 = бг_ТранспортнаяИнформация.ТранспортнаяИнформацияДляТОРГ12(
		РеализацияТоваровУслуг);
		
	Если ТранспортнаяИнформацияДляТОРГ12 = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЗначенияВыбораДоверенности = Новый Массив;
	
	ПоляДляВыбораДоверенности = Новый Массив;
	ПоляДляВыбораДоверенности.Добавить("НаименованиеКонтрагента");
	ПоляДляВыбораДоверенности.Добавить("НаименованиеПеревозчика");
	ПоляДляВыбораДоверенности.Добавить("НаименованиеЗаказчика");
	
	Для каждого ИмяПоля Из ПоляДляВыбораДоверенности Цикл
		Если ЗначениеЗаполнено(ТранспортнаяИнформацияДляТОРГ12[ИмяПоля])
			И ЗначенияВыбораДоверенности.Найти(ТранспортнаяИнформацияДляТОРГ12[ИмяПоля]) = Неопределено Тогда
			
			ЗначенияВыбораДоверенности.Добавить(ТранспортнаяИнформацияДляТОРГ12[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначенияВыбораДоверенности.Количество() > 0 Тогда
		Элементы.ДоверенностьВыдана.СписокВыбора.Очистить();
		Элементы.ДоверенностьВыдана.СписокВыбора.ЗагрузитьЗначения(ЗначенияВыбораДоверенности);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_ДополнитьСписокВыбораАдресДоставки(АдресДоставкиГрузополучателя = Неопределено)
	
	Если АдресДоставкиГрузополучателя = Неопределено И ЗначениеЗаполнено(Грузополучатель) Тогда
		АдресДоставкиГрузополучателя = бг_АдресДоставкиГрузополучателя(Грузополучатель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресДоставкиГрузополучателя)
		И Элементы.АдресДоставки.СписокВыбора.НайтиПоЗначению(АдресДоставкиГрузополучателя) = Неопределено Тогда

		Элементы.АдресДоставки.СписокВыбора.Добавить(АдресДоставкиГрузополучателя);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьАдресаГрузотправителяИГрузополучателя(ЮридическоеЛицо, Грузополучатель)
	
	Если ЗначениеЗаполнено(ЮридическоеЛицо) Тогда 
		
		Если ТипЗнч(ЮридическоеЛицо) = Тип("СправочникСсылка.Контрагенты") Тогда
			ВидФактическийАдрес = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
		Иначе
			ВидФактическийАдрес = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации;
		КонецЕсли;
		
		КонтактнаяИнформация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЮридическоеЛицо, "КонтактнаяИнформация");
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация) Тогда 
			
			ТаблицаКонтактнойИнформации = КонтактнаяИнформация.Выгрузить(); 
			
			Если Грузополучатель Тогда 
				ЭлемнтДляИзменения = "бг_АдресГрузополучателя";	
			Иначе
				ЭлемнтДляИзменения = "бг_АдресГрузоотправитля";
			КонецЕсли;
			
			Элементы[ЭлемнтДляИзменения].СписокВыбора.Очистить();
			
			Для Каждого СтрокаКонтактнойИнформации Из ТаблицаКонтактнойИнформации Цикл 
				
				Если СтрокаКонтактнойИнформации.Вид = ВидФактическийАдрес Тогда 
					
					Если Элементы[ЭлемнтДляИзменения].СписокВыбора.НайтиПоЗначению(СтрокаКонтактнойИнформации.Представление) = Неопределено Тогда
						
						Элементы[ЭлемнтДляИзменения].СписокВыбора.Добавить(СтрокаКонтактнойИнформации.Представление);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
				
			Если Не ЗначениеЗаполнено(ЭтотОбъект[ЭлемнтДляИзменения])
				И Элементы[ЭлемнтДляИзменения].СписокВыбора.Количество() = 1 Тогда
				
				ЭтотОбъект[ЭлемнтДляИзменения] = Элементы[ЭлемнтДляИзменения].СписокВыбора[0];						
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_ГрузополучательПриИзмененииНаСервере()

	АдресДоставкиГрузополучателя = бг_АдресДоставкиГрузополучателя(Грузополучатель);
	Если ЗначениеЗаполнено(АдресДоставкиГрузополучателя) Тогда
		АдресДоставки = АдресДоставкиГрузополучателя;	
	КонецЕсли;
	
	бг_ДополнитьСписокВыбораАдресДоставки(АдресДоставкиГрузополучателя);

КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_АдресДоставкиГрузополучателя(Грузополучатель)

	Возврат бг_ТранспортнаяИнформация.ФактическийАдресДоставкиЮрЛица(Грузополучатель);

КонецФункции

&НаСервере
Процедура бг_УстановитьДействиеДляЭлементов()
	
	Элементы.Отпустил.УстановитьДействие("ПриИзменении", "бг_ОтпустилПриИзменении");	
	
КонецПроцедуры

#КонецОбласти
