#Область ПрограммныйИнтерфейс

// Возвращает имена измерений регистра, разделенные запятыми
//
// Возвращаемое значение:
//  Строка  - Строка, содержащая имена измерений регистра
//
Функция ИзмеренияРегистраСтрока() Экспорт
	Результат = Новый Массив;
	Для каждого Измерение Из Метаданные.РегистрыСведений.бг_ДанныеПерегрузок.Измерения Цикл
		Результат.Добавить(Измерение.Имя);
	КонецЦикла;
	Возврат СтрСоединить(Результат, ",");
КонецФункции

// Возвращает структуру измерений регистра
//
// Параметры:
//  ДанныеЗаполнения - Структура, ВыборкаИзРезультатовЗапроса, СтрокаТаблицыЗначений - содержит значения измерений регистра
//  
// Возвращаемое значение:
//  Структура - содержит значения измерений регистра
//
Функция СтруктураИзмерений(ДанныеЗаполнения = Неопределено) Экспорт
	Результат = Новый Структура(ИзмеренияРегистраСтрока());
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(Результат, ДанныеЗаполнения);
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Устанавливает документ ЕГАИС для переданных измерений
//
// Параметры:
//  СтруктураИзмерений - Структура - содержит значения измерений регистра
//  Документ - ДокументСсылка.ТранспортнаяНакладнаяЕГАИС - Документ, который необходимо привязать
//
Процедура УстановитьДокументЕГАИС(СтруктураИзмерений, Документ) Экспорт
	НаборЗаписей = РегистрыСведений.бг_ДанныеПерегрузок.СоздатьНаборЗаписей();
	Для каждого Измерение Из Метаданные.РегистрыСведений.бг_ДанныеПерегрузок.Измерения Цикл
		НаборЗаписей.Отбор[Измерение.Имя].Установить(СтруктураИзмерений[Измерение.Имя]);
	КонецЦикла;
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда 
		НаборЗаписей[0].ТНЕГАИС = Документ;
		НаборЗаписей.ДополнительныеСвойства.Вставить("НеИзменятьОтветственного");
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
КонецПроцедуры	

// Возвращает соответствие Объекта номеру последней перегрузки
//
// Параметры:
//  Объекты - массив из ДокументСсылка, для которых определяем номер перегрузки
//  
// Возвращаемое значение:
//  Соответствие - по каждому из переданых объектов определяется номер последней перегрузки
//
Функция ОпределитьНомераПерегрузок(Объекты) Экспорт 
	Результат = Новый Соответствие;
	Для каждого Объект Из Объекты Цикл
		Результат.Вставить(Объект, 0);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бг_ДанныеПерегрузок.Объект КАК Объект,
	|	МАКСИМУМ(бг_ДанныеПерегрузок.НомерПерегрузки) КАК НомерПерегрузки
	|ИЗ
	|	РегистрСведений.бг_ДанныеПерегрузок КАК бг_ДанныеПерегрузок
	|ГДЕ
	|	бг_ДанныеПерегрузок.Объект В(&Объекты)
	|
	|СГРУППИРОВАТЬ ПО
	|	бг_ДанныеПерегрузок.Объект";
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Объект, Выборка.НомерПерегрузки);
	КонецЦикла;                                                     
	Возврат Результат;
КонецФункции

// Возвращает транспортные накладные по объекту
//
// Параметры:
//  Объект - ДокументСсылка, для которого определяем созанные транспортные накладные ЕГАИС
//  НомерПерегрузки - Число - текущий номер перегрузки для ограничения, если 0, то все
//  
// Возвращаемое значение:
//  Массив из ДокументСсылка.ТранспортнаяНакладнаяЕГАИС
//
Функция ТранспортныеНакладныеОбъекта(Объект, НомерПерегрузки = 0) Экспорт 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("НомерПерегрузки", НомерПерегрузки);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бг_ДанныеПерегрузок.ТНЕГАИС КАК ТНЕГАИС
	|ИЗ
	|	РегистрСведений.бг_ДанныеПерегрузок КАК бг_ДанныеПерегрузок
	|ГДЕ
	|	бг_ДанныеПерегрузок.Объект = &Объект
	|	И ВЫБОР
	|			КОГДА &НомерПерегрузки = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ бг_ДанныеПерегрузок.НомерПерегрузки < &НомерПерегрузки
	|		КОНЕЦ";
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТНЕГАИС");;
	Возврат Результат;
КонецФункции

#КонецОбласти