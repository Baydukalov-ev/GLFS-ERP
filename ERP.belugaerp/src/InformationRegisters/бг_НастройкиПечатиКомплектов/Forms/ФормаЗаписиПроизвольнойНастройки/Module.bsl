
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ИсходныеДанныеЗаполнения = Неопределено;
	
	Если Параметры.Свойство("ОбъектыПечати") Тогда
		
		ОбъектыПечати.ЗагрузитьЗначения(Параметры.ОбъектыПечати);
		СоответствиеТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(Параметры.ОбъектыПечати);
		Если СоответствиеТипов.Количество() > 1 Тогда
			ВызватьИсключение НСтр("ru = 'Запрещено производить настройку печати комплекта для разных видов документов.'");
		ИначеЕсли СоответствиеТипов.Количество() = 0 Тогда
			ВызватьИсключение НСтр("ru = 'Не выделены объекты для печати.'");
		КонецЕсли;
		
		ДоступныйТипОбъекта = Неопределено;
		Для Каждого КлючИЗначение Из СоответствиеТипов Цикл
			ДоступныйТипОбъекта = КлючИЗначение.Ключ;
		КонецЦикла;
		
		ТипОбъекта = СтрЗаменить(ДоступныйТипОбъекта, "Документ.", "");
		
		ПараметрТипОбъекта = Новый ПараметрВыбора("ТипОбъекта", ТипОбъекта);
		ПараметрыВыбора = Новый Массив();
		ПараметрыВыбора.Добавить(ПараметрТипОбъекта);
		Элементы.УсловияОтбора.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);

		ЭтоПроизвольнаяНастройка = Истина;
		
	ИначеЕсли Параметры.Свойство("Ключ", ИсходныеДанныеЗаполнения)
		Или Параметры.Свойство("ЗначениеКопирования", ИсходныеДанныеЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ИсходныеДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	КоличествоСтрок = КоллекцияПечатныхФорм.Количество();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		Если Не ЗначениеЗаполнено(КоллекцияПечатныхФорм[НомерСтроки - 1].Ключ) Тогда
			
			ШаблонТекстаОшибки = НСтр("ru = 'Не заполнено имя печатной формы в строке №%1.'",
				ОбщегоНазначения.КодОсновногоЯзыка());
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(ШаблонТекстаОшибки, Формат(НомерСтроки, "ЧГ=0;")),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КоллекцияПечатныхФорм", НомерСтроки, "Ключ"),,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(КоллекцияПечатныхФорм[НомерСтроки - 1].Количество) Тогда
			
			ШаблонТекстаОшибки = НСтр("ru = 'Не заполнено количество в строке №%1.'",
				ОбщегоНазначения.КодОсновногоЯзыка());
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(ШаблонТекстаОшибки, Формат(НомерСтроки, "ЧГ=0;")),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КоллекцияПечатныхФорм", НомерСтроки, "Количество"),,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УсловияОтбораПриИзменении(Элемент)
	
	Модифицированность = Не ЭтоПроизвольнаяНастройка;
	ОбработатьИзменениеУсловияОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияОтбораОчистка(Элемент, СтандартнаяОбработка)
	
	ОбработатьИзменениеУсловияОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКоллекцияПечатныхФорм

&НаКлиенте
Процедура КоллекцияПечатныхФормПриИзменении(Элемент)
	
	Модифицированность = Не ЭтоПроизвольнаяНастройка;
	
КонецПроцедуры

&НаКлиенте
Процедура КоллекцияПечатныхФормКлючПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КоллекцияПечатныхФорм.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	КомандыПечатиПоКлючу = ОписаниеКомандПечати.НайтиСтроки(Новый Структура("Ключ", ТекущиеДанные.Ключ));
	Если Не КомандыПечатиПоКлючу.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеКомандыПечати = КомандыПечатиПоКлючу[0];
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ОписаниеКомандыПечати, "Представление, РазборПоКопиямЗапрещен");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Напечатать(Команда)
	
	Если Не ПроверитьЗаполнение()Тогда
		Возврат;
	КонецЕсли;
	
	бг_УправлениеПечатьюКлиент.НапечататьКомплектДокументов(ОбъектыПечати.ВыгрузитьЗначения(),
		ПодготовитьТекущиеНастройкиКПечати());
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ДобавитьЗаписьВРегистр();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ДобавитьЗаписьВРегистр(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Представление печатной формы.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоллекцияПечатныхФормКлюч.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоллекцияПечатныхФорм.Представление");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст",
		Новый ПолеКомпоновкиДанных("КоллекцияПечатныхФорм.Представление"));

	// Доступность колонок.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоллекцияПечатныхФормРазбиратьПоКопиям.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоллекцияПечатныхФорм.РазборПоКопиямЗапрещен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьФорму()
	
	КэшУсловияОтбора = УсловияОтбора;
	Если ЗначениеЗаполнено(УсловияОтбора) Тогда
		
		ТипОбъекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УсловияОтбора, "ТипОбъекта");
		КэшТипОбъекта = ТипОбъекта;
		
	КонецЕсли;
	
	АктуализироватьСписокДоступныхПФ();
	ЗаполнитьСохраненнымиНастройкамиПоУсловию();
		
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписьВРегистр(ЗакрытьФорму = Ложь)

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНаСервере();
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.бг_НастройкиПечатиКомплектов"));
	Модифицированность = Ложь;
	
	Если ЗакрытьФорму Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()

	НаборЗаписей = РегистрыСведений.бг_НастройкиПечатиКомплектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УсловияОтбора.Установить(УсловияОтбора);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.УсловияОтбора = УсловияОтбора;
	НоваяЗапись.Настройки = Новый ХранилищеЗначения(ПодготовитьПолныеНастройкиПечати());
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьСписокДоступныхПФ()
	
	Если Не ЗначениеЗаполнено(ТипОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеКомандПечати.Очистить();
	
	КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	Документы[ТипОбъекта].ДобавитьКомандыПечати(КоллекцияКомандПечати);
	Справочники.бг_ВидыСопроводительныхДокументов.ДобавитьКомандыПечати(КоллекцияКомандПечати);
	
	Ключ = 1;
	Для Каждого КомандаПечати Из КоллекцияКомандПечати Цикл
		
		Если ЗначениеЗаполнено(КомандаПечати.Обработчик) Тогда
			// Это как правило самостоятельные функции и к печати комплектом не подходят.
			Продолжить;
		КонецЕсли;
		
		ОписаниеКомандыПечати = ОписаниеКомандПечати.Добавить();
		ЗаполнитьЗначенияСвойств(ОписаниеКомандыПечати, КомандаПечати);
		ОписаниеКомандыПечати.Ключ = XMLСтрока(Ключ);
		Ключ = Ключ + 1;
		
		Элементы.КоллекцияПечатныхФормКлюч.СписокВыбора.Добавить(
			ОписаниеКомандыПечати.Ключ, ОписаниеКомандыПечати.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеУсловияОтбора()
	
	ТипОбъекта = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(УсловияОтбора, "ТипОбъекта");
	Если КэшТипОбъекта = ТипОбъекта
		И УсловияОтбора = КэшУсловияОтбора Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КоллекцияПечатныхФорм.Количество()
		Или ПустаяСтрока(КэшТипОбъекта) Тогда
		
		УсловияОтбораПриИзмененииЗавершение(КодВозвратаДиалога.Да, Неопределено);
		Возврат;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Коллекция печатных форм будет очищена. Продолжить?'",
		ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		
	ОповещениеПослеВопроса = Новый ОписаниеОповещения("УсловияОтбораПриИзмененииЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияОтбораПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = КодВозвратаДиалога.Да Тогда
		
		УсловияОтбора = КэшУсловияОтбора;
		ТипОбъекта = КэшТипОбъекта;
		Возврат;
		
	КонецЕсли;
	
	КэшТипОбъекта = ТипОбъекта;
	КэшУсловияОтбора = УсловияОтбора;
	
	АктуализироватьСписокДоступныхПФ();
	ЗаполнитьСохраненнымиНастройкамиПоУсловию();
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСохраненнымиНастройкамиПоУсловию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Настройки
	|ИЗ
	|	РегистрСведений.бг_НастройкиПечатиКомплектов КАК Т
	|ГДЕ
	|	Т.УсловияОтбора = &УсловияОтбора";
	
	Запрос.УстановитьПараметр("УсловияОтбора", УсловияОтбора);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныеНастройки = Выборка.Настройки.Получить();
	Если СохраненныеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	КоллекцияПечатныхФорм.Загрузить(СохраненныеНастройки);
	
	Для Каждого ОписаниеПечатнойФормы Из КоллекцияПечатныхФорм Цикл
		
		ПараметрыПФ = ОписаниеПечатнойФормы.ДополнительныеПараметры;
		ДоступныеКоманды = ОписаниеКомандПечати.НайтиСтроки(
			Новый Структура("Идентификатор", ОписаниеПечатнойФормы.Идентификатор));
			
		Для Каждого ДоступнаяКоманда Из ДоступныеКоманды Цикл
			
			ПараметрыКоманды = ДоступнаяКоманда.ДополнительныеПараметры;
			Если Не ПараметрыПФ.Количество() = ПараметрыКоманды.Количество() Тогда
				Продолжить;
			КонецЕсли;

			КомандаПодходит = Истина;
			
			Для Каждого ОписаниеПараметраПФ Из ПараметрыПФ Цикл
				
				ЗначениеПараметраКоманды = Неопределено;
				КомандаПодходит = ПараметрыКоманды.Свойство(ОписаниеПараметраПФ.Ключ, ЗначениеПараметраКоманды)
					И ЗначениеПараметраКоманды = ОписаниеПараметраПФ.Значение;
					
				Если Не КомандаПодходит Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если КомандаПодходит Тогда
				
				ОписаниеПечатнойФормы.Ключ = ДоступнаяКоманда.Ключ;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьТекущиеНастройкиКПечати()
	
	НастройкиОбъектовПечати = Новый Соответствие();
	НастройкиОбъектовПечати.Вставить(
		ПоместитьВоВременноеХранилище(ПодготовитьПолныеНастройкиПечати()),
		ОбъектыПечати.ВыгрузитьЗначения());
	
	НастройкиПоТипуОбъекта = Новый Соответствие();
	НастройкиПоТипуОбъекта.Вставить(ТипОбъекта, НастройкиОбъектовПечати);
	
	Возврат НастройкиПоТипуОбъекта;
	
КонецФункции

&НаСервере
Функция ПодготовитьПолныеНастройкиПечати()
	
	НастройкиПечати = КоллекцияПечатныхФорм.Выгрузить();
	Для Каждого ОписаниеПечатнойФормы Из НастройкиПечати Цикл
		
		ДоступнаяКоманда = ОписаниеКомандПечати.НайтиСтроки(Новый Структура("Ключ", ОписаниеПечатнойФормы.Ключ))[0];
		ЗаполнитьЗначенияСвойств(ОписаниеПечатнойФормы, ДоступнаяКоманда);
		
	КонецЦикла;
	
	НастройкиПечати.Колонки.Удалить("Ключ");
	
	Возврат НастройкиПечати;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.КоллекцияПечатныхФорм.Доступность = ЗначениеЗаполнено(Форма.УсловияОтбора)
		Или Форма.ЭтоПроизвольнаяНастройка;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = Не ЭтоПроизвольнаяНастройка;
	Элементы.ФормаЗаписать.Видимость = Не ЭтоПроизвольнаяНастройка;
	Элементы.ФормаНапечатать.Видимость = ЭтоПроизвольнаяНастройка;
	
	Элементы.ФормаЗаписатьИЗакрыть.КнопкаПоУмолчанию = Элементы.ФормаЗаписатьИЗакрыть.Видимость;
	Элементы.ФормаНапечатать.КнопкаПоУмолчанию = Элементы.ФормаНапечатать.Видимость; 

КонецПроцедуры
	
#КонецОбласти
