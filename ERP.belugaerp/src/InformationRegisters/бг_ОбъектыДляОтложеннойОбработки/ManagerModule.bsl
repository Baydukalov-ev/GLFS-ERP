#Область ПрограммныйИнтерфейс

// Добавляет объект в очередь обработки с необходимым вариантом обработки
//
// Параметры:
//   Объект - Тип измерения объект регистра - объект для отложенной обработки
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//   Приоритет - Число, Неопределено - приоритет обработки
//	ДополнительныеСведения - ХранилищеЗначения - Любые дополнительные сведения
//
Процедура ДобавитьОбъект(Объект, ВариантОбработки = Неопределено, Приоритет = Неопределено,
	ДополнительныеСведения = Неопределено, ВремяРегистрации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Приоритет = Неопределено Тогда
		Приоритет = ПриоритетОбъектаОбработки(Объект);
	КонецЕсли;
	
	ОбъектОтбор = Метаданные.РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.Измерения.Объект.Тип.ПривестиЗначение(Объект);
	Если Не ЗначениеЗаполнено(ОбъектОтбор) Тогда
		Возврат;
	КонецЕсли;
	
	ВариантОбработкиОтбор = ?(
		ВариантОбработки = Неопределено, 
		Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.ПустаяСсылка(), 
		ВариантОбработки);

	НаборЗаписей = РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектОтбор);  
	НаборЗаписей.Отбор.ВариантОбработки.Установить(ВариантОбработкиОтбор);
	Если ВремяРегистрации <> Неопределено Тогда
		НаборЗаписей.Отбор.ВремяРегистрации.Установить(ВремяРегистрации);
	КонецЕсли;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Объект = ОбъектОтбор;
	НоваяЗапись.ВариантОбработки = ВариантОбработкиОтбор;
	НоваяЗапись.Приоритет = Приоритет;
	НоваяЗапись.ДополнительныеСведения = ДополнительныеСведения;
	НоваяЗапись.ВремяРегистрации = ВремяРегистрации;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

// Удаляет объект из очереди обработки по варианту обработки, если вариант не указан, удаляет объект из очереди полностью
//
// Параметры:
//   Объект - Тип измерения объект регистра - объект для отложенной обработки
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки,
//						если Неопределено, то удаляет все варианты обработки, по умолчанию - Неопределено.
//
Процедура УдалитьОбъект(Объект, ВариантОбработки = Неопределено, ВремяРегистрации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбъектОтбор = Метаданные.РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.Измерения.Объект.Тип.ПривестиЗначение(Объект);
	Если Не ЗначениеЗаполнено(ОбъектОтбор) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектОтбор);  
	Если Не ВариантОбработки = Неопределено Тогда 
		НаборЗаписей.Отбор.ВариантОбработки.Установить(ВариантОбработки); 
	КонецЕсли;
	Если ВремяРегистрации <> Неопределено Тогда
		НаборЗаписей.Отбор.ВремяРегистрации.Установить(ВремяРегистрации);
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

// Обрабатывает объекты в очереди с определенным вариантом обработки
//
// Параметры:
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов - вариант обработки
//
Процедура ОбработатьОбъекты(ВариантОбработки) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ВариантОбработки", ВариантОбработки);
	Запрос.УстановитьПараметр("МаксимальноеЧислоПопыток", МаксимальноеЧислоПопыток(ВариантОбработки));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	бг_ОбъектыДляОтложеннойОбработки.ДополнительныеСведения КАК ДополнительныеСведения,
	|	бг_ОбъектыДляОтложеннойОбработки.Объект КАК Объект,
	|	бг_ОбъектыДляОтложеннойОбработки.ВремяРегистрации КАК ВремяРегистрации
	|ИЗ
	|	РегистрСведений.бг_ОбъектыДляОтложеннойОбработки КАК бг_ОбъектыДляОтложеннойОбработки
	|ГДЕ
	|	бг_ОбъектыДляОтложеннойОбработки.ВариантОбработки = &ВариантОбработки
	|	И бг_ОбъектыДляОтложеннойОбработки.КоличествоПопыток < &МаксимальноеЧислоПопыток
	|
	|УПОРЯДОЧИТЬ ПО
	|	бг_ОбъектыДляОтложеннойОбработки.Приоритет,
	|	ВремяРегистрации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбработатьОбъект(
			Выборка.Объект, ВариантОбработки, Выборка.ДополнительныеСведения.Получить(), Выборка.ВремяРегистрации);
	КонецЦикла;
КонецПроцедуры

// Отложенная обработка объекта
//
// Параметры:
//	Объект - Тип измерения объект регистра - объект для отложенной обработки
//	ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//	ДополнительныеСведения - Произвольный тип - Дополнительные сведения
//
Процедура ОбработатьОбъект(Объект, ВариантОбработки, ДополнительныеСведения = Неопределено, ВремяРегистрации = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	// проверим возможность обработки объекта
	Если ОтложеннаяОбработкаОбъектаВременноЗаблокирована(Объект, ВариантОбработки, ДополнительныеСведения) Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоПопыток = УвеличитьКоличествоПопыток(Объект, ВариантОбработки, ВремяРегистрации);
	
	// обработаем объект
	ТекстОшибки = "";
	Попытка
		Отказ = Ложь;
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект);
		МенеджерОбъекта.бг_ОтложеннаяОбработкаОбъекта(Объект, ВариантОбработки, Отказ, ДополнительныеСведения);
		УдалитьОбъект(Объект, ВариантОбработки, ВремяРегистрации);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		УстановитьТекстОшибки(Объект, ВариантОбработки, ТекстОшибки, ВремяРегистрации);
		ВыполнитьОбработкуОшибки(Объект, ВариантОбработки, ТекстОшибки, КоличествоПопыток);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция МаксимальноеЧислоПопыток(ВариантОбработки) Экспорт
	Результат = бг_КонстантыПовтИсп.ЗначениеКонстанты("МаксимальноеЧислоПопытокОтложеннойОбработки");

	Если ВариантОбработки = 
			Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СформироватьИнтернетЗаказыКлиентов Тогда
		Результат = бг_КонстантыПовтИсп.ЗначениеКонстанты("МаксимальноеЧислоПопытокСформироватьИнтернетЗаказ");	
	КонецЕсли;
	
	Если Результат < 1 Тогда
		Результат = 1;
	ИначеЕсли Результат > 999 Тогда
		Результат = 999;
	Иначе
		// NOP
	КонецЕсли; 
	Возврат Результат;
КонецФункции

Функция УвеличитьКоличествоПопыток(Объект, ВариантОбработки, ВремяРегистрации = Неопределено)
	
	КоличествоПопыток = 0;
	
	НаборЗаписей = РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);  
	НаборЗаписей.Отбор.ВариантОбработки.Установить(ВариантОбработки);
	Если ВремяРегистрации <> Неопределено Тогда
		НаборЗаписей.Отбор.ВремяРегистрации.Установить(ВремяРегистрации);
	КонецЕсли;
	НаборЗаписей.Прочитать();
	Для каждого ЗаписьНабора Из НаборЗаписей Цикл
		КоличествоПопыток = Мин(ЗаписьНабора.КоличествоПопыток + 1, 999); 
		ЗаписьНабора.КоличествоПопыток = КоличествоПопыток;
	КонецЦикла;
	НаборЗаписей.Записать(Истина);
	
	Возврат КоличествоПопыток;
	
КонецФункции

Процедура УстановитьТекстОшибки(Объект, ВариантОбработки, ТекстОшибки, ВремяРегистрации = Неопределено)
	НаборЗаписей = РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);  
	НаборЗаписей.Отбор.ВариантОбработки.Установить(ВариантОбработки);
	Если ВремяРегистрации <> Неопределено Тогда
		НаборЗаписей.Отбор.ВремяРегистрации.Установить(ВремяРегистрации);
	КонецЕсли;
	НаборЗаписей.Прочитать();
	Для каждого ЗаписьНабора Из НаборЗаписей Цикл
		ЗаписьНабора.ТекстОшибки = ТекстОшибки;
	КонецЦикла;
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура ВыполнитьОбработкуОшибки(Объект, ВариантОбработки, ТекстОшибки, КоличествоПопыток)
	
	Если ВариантОбработки = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.ОбработатьДокументыWMS Тогда
		
		Если КоличествоПопыток >= МаксимальноеЧислоПопыток(ВариантОбработки) Тогда
			
			Попытка
				МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект);
				МенеджерОбъекта.бг_ЗафиксироватьОшибкуОтложеннойОбработки(Объект, ТекстОшибки);
			Исключение    
				// NOP
			КонецПопытки;
			
		Иначе
			
			ЗаписьЖурналаРегистрации("ОтложеннаяОбработкаДокументовWMS.ОшибкаВПопыткеОбработки",
				УровеньЖурналаРегистрации.Предупреждение,
				Объект.Метаданные(),
				Объект,
				СтрШаблон(НСтр("ru='Попытка №%1: , ошибка: %2'"), КоличествоПопыток, ТекстОшибки));
			
		КонецЕсли;
	КонецЕсли;

	Если ВариантОбработки = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СформироватьИнтернетЗаказыКлиентов
		И КоличествоПопыток >= МаксимальноеЧислоПопыток(ВариантОбработки) Тогда
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект);
		МенеджерОбъекта.бг_ЗафиксироватьОшибкуОтложеннойОбработки(
				Объект, 
				ВариантОбработки, 
				ТекстОшибки);
		
	КонецЕсли;	

КонецПроцедуры

Функция ПараметрыОтложеннойОбработки()
	Результат = Новый Структура;
	Для каждого Измерение Из Метаданные.РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.Измерения Цикл
		Результат.Вставить(Измерение.Имя, Неопределено);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура ОтразитьИзмененияВОчереди(Параметры, ЭтоУдаление = Ложь)
	УстановитьПривилегированныйРежим(Истина);
	Объект = Метаданные.РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.Измерения.Объект.Тип.ПривестиЗначение(
							Параметры.Объект);
	Если Не ЗначениеЗаполнено(Объект) Тогда
		Возврат;
	КонецЕсли;
	НаборЗаписей = РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Параметры.Объект); 
	Если Не ЭтоУдаление Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Параметры); 
	Иначе
		Если ЗначениеЗаполнено(Параметры.ВариантОбработки) Тогда 
			НаборЗаписей.Отбор.ВариантОбработки.Установить(Параметры.ВариантОбработки); 
		КонецЕсли;
	КонецЕсли;
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Функция ПодготовитьПараметрыОбработки(ВходнойПараметр)
	Результат = ПараметрыОтложеннойОбработки();
	Если ТипЗнч(ВходнойПараметр) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Результат, ВходнойПараметр);
	Иначе
		Результат.Объект = ВходнойПараметр;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПриоритетОбъектаОбработки(Объект)
	
	Приоритет = 50;
	
	// Приоритет для документов WMS несколько выше - это оперативные документы,
	// которые должны обработаться максимально быстро,
	// т.к. в основном WMS склад ожидает немедленную реакцию от ERP.
	ТипОбъекта = ТипЗнч(Объект);
	
	Если ТипОбъекта = Тип("ДокументСсылка.битОтражениеФактаПоРасходномуОрдеру") Тогда
		
		Приоритет = 40;	
		
	ИначеЕсли ТипОбъекта = Тип("ДокументСсылка.битОтражениеФактаПоПриходномуОрдеру")
		Или ТипОбъекта = Тип("ДокументСсылка.битПереупаковка") Тогда
		
		Приоритет = 41;
		
	КонецЕсли;
	
	Возврат Приоритет;

КонецФункции

Функция ОтложеннаяОбработкаОбъектаВременноЗаблокирована(Объект, ВариантОбработки, ДополнительныеСведения)

	ОбработкаВременноЗаблокирована = Ложь;
	
	Попытка
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект);
		ОбработкаВременноЗаблокирована = МенеджерОбъекта.бг_ОтложеннаяОбработкаОбъектаВременноЗаблокирована(
			Объект, ВариантОбработки, ДополнительныеСведения);
	Исключение
	КонецПопытки;
	
	Возврат ОбработкаВременноЗаблокирована;
	
КонецФункции

#КонецОбласти
