#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу значений, в которой марки сопоставлены идентификаторам, с учетом серий ФСМ.
//
// Параметры:
//  ТаблицаМарки - ТаблицаЗначений - исходные данные, содержит колонки:
//  	* Серия - СправочникСсылка.СерииНоменклатуры - Серия ФСМ
//  	* НомерМарки - Число - Номер марки ФСМ
//
// Возвращаемое значение:
//   ТаблицаЗначений - марки и идентификаторы, содержит колонки:
//  	* НомерМарки - Число - Номер марки ФСМ
//  	* ГУИДМарки - УникальныйИдентификатор - Идентификатор марки 
//
Функция ОпределитьСоздатьИдентификаторыМарок(ТаблицаМарки) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Серия КАК Серия,
	|	Таблица.НомерМарки КАК НомерМарки,
	|	Таблица.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ПОМЕСТИТЬ втИсходныеДанные
	|ИЗ
	|	&ТаблицаМарки КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИсходныеДанные.НомерМарки КАК НомерМарки,
	|	втИсходныеДанные.Серия КАК Серия,
	|	ЕСТЬNULL(бг_ИдентификаторыМарок.ГУИДМарки, НЕОПРЕДЕЛЕНО) КАК ГУИДМарки,
	|	втИсходныеДанные.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ИЗ
	|	втИсходныеДанные КАК втИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ИдентификаторыМарок КАК бг_ИдентификаторыМарок
	|		ПО втИсходныеДанные.Серия = бг_ИдентификаторыМарок.СерияФСМ
	|			И втИсходныеДанные.НомерМарки = бг_ИдентификаторыМарок.НомерМарки
	|			И втИсходныеДанные.ОрганизацияЕГАИС = бг_ИдентификаторыМарок.ОрганизацияЕГАИС";
	Запрос.УстановитьПараметр("ТаблицаМарки", ТаблицаМарки);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаМарка Из ТаблицаРезультат Цикл
		Если Не ЗначениеЗаполнено(СтрокаМарка.ГУИДМарки) Тогда
			СтрокаМарка.ГУИДМарки = Новый УникальныйИдентификатор;
			ЗаписатьИдентификаторМарки(
				СтрокаМарка.ГУИДМарки, 
				СтрокаМарка.НомерМарки, 
				Формат(СтрокаМарка.НомерМарки, "ЧГ=0"),
				СтрокаМарка.ОрганизацияЕГАИС, 
				СтрокаМарка.Серия);
		КонецЕсли;
	КонецЦикла;
	Возврат ТаблицаРезультат;
КонецФункции

Функция ДлинаНомераМарки() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат Метаданные.РегистрыСведений.бг_ИдентификаторыМарок.Ресурсы.НомерМарки.Тип.КвалификаторыЧисла.Разрядность;
КонецФункции

Процедура ЗаписатьИдентификаторМарки(ГУИДМарки, НомерМарки, ИдентификаторМарки, 
	ОрганизацияЕГАИС, СерияФСМ = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписей = РегистрыСведений.бг_ИдентификаторыМарок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГУИДМарки.Установить(ГУИДМарки);
	
	НоваяЗаписьИдентификатор = НаборЗаписей.Добавить();
	НоваяЗаписьИдентификатор.ГУИДМарки  = ГУИДМарки;
	НоваяЗаписьИдентификатор.НомерМарки = НомерМарки;
	НоваяЗаписьИдентификатор.ИдентификаторМарки = ИдентификаторМарки;
	НоваяЗаписьИдентификатор.СерияФСМ = СерияФСМ;
	НоваяЗаписьИдентификатор.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
