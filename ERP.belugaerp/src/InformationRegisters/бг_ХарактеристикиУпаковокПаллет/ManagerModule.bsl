#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Синхронизирует номенклатуру с характеристиками упаковок (паллет). 
// Создает служебные характеристики упаковок (паллет) и записи в регистре сведений бг_ХарактеристикиУпаковокПаллет.
// Должна быть вызвана в событии ПриЗаписи справочников Номенклатура и УпаковкиЕдиницыИзмерения.
//
// Параметры:
//  Объект - СправочникОбъект.Номенкллатура, СправочникОбъект.УпаковкиЕдиницыИзмерения - Номенклатура, упаковка, которая должна быть синхронизирована с характеристиками упаковок (паллет) 
//
Процедура СинхронизироватьХарактеристикиУпаковокПаллет(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Номенклатура") Тогда
		Номенклатура = Объект.Ссылка;
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.УпаковкиЕдиницыИзмерения") Тогда	
		Номенклатура = Объект.Владелец;
		Если Не ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;	
	
	ТаблицаРезультата = ХарактеристикиУпаковокПаллет(Номенклатура);	
	ЗаписатьХарактеристикиУпаковокПаллет(ТаблицаРезультата, Номенклатура);
	
КонецПроцедуры	

// Получает упаковку паллету по умолчанию для номенклатуры по данным регистра.
//
// Параметры:
// 	Номенклатура - СправочникСсылка.Номенклатура - Номенклатура, для которой надо получить упаковку паллету.
//  КэшУпаковокПаллет - Соответствие - Кэш, в котором накапливаются полученные значения для номенклатур
//  ДополнительныеПараметры - Структура - Доп. параметры. На развитие, например, фильтр по упаковкам, если для клиента
//                                        предусмотрена отгрузка только в определенных паллетах.  
//                            Ключи:
//                             * НеПроверятьУникальность - Наличие ключа отключает проверку паллеты по умолчанию
//                                                         на уникальность. Например, если у номенклатуры есть 2
//                                                         упаковки паллеты, то будет возвращена первая.
//                             * СегментИсключаемойНоменклатуры - СправочникСсылка.СегментыНоменклатуры - если задан, упаковки,
//                                                                заданные в характеристиках номенклатура сегмента исключаются.
//
// Возвращаемое значение:
//  УпаковкаПаллета - СправочникСсылка.Номенклатура - Упаковка паллета по умолчанию. 
//
Функция УпаковкаПаллетаПоУмолчанию(Номенклатура, 
	                               КэшУпаковокПаллет = Неопределено, 
								   ДополнительныеПараметры = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();	
	КонецЕсли;	
	
	Если ТипЗнч(КэшУпаковокПаллет) = Тип("Соответствие") Тогда
		УпаковкаПаллета = КэшУпаковокПаллет.Получить(Номенклатура);
		Если УпаковкаПаллета <> Неопределено Тогда
			Возврат УпаковкаПаллета;	
		КонецЕсли;	
	КонецЕсли;	

	НеПроверятьУникальность = Ложь;
	СегментИсключаемойНоменклатуры = Неопределено;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		НеПроверятьУникальность = ДополнительныеПараметры.Свойство("НеПроверятьУникальность");		
		ДополнительныеПараметры.Свойство("СегментИсключаемойНоменклатуры", СегментИсключаемойНоменклатуры);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СегментИсключаемойНоменклатуры", СегментИсключаемойНоменклатуры);
	Запрос.УстановитьПараметр("ИспользоватьСегментИсключаемойНоменклатуры", ЗначениеЗаполнено(СегментИсключаемойНоменклатуры));	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураСегмента.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТИсключаемыеУпаковки
	|ИЗ
	|	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
	|ГДЕ
	|	&ИспользоватьСегментИсключаемойНоменклатуры
	|	И НоменклатураСегмента.Номенклатура = &Номенклатура
	|	И НоменклатураСегмента.Сегмент = &СегментИсключаемойНоменклатуры
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бг_ХарактеристикиУпаковокПаллет.Характеристика.бг_УпаковкаПаллета КАК УпаковкаПаллета
	|ИЗ
	|	РегистрСведений.бг_ХарактеристикиУпаковокПаллет КАК бг_ХарактеристикиУпаковокПаллет
	|ГДЕ
	|	бг_ХарактеристикиУпаковокПаллет.Номенклатура = &Номенклатура
	|	И НЕ бг_ХарактеристикиУпаковокПаллет.УпаковкаПаллета.ПометкаУдаления
	|	И НЕ бг_ХарактеристикиУпаковокПаллет.Характеристика В
	|			(ВЫБРАТЬ
	|				ВТИсключаемыеУпаковки.Характеристика КАК Характеристика
	|			ИЗ
	|				ВТИсключаемыеУпаковки КАК ВТИсключаемыеУпаковки)";
	РезультатЗапроса = Запрос.Выполнить();
	
	УпаковкаПаллета = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	Если Не РезультатЗапроса.Пустой() Тогда
		МассивУпаковокПаллет = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("УпаковкаПаллета");
		Если МассивУпаковокПаллет.Количество() = 1
			Или НеПроверятьУникальность Тогда
			УпаковкаПаллета = МассивУпаковокПаллет[0];
		КонецЕсли;	
	КонецЕсли;
	
	Если ТипЗнч(КэшУпаковокПаллет) = Тип("Соответствие") Тогда
		КэшУпаковокПаллет.Вставить(Номенклатура, УпаковкаПаллета);
	КонецЕсли;	
	
	Возврат УпаковкаПаллета;
	
КонецФункции
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьХарактеристикиУпаковокПаллет(ТаблицаРезультата, Номенклатура)

	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.бг_ХарактеристикиУпаковокПаллет.СоздатьНаборЗаписей();
	
	НетВнешнейТранзакции = Не ТранзакцияАктивна();
	
	Если НетВнешнейТранзакции Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("ТаблицаРезультата", ТаблицаРезультата);
		
		Запрос.Текст = 
		#Область ТекстЗапроса
		"ВЫБРАТЬ
		|	ТаблицаЗаписей.Номенклатура КАК Номенклатура,
		|	ТаблицаЗаписей.УпаковкаПаллета КАК УпаковкаПаллета,
		|	ТаблицаЗаписей.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ТаблицаРезультата
		|ИЗ
		|	&ТаблицаРезультата КАК ТаблицаЗаписей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗаписей.Номенклатура КАК Номенклатура,
		|	ТаблицаЗаписей.УпаковкаПаллета КАК УпаковкаПаллета,
		|	ТаблицаЗаписей.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ТаблицаРегистра
		|ИЗ
		|	РегистрСведений.бг_ХарактеристикиУпаковокПаллет КАК ТаблицаЗаписей
		|ГДЕ
		|	ТаблицаЗаписей.Номенклатура = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
		|	ТаблицаРегистра.УпаковкаПаллета КАК УпаковкаПаллета,
		|	ТаблицаРегистра.Характеристика КАК Характеристика
		|ИЗ
		|	ТаблицаРегистра КАК ТаблицаРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРезультата КАК ТаблицаРезультата
		|		ПО ТаблицаРегистра.Номенклатура = ТаблицаРезультата.Номенклатура
		|			И ТаблицаРегистра.УпаковкаПаллета = ТаблицаРезультата.УпаковкаПаллета
		|ГДЕ
		|	ТаблицаРезультата.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРезультата.Номенклатура КАК Номенклатура,
		|	ТаблицаРезультата.УпаковкаПаллета КАК УпаковкаПаллета,
		|	ТаблицаРезультата.Характеристика КАК Характеристика
		|ИЗ
		|	ТаблицаРезультата КАК ТаблицаРезультата
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРегистра КАК ТаблицаРегистра
		|		ПО ТаблицаРезультата.Номенклатура = ТаблицаРегистра.Номенклатура
		|			И ТаблицаРезультата.УпаковкаПаллета = ТаблицаРегистра.УпаковкаПаллета
		|ГДЕ
		|	(ТаблицаРегистра.Номенклатура ЕСТЬ NULL
		|			ИЛИ ТаблицаРезультата.УпаковкаПаллета <> ТаблицаРегистра.УпаковкаПаллета
		|			ИЛИ ТаблицаРезультата.Характеристика <> ТаблицаРегистра.Характеристика)	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРезультата.Характеристика КАК Характеристика,
		|	ВЫРАЗИТЬ(ТаблицаРезультата.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).бг_УпаковкаПаллета.Наименование КАК АвтоНаименование
		|ИЗ
		|	ТаблицаРезультата КАК ТаблицаРезультата
		|ГДЕ
		|	ВЫРАЗИТЬ(ТаблицаРезультата.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).Наименование 
		|			<> ВЫРАЗИТЬ(ТаблицаРезультата.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).бг_УпаковкаПаллета.Наименование
		|	И НЕ ВЫРАЗИТЬ(ТаблицаРезультата.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).бг_УпаковкаПаллета.Наименование ЕСТЬ NULL
		|";
		#КонецОбласти 
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
	
		// Удалим записи, которые были в регистре, но нет в таблице результата.
		Выборка = РезультатЗапроса[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			Набор.Отбор.УпаковкаПаллета.Установить(Выборка.УпаковкаПаллета);
			
			Набор.Записать(Истина);
		КонецЦикла; 
		
		// Запишем измененные записи из таблице результата.
		Выборка = РезультатЗапроса[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			Набор.Очистить();
			
			Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			Набор.Отбор.УпаковкаПаллета.Установить(Выборка.УпаковкаПаллета);
			
			НоваяЗапись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка); 
			
			Набор.Записать(Истина);
		КонецЦикла; 
		
		// Установим новое наименование служебной характеристики, если оно не соответствует наименование паллеты.
		Выборка = РезультатЗапроса[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			ХарактеристикаОбъект = Выборка.Характеристика.ПолучитьОбъект();
			ХарактеристикаОбъект.Наименование = Выборка.АвтоНаименование;
			ХарактеристикаОбъект.НаименованиеПолное = ХарактеристикаОбъект.Наименование;
			ХарактеристикаОбъект.ОбменДанными.Загрузка = Истина;
			ХарактеристикаОбъект.Записать();
		КонецЦикла;	
		
		Если НетВнешнейТранзакции Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		Если НетВнешнейТранзакции Тогда
			ОтменитьТранзакцию();
		КонецЕсли;

		ТекстСообщения = НСтр("ru = 'Не удалось записать характеристики упаковок (паллет): %Причина%';
						      |en = 'Failed to save service variants of packages (pallets). Reason: %Причина%'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
КонецПроцедуры

Функция ХарактеристикиУпаковокПаллет(Номенклатура)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Создаем пустую таблицу записей регистра.
	ТаблицаРегистра = РегистрыСведений.бг_ХарактеристикиУпаковокПаллет.СоздатьНаборЗаписей().Выгрузить();	

	Если Не ЗначениеЗаполнено(Номенклатура) Тогда 
		Возврат	ТаблицаРегистра;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
	|	И ЕСТЬNULL(ВЫРАЗИТЬ(УпаковкиЕдиницыИзмерения.Владелец КАК Справочник.Номенклатура).бг_УчетОстатковИРезервовВРазрезеУпаковокПаллет, ЛОЖЬ)
	|	И УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|	И УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|	И УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.Составная)";
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	                                          
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		УпаковкаПаллета = Выборка.Ссылка;
		Характеристика = ХарактеристикаУпаковкиПаллеты(Номенклатура, УпаковкаПаллета);
		
		НоваяСтрока = ТаблицаРегистра.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.УпаковкаПаллета = УпаковкаПаллета;
		НоваяСтрока.Характеристика = Характеристика;	
		
		УпаковкаРодитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УпаковкаПаллета, "Родитель"); 		
		Пока ЗначениеЗаполнено(УпаковкаРодитель) Цикл
			РеквизитыУпаковкиРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УпаковкаРодитель, "ТипИзмеряемойВеличины,ТипУпаковки,Родитель");
			Если РеквизитыУпаковкиРодителя.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка
				И РеквизитыУпаковкиРодителя.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная Тогда
			    // Это по идее должна быть коробка.
				НоваяСтрока = ТаблицаРегистра.Добавить();
				НоваяСтрока.Номенклатура = Номенклатура;
				НоваяСтрока.УпаковкаПаллета = УпаковкаРодитель;
				НоваяСтрока.Характеристика = Характеристика;	
			КонецЕсли;
			УпаковкаРодитель = РеквизитыУпаковкиРодителя.Родитель;	
		КонецЦикла;	
		
	КонецЦикла;
	
	Возврат ТаблицаРегистра;
	
КонецФункции	

Функция ХарактеристикаУпаковкиПаллеты(Номенклатура, УпаковкаПаллета)

	УстановитьПривилегированныйРежим(Истина);	
	
	ХарактеристикаУпаковкиПаллеты = Неопределено;
	
	Если Не ЗначениеЗаполнено(Номенклатура) 
		Или Не ЗначениеЗаполнено(УпаковкаПаллета) Тогда
		Возврат ХарактеристикаУпаковкиПаллеты;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("УпаковкаПаллета", УпаковкаПаллета);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Номенклатура
	|	И ХарактеристикиНоменклатуры.бг_УпаковкаПаллета = &УпаковкаПаллета";
	
	РезультататЗапроса = Запрос.Выполнить();
	Если РезультататЗапроса.Пустой() Тогда
	    ХарактеристикаУпаковкиПаллеты = НоваяХарактеристикаУпаковкиПаллеты(Номенклатура, УпаковкаПаллета);
	Иначе	
		Выборка = РезультататЗапроса.Выбрать();
		Выборка.Следующий();
		ХарактеристикаУпаковкиПаллеты = Выборка.Ссылка;	
	КонецЕсли;
	
	Возврат ХарактеристикаУпаковкиПаллеты;
	
КонецФункции	

Функция НоваяХарактеристикаУпаковкиПаллеты(Номенклатура, УпаковкаПаллета)

	УстановитьПривилегированныйРежим(Истина);	
	
	ХарактеристикаУпаковкиПаллеты = Неопределено;
	
	Если Не ЗначениеЗаполнено(Номенклатура) 
		Или Не ЗначениеЗаполнено(УпаковкаПаллета) Тогда
		Возврат ХарактеристикаУпаковкиПаллеты;
	КонецЕсли;
	
	СпрОбъект = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
	СпрОбъект.Владелец = Номенклатура;
	СпрОбъект.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УпаковкаПаллета, "Наименование");
	СпрОбъект.НаименованиеПолное = СпрОбъект.Наименование;
	СпрОбъект.бг_УпаковкаПаллета = УпаковкаПаллета;
	
	
	СпрОбъект.ОбменДанными.Загрузка = Истина;
	СпрОбъект.Записать();
	
    ХарактеристикаУпаковкиПаллеты = СпрОбъект.Ссылка;
	
	Возврат ХарактеристикаУпаковкиПаллеты;	
	
КонецФункции	

#КонецОбласти

#КонецЕсли
