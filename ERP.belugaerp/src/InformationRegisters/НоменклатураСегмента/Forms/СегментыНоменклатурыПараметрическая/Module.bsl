
#Область СлужебныеПроцедурыИФункции

&После("ЗаполнитьТаблицуСегментов")
&НаСервере
Процедура бг_ЗаполнитьТаблицуСегментов(ТипТаблицы)
	
	Если ТипТаблицы = "Ручные" Тогда
		
		ТипФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьВручную;
		ИмяТаблицы = "Сегменты";
		
	Иначе
		
		Возврат;
		
	КонецЕсли;

	Если Не бг_Номенклатура.ВедетсяУчетОстатковИРезервовВРазрезеУпаковокПаллет(Номенклатура) Тогда
		Возврат;	
	КонецЕсли;	

	ЭтаФорма[ИмяТаблицы].Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бг_ХарактеристикиУпаковокПаллет.Номенклатура КАК Номенклатура, 
	|	бг_ХарактеристикиУпаковокПаллет.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВсеХарактеристикиНоменклатуры
	|ИЗ
	|	РегистрСведений.бг_ХарактеристикиУпаковокПаллет КАК бг_ХарактеристикиУпаковокПаллет
	|ГДЕ
	|	бг_ХарактеристикиУпаковокПаллет.Номенклатура = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СегментыНоменклатуры.Ссылка КАК Сегмент,
	|	СегментыНоменклатуры.Ответственный КАК Ответственный,
	|	ВсеХарактеристикиНоменклатуры.Номенклатура,
	|	ВсеХарактеристикиНоменклатуры.Характеристика
	|ПОМЕСТИТЬ СегментыНоменклатураХарактеристики
	|ИЗ
	|	Справочник.СегментыНоменклатуры КАК СегментыНоменклатуры
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеХарактеристикиНоменклатуры КАК ВсеХарактеристикиНоменклатуры
	|ПО (ИСТИНА)
	|ГДЕ
	|	НЕ СегментыНоменклатуры.ЭтоГруппа
	|	И НЕ СегментыНоменклатуры.ПометкаУдаления
	|	И СегментыНоменклатуры.СпособФормирования = &СпособФормирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СегментыНоменклатураХарактеристики.Сегмент КАК Сегмент,
	|	СегментыНоменклатураХарактеристики.Ответственный КАК Ответственный,
	|	СегментыНоменклатураХарактеристики.Характеристика,
	|	ВЫБОР
	|		КОГДА НоменклатураСегмента.Характеристика ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ВходитВСегмент
	|ИЗ
	|	СегментыНоменклатураХарактеристики КАК СегментыНоменклатураХарактеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
	|		ПО СегментыНоменклатураХарактеристики.Сегмент = НоменклатураСегмента.Сегмент
	|			И СегментыНоменклатураХарактеристики.Номенклатура = НоменклатураСегмента.Номенклатура
	|			И СегментыНоменклатураХарактеристики.Характеристика = НоменклатураСегмента.Характеристика
	|ИТОГИ
	|	СУММА(ВходитВСегмент)
	|ПО
	|	Сегмент";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СпособФормирования", ТипФормирования);
	
	ВыборкаСегменты = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСегменты.Следующий() Цикл
		
		НоваяСтрока = ЭтаФорма[ИмяТаблицы].Добавить();
		НоваяСтрока.Сегмент = ВыборкаСегменты.Сегмент;
		НоваяСтрока.ВходитВСегмент = ?(ВыборкаСегменты.ВходитВСегмент > 0, Истина, Ложь);
		НоваяСтрока.КоличествоХарактеристик = ВыборкаСегменты.ВходитВСегмент;
		Если ТипТаблицы = "ОбновляемыеИДинамические" Тогда
			НоваяСтрока.СпособФормирования = Перечисления.СпособыФормированияСегментов.ПериодическиОбновлять;
		КонецЕсли;
		
		ВыборкаХарактеристики = ВыборкаСегменты.Выбрать();
		Пока ВыборкаХарактеристики.Следующий() Цикл
			
			НоваяСтрока.Ответственный = ВыборкаХарактеристики.Ответственный;
			
			Если ВыборкаХарактеристики.Характеристика <> NULL Тогда
				
				ТаблицаХарактеристик = НоваяСтрока.Характеристики; // ТаблицаЗначений 
				
				НоваяХарактеристика = ТаблицаХарактеристик.Добавить();
				НоваяХарактеристика.Характеристика = ВыборкаХарактеристики.Характеристика;
				НоваяХарактеристика.ВходитВСегмент = ?(ВыборкаХарактеристики.ВходитВСегмент > 0, Истина, Ложь);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&После("ОпределитьИспользованиеХарактеристик")
&НаСервере
Процедура бг_ОпределитьИспользованиеХарактеристик()
	
	ИспользуютсяХарактеристики =
	    ИспользуютсяХарактеристики
		Или бг_Номенклатура.ВедетсяУчетОстатковИРезервовВРазрезеУпаковокПаллет(Номенклатура);
	
КонецПроцедуры

#КонецОбласти
