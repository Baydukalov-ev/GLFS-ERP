
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьДоступность();
	ЗаполнитьПоДаннымВладельца(Параметры);
	ЗаполнитьОрганизациюИзДокумента();
	Если Параметры.Ключ.Пустой() Тогда
		ЗаполнитьВидПеревозки();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоговораСубподряда();
	ЗаполнитьСлужебныеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_бг_ТранспортнаяИнформация", ПараметрыЗаписи, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТранспортноеСредствоПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Запись.ТранспортноеСредство) Тогда
		Запись.Прицеп = Неопределено;
	Иначе
		ТранспортноеСредствоПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПеревозкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ВидПеревозки) Тогда
		ВидПеревозкиПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизаторПеревозкиПриИзменении(Элемент)
	
	УстановитьВидимостьДоговораСубподряда();
	
	Если Не Элементы.ДоговорСубподряда.Видимость Тогда
		Запись.ДоговорСубподряда = Неопределено;	
	КонецЕсли;
	
	ЗаполнитьСлужебныеРеквизиты();
	ОчиститьСвязанныеРеквизитыЗаписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикПриИзменении(Элемент)
	
	ЗаполнитьСлужебныеРеквизиты();
	ОчиститьСвязанныеРеквизитыЗаписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	ЗаполнитьОрганизациюИзДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаДоставкиСПриИзменении(Элемент)
	Запись.РучнаяКорректировкаДатыДоставки = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаДоставкиПоПриИзменении(Элемент)
	Запись.РучнаяКорректировкаДатыДоставки = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ТранспортноеСредствоПриИзмененииНаСервере()
	
	Запись.Прицеп = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ТранспортноеСредство, "бг_Прицеп");
	
КонецПроцедуры

&НаСервере
Процедура ВидПеревозкиПриИзмененииНаСервере()
	
	ВидыПеревозкиСамовывоз = Справочники.бг_ВидыПеревозки.ВидыПеревозкиСамовывоз();
	Если ВидыПеревозкиСамовывоз.Найти(Запись.ВидПеревозки) <> Неопределено Тогда
		Запись.Перевозчик = Неопределено;
		ЗаполнитьЗаказчикаИзДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаказчикаИзДокумента()

	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда
		Возврат;
	КонецЕсли;
	
	Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Объект, "Контрагент");
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Запись.Заказчик = Контрагент;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОрганизациюИзДокумента()
	
	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Объект, "Организация");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()

	Если Параметры.ТолькоПросмотрОбъекта Тогда
		Элементы.Объект.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.Объект) И ТипЗнч(Запись.Объект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Если Документы.РеализацияТоваровУслуг.бг_ВведенаТТНИсходящаяЕГАИС(Запись.Объект, Ложь) Тогда
			ИсключаемыеЭлементы = "ДоговорНаПеревозку,ДоговорСубподряда,ФормаПеречитать,
								  |ФормаИзменитьФорму,ФормаСправка,ФормаЗаписатьИЗакрыть,
								  |ФормаЗаписать";
			УстановитьТолькоПросмотрЭлементам(ИсключаемыеЭлементы);
		КонецЕсли;
	КонецЕсли;
	
	Если Документы.битМаршрутныйЛист.ЕстьМашрутныеЛистыПоДокументу(Запись.Объект) Тогда
		Элементы.ТранспортноеСредство.ТолькоПросмотр = Истина;
		Элементы.Водитель.ТолькоПросмотр = Истина;
		Элементы.Прицеп.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымВладельца(Параметры)
	
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидПеревозки()
	Если Не Запись.Объект.Метаданные().Реквизиты.Найти("Договор") = Неопределено
		И Не ЗначениеЗаполнено(Запись.ВидПеревозки) Тогда
		Запись.ВидПеревозки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Объект, "Договор.бг_ВидПеревозки");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоговораСубподряда() 
		
	Элементы.ДоговорСубподряда.Видимость = ЗначениеЗаполнено(Запись.ОрганизаторПеревозки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТолькоПросмотрЭлементам(Исключения)
	
	ИсключаемыеЭлементы = СтрРазделить(Исключения, ",", Ложь);
	
	Для Индекс = 0 По ИсключаемыеЭлементы.ВГраница() Цикл
		ИсключаемыеЭлементы[Индекс] = СокрЛП(ИсключаемыеЭлементы[Индекс]);	
	КонецЦикла;
	
	Для Каждого Элемент Из Элементы Цикл
		
		Если ИсключаемыеЭлементы.Найти(Элемент.Имя) <> Неопределено Тогда
			Продолжить;	
		КонецЕсли;
		
		Если ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
			Элемент.ТолькоПросмотр = Истина;	
		КонецЕсли;
		
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
			Элемент.Доступность = Ложь;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСлужебныеРеквизиты()
		
	ЕстьСубподрядчик = ЗначениеЗаполнено(Запись.ОрганизаторПеревозки);
	
	Перевозчик = ?(ЕстьСубподрядчик, Запись.ОрганизаторПеревозки, Запись.Перевозчик);
	Субподрядчик = ?(ЕстьСубподрядчик, Запись.Перевозчик, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСвязанныеРеквизитыЗаписи()
	
	ЗначенияДоговоров = Новый Массив;
	
	ЗначенияДоговоров.Добавить(Запись.ДоговорНаПеревозку);
	ЗначенияДоговоров.Добавить(Запись.ДоговорСубподряда);
	
	КонтрагентыДоговоров = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъектов(
		ЗначенияДоговоров, 
		"Контрагент");
		
	КонтрагентДоговораПеревозчика = КонтрагентыДоговоров.Получить(Запись.ДоговорНаПеревозку);
	КонтрагентДоговораСубподряда = КонтрагентыДоговоров.Получить(Запись.ДоговорСубподряда);
	
	Если Перевозчик <> КонтрагентДоговораПеревозчика Тогда
		Запись.ДоговорНаПеревозку = Неопределено;	
	КонецЕсли;
	
	Если Субподрядчик <> КонтрагентДоговораСубподряда Тогда
		Запись.ДоговорСубподряда = Неопределено;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
