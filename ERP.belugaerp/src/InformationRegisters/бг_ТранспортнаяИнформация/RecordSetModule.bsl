#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ, Замещение)
	ДобавитьМаршрутныеЛистыДляОтложеннойОбработки(ЭтотОбъект);
	ОбновитьПлановыеДатыДоставкиЗаявокКлиента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьМаршрутныеЛистыДляОтложеннойОбработки(НаборЗаписей)
	Если НаборЗаписей.ДополнительныеСвойства.Свойство("бг_ПерезаполнятьРейсы")
		И НаборЗаписей.ДополнительныеСвойства.бг_ПерезаполнятьРейсы = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ПоляТранспортнойИнформацииЗаполнениеМаршрутныхЛистов = ПоляТранспортнойИнформацииЗаполнениеМаршрутныхЛистов();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Не ЗначениеЗаполнено(Запись.Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполненаТранспортнаяИнформацияМЛ = Ложь;
		Для Каждого Поле Из ПоляТранспортнойИнформацииЗаполнениеМаршрутныхЛистов Цикл
			Если ЗначениеЗаполнено(Запись[Поле]) Тогда
				ЗаполненаТранспортнаяИнформацияМЛ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗаполненаТранспортнаяИнформацияМЛ Тогда
			Продолжить;
		КонецЕсли;
		
		Документы.битМаршрутныйЛист.ДобавитьДокументыДляОтложеннойОбработки(Запись.Объект);
	КонецЦикла;
КонецПроцедуры

Функция ПоляТранспортнойИнформацииЗаполнениеМаршрутныхЛистов()
	ПоляТранспортнойИнформации = Новый Массив;
	ПоляТранспортнойИнформации.Добавить("НомераПломб");
	
	Возврат ПоляТранспортнойИнформации;
КонецФункции

Процедура ОбновитьПлановыеДатыДоставкиЗаявокКлиента()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНабора", ЭтотОбъект.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНабора.Объект КАК ЗаказКлиента,
	|	НАЧАЛОПЕРИОДА(ТаблицаНабора.ПлановаяДатаДоставкиС, ДЕНЬ) КАК ПлановаяДатаДоставки
	|ПОМЕСТИТЬ НовыеПлановыеДатыДоставки
	|ИЗ
	|	&ТаблицаНабора КАК ТаблицаНабора
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТаблицаНабора.Объект) = ТИП(Документ.ЗаказКлиента)
	|	И НАЧАЛОПЕРИОДА(ТаблицаНабора.ПлановаяДатаДоставкиС, ДЕНЬ) <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеПлановыеДатыДоставки.ЗаказКлиента КАК ЗаказКлиента,
	|	МИНИМУМ(НовыеПлановыеДатыДоставки.ПлановаяДатаДоставки) КАК ПлановаяДатаДоставки
	|ПОМЕСТИТЬ ПлановыеДатыДоставкиЗаказов
	|ИЗ
	|	НовыеПлановыеДатыДоставки КАК НовыеПлановыеДатыДоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	НовыеПлановыеДатыДоставки.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента КАК ЗаявкаКлиента,
	|	ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента.ПлановаяДатаДоставки КАК ПлановаяДатаДоставки,
	|	МИНИМУМ(ЕСТЬNULL(ПлановыеДатыДоставкиЗаказов.ПлановаяДатаДоставки, ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента.ПлановаяДатаДоставки)) КАК НоваяПлановаяДатаДоставки
	|ПОМЕСТИТЬ ДатыДоставкиЗаявок
	|ИЗ
	|	Документ.ЗаказКлиента КАК ТаблицаЗаказовКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеДатыДоставкиЗаказов КАК ПлановыеДатыДоставкиЗаказов
	|		ПО ТаблицаЗаказовКлиента.Ссылка = ПлановыеДатыДоставкиЗаказов.ЗаказКлиента
	|ГДЕ
	|	ТаблицаЗаказовКлиента.Ссылка В
	|			(ВЫБРАТЬ
	|				НовыеПлановыеДатыДоставки.ЗаказКлиента
	|			ИЗ
	|				НовыеПлановыеДатыДоставки КАК НовыеПлановыеДатыДоставки)
	|	И ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента <> ЗНАЧЕНИЕ(Документ.битЗаявкаКлиента.ПустаяСсылка)
	|	И ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента.ИсточникЗаказа В (
	|		ЗНАЧЕНИЕ(Перечисление.бг_ИсточникиЗагрузкиЗаказовКлиентов.WINELAB_SAP),
	|		ЗНАЧЕНИЕ(Перечисление.бг_ИсточникиЗагрузкиЗаказовКлиентов.WINELAB_SAP_СONSOLIDATED))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента,
	|	ТаблицаЗаказовКлиента.бг_ЗаявкаКлиента.ПлановаяДатаДоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыДоставкиЗаявок.ЗаявкаКлиента КАК ЗаявкаКлиента,
	|	ДатыДоставкиЗаявок.ПлановаяДатаДоставки КАК ПлановаяДатаДоставки,
	|	ДатыДоставкиЗаявок.НоваяПлановаяДатаДоставки КАК НоваяПлановаяДатаДоставки
	|ИЗ
	|	ДатыДоставкиЗаявок КАК ДатыДоставкиЗаявок
	|ГДЕ
	|	ДатыДоставкиЗаявок.ПлановаяДатаДоставки <> ДатыДоставкиЗаявок.НоваяПлановаяДатаДоставки
	|	И ДатыДоставкиЗаявок.НоваяПлановаяДатаДоставки <> ДАТАВРЕМЯ(1, 1, 1)";	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Попытка

			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.битЗаявкаКлиента");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ЗаявкаКлиента);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ЗаявкаКлиентаОбъект = Выборка.ЗаявкаКлиента.ПолучитьОбъект();
			ЗаявкаКлиентаОбъект.ДополнительныеСвойства.Вставить("бг_ОтключитьСинхронизациюЗависимыхДокументов");
			ЗаявкаКлиентаОбъект.ПлановаяДатаДоставки = Выборка.НоваяПлановаяДатаДоставки;
			ЗаявкаКлиентаОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			ШаблонСообщения = 
				НСтр("ru = 'Обновлена плановая дата поставки в заявке %1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ЗаявкаКлиента);
			
			ЗаписьЖурналаРегистрации(
				РегистрыСведений.бг_ОчередьЗаявокКлиентовКОтправкеOrderSP.СобытиеЖурналаРегистрацииОтправкаOrderSP(),
				УровеньЖурналаРегистрации.Информация,
				,
				Выборка.ЗаявкаКлиента,
				ТекстСообщения);
			
		Исключение
			
			ШаблонСообщения = 
				НСтр("ru = 'Не удалось обновить плановую дату поставки в заявке %1
                           | По причине: %2'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ЗаявкаКлиента, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ДополнитьТекстСообщениямиПользователю(ТекстСообщения);
			
			ЗаписьЖурналаРегистрации(
				РегистрыСведений.бг_ОчередьЗаявокКлиентовКОтправкеOrderSP.СобытиеЖурналаРегистрацииОтправкаOrderSP(),
				УровеньЖурналаРегистрации.Ошибка,
				,
				Выборка.ЗаявкаКлиента,
				ТекстСообщения);
				
			ВызватьИсключение ТекстСообщения;
			
		КонецПопытки
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьТекстСообщениямиПользователю(ТекстСообщения) 
	
	Сообщения = ПолучитьСообщенияПользователю(Истина);
	
	Для Каждого Сообщение Из Сообщения Цикл
		ТекстСообщения = ТекстСообщения + Символы.ПС + Сообщение.Текст;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
