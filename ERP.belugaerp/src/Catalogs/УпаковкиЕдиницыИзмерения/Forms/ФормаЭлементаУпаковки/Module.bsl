#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриЧтенииНаСервереПеред(ТекущийОбъект)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	бг_ДобавитьПоля();
	бг_УстановитьВидимостьПолейНСИ();
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПриОткрытииПосле(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И бг_ЕстьОшибкиЗаполненияШтрихкодовУпаковки(Объект.Владелец, Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Для упаковки нет штрихкодов.
			|Упаковка не будет корректно выгружена в Solvo'"));	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_ПередЗаписьюНаСервереПеред(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если бг_КонстантыПовтИсп.ЗначениеКонстанты("ЗапретитьИнтерактивноеИзменениеНоменклатурыИУпаковок") Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Временно установлен запрет на редактирование'"));
		Отказ = Истина;
	КонецЕсли;
	Если бг_ЕстьОшибкиПроверкиКоличестваУпаковок() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Некорректно произведен расчет количества упаковок!
			|Измените количество слоев в паллете/мест в слое.
			|Объект не будет записан!'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_КоличествоСлоевВПаллетеПриИзменении(Элемент)
	бг_РассчитатьКоличествоУпаковок();
КонецПроцедуры

&НаКлиенте
Процедура бг_КоличествоМестВСлоеПриИзменении(Элемент)
	бг_РассчитатьКоличествоУпаковок();
КонецПроцедуры

&НаКлиенте
&После("ЕдиницаИзмеренияПриИзменении")
Процедура бг_ЕдиницаИзмеренияПриИзменении(Элемент)
	бг_РассчитатьКоличествоУпаковок();
КонецПроцедуры

&НаКлиенте
&После("КоличествоУпаковокПриИзменении")
Процедура бг_КоличествоУпаковокПриИзмененииПосле(Элемент)
	Если бг_ЕстьОшибкиПроверкиКоличестваУпаковок() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Некорректно произведен расчет количества упаковок!
			|Измените количество слоев в паллете/мест в слое.'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
&После("НастроитьФорму")
Процедура бг_НастроитьФорму()
	
	Если бг_ЭтоПаллета(Объект.ЕдиницаИзмерения) Тогда
		Элементы.Вес.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	бг_УстановитьВидимостьПолейНСИ();
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьПоля()
	
	// бг_КоличествоСлоевВПаллете
	бг_КоличествоСлоевВПаллете = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_КоличествоСлоевВПаллете",
		Элементы.ГруппаШапка,
		"Объект.бг_КоличествоСлоевВПаллете");
	бг_КоличествоСлоевВПаллете.УстановитьДействие("ПриИзменении", "бг_КоличествоСлоевВПаллетеПриИзменении");
	бг_КоличествоСлоевВПаллете.КнопкаВыбора = Истина;	
	
	// бг_КоличествоМестВСлое
	бг_КоличествоМестВСлое = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_КоличествоМестВСлое",
		Элементы.ГруппаШапка,
		"Объект.бг_КоличествоМестВСлое");
	бг_КоличествоМестВСлое.УстановитьДействие("ПриИзменении", "бг_КоличествоМестВСлоеПриИзменении");
	бг_КоличествоМестВСлое.КнопкаВыбора = Истина;
	
	// бг_КодЕК_Номенклатуры
	бг_КодЕК_Номенклатуры = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_КодЕК_Номенклатуры",
		Элементы.ГруппаШапка,
		"Объект.бг_КодЕК_Номенклатуры");
		
	// бг_Проверен
	бг_Проверен = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_Проверен",
		Элементы.ГруппаШапка,
		"Объект.бг_Проверен",,,
		"ПолеФлажка");
	бг_Проверен.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	
	// бг_ДатаДобавления
	бг_ДатаДобавления = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ДатаДобавления",
		Элементы.ГруппаШапка,
		"Объект.бг_ДатаДобавления");
		
	// бг_ДатаВыбытия
	бг_ДатаВыбытия = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ДатаВыбытия",
		Элементы.ГруппаШапка,
		"Объект.бг_ДатаВыбытия");
		
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьВидимостьПолейНСИ()
	
	Если Элементы.Найти("бг_Проверен") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОграничиватьДобавлениеИзменениеНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		Объект.Владелец,
		"ВидНоменклатуры.бг_ОграничиватьДобавлениеИзменениеНоменклатуры");
	
	ВидимостьРеквизитов = ОграничиватьДобавлениеИзменениеНоменклатуры = Истина
		Или Пользователи.ЭтоПолноправныйПользователь();
	
	Элементы.бг_Проверен.Видимость 			 = ВидимостьРеквизитов;
	Элементы.бг_КодЕК_Номенклатуры.Видимость = ВидимостьРеквизитов;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_ЕстьОшибкиЗаполненияШтрихкодовУпаковки(Номенклатура, Упаковка)
		
	Возврат бг_Номенклатура.ЕстьОшибкиЗаполненияШтрихкодовУпаковок(Номенклатура, Упаковка);
	
КонецФункции

&НаСервере
Процедура бг_РассчитатьКоличествоУпаковок()
	//По условию задачи пересчет выполняем только для паллеты
	Если бг_ЭтоПаллета(Объект.ЕдиницаИзмерения) Тогда
		Объект.КоличествоУпаковок = Объект.бг_КоличествоСлоевВПаллете * Объект.бг_КоличествоМестВСлое;
		ОтработатьЛогикуСвязиРеквизитов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция бг_ЕстьОшибкиПроверкиКоличестваУпаковок()
	Результат = Ложь;
	//По условию задачи пересчет выполняем только для паллеты
	Если бг_ЭтоПаллета(Объект.ЕдиницаИзмерения)
		И Объект.КоличествоУпаковок <> Объект.бг_КоличествоСлоевВПаллете * Объект.бг_КоличествоМестВСлое Тогда
			Результат = Истина;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция бг_ЭтоПаллета(ПроверяемаяЕдиницаИзмерения)
	Результат = Ложь;
	Если ЗначениеЗаполнено(ПроверяемаяЕдиницаИзмерения) Тогда
		бг_ТипЕдиницыИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроверяемаяЕдиницаИзмерения, "бг_ТипЕдиницыИзмерения");
		Если ЗначениеЗаполнено(бг_ТипЕдиницыИзмерения) И бг_ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Паллета Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти
