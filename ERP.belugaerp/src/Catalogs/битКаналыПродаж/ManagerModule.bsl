#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция КаналПродаж(Контрагент) Экспорт
	
	КаналПродажПустаяСсылка = Справочники.битКаналыПродаж.ПустаяСсылка();
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат КаналПродажПустаяСсылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	битПунктыНазначения.КаналПродаж КАК КаналПродаж
	|ИЗ
	|	Справочник.битПунктыНазначения КАК битПунктыНазначения
	|ГДЕ
	|	НЕ битПунктыНазначения.ПометкаУдаления
	|	И битПунктыНазначения.Клиент ССЫЛКА Справочник.Контрагенты
	|	И (битПунктыНазначения.Клиент = &Контрагент
	|			ИЛИ битПунктыНазначения.Клиент.ГоловнойКонтрагент = &Контрагент
	|				И битПунктыНазначения.ОбособленноеПодразделение)";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат КаналПродажПустаяСсылка;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.КаналПродаж;
	
КонецФункции

Функция КлючКаналаПродаж(КаналПродаж) Экспорт
	
	ПостфиксКлючаМаршрутизации = "";
	
	Если Не ЗначениеЗаполнено(КаналПродаж) Тогда
		Возврат ПостфиксКлючаМаршрутизации;
	КонецЕсли;
	
	ЗначениеКонстантыКаналаПродажОпт = бг_КонстантыПовтИсп.ЗначениеКонстанты("КаналПродажОпт");
	
	Если ЗначениеКонстантыКаналаПродажОпт = КаналПродаж Тогда
		ПостфиксКлючаМаршрутизации = "Opt";
	КонецЕсли;
	
	Возврат ПостфиксКлючаМаршрутизации;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#КонецЕсли