#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&Перед("ПередЗаписью")
Процедура бг_ПередЗаписьюПеред(Отказ)
	
	Если ОбменДанными.Загрузка 
		Или ЭтоГруппа 
		Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	бг_ЗаполнитьНаименованиеИзЧастей();
	ПредставлениеТемпературыХранения = 
		Справочники.Номенклатура.бг_ПредставлениеТемпературыХранения(бг_ТемператураОт, бг_ТемператураДо, бг_Влажность);
	Если ЗначениеЗаполнено(ПредставлениеТемпературыХранения) Тогда
		бг_ТемператураХранения = ПредставлениеТемпературыХранения;
	КонецЕсли;
КонецПроцедуры

&После("ПередЗаписью")
Процедура бг_ПередЗаписьюПосле(Отказ)
	
	Если ОбменДанными.Загрузка 
		Или ЭтоГруппа 
		Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		бг_Добавлен = ТекущаяДатаСеанса();
	КонецЕсли;
	
	бг_ОчиститьНеиспользуемыеРеквизиты();
	бг_СброситьПроверенность();
	бг_ОбновитьТоварныеКатегории();
	бг_ОбработатьПолноеНаименование();
	бг_ОпределитьНеобходимостьВыгружатьСвязанныеУпаковки();
	
    бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПередЗаписью();

	бг_УстановитьПризнакУчетаОстатковИРезервовВРазрезеУпаковокПаллет();

КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)   
	
	Если ОбменДанными.Загрузка 
		Или ЭтоГруппа 
		Или Отказ Тогда
		Возврат;
	КонецЕсли;     
	
	бг_Номенклатура.ЗаполнитьСпособыОбеспечения(Ссылка);  
	
	Если Не ЭтоНовый() Тогда
		РегистрыСведений.бг_ХарактеристикиУпаковокПаллет.СинхронизироватьХарактеристикиУпаковокПаллет(ЭтотОбъект);
	КонецЕсли;

	бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПриЗаписи();

КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ВидНоменклатуры)
		И ВидНоменклатуры = бг_КонстантыПовтИсп.ЗначениеКонстанты("ИмпортныеССП") Тогда
		
		ПроверяемыеРеквизиты.Добавить("бг_ТипИмпортныхССП");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "бг_ОграничиватьДобавлениеИзменениеНоменклатуры") = Истина Тогда
		ПроверяемыеРеквизиты.Добавить("бг_ОсновноеНаименование");
	КонецЕсли;
	
КонецПроцедуры

&Перед("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	бг_Статус = Перечисления.бг_СтатусыНСИ.ЗапрещенКОтгрузке;
	бг_Предшественник = ОбъектКопирования.Ссылка;
	бг_Проверен = Ложь;
	бг_Добавлен = '00010101';
	бг_Выбыл = '00010101';
	бг_КодНоменклатурыSAP = "";

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ОчиститьНеиспользуемыеРеквизиты()
	
	Производитель = Справочники.Производители.ПустаяСсылка();
	Марка = Справочники.Марки.ПустаяСсылка();
	
КонецПроцедуры

Процедура бг_СброситьПроверенность()
	
	Если Пользователи.РолиДоступны("бг_ДобавлениеИзменениеНоменклатурыАдминистратор, бг_ДобавлениеИзменениеНоменклатурыОтветственныйПользователь") Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "бг_ОграничиватьДобавлениеИзменениеНоменклатуры") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		бг_Проверен = Ложь;
		Возврат;
	КонецЕсли;
	
	Реквизиты = бг_ПроверяемыеРеквизиты();
	ЗначенияРеквизитовСсылки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
	Для Каждого Реквизит Из Реквизиты Цикл
		
		Если ЭтотОбъект[Реквизит] <> ЗначенияРеквизитовСсылки[Реквизит] Тогда
			бг_Проверен = Ложь;
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_ЗаполнитьНаименованиеИзЧастей()
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ВидНоменклатуры,
		"бг_ОграничиватьДобавлениеИзменениеНоменклатуры") = Истина Тогда
		Наименование = Справочники.Номенклатура.бг_НаименованиеИзЧастей(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ОбновитьТоварныеКатегории()
	
	ОбновитьТоварнуюКатегорию = Ложь;
	ОбновитьТоварнуюКатегориюСсылки = Ложь;
	
	Если ЗначениеЗаполнено(ТоварнаяКатегория) Тогда
		
		Если ЭтоНовый() Тогда
			ОбновитьТоварнуюКатегорию = Истина;
		Иначе
			
			РеквизитыСсылки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ТоварнаяКатегория, Крепость");
			ТоварнаяКатегорияСсылки = РеквизитыСсылки.ТоварнаяКатегория;
			
			Если ТоварнаяКатегория = ТоварнаяКатегорияСсылки Тогда
				
				Если Крепость <> РеквизитыСсылки.Крепость Тогда
					ОбновитьТоварнуюКатегорию = Истина;
				КонецЕсли;
				
			Иначе
				ОбновитьТоварнуюКатегорию = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда
		
		ТоварнаяКатегорияСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ТоварнаяКатегория");
		
		Если ЗначениеЗаполнено(ТоварнаяКатегорияСсылки)
			И ТоварнаяКатегорияСсылки <> ТоварнаяКатегория Тогда
			ОбновитьТоварнуюКатегориюСсылки = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбновитьТоварнуюКатегорию Тогда
		бг_ОбновитьТоварнуюКатегорию(ТоварнаяКатегория, Истина);
	КонецЕсли;
	
	Если ОбновитьТоварнуюКатегориюСсылки Тогда
		бг_ОбновитьТоварнуюКатегорию(ТоварнаяКатегорияСсылки, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ОбработатьПолноеНаименование()
	
	НаименованиеПолное = СтрЗаменить(НаименованиеПолное, "¶", "");	
	
КонецПроцедуры

Процедура бг_ОбновитьТоварнуюКатегорию(ТоварнаяКатегорияДляОбновления, ВключаяДанныеТекущегоОбъекта)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Номенклатура.Крепость / 100) КАК КрепостьМинимум,
	|	МАКСИМУМ(Номенклатура.Крепость / 100) КАК КрепостьМаксимум
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
	|	И Номенклатура.Ссылка <> &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ТоварнаяКатегорияДляОбновления);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		КрепостьМинимум = Выборка.КрепостьМинимум;
		КрепостьМаксимум = Выборка.КрепостьМаксимум;
	Иначе
		КрепостьМинимум = 0;
		КрепостьМаксимум = 0;
	КонецЕсли;
	
	Если ВключаяДанныеТекущегоОбъекта Тогда   
		Если ЗначениеЗаполнено(КрепостьМинимум) И ЗначениеЗаполнено(КрепостьМаксимум) Тогда
			КрепостьМинимум = Мин(КрепостьМинимум, Крепость / 100);
			КрепостьМаксимум = Макс(КрепостьМаксимум, Крепость / 100); 
		Иначе
			КрепостьМинимум = Крепость / 100;
			КрепостьМаксимум = Крепость / 100;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыТоварнойКатегории = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТоварнаяКатегорияДляОбновления, "бг_ДоляСпирта, бг_ДоляСпиртаДо");
	
	Если РеквизитыТоварнойКатегории.бг_ДоляСпирта <> КрепостьМинимум
		Или РеквизитыТоварнойКатегории.бг_ДоляСпиртаДо <> КрепостьМаксимум Тогда
		ТоварнаяКатегорияДляОбновленияОбъект = ТоварнаяКатегорияДляОбновления.ПолучитьОбъект();
		ТоварнаяКатегорияДляОбновленияОбъект.бг_ДоляСпирта = КрепостьМинимум;
		ТоварнаяКатегорияДляОбновленияОбъект.бг_ДоляСпиртаДо = КрепостьМаксимум;
		ТоварнаяКатегорияДляОбновленияОбъект.ДополнительныеСвойства.Вставить("НеОбновлятьДолиСпирта", Истина);
		ТоварнаяКатегорияДляОбновленияОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция бг_ПроверяемыеРеквизиты()
	
	Реквизиты = Новый Массив;
	
	Реквизиты.Добавить("Артикул");
	Реквизиты.Добавить("Наименование");
	Реквизиты.Добавить("НаименованиеПолное");
	Реквизиты.Добавить("бг_ОсновноеНаименование");
	Реквизиты.Добавить("бг_Вариативность");
	Реквизиты.Добавить("бг_КонтрагентПроизводитель");
	Реквизиты.Добавить("ПроизводительИмпортерКонтрагент");
	Реквизиты.Добавить("бг_Статус");
	Реквизиты.Добавить("бг_Добавлен");
	Реквизиты.Добавить("бг_Выбыл");
	Реквизиты.Добавить("бг_ГодУрожая");
	Реквизиты.Добавить("бг_ТемператураХранения");
	Реквизиты.Добавить("бг_ОбменB2B");
	Реквизиты.Добавить("бг_Проверен");
	Реквизиты.Добавить("ТоварнаяКатегория");
	Реквизиты.Добавить("ВидНоменклатуры");
	Реквизиты.Добавить("СтавкаНДС");
	Реквизиты.Добавить("ИспользоватьУпаковки");
	Реквизиты.Добавить("ЕдиницаИзмерения");
	Реквизиты.Добавить("ЕдиницаДляОтчетов");
	Реквизиты.Добавить("ВесЕдиницаИзмерения");
	Реквизиты.Добавить("ОбъемЕдиницаИзмерения");
	Реквизиты.Добавить("ДлинаЕдиницаИзмерения");
	Реквизиты.Добавить("ВидАлкогольнойПродукции");
	Реквизиты.Добавить("ИмпортнаяАлкогольнаяПродукция");
	Реквизиты.Добавить("ОбъемДАЛ");
	Реквизиты.Добавить("Крепость");
	
	Возврат Реквизиты;
	
КонецФункции

Процедура бг_ОпределитьНеобходимостьВыгружатьСвязанныеУпаковки()
	
	НеобходимоВыгружатьСвязанныеУпаковки = Ложь;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда

		РеквизитыНоменклатурыВыгружаемыеСУпаковками = бг_НоменклатураИнтеграция.РеквизитыНоменклатурыВыгружаемыеСУпаковками();
		
		СтарыеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Ссылка,
			Новый ФиксированныйМассив(РеквизитыНоменклатурыВыгружаемыеСУпаковками));
			
		Для каждого ИмяРеквизита Из РеквизитыНоменклатурыВыгружаемыеСУпаковками Цикл
			Если СтарыеЗначенияРеквизитов[ИмяРеквизита] <> ЭтотОбъект[ИмяРеквизита] Тогда
				НеобходимоВыгружатьСвязанныеУпаковки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("бг_НеобходимоВыгружатьСвязанныеУпаковки", НеобходимоВыгружатьСвязанныеУпаковки);

КонецПроцедуры

Процедура бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПередЗаписью()

	Если ЭтоНовый() Тогда
		СтарыйКодНоменклатурыSAP = "";			
	Иначе	
		СтарыйКодНоменклатурыSAP = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "бг_КодНоменклатурыSAP");	
		Если Не ЗначениеЗаполнено(СтарыйКодНоменклатурыSAP) Тогда
			СтарыйКодНоменклатурыSAP = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ТоварнаяКатегория.бг_СкюМТ.КодНоменклатурыSAP");
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(СтарыйКодНоменклатурыSAP) Тогда
			СтарыйКодНоменклатурыSAP = "";
		КонецЕсли;
	КонецЕсли;	
	ДополнительныеСвойства.Вставить("СтарыйКодНоменклатурыSAP", СтарыйКодНоменклатурыSAP);

КонецПроцедуры

Процедура бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПриЗаписи()
	
	НовыйКодНоменклатурыSAP = бг_КодНоменклатурыSAP;	
	Если Не ЗначениеЗаполнено(НовыйКодНоменклатурыSAP) 
		И ЗначениеЗаполнено(ТоварнаяКатегория) Тогда
		НовыйКодНоменклатурыSAP = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТоварнаяКатегория, "бг_СкюМТ.КодНоменклатурыSAP");	
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НовыйКодНоменклатурыSAP) Тогда
		НовыйКодНоменклатурыSAP = "";
	КонецЕсли;
	
	Если ДополнительныеСвойства.СтарыйКодНоменклатурыSAP <> НовыйКодНоменклатурыSAP Тогда
		бг_НоменклатураКонтрагентов.СинхронизироватьНоменклатуруКонтрагентовПоКодуSAP(Ссылка);	
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_УстановитьПризнакУчетаОстатковИРезервовВРазрезеУпаковокПаллет()

	// Флаг должен браться строго из вида номенклатуры.
	УчетВРазрезеПаллетДляВидаНоменклатуры = Ложь;
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		УстановитьПривилегированныйРежим(Истина);
		УчетВРазрезеПаллетДляВидаНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					ВидНоменклатуры,
					"бг_УчетОстатковИРезервовВРазрезеУпаковокПаллет"); 
	    УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	бг_УчетОстатковИРезервовВРазрезеУпаковокПаллет = УчетВРазрезеПаллетДляВидаНоменклатуры;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
