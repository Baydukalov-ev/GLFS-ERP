#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	ЭлементДляУдаления 
		= ПараметрыКопированияДополнительныхДанных.НайтиПоЗначению("КопироватьИндивидуальныеУпаковки"); 
		
	Если Не ЭлементДляУдаления = Неопределено Тогда 
		
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникКопирования, 
			"ВидНоменклатуры.бг_ОграничиватьДобавлениеИзменениеНоменклатуры") = Истина Тогда
    		ПараметрыКопированияДополнительныхДанных.Удалить(ЭлементДляУдаления); 
			бг_ЗаполнитьУпаковкиИШтрихкоды();
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы 

&НаКлиенте
Процедура бг_ПараметрыКопированияДополнительныхДанныхПометкаПриИзмененииПосле(Элемент)

	ТекущийЭлементСписка = Элементы.ПараметрыКопированияДополнительныхДанных.ТекущиеДанные;
	Если Не ТекущийЭлементСписка = Неопределено 
		И ТипЗнч(ТекущийЭлементСписка.Значение) = Тип("СправочникСсылка.УпаковкиЕдиницыИзмерения") Тогда 
		
		УпаковкаКоробка = ЭтаФорма.бг_СоответствиеПаллетыКоробке.Получить(ТекущийЭлементСписка.Значение);
		ПодчиненныеШтрихкоды = ЭтаФорма.бг_ПодчиненныеШтрихкоды.Получить(УпаковкаКоробка);
		
		Если ПодчиненныеШтрихкоды = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для каждого ЭлементДанных Из ПараметрыКопированияДополнительныхДанных Цикл
			
			Если ПодчиненныеШтрихкоды.Найти(ЭлементДанных.Значение) <> Неопределено Тогда
				ЭлементДанных.Пометка = ТекущийЭлементСписка.Пометка;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ЗаполнитьУпаковкиИШтрихкоды() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕдиницаКоробка.Ссылка КАК ЕдиницаИзмеренияКоробка,
	|	ЕСТЬNULL(УпаковкаПаллета.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмеренияПаллета
	|ПОМЕСТИТЬ втКоробки
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницаКоробка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкаПаллета
	|		ПО ЕдиницаКоробка.Ссылка = УпаковкаПаллета.Родитель
	|			И (УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = &ТипПаллета)
	|ГДЕ
	|	ЕдиницаКоробка.Владелец = &ИсточникКопирования
	|	И ЕдиницаКоробка.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = &ТипКоробка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втКоробки.ЕдиницаИзмеренияКоробка КАК ЕдиницаИзмеренияКоробка,
	|	втКоробки.ЕдиницаИзмеренияПаллета КАК ЕдиницаИзмеренияПаллета,
	|	втКоробки.ЕдиницаИзмеренияКоробка.Наименование КАК КоробкаНаименование,
	|	втКоробки.ЕдиницаИзмеренияПаллета.Наименование КАК ПаллетаНаименование
	|ИЗ
	|	втКоробки КАК втКоробки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бг_Штрихкоды_ЕК_Номенклатуры.Штрихкод КАК Штрихкод,
	|	бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	бг_Штрихкоды_ЕК_Номенклатуры.Ссылка КАК Ссылка,
	|	втКоробки.ЕдиницаИзмеренияКоробка КАК ЕдиницаИзмеренияКоробка
	|ИЗ
	|	втКоробки КАК втКоробки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК бг_Штрихкоды_ЕК_Номенклатуры
	|		ПО втКоробки.ЕдиницаИзмеренияКоробка = бг_Штрихкоды_ЕК_Номенклатуры.Владелец";

	Запрос.УстановитьПараметр("ИсточникКопирования", ИсточникКопирования);
	Запрос.УстановитьПараметр("ТипКоробка", Перечисления.бг_ТипыЕдиницИзмерения.Коробка);
	Запрос.УстановитьПараметр("ТипПаллета", Перечисления.бг_ТипыЕдиницИзмерения.Паллета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаУпаковки = РезультатЗапроса[1].Выгрузить();
	ТаблицаШтрихкоды = РезультатЗапроса[2].Выгрузить();
	
	СоответствиеПаллетыКоробке = Новый Соответствие;
	Для каждого СтрокаТЧ Из ТаблицаУпаковки Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ЕдиницаИзмеренияПаллета) Тогда
			ПараметрыКопированияДополнительныхДанных.Добавить(
				СтрокаТЧ.ЕдиницаИзмеренияПаллета,
				СтрШаблон(НСтр("ru='%1 / %2'"), СтрокаТЧ.КоробкаНаименование, СтрокаТЧ.ПаллетаНаименование),
				Ложь);  
			СоответствиеПаллетыКоробке.Вставить(СтрокаТЧ.ЕдиницаИзмеренияПаллета, СтрокаТЧ.ЕдиницаИзмеренияКоробка);
		Иначе
			ПараметрыКопированияДополнительныхДанных.Добавить(
				СтрокаТЧ.ЕдиницаИзмеренияКоробка,
				СтрШаблон(НСтр("ru='%1'"), СтрокаТЧ.КоробкаНаименование),
				Ложь); 
			СоответствиеПаллетыКоробке.Вставить(СтрокаТЧ.ЕдиницаИзмеренияКоробка, СтрокаТЧ.ЕдиницаИзмеренияКоробка);
		КонецЕсли;
		
	КонецЦикла; 
	
	ПодчиненныеШтрихкоды = Новый Соответствие;
	Для каждого СтрокаТЧ Из ТаблицаШтрихкоды Цикл
		
		ПараметрыКопированияДополнительныхДанных.Добавить(
			СтрокаТЧ.Ссылка,
			СтрШаблон(НСтр("ru='Штрихкод: %1 (ед. изм. %2) к коробке %3'"), 
				СтрокаТЧ.Штрихкод, 
				СтрокаТЧ.ЕдиницаИзмерения,
				СтрокаТЧ.ЕдиницаИзмеренияКоробка),
			Ложь);
			
		МассивПодчиненныеШтрихкоды = ПодчиненныеШтрихкоды.Получить(СтрокаТЧ.ЕдиницаИзмеренияКоробка);
		Если МассивПодчиненныеШтрихкоды = Неопределено Тогда
			МассивПодчиненныеШтрихкоды = Новый Массив;
		КонецЕсли;
		МассивПодчиненныеШтрихкоды.Добавить(СтрокаТЧ.Ссылка);
		
		ПодчиненныеШтрихкоды.Вставить(СтрокаТЧ.ЕдиницаИзмеренияКоробка, МассивПодчиненныеШтрихкоды);
		
	КонецЦикла;
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("бг_ПодчиненныеШтрихкоды", Новый ОписаниеТипов()));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("бг_СоответствиеПаллетыКоробке", Новый ОписаниеТипов()));
	ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов);
	
	ЭтаФорма.бг_ПодчиненныеШтрихкоды = Новый ФиксированноеСоответствие(ПодчиненныеШтрихкоды);
	ЭтаФорма.бг_СоответствиеПаллетыКоробке = Новый ФиксированноеСоответствие(СоответствиеПаллетыКоробке);
	
КонецПроцедуры

#КонецОбласти
