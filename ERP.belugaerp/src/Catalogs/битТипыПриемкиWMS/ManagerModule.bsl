
#Область ПрограммныйИнтерфейс

// Возвращает тип приемки по умолчанию
// 
// Возвращаемое значение:
//  СправочникСсылка.битТипыПриемкиWMS - тип приемки по умолчанию
//
Функция ТипПриемкиПоУмолчанию() Экспорт 

	Возврат бг_КонстантыПовтИсп.ЗначениеКонстанты("ТипПриемкиПоУмолчанию");	
	
КонецФункции

// Функция - Тип приемки партнера по сегменту
//
// Параметры:
//  Партнер	 - СправочникСсылка.Партнеры - партнер, для которого требуется найти тип приемки
// 
// Возвращаемое значение:
//  СправочникСсылка.битТипыПриемкиWMS - Найденный тип приемки по сегменту партнера
//
Функция ТипПриемкиПартнераПоСегменту(Партнер) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	битТипыПриемкиWMS.Ссылка КАК ТипПриемки,
	|	битТипыПриемкиWMS.КоличествоПроверяемыхКоробокВПаллете + битТипыПриемкиWMS.КоличествоПроверяемыхБутылокВКоробке КАК СуммарноеКоличествоЕдиницПроверки
	|ИЗ
	|	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СегментыПартнеров КАК СегментыПартнеров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.битТипыПриемкиWMS КАК битТипыПриемкиWMS
	|			ПО СегментыПартнеров.бг_ТипПриемки = битТипыПриемкиWMS.Ссылка
	|		ПО ПартнерыСегмента.Сегмент = СегментыПартнеров.Ссылка
	|ГДЕ
	|	ПартнерыСегмента.Партнер = &Партнер
	|
	|УПОРЯДОЧИТЬ ПО
	|	СуммарноеКоличествоЕдиницПроверки УБЫВ";
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Результат = Запрос.Выполнить();
	
	ТипПриемкиПартнера = Неопределено;
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ТипПриемкиПартнера = Выборка.ТипПриемки;
	КонецЕсли;
	
	Возврат ТипПриемкиПартнера;
	
КонецФункции

#КонецОбласти
