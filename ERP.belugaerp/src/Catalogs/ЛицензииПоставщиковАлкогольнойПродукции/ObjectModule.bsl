
#Область ОбработчикиСобытий

&Перед("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	бг_УстановитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

&Перед("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПериодС = Формат(ДатаНачала, "ДФ=dd.MM.yyyy");
	СтрокаПериодПо = Формат(ДатаОкончания, "ДФ=dd.MM.yyyy");
	
	Наименование = СокрЛП(СтрШаблон(НСтр("ru='%1 %2 %3 (%4 - %5)'"),
							бг_Серия,
							бг_Номер,
							бг_НомерРАР,
							СтрокаПериодС,
							СтрокаПериодПо));
							
	Если бг_ПунктыНазначения.Количество() > 1 Тогда
		бг_ЕстьДублирующиеСтрокиВТЧПунктыНазначения(Отказ);
	КонецЕсли;
		
	Если Не ПометкаУдаления 
		И ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		бг_ПроверитьПересеченияЛицензий(Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		бг_УстановитьДействиеЛицензииВПунктахРазгрузки();
		бг_ОтменитьДействиеЛицензииВПунктахРазгрузки();
	КонецЕсли;
	
	Если Не Отказ
		И ЭтоНовый()
		И Не ЗначениеЗаполнено(бг_ДатаПрекращенияДействия) Тогда
		бг_ДатаПрекращенияДействия = ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ПроверитьПересеченияЛицензий(Отказ) Экспорт
	
	ДатаВыдачиСтрокой = ?(ЗначениеЗаполнено(бг_ДатаВыдачи), Строка(Формат(бг_ДатаВыдачи, "ДФ=dd.MM.yyyy")), "<без даты>");
	ДатаПрекращенияДействияСтрокой = ?(ЗначениеЗаполнено(бг_ДатаПрекращенияДействия), Строка(Формат(бг_ДатаПрекращенияДействия, "ДФ=dd.MM.yyyy")), "<без даты>");
	
	Если ЗначениеЗаполнено(бг_ДатаВыдачи)
		И ЗначениеЗаполнено(бг_ДатаПрекращенияДействия)
		И бг_ДатаВыдачи > бг_ДатаПрекращенияДействия Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Дата выдачи лицензии %1 превышает дату окончания действия %2 !'"),
			ДатаВыдачиСтрокой,
			ДатаПрекращенияДействияСтрокой);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, , , Отказ);
		Возврат
	КонецЕсли;
	
	ТаблицаПунктовНазначения = бг_ПунктыНазначения.Выгрузить();
	
	ВидыАлкогольнойПродукции = бг_ВидыАлкогольнойПродукции.ВыгрузитьКолонку("ВидАлкогольнойПродукции");
	ВидыАлкогольнойПродукции = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ВидыАлкогольнойПродукции);
	
	ЕстьОтборПоВидуПродукции = ВидыАлкогольнойПродукции.Количество() > 0;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПунктыНазначения.ВладелецПунктаНазначения КАК Владелец,
	|	ПунктыНазначения.ПунктНазначения КАК ПунктНазначения,
	|	ПунктыНазначения.СлабоалкогольнаяПродукция КАК СлабоалкогольнаяПродукция
	|ПОМЕСТИТЬ ПунктыНазначения
	|ИЗ
	|	&ПунктыНазначения КАК ПунктыНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Лицензии.Ссылка КАК Лицензия,
	|	Лицензии.Владелец КАК Владелец
	|ПОМЕСТИТЬ ДублиЛицензий
	|ИЗ
	|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК Лицензии
	|ГДЕ
	|	Лицензии.Ссылка <> &Ссылка
	|	И НЕ Лицензии.ПометкаУдаления
	|	И Лицензии.Владелец = &Владелец
	|	И Лицензии.бг_Регион = &Регион
	|	И Лицензии.бг_ВидЛицензируемойДеятельности = &ВидЛицензируемойДеятельности
	|	И Лицензии.бг_СлабоалкогольнаяПродукция = &СлабоалкогольнаяПродукция
	|	И Лицензии.бг_Хорека = &Хорека
	|	И Лицензии.бг_ТипЛицензии = &ТипЛицензии
	|	И ВЫБОР
	|			КОГДА Лицензии.бг_ДатаВыдачи > &ДатаВыдачи
	|				ТОГДА Лицензии.бг_ДатаВыдачи
	|			ИНАЧЕ &ДатаВыдачи
	|		КОНЕЦ <= ВЫБОР
	|			КОГДА Лицензии.бг_ДатаПрекращенияДействия < &ДатаПрекращенияДействия
	|				ТОГДА Лицензии.бг_ДатаПрекращенияДействия
	|			ИНАЧЕ &ДатаПрекращенияДействия
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧПунктыНазначения.Ссылка КАК Лицензия,
	|	ТЧПунктыНазначения.ВладелецПунктаНазначения КАК ВладелецПунктаНазначения,
	|	ТЧПунктыНазначения.ПунктНазначения КАК ПунктНазначения
	|ПОМЕСТИТЬ ДублиЛицензийТЧ
	|ИЗ
	|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции.бг_ПунктыНазначения КАК ТЧПунктыНазначения
	|ГДЕ
	|	ТЧПунктыНазначения.ПунктНазначения В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т.ПунктНазначения
	|			ИЗ
	|				ПунктыНазначения КАК Т)
	|	И ТЧПунктыНазначения.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т.Лицензия
	|			ИЗ
	|				ДублиЛицензий КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиЛицензийТЧ.Лицензия КАК Лицензия,
	|	ДублиЛицензийТЧ.ВладелецПунктаНазначения КАК Владелец,
	|	ДублиЛицензийТЧ.ПунктНазначения КАК ПунктНазначения,
	|	ИСТИНА КАК ЭтоДублиПунктов
	|ПОМЕСТИТЬ ДублиЛицензийВсе
	|ИЗ
	|	ДублиЛицензийТЧ КАК ДублиЛицензийТЧ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиЛицензийВсе.Лицензия КАК Лицензия,
	|	ДублиЛицензийВсе.Владелец КАК Владелец,
	|	ДублиЛицензийВсе.ПунктНазначения КАК ПунктНазначения,
	|	ДублиЛицензийВсе.ЭтоДублиПунктов КАК ЭтоДублиПунктов,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.ВидАлкогольнойПродукции, ЗНАЧЕНИЕ(Справочник.ВидыАлкогольнойПродукции.ПустаяСсылка)) КАК ВидАлкогольнойПродукции
	|ПОМЕСТИТЬ ДублиЛицензийПоВидам
	|ИЗ
	|	ДублиЛицензийВсе КАК ДублиЛицензийВсе
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции.бг_ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО ДублиЛицензийВсе.Лицензия = ВидыАлкогольнойПродукции.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРЕДСТАВЛЕНИЕ(ДублиЛицензийПоВидам.Лицензия) КАК ПредставлениеЛицензии,
	|	ПРЕДСТАВЛЕНИЕ(ДублиЛицензийПоВидам.Владелец) КАК ПредставлениеВладельцаЛицензии,
	|	ПРЕДСТАВЛЕНИЕ(ДублиЛицензийПоВидам.ПунктНазначения) КАК ПредставлениеПунктаНазначения,
	|	ДублиЛицензийПоВидам.ЭтоДублиПунктов КАК ЭтоДублиПунктов
	|ИЗ
	|	ДублиЛицензийПоВидам КАК ДублиЛицензийПоВидам
	|ГДЕ
	|	ДублиЛицензийПоВидам.Лицензия.бг_ВидЛицензируемойДеятельности = &ВидЛицензируемойДеятельности
	|	И ВЫБОР
	|			КОГДА &ЕстьОтборПоВидуПродукции
	|				ТОГДА ДублиЛицензийПоВидам.ВидАлкогольнойПродукции В (&ВидыАлкогольнойПродукции)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ПунктыНазначения", ТаблицаПунктовНазначения);
	Запрос.УстановитьПараметр("ТипЛицензии", бг_ТипЛицензии);
	Запрос.УстановитьПараметр("СлабоалкогольнаяПродукция", бг_СлабоалкогольнаяПродукция);
	Запрос.УстановитьПараметр("ВидЛицензируемойДеятельности", бг_ВидЛицензируемойДеятельности);
	Запрос.УстановитьПараметр("ДатаВыдачи", ?(ЗначениеЗаполнено(бг_ДатаВыдачи), бг_ДатаВыдачи, Дата(01, 01, 01)));
	Запрос.УстановитьПараметр("ДатаПрекращенияДействия", ?(ЗначениеЗаполнено(бг_ДатаПрекращенияДействия), бг_ДатаПрекращенияДействия, Дата(3999, 12, 31)));
	Запрос.УстановитьПараметр("Хорека", бг_Хорека);
	Запрос.УстановитьПараметр("Регион", бг_Регион);
	Запрос.УстановитьПараметр("ВидыАлкогольнойПродукции", ВидыАлкогольнойПродукции);
	Запрос.УстановитьПараметр("ЕстьОтборПоВидуПродукции", ЕстьОтборПоВидуПродукции);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	ПредставлениеПериодаДействия = ДатаВыдачиСтрокой + " - " + ДатаПрекращенияДействияСтрокой;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоДублиПунктов Тогда
			ТекстНазваниеВладельца = НСтр("ru = 'пункта назначения'");
			ПредставлениеВладельца = Выборка.ПредставлениеПунктаНазначения;
			
		Иначе
			ТекстНазваниеВладельца = НСтр("ru = 'контрагента'");
			ПредставлениеВладельца = Выборка.ПредставлениеВладельцаЛицензии;
		КонецЕсли;
		
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Для %1 %2 уже есть действующая лицензия %3 на указанные даты выдачи/прекращения %4'"),
						ТекстНазваниеВладельца,
						ПредставлениеВладельца,
						Выборка.ПредставлениеЛицензии,
						ПредставлениеПериодаДействия);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_УстановитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты)
	
	Индекс = ПроверяемыеРеквизиты.Найти("Наименование");
	
	Если Индекс <> Неопределено Тогда
		ПроверяемыеРеквизиты.Удалить(Индекс);
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Добавить("ДатаНачала");
	ПроверяемыеРеквизиты.Добавить("ДатаОкончания");
	
КонецПроцедуры

Процедура бг_ЕстьДублирующиеСтрокиВТЧПунктыНазначения(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("тчПунктыНазначения", бг_ПунктыНазначения.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	тчПунктыНазначения.ВладелецПунктаНазначения КАК ВладелецПунктаНазначения,
	|	тчПунктыНазначения.ПунктНазначения КАК ПунктНазначения,
	|	тчПунктыНазначения.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ втТЧПунктыНазначения
	|ИЗ
	|	&тчПунктыНазначения КАК тчПунктыНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧПунктыНазначения.ВладелецПунктаНазначения КАК ВладелецПунктаНазначения,
	|	втТЧПунктыНазначения.ПунктНазначения КАК ПунктНазначения,
	|	КОЛИЧЕСТВО(втТЧПунктыНазначения.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	втТЧПунктыНазначения КАК втТЧПунктыНазначения
	|
	|СГРУППИРОВАТЬ ПО
	|	втТЧПунктыНазначения.ВладелецПунктаНазначения,
	|	втТЧПунктыНазначения.ПунктНазначения
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(втТЧПунктыНазначения.НомерСтроки) > 1";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'В табличной части ""Пункты назначения"" введены дублирующие значения'"), 
			Ссылка, 
			, 
			, 
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_УстановитьДействиеЛицензииВПунктахРазгрузки()
	
	Если бг_ПунктыНазначения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		СсылкаНаобъект = Справочники.ЛицензииПоставщиковАлкогольнойПродукции.ПолучитьСсылку(
							Новый УникальныйИдентификатор);
		ЭтотОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
	Иначе
		СсылкаНаОбъект = Ссылка;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из бг_ПунктыНазначения Цикл
		РегистрыСведений.бг_ЛицензииПунктовНазначения.УстановитьДействиеЛицензииВПунктеНазначения(
			СтрокаТЧ.ПунктНазначения, 
			СсылкаНаобъект, 
			ТекущаяДатаСеанса());
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_ОтменитьДействиеЛицензииВПунктахРазгрузки()
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Лицензия", Ссылка);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	бг_ЛицензииПунктовНазначения.ПунктНазначения КАК ПунктНазначения,
	|	бг_ЛицензииПунктовНазначения.Лицензия КАК Лицензия
	|ИЗ
	|	РегистрСведений.бг_ЛицензииПунктовНазначения КАК бг_ЛицензииПунктовНазначения
	|ГДЕ
	|	бг_ЛицензииПунктовНазначения.Лицензия = &Лицензия
	|	И &УсловиеОтбораПоПунктамРазгрузки";
	
	Если бг_ПунктыНазначения.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр(
			"ПунктыНазначения", 
			бг_ПунктыНазначения.ВыгрузитьКолонку("ПунктНазначения"));
	
		ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"&УсловиеОтбораПоПунктамРазгрузки", 
						"НЕ бг_ЛицензииПунктовНазначения.ПунктНазначения В (&ПунктыНазначения)");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"&УсловиеОтбораПоПунктамРазгрузки",
						"ИСТИНА");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.бг_ЛицензииПунктовНазначения.ОтменитьДействиеЛицензииВПунктеНазначения(
			Выборка.ПунктНазначения, 
			Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
