
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьРеквизитыФормы();
	бг_ЗаполнитьРеквизитКПП();
	бг_ДобавитьЭлементыФормы();
	бг_ЗаменитьЭлементФормыДатаНачала();
	бг_УстановитьДоступностьЭлементовФормы();
	бг_УстановитьДоступностьБлокируемыхЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПередЗаписьюВместо(Отказ, ПараметрыЗаписи)
	
	// Стандартный обработчик удален
	// Вызывается обработчик "ПередЗаписью" в модуле объекта
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	бг_ЗаполнитьРеквизитКПП();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура бг_ЗаменяемаяЛицензияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура("Владелец", Объект.Владелец);
	
	ПараметрыВыбораВладельца = Новый Структура("Отбор", ЗначениеОтбора);
	
	ОткрытьФорму("Справочник.ЛицензииПоставщиковАлкогольнойПродукции.ФормаВыбора", 
		ПараметрыВыбораВладельца, 
		Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура бг_ВладелецПриИзмененииПосле(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Владелец)
		И ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		ЭтаФорма.бг_Партнер = бг_ПартнерКонтрагента(Объект.Владелец);
	Иначе
		ЭтаФорма.бг_Партнер = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_СлабоалкогольнаяПродукцияПриИзменении(Элемент)
	
	бг_СлабоалкогольнаяПродукцияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ТипЛицензииПриИзменении(Элемент)
	
	Если Объект.бг_ТипЛицензии = ПредопределенноеЗначение("Перечисление.бг_ТипыЛицензийПоставщиковАлкогольнойПродукции.Розничная") Тогда
		Элементы.бг_Хорека.Доступность = Истина;
	Иначе
		Объект.бг_Хорека = Ложь;
		Элементы.бг_Хорека.Доступность = Ложь;
	КонецЕсли;
	
	Объект.бг_ВидЛицензируемойДеятельности = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ВладелецОбработкаВыбораПосле(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты")
		И бг_КонтрагентОбособленноеПодразделение(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		ВызватьИсключение (НСтр("ru = 'Контрагент с типом ""Обособленное подразделение"" не может быть выбран'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТЧПунктыНазначения

&НаКлиенте
Процедура бг_ПунктыНазначения_ПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.бг_ПунктыНазначения.ТекущиеДанные;
	
	Если Объект.бг_СлабоалкогольнаяПродукция Тогда
		ТекущаяСтрока.СлабоалкогольнаяПродукция = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПунктыНазначения_ВладелецПунктаНазначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ЗначениеОтбора = Новый Структура("Ссылка", Объект.Владелец);
		
		бг_ЗаполнитьСтруктуруОтбораПоГоловномуКонтрагенту(ЗначениеОтбора, "Ссылка");
		
		ОткрытьФорму(
			"Справочник.Контрагенты.ФормаВыбора", 
			Новый Структура("Отбор", ЗначениеОтбора), 
			Элемент);
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		
		ЗначениеОтбора = Новый Структура("Ссылка", Объект.Владелец);
		
		ОткрытьФорму(
			"Справочник.Организации.ФормаВыбора", 
			Новый Структура("Отбор", ЗначениеОтбора), 
			Элемент);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПунктыНазначения_ВладелецПунктаНазначенияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.бг_ПунктыНазначения.ТекущиеДанные;
		
	Если ЗначениеЗаполнено(ТекущаяСтрока.ВладелецПунктаНазначения) Тогда
		ТекущаяСтрока.ПунктНазначения = бг_ПунктНазначенияВладельца(ТекущаяСтрока.ВладелецПунктаНазначения);
	Иначе
		ТекущаяСтрока.ПунктНазначения = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ВладелецПунктаНазначения) Тогда
		ТекущаяСтрока.бг_КПП = бг_КППКонтрагента(ТекущаяСтрока.ВладелецПунктаНазначения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПунктыНазначения_ПунктНазначенияСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.бг_ПунктыНазначения.ТекущиеДанные;
	
	ЗначениеОтбора = Новый Структура("Клиент", ТекущаяСтрока.ВладелецПунктаНазначения);
	
	ОткрытьФорму(
		"Справочник.битПунктыНазначения.Форма.ФормаЭлемента", 
		Новый Структура("ПараметрыВыбора", ЗначениеОтбора),
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ПунктыНазначения_ПунктНазначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.бг_ПунктыНазначения.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.ВладелецПунктаНазначения) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = НСтр("ru = 'Необходимо выбрать владельца пункта назначения'");
		Сообщение.Поле = "ВладелецПунктаНазначения";
		Сообщение.КлючДанных = Объект.Ссылка;
		Сообщение.ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
									"бг_ПунктыНазначения", 
									ТекущаяСтрока.НомерСтроки, 
									"ВладелецПунктаНазначения");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ДанныеОтбора = Новый Структура("Клиент", ТекущаяСтрока.ВладелецПунктаНазначения);
	ПараметрыВыбораПунктаНазначения = Новый Структура("Отбор", ДанныеОтбора);
	
	ОткрытьФорму(
		"Справочник.битПунктыНазначения.ФормаВыбора", 
		ПараметрыВыбораПунктаНазначения, 
		Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ДобавитьЭлементыФормы()
	
	бг_ГруппаСтраницы = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
							ЭтотОбъект,
							"бг_ГруппаСтраницы",
							,
							ВидГруппыФормы.Страницы);
	
	бг_ГруппаСтраницаОсновное = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
									ЭтотОбъект,
									"бг_ГруппаСтраницаОсновное",
									бг_ГруппаСтраницы,
									ВидГруппыФормы.Страница);
							
	бг_ГруппаСтраницаОсновное.Заголовок = НСтр("ru = 'Основное'");
	
	бг_ГруппаСтраницаДополнительнаяИнформация = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
													ЭтотОбъект,
													"бг_ГруппаСтраницаДополнительнаяИнформация",
													бг_ГруппаСтраницы,
													ВидГруппыФормы.Страница);
											
	бг_ГруппаСтраницаДополнительнаяИнформация.Заголовок = НСтр("ru = 'Прочая информация'");
	
	бг_ГруппаШапка = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
						ЭтотОбъект,
						"бг_ГруппаШапка",
						бг_ГруппаСтраницаОсновное,
						ВидГруппыФормы.ОбычнаяГруппа);
	
	бг_ГруппаШапка.Отображение = ОтображениеОбычнойГруппы.Нет;
	бг_ГруппаШапка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	бг_ГруппаШапкаЛево = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
							ЭтотОбъект,
							"бг_ГруппаШапкаЛево",
							бг_ГруппаШапка,
							ВидГруппыФормы.ОбычнаяГруппа);
							
	бг_ГруппаШапкаЛево.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Элементы.Переместить(Элементы.Владелец, бг_ГруппаШапкаЛево);
	Элементы.Переместить(Элементы.Наименование, бг_ГруппаШапкаЛево);
	
	бг_Серия = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
					ЭтотОбъект,
					"бг_Серия",
					бг_ГруппаШапкаЛево,
					"Объект.бг_Серия");
	
	бг_Номер = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
					ЭтотОбъект,
					"бг_Номер",
					бг_ГруппаШапкаЛево,
					"Объект.бг_Номер");
	
	бг_НомерРАР = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
					ЭтотОбъект,
					"бг_НомерРАР",
					бг_ГруппаШапкаЛево,
					"Объект.бг_НомерРАР");
	
	бг_ВидЛицензируемойДеятельности = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
										ЭтотОбъект,
										"бг_ВидЛицензируемойДеятельности",
										бг_ГруппаШапкаЛево,
										"Объект.бг_ВидЛицензируемойДеятельности");
										
	бг_Регион = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
					ЭтотОбъект,
					"бг_Регион",
					бг_ГруппаШапкаЛево,
					"Объект.бг_Регион");
	
	бг_Хорека = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
					ЭтотОбъект,
					"бг_Хорека",
					бг_ГруппаШапкаЛево,
					"Объект.бг_Хорека",
					,
					,
					"ПолеФлажка");
					
	бг_Хорека.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	
	бг_СлабоалкогольнаяПродукция = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
									ЭтотОбъект,
									"бг_СлабоалкогольнаяПродукция",
									бг_ГруппаШапкаЛево,
									"Объект.бг_СлабоалкогольнаяПродукция",
									,
									,
									"ПолеФлажка");
	
	бг_СлабоалкогольнаяПродукция.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	
	бг_СлабоалкогольнаяПродукция.УстановитьДействие("ПриИзменении", "бг_СлабоалкогольнаяПродукцияПриИзменении");
	
	бг_ГруппаШапкаПраво = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
							ЭтотОбъект,
							"бг_ГруппаШапкаПраво",
							бг_ГруппаШапка,
							ВидГруппыФормы.ОбычнаяГруппа);
	
	бг_ГруппаШапкаПраво.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Элементы.Переместить(Элементы.ГруппаДаты, бг_ГруппаШапкаПраво);
	Элементы.Переместить(Элементы.ВидЛицензии, бг_ГруппаШапкаПраво); 
	Элементы.Переместить(Элементы.КемВыдана,бг_ГруппаШапкаПраво);
	
	бг_ДатаВыдачи = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
						ЭтотОбъект,
						"бг_ДатаВыдачи",
						бг_ГруппаШапкаПраво,
						"Объект.бг_ДатаВыдачи",
						,
						Элементы.ГруппаДаты);
	
	бг_ДатаПрекращенияДействия = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
									ЭтотОбъект,
									"бг_ДатаПрекращенияДействия",
									бг_ГруппаШапкаПраво,
									"Объект.бг_ДатаПрекращенияДействия",
									,
									Элементы.ГруппаДаты);
	
	бг_ДатаПрекращенияДействия.Заголовок = НСтр("ru = 'Дата прекращения'");
	
	бг_ПриостановленаСДаты = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
									ЭтотОбъект,
									"бг_ПриостановленаСДаты",
									бг_ГруппаШапкаПраво,
									"Объект.бг_ПриостановленаСДаты",
									,
									Элементы.ГруппаДаты);
	
	бг_ТипЛицензии = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
						ЭтотОбъект,
						"бг_ТипЛицензии",
						бг_ГруппаШапкаПраво,
						"Объект.бг_ТипЛицензии");
	
	бг_ТипЛицензии.УстановитьДействие("ПриИзменении", "бг_ТипЛицензииПриИзменении");
	
	бг_ЗаменяемаяЛицензия = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
								ЭтотОбъект,
								"бг_ЗаменяемаяЛицензия",
								бг_ГруппаШапкаПраво,
								"Объект.бг_ЗаменяемаяЛицензия");
	
	бг_ЗаменяемаяЛицензия.УстановитьДействие("НачалоВыбора", "бг_ЗаменяемаяЛицензияНачалоВыбора");
	
	бг_ГруппаСтраницыТЧ = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
							ЭтотОбъект,
							"бг_ГруппаСтраницыТЧ",
							бг_ГруппаСтраницаОсновное,
							ВидГруппыФормы.Страницы);
	
	бг_ГруппаПунктыНазначения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
								ЭтотОбъект,
								"бг_ГруппаПунктыНазначения",
								бг_ГруппаСтраницыТЧ,
								ВидГруппыФормы.Страница);
	
	бг_ГруппаПунктыНазначения.Заголовок = НСтр("ru = 'Пункты назначения'");
	
	бг_ПунктыНазначения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьТаблицуНаФорму(
							ЭтотОбъект,
							"бг_ПунктыНазначения",
							бг_ГруппаПунктыНазначения,
							"Объект.бг_ПунктыНазначения");
	
	бг_ПунктыНазначения.УстановитьДействие("ПриИзменении", "бг_ПунктыНазначения_ПриИзменении");
	
	бг_ПунктыНазначения_НомерСтроки = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
										ЭтотОбъект,
										"бг_ПунктыНазначения_НомерСтроки",
										бг_ПунктыНазначения,
										"Объект.бг_ПунктыНазначения.НомерСтроки");
	
	бг_ПунктыНазначения_СлабоалкогольнаяПродукция = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
													ЭтотОбъект,
													"бг_ПунктыНазначения_СлабоалкогольнаяПродукция",
													бг_ПунктыНазначения,
													"Объект.бг_ПунктыНазначения.СлабоалкогольнаяПродукция",
													,
													,
													"ПолеФлажка");
	
	бг_ПунктыНазначения_КПП = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
								ЭтотОбъект,
								"бг_ПунктыНазначения_КПП",
								бг_ПунктыНазначения,
								"Объект.бг_ПунктыНазначения.бг_КПП");
	
	бг_ПунктыНазначения_КПП.Заголовок = НСтр("ru = 'КПП'");
	
	бг_ПунктыНазначения_ВладелецПунктаНазначения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
													ЭтотОбъект,
													"бг_ПунктыНазначения_ВладелецПунктаНазначения",
													бг_ПунктыНазначения,
													"Объект.бг_ПунктыНазначения.ВладелецПунктаНазначения");
	
	бг_ПунктыНазначения_ВладелецПунктаНазначения.РедактированиеТекста = Ложь;
	
	бг_ПунктыНазначения_ВладелецПунктаНазначения.УстановитьДействие("НачалоВыбора", "бг_ПунктыНазначения_ВладелецПунктаНазначенияНачалоВыбора");
	бг_ПунктыНазначения_ВладелецПунктаНазначения.УстановитьДействие("ПриИзменении", "бг_ПунктыНазначения_ВладелецПунктаНазначенияПриИзменении");
	
	бг_ПунктыНазначения_ПунктНазначения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
											ЭтотОбъект,
											"бг_ПунктыНазначения_ПунктНазначения",
											бг_ПунктыНазначения,
											"Объект.бг_ПунктыНазначения.ПунктНазначения");
	
	бг_ПунктыНазначения_ПунктНазначения.РедактированиеТекста = Ложь;
	
	бг_ПунктыНазначения_ПунктНазначения.УстановитьДействие("Создание", "бг_ПунктыНазначения_ПунктНазначенияСоздание");
	бг_ПунктыНазначения_ПунктНазначения.УстановитьДействие("НачалоВыбора", "бг_ПунктыНазначения_ПунктНазначенияНачалоВыбора");
	бг_ПунктыНазначения_ПунктНазначения.УстановитьДействие("ПриИзменении", "бг_ПунктыНазначения_ПунктНазначенияПриИзменении");
	
	бг_ГруппаВидыАлкогольнойПродуцкии = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
											ЭтотОбъект,
											"бг_ГруппаВидыАлкогольнойПродуцкии",
											бг_ГруппаСтраницыТЧ,
											ВидГруппыФормы.Страница);
	
	бг_ГруппаВидыАлкогольнойПродуцкии.Заголовок = НСтр("ru = 'Виды алкогольной продукции'");
	
	бг_ВидыАлкогольнойПродукции = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьТаблицуНаФорму(
									ЭтотОбъект,
									"бг_ВидыАлкогольнойПродукции",
									бг_ГруппаВидыАлкогольнойПродуцкии,
									"Объект.бг_ВидыАлкогольнойПродукции");
	
	бг_ВидыАлкогольнойПродукции_НомерСтроки = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
												ЭтотОбъект,
												"бг_ВидыАлкогольнойПродукции_НомерСтроки",
												бг_ВидыАлкогольнойПродукции,
												"Объект.бг_ВидыАлкогольнойПродукции.НомерСтроки");
	
	бг_ВидыАлкогольнойПродукции_ВидАлкогольнойПродукции = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
															ЭтотОбъект,
															"бг_ВидыАлкогольнойПродукции_ВидАлкогольнойПродукции",
															бг_ВидыАлкогольнойПродукции,
															"Объект.бг_ВидыАлкогольнойПродукции.ВидАлкогольнойПродукции");
															
	бг_ДополнительнаяИнформация = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
									ЭтотОбъект,
									"бг_ДополнительнаяИнформация",
									бг_ГруппаСтраницаДополнительнаяИнформация,
									"Объект.бг_ДополнительнаяИнформация");
						
	бг_ДополнительнаяИнформация.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	бг_ДополнительнаяИнформация.АвтоМаксимальнаяШирина = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьРеквизитыФормы()
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_Партнер",
			Новый ОписаниеТипов("СправочникСсылка.Партнеры")));
			
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_КПП",
			ОбщегоНазначения.ОписаниеТипаСтрока(9), 
			"Объект.бг_ПунктыНазначения"));
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьРеквизитКПП()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("тчПунктыНазначения", 
		Объект.бг_ПунктыНазначения.Выгрузить(, "ПунктНазначения"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тчОбособленныеПодразделения.ПунктНазначения КАК ПунктНазначения
	|ПОМЕСТИТЬ втТабЧасть
	|ИЗ
	|	&тчПунктыНазначения КАК тчОбособленныеПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТабЧасть.ПунктНазначения КАК ПунктНазначения,
	|	битПунктыНазначения.КПП КАК КПП
	|ИЗ
	|	втТабЧасть КАК втТабЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ПО втТабЧасть.ПунктНазначения = битПунктыНазначения.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Отбор = Новый Структура("ПунктНазначения", Выборка.ПунктНазначения);
			СтрокиТЧ = Объект.бг_ПунктыНазначения.НайтиСтроки(Отбор);
			
			Если СтрокиТЧ.Количество() > 0 Тогда
				Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
					СтрокаТЧ.бг_КПП = Выборка.КПП;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_ПартнерКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "Партнер");
	
КонецФункции

&НаСервереБезКонтекста
Функция бг_КППКонтрагента(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "КПП");
	
КонецФункции

&НаСервере
Процедура бг_УстановитьДоступностьБлокируемыхЭлементовФормы(ТолькоПросмотр = Истина)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	Иначе
		БлокируемыеРеквизиты = Справочники.ЛицензииПоставщиковАлкогольнойПродукции.ПолучитьБлокируемыеРеквизитыОбъекта();
		Если БлокируемыеРеквизиты.Количество() > 0 Тогда
			Для Каждого РеквизитБлокировки Из БлокируемыеРеквизиты Цикл
				Элементы[РеквизитБлокировки].ТолькоПросмотр = ТолькоПросмотр;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	бг_УстановитьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьДоступностьЭлементовФормы()
	
	Если Объект.бг_ТипЛицензии <> ПредопределенноеЗначение("Перечисление.бг_ТипыЛицензийПоставщиковАлкогольнойПродукции.Розничная") Тогда
		Элементы.бг_Хорека.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_СлабоалкогольнаяПродукцияПриИзмененииНаСервере()
	
	СлабоалкогольнаяПродукция = Объект.бг_СлабоалкогольнаяПродукция;
	Элементы.бг_ПунктыНазначения_СлабоалкогольнаяПродукция.Доступность = Не СлабоалкогольнаяПродукция;
	
	Для Каждого СтрокаТЧ Из Объект.бг_ПунктыНазначения Цикл
		СтрокаТЧ.СлабоалкогольнаяПродукция = СлабоалкогольнаяПродукция;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаменитьЭлементФормыДатаНачала()
	
	Элементы.ДатаВыдачи.Видимость = Ложь;
	
	бг_ДатаНачала = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
						ЭтотОбъект,
						"ДатаНачала",
						Элементы.ГруппаДаты,
						"Объект.ДатаНачала",
						,
						Элементы.ДатаОкончания);
						
	бг_ДатаНачала.Заголовок = НСтр("ru = 'Период действия с'");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура бг_ЗаполнитьСтруктуруОтбораПоГоловномуКонтрагенту(СтруктураОтбора, ИмяРеквизита)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнойКонтрагент", СтруктураОтбора[ИмяРеквизита]);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ПодчиненныеКонтрагенты = Новый Массив;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПодчиненныеКонтрагенты.Добавить(Выборка.Контрагент);
	КонецЦикла;
	
	СтруктураОтбора[ИмяРеквизита] = ПодчиненныеКонтрагенты;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_ПунктНазначенияВладельца(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	битПунктыНазначения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.битПунктыНазначения КАК битПунктыНазначения
	|ГДЕ
	|	битПунктыНазначения.Клиент = &Клиент";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество() <> 1 Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция бг_КонтрагентОбособленноеПодразделение(Контрагент)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ОбособленноеПодразделение");
	
КонецФункции

#КонецОбласти
