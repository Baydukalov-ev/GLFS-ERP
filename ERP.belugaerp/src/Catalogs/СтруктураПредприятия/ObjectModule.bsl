#Область ОбработчикиСобытий

&ИзменениеИКонтроль("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	Если ЭтоНовый() Тогда

#Удаление
		ТекущаяСсылка = Справочники.СтруктураПредприятия.ПолучитьСсылку();
#КонецУдаления
#Вставка
		ТекущаяСсылка = ПолучитьСсылкуНового();
		
		Если ТекущаяСсылка = Справочники.СтруктураПредприятия.ПустаяСсылка() Тогда
			ТекущаяСсылка = Справочники.СтруктураПредприятия.ПолучитьСсылку();
		КонецЕсли;
#КонецВставки
		УстановитьСсылкуНового(ТекущаяСсылка);

		//++ НЕ УТ
		ИзменилсяПризнакПроизводственное = ПроизводственноеПодразделение;
		//-- НЕ УТ

	Иначе

		//++ НЕ УТ
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ПроизводственноеПодразделение", "ПроизводственноеПодразделение");
		//++ НЕ УТКА
		Реквизиты.Вставить("СпособПооперационногоУправления", "СпособПооперационногоУправления");
		//-- НЕ УТКА

		РеквизитыДоЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);

		ИзменилсяПризнакПроизводственное = РеквизитыДоЗаписи.ПроизводственноеПодразделение
		<> ПроизводственноеПодразделение;

		//++ Устарело_Производство21
		//++ НЕ УТКА
		Если УправлениеМаршрутнымиЛистами = Перечисления.УправлениеМаршрутнымиЛистами.ПооперационноеПланирование Тогда

			СпособДоЗаписи = РеквизитыДоЗаписи.СпособПооперационногоУправления;
			Если ЗначениеЗаполнено(СпособДоЗаписи) И НЕ СпособДоЗаписи = СпособПооперационногоУправления Тогда
				ПриИзмененииСпособаПооперационногоУправления(СпособДоЗаписи, Отказ);
			КонецЕсли;

		КонецЕсли;
		//-- НЕ УТКА
		//-- Устарело_Производство21
		//-- НЕ УТ

		ТекущаяСсылка = Ссылка;

	КонецЕсли;

	ДополнительныеСвойства.Вставить("Ссылка", ТекущаяСсылка);
	//++ НЕ УТ
	ДополнительныеСвойства.Вставить("ИзменилсяПризнакПроизводственное", ИзменилсяПризнакПроизводственное);
	ДополнительныеСвойства.Вставить("РассчитатьДлительностьПроизводства",
	НеобходимоРассчитатьДлительностьПроизводства(Отказ));
	//-- НЕ УТ

	// Установка реквизита РеквизитДопУпорядочивания
	Если НЕ Отказ И РеквизитДопУпорядочивания = 0 Тогда

		УстановитьПривилегированныйРежим(Истина);

		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Таблица.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК Таблица
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитДопУпорядочивания УБЫВ");

		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();

		РеквизитДопУпорядочивания = ?(Не ЗначениеЗаполнено(Выборка.РеквизитДопУпорядочивания), 1, Выборка.РеквизитДопУпорядочивания + 1);

	КонецЕсли;

	//++ НЕ УТ
	ДобавитьПодразделениеВТЧПолитикиУчетаСерийВидовНоменклатуры(Отказ);
	ОбновитьФлагИспользованияСерий();
	//-- НЕ УТ

	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());	

КонецПроцедуры

#КонецОбласти
