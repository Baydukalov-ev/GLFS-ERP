
#Область ПрограммныйИнтерфейс

//Возвращает структуру с данными для заполнения запроса
// Тип возвращаемого значения - Структура
//
//Параметры:
// ТипДанных - Строка (тип метаданных объекта)
//
Функция ДанныеДляПостроенияЗапроса(ТипДанных) Экспорт
	
	ДанныеЗапроса = Новый Структура("ТекстЗапроса, Параметры");
	
	Настройка = ДействующаяНастройкаОбмена();
	Если Настройка = Неопределено Тогда
		Возврат ДанныеЗапроса;
	КонецЕсли;
	
	ДанныеКомпоновки = ДанныеКомпоновки(ТипДанных, Настройка);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(
			ДанныеКомпоновки.СхемаКомпоновкиДанных));
	
	Если ЗначениеЗаполнено(ДанныеКомпоновки.НастройкиОтбора) Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(ДанныеКомпоновки.НастройкиОтбора);
	КонецЕсли;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(
								ДанныеКомпоновки.СхемаКомпоновкиДанных, 
								КомпоновщикНастроек.Настройки);
	
	ДанныеЗапроса.ТекстЗапроса = МакетКомпоновкиДанных.НаборыДанных[0].Запрос;
	Если МакетКомпоновкиДанных.ЗначенияПараметров.Количество() > 0 Тогда
		ПараметрыЗапроса = Новый Структура;
		Для Каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
			ПараметрыЗапроса.Вставить(Параметр.Имя, Параметр.Значение);
		КонецЦикла;
		ДанныеЗапроса.Вставить("Параметры", ПараметрыЗапроса);
	КонецЕсли;
	
	Возврат ДанныеЗапроса;
	
КонецФункции

// Возвращает настройку обмена
// 
//  Тип возвращаемого значения - СправочникСсылка.бг_creatio_НастройкиОбмена
//
Функция ДействующаяНастройкаОбмена() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бг_creatio_НастройкиОбмена.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.бг_creatio_НастройкиОбмена КАК бг_creatio_НастройкиОбмена
	|ГДЕ
	|	НЕ бг_creatio_НастройкиОбмена.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеКомпоновки(ТипДанных, Настройка)
	
	ДанныеКомпоновки = Новый Структура("СхемаКомпоновкиДанных, НастройкиОтбора");
	
	ПеречислениеМенеджер = Перечисления.бг_creatio_ТипыОбъектовОбмена;
	
	Если ТипДанных = ПеречислениеМенеджер.Заказы Тогда
		ДанныеКомпоновки.СхемаКомпоновкиДанных = Справочники.бг_creatio_НастройкиОбмена.ПолучитьМакет("ШаблонЗаказы");
		ДанныеКомпоновки.НастройкиОтбора = Настройка.ОтборЗаказы.Получить();
	ИначеЕсли ТипДанных = ПеречислениеМенеджер.ВидыЦен Тогда 
		ДанныеКомпоновки.СхемаКомпоновкиДанных = Справочники.бг_creatio_НастройкиОбмена.ПолучитьМакет("ШаблонВидыЦен");
		ДанныеКомпоновки.НастройкиОтбора = Настройка.ОтборВидыЦен.Получить();
	ИначеЕсли ТипДанных = ПеречислениеМенеджер.Склады Тогда 
		ДанныеКомпоновки.СхемаКомпоновкиДанных = Справочники.бг_creatio_НастройкиОбмена.ПолучитьМакет("ШаблонСклады");
		ДанныеКомпоновки.НастройкиОтбора = Настройка.ОтборСклады.Получить();
	ИначеЕсли ТипДанных = ПеречислениеМенеджер.ТоварыНМК Тогда 
		ДанныеКомпоновки.СхемаКомпоновкиДанных = Справочники.бг_creatio_НастройкиОбмена.ПолучитьМакет("ШаблонТоварныеКатегорииНМК");
		ДанныеКомпоновки.НастройкиОтбора = Настройка.ОтборТоварныеКатегорииНМК.Получить();
	ИначеЕсли ТипДанных = ПеречислениеМенеджер.ТоварыСКЮ Тогда 
		ДанныеКомпоновки.СхемаКомпоновкиДанных = Справочники.бг_creatio_НастройкиОбмена.ПолучитьМакет("ШаблонТоварныеКатегорииСКЮ");
		ДанныеКомпоновки.НастройкиОтбора = Настройка.ОтборТоварныеКатегорииСКЮ.Получить();
	КонецЕсли;
	
	Возврат ДанныеКомпоновки;
	
КонецФункции

#КонецОбласти