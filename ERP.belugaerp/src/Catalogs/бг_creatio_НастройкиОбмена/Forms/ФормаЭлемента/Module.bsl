
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
	Если Не Параметры.Ключ.Пустая() Тогда
		
		НастройкиОтбораЗаказы = Объект.Ссылка.ОтборЗаказы.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораЗаказы) Тогда
			НастройкиЗаказы.ЗагрузитьНастройки(НастройкиОтбораЗаказы);
		КонецЕсли;
		
		НастройкиОтбораТоварныеКатегорииСКЮ = Объект.Ссылка.ОтборТоварныеКатегорииСКЮ.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораТоварныеКатегорииСКЮ) Тогда
			НастройкиТоварныеКатегорииСКЮ.ЗагрузитьНастройки(НастройкиОтбораТоварныеКатегорииСКЮ);
		КонецЕсли;
		
		НастройкиОтбораТоварныеКатегорииНМК = Объект.Ссылка.ОтборТоварныеКатегорииСКЮ.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораТоварныеКатегорииНМК) Тогда
			НастройкиТоварныеКатегорииНМК.ЗагрузитьНастройки(НастройкиОтбораТоварныеКатегорииНМК);
		КонецЕсли;
		
		НастройкиОтбораВидыЦен = Объект.Ссылка.ОтборВидыЦен.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораВидыЦен) Тогда
			НастройкиВидыЦен.ЗагрузитьНастройки(НастройкиОтбораВидыЦен);
		КонецЕсли;
		
		НастройкиОтбораСклады = Объект.Ссылка.ОтборСклады.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораСклады) Тогда
			НастройкиСклады.ЗагрузитьНастройки(НастройкиОтбораСклады);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	
	// Настройки контрагенты
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ШаблонЗаказы");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	НастройкиЗаказы.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	НастройкиЗаказы.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиЗаказы.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Содержимое = СправочникОбъект.ОтборЗаказы.Получить();
	
	Если Содержимое <> Неопределено Тогда
		НастройкиЗаказы.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
	// Настройки номенклатура СКЮ
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ШаблонТоварныеКатегорииСКЮ");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	НастройкиТоварныеКатегорииСКЮ.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	НастройкиТоварныеКатегорииСКЮ.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиТоварныеКатегорииСКЮ.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Содержимое = СправочникОбъект.ОтборТоварныеКатегорииСКЮ.Получить();
	
	Если Содержимое <> Неопределено Тогда
		НастройкиТоварныеКатегорииСКЮ.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
	// Настройки номенклатура НМК
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ШаблонТоварныеКатегорииНМК");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	НастройкиТоварныеКатегорииНМК.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	НастройкиТоварныеКатегорииНМК.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиТоварныеКатегорииНМК.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Содержимое = СправочникОбъект.ОтборТоварныеКатегорииСКЮ.Получить();
	
	Если Содержимое <> Неопределено Тогда
		НастройкиТоварныеКатегорииНМК.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
	// Настройки виды цен
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ШаблонВидыЦен");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	НастройкиВидыЦен.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	НастройкиВидыЦен.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиВидыЦен.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Содержимое = СправочникОбъект.ОтборВидыЦен.Получить();
	
	Если Содержимое <> Неопределено Тогда
		НастройкиВидыЦен.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
	// Настройки склады
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ШаблонСклады");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	НастройкиСклады.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	НастройкиСклады.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиСклады.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Содержимое = СправочникОбъект.ОтборСклады.Получить();
	
	Если Содержимое <> Неопределено Тогда
		НастройкиСклады.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОтборЗаказы = Новый ХранилищеЗначения(НастройкиЗаказы.ПолучитьНастройки());
	ТекущийОбъект.ОтборТоварныеКатегорииСКЮ = Новый ХранилищеЗначения(НастройкиТоварныеКатегорииСКЮ.ПолучитьНастройки());
	ТекущийОбъект.ОтборТоварныеКатегорииНМК = Новый ХранилищеЗначения(НастройкиТоварныеКатегорииНМК.ПолучитьНастройки());
	ТекущийОбъект.ОтборВидыЦен = Новый ХранилищеЗначения(НастройкиВидыЦен.ПолучитьНастройки());
	ТекущийОбъект.ОтборСклады = Новый ХранилищеЗначения(НастройкиСклады.ПолучитьНастройки());
	
КонецПроцедуры

#КонецОбласти