#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Настройки(Команда)
	ОткрытьФорму("Справочник.бг_НастройкиРеклассификацииРасходовНУ.ФормаСписка");
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	ТаблицаДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бг_НастройкиРеклассификацииРасходовНУ.Ссылка КАК Ссылка,
	|	МИНИМУМ(ПрочиеДоходыРасходы.Ссылка) КАК ДокументПрочиеДоходыРасходы
	|ПОМЕСТИТЬ ДокументыДляРеклассификации
	|ИЗ
	|	Справочник.бг_НастройкиРеклассификацииРасходовНУ КАК бг_НастройкиРеклассификацииРасходовНУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК ПрочиеДоходыРасходы
	|		ПО ((ВЫРАЗИТЬ(бг_НастройкиРеклассификацииРасходовНУ.КомментарийДокумента КАК СТРОКА(100))) = (ВЫРАЗИТЬ(ПрочиеДоходыРасходы.Комментарий КАК СТРОКА(100))))
	|			И (НЕ ПрочиеДоходыРасходы.ПометкаУдаления)
	|			И (НАЧАЛОПЕРИОДА(ПрочиеДоходыРасходы.Дата, МЕСЯЦ) = &Период)
	|ГДЕ
	|	НЕ бг_НастройкиРеклассификацииРасходовНУ.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	бг_НастройкиРеклассификацииРасходовНУ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыДляРеклассификации.Ссылка КАК Ссылка,
	|	ДокументыДляРеклассификации.Ссылка.НастройкиКомпоновщика КАК НастройкиКомпоновщика,
	|	ДокументыДляРеклассификации.ДокументПрочиеДоходыРасходы КАК ДокументПрочиеДоходыРасходы,
	|	ДокументыДляРеклассификации.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫРАЗИТЬ(ДокументыДляРеклассификации.Ссылка.КомментарийДокумента КАК СТРОКА(100)) КАК Комментарий,
	|	ДокументыДляРеклассификации.Ссылка.ПрочиеРасходы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|		КорСтатьяРасходов КАК КорСтатьяРасходов,
	|		АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|		НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|		Знак КАК Знак
	|	) КАК ПрочиеРасходы
	|ИЗ
	|	ДокументыДляРеклассификации КАК ДокументыДляРеклассификации";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СКД = Справочники.бг_НастройкиРеклассификацииРасходовНУ.ПолучитьМакет("Макет");
		СКД.Параметры.НачалоПериода.Значение = НачалоМесяца(Период);
		СКД.Параметры.КонецПериода.Значение = КонецМесяца(Период);
		СКД.Параметры.Организация.Значение = Организация;
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Выборка.НастройкиКомпоновщика.Получить(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		ТаблицаДанных = Новый ТаблицаЗначений;
		ПроцессорВывода.УстановитьОбъект(ТаблицаДанных);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		Если ЗначениеЗаполнено(ТаблицаДанных) Тогда
			Если ЗначениеЗаполнено(Выборка.ДокументПрочиеДоходыРасходы) Тогда
				Документ = Выборка.ДокументПрочиеДоходыРасходы.ПолучитьОбъект();
				Документ.ПрочиеРасходы.Очистить();
			Иначе
				Документ = Документы.ПрочиеДоходыРасходы.СоздатьДокумент();
				Документ.Заполнить(Неопределено);
				Документ.Организация = Организация;
				Документ.Дата = КонецМесяца(Период);
				Документ.Комментарий = Выборка.Комментарий;
			КонецЕсли;
			
			Документ.ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
			
			ВыборкаПрочиеРасходы = Выборка.ПрочиеРасходы.Выбрать();
			Пока ВыборкаПрочиеРасходы.Следующий() Цикл
				Для каждого СтрокаТаблицыДанных Из ТаблицаДанных Цикл
					НоваяСтрока = Документ.ПрочиеРасходы.Добавить();
					НоваяСтрока.Подразделение = СтрокаТаблицыДанных.Подразделение;
					НоваяСтрока.СтатьяРасходов = ВыборкаПрочиеРасходы.СтатьяРасходов;

					НоваяСтрока.АналитикаРасходов = СтрокаТаблицыДанных.Подразделение;
					Если Документ.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы") Тогда
						НоваяСтрока.СтатьяАктивовПассивов = ВыборкаПрочиеРасходы.СтатьяАктивовПассивов;
					Иначе
						Если ЗначениеЗаполнено(ВыборкаПрочиеРасходы.КорСтатьяРасходов) Тогда
							НоваяСтрока.КорСтатьяРасходов = ВыборкаПрочиеРасходы.КорСтатьяРасходов;
						Иначе
							НоваяСтрока.КорСтатьяРасходов = СтрокаТаблицыДанных.СтатьяРасходов;
							Если СтрокаТаблицыДанных.СтатьяРасходовТипЗначения.СодержитТип(Тип("СправочникСсылка.СтруктураПредприятия")) Тогда
								НоваяСтрока.КорАналитикаРасходов = СтрокаТаблицыДанных.Подразделение;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					НоваяСтрока.ВременнаяРазница = - СтрокаТаблицыДанных.СуммаНУОборотДт * ВыборкаПрочиеРасходы.Знак;

				КонецЦикла;
			КонецЦикла;
			
			// Заполним настройки счетов учета
			#Область НастройкиСчетовУчета
			
			Если Документ.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы") Тогда
				СписокСтатей = Новый Массив;
				Для каждого СтрокаДокумента Из Документ.ПрочиеРасходы Цикл
					Если ЗначениеЗаполнено(СтрокаДокумента.СтатьяАктивовПассивов)
						И СписокСтатей.Найти(СтрокаДокумента.СтатьяАктивовПассивов) = Неопределено Тогда
						СписокСтатей.Добавить(СтрокаДокумента.СтатьяАктивовПассивов);
					КонецЕсли;
				КонецЦикла;
				
				НастройкиПоУмолчанию = НастройкаСчетовУчетаСлужебныйВызовСервера.ДанныеНастроекСчетовУчетаПоУмолчанию(СписокСтатей);
				НастройкиСчетовУчета = Новый Соответствие;
				Для каждого СтрокаНастройки Из НастройкиПоУмолчанию Цикл
					СтрокиДокумента = Документ.ПрочиеРасходы.НайтиСтроки(Новый Структура("СтатьяАктивовПассивов", СтрокаНастройки.Ключ));
					
					Для каждого СтрокаДокумента Из СтрокиДокумента Цикл
						СтрокаДокумента.НастройкаСчетовУчета = НастройкаСчетовУчетаСлужебныйВызовСервера.СсылкаНовогоЭлементаНастройкиСчетовУчета();
						
						НастройкиСчетовУчета.Вставить(СтрокаДокумента.НастройкаСчетовУчета, СтрокаНастройки.Значение.ДанныеНастройки);
					КонецЦикла;
					
				КонецЦикла;
				
				Если ЗначениеЗаполнено(НастройкиСчетовУчета) Тогда
					Документ.ДополнительныеСвойства.Вставить("НастройкиСчетовУчета", НастройкиСчетовУчета);
				КонецЕсли;
			КонецЕсли;
			
			#КонецОбласти
			
			Попытка
				Документ.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ОбщегоНазначения.СообщитьПользователю(ИнформацияОбОшибке());
				Если Не Документ.Проведен Тогда
					Документ.Записать(РежимЗаписиДокумента.Запись);
					ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Документ в режиме проведения записать не удалось:'") + Документ.Ссылка);
				КонецЕсли;
			КонецПопытки;
			
			СтрокаДокументы = ТаблицаДокументов.Добавить();
			СтрокаДокументы.Документ = Документ.Ссылка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОбработчикЗакрытия = Новый ОписаниеОповещения("ПредставлениеПериодаНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы 	   = Новый Структура("Значение, РежимВыбораПериода", Период, "МЕСЯЦ");
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериода",
		ПараметрыФормы, 
		ЭтотОбъект, 
		УникальныйИдентификатор,
		,
		, 
		ОбработчикЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТКлиент.РегулированиеПредставленияПериодаРегистрации(
		Направление,
		СтандартнаяОбработка,
		Период,
		ПредставлениеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено Тогда
		
		Период = ВыбранныйПериод;
		ПредставлениеПериода =
			ОбщегоНазначенияУТКлиентСервер.ПолучитьПредставлениеПериодаРегистрации(Период);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Документ);
КонецПроцедуры

#КонецОбласти