#Область ОбработчикиСобытий

&Перед("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	бг_КодНСИ = ""; 
	бг_Добавлен = ТекущаяДатаСеанса();  
	бг_Выбыл = Дата(1, 1, 1);
	
КонецПроцедуры

&Перед("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	бг_ОбщегоНазначенияСервер.ПередЗаписьюСправочникаНСИ(Отказ, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(бг_КодНСИ) Тогда
		Максимальныйбг_КодНСИ = бг_ОбщегоНазначенияСервер.МаксимальноеЗначениеСтроковогоРеквизитаСправочника(Ссылка, "ТоварныеКатегории", "бг_КодНСИ");
		бг_КодНСИ = бг_ОбщегоНазначенияСервер.ИнкрементированнаяСтрока(
			Максимальныйбг_КодНСИ,
			Метаданные.Справочники.ТоварныеКатегории.Реквизиты.бг_КодНСИ.Тип.КвалификаторыСтроки.Длина);
	КонецЕсли;
	
	бг_ОбновитьДолиСписрта();
	
    бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПередЗаписью();

КонецПроцедуры

&Перед("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_Класс, "Безалкогольный") <> Истина Тогда
		ПроверяемыеРеквизиты.Добавить("бг_ДоляСпирта");
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_Класс, "НеПроверятьОбъем") <> Истина Тогда
		
		ПроверяемыеРеквизиты.Добавить("бг_Объем");
		
	Иначе  
		
		Индекс = ПроверяемыеРеквизиты.Найти("бг_Вкус");
		
		Если Индекс <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(Индекс);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	бг_ОбновитьКлассОцифровкиSKU_MT();		
	
	бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПриЗаписи();

КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
	
	Если ЭтоНовый() Тогда
		бг_Добавлен = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ОбновитьДолиСписрта()
	
	Если ДополнительныеСвойства.Свойство("НеОбновлятьДолиСпирта")
		И ДополнительныеСвойства.НеОбновлятьДолиСпирта Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Номенклатура.Крепость / 100) КАК КрепостьМинимум,
	|	МАКСИМУМ(Номенклатура.Крепость / 100) КАК КрепостьМаксимум
	|ПОМЕСТИТЬ ИтоговыеДанные
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеДанные.КрепостьМинимум КАК КрепостьМинимум,
	|	ИтоговыеДанные.КрепостьМаксимум КАК КрепостьМаксимум
	|ИЗ
	|	ИтоговыеДанные КАК ИтоговыеДанные
	|ГДЕ
	|	НЕ ИтоговыеДанные.КрепостьМинимум ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		КрепостьМинимум = Выборка.КрепостьМинимум;
		КрепостьМаксимум = Выборка.КрепостьМаксимум;
	Иначе
		Возврат;
	КонецЕсли;
	
	бг_ДоляСпирта = КрепостьМинимум;
	бг_ДоляСпиртаДо = КрепостьМаксимум;
	
КонецПроцедуры

Процедура бг_ОбновитьКлассОцифровкиSKU_MT() 
	
	Если ЗначениеЗаполнено(бг_СкюМТ)
		И ЗначениеЗаполнено(бг_Класс)
		И Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_СкюМТ, "КлассОцифровки"))
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_СкюМТ, "КлассОцифровки") <>
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_Класс, "КлассОцифровки") Тогда    
			
		SKU_MT_Объект = бг_СкюМТ.ПолучитьОбъект();
		SKU_MT_Объект.КлассОцифровки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_Класс, "КлассОцифровки");
		SKU_MT_Объект.Записать();   
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПередЗаписью()

	Если ЭтоНовый() Тогда
		СтарыйКодНоменклатурыSAP = "";			
	Иначе	
	    СтарыйКодНоменклатурыSAP = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "бг_СкюМТ.КодНоменклатурыSAP");
		Если Не ЗначениеЗаполнено(СтарыйКодНоменклатурыSAP) Тогда
			СтарыйКодНоменклатурыSAP = "";
		КонецЕсли;
	КонецЕсли;	
	ДополнительныеСвойства.Вставить("СтарыйКодНоменклатурыSAP", СтарыйКодНоменклатурыSAP);

КонецПроцедуры

Процедура бг_СинхронизироватьНоменклатуруКонтрагентовПоКодуSAPПриЗаписи()
	
	Если ЗначениеЗаполнено(бг_СкюМТ) Тогда
		НовыйКодНоменклатурыSAP = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(бг_СкюМТ, "КодНоменклатурыSAP");	
		Если Не ЗначениеЗаполнено(НовыйКодНоменклатурыSAP) Тогда
			НовыйКодНоменклатурыSAP = "";
		КонецЕсли;
	Иначе	
	    НовыйКодНоменклатурыSAP = "";
	КонецЕсли;
	
	Если ДополнительныеСвойства.СтарыйКодНоменклатурыSAP <> НовыйКодНоменклатурыSAP Тогда
		бг_НоменклатураКонтрагентов.СинхронизироватьНоменклатуруКонтрагентовПоКодуSAP(Ссылка);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти