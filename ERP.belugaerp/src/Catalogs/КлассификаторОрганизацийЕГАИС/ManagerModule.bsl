
#Область ПрограммныйИнтерфейс

// Возвращает ссылку на элемент классификатора организаций ЕГАИС по переданным параметрам.
//
// Параметры:
//  Контрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на собственную организацию или контрагента,
//  СоответствуетОрганизации - Булево - если Истина, то будут отобраны только элементы, являющиеся собственными юр. лицами,
//  ТолькоСопоставленные - Булево - если Истина, то будут выбраны только корректно сопоставленные элементы.
//
// Возвращаемое значение:
//  СправочникСсылка.КлассификаторОрганизацийЕГАИС - найденная организация,
//  Неопределено - организация с переданными параметрами не найдена.
//
Функция бг_ОрганизацияЕГАИСПоОрганизацииИлиКонтрагенту(Контрагент, СоответствуетОрганизации = Истина, ТолькоСопоставленные = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент"              , Контрагент);
	Запрос.УстановитьПараметр("СоответствуетОрганизации", СоответствуетОрганизации);
	Запрос.УстановитьПараметр("ТолькоСопоставленные"    , ТолькоСопоставленные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации = &СоответствуетОрганизации
	|	И ВЫБОР
	|			КОГДА &ТолькоСопоставленные
	|				ТОГДА КлассификаторОрганизацийЕГАИС.Сопоставлено
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить()[0].Ссылка;
	
КонецФункции

// Возвращает организации ЕГАИС по переданным параметрам.
//
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на собственную организацию.
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект.
//
// Возвращаемое значение:
//  Массив СправочникСсылка.КлассификаторОрганизацийЕГАИС
//
Функция бг_ОрганизацииЕГАИСПоОрганизации(Организация, ТорговыйОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент"              , Организация);
	Запрос.УстановитьПараметр("ТорговыйОбъект"          , ТорговыйОбъект);
	Запрос.УстановитьПараметр("СоответствуетОрганизации", Истина);
	Запрос.УстановитьПараметр("ТолькоСопоставленные"    , Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &ТорговыйОбъект
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации = &СоответствуетОрганизации
	|	И ВЫБОР
	|			КОГДА &ТолькоСопоставленные
	|				ТОГДА КлассификаторОрганизацийЕГАИС.Сопоставлено
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Интерфейс для отложенной обработки
//
// Параметры:
//   ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//   Отказ - Булево - отказ от обработки
//
Процедура бг_ОтложеннаяОбработкаОбъекта(ОрганизацияЕГАИС, ВариантОбработки, Отказ,
	ДополнительныеСведения = Неопределено) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантОбработки = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.ОбработатьНовуюОрганизациюЕГАИС Тогда
		бг_ЗаполнитьОрганизациюЕГАИСВПунктахНазначения(ОрганизацияЕГАИС);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ЗаполнитьОрганизациюЕГАИСВПунктахНазначения(ОрганизацияЕГАИС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлассификаторОрганизацийЕГАИС.ИНН КАК ИНН,
		|	КлассификаторОрганизацийЕГАИС.КПП КАК КПП,
		|	КлассификаторОрганизацийЕГАИС.Код КАК КодОрганизацииЕГАИС,
		|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
		|ПОМЕСТИТЬ втДанныеОрганизацииЕГАИС
		|ИЗ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ГДЕ
		|	КлассификаторОрганизацийЕГАИС.Ссылка = &ОрганизацияЕГАИС
		|	И НЕ КлассификаторОрганизацийЕГАИС.ИНН = """"
		|	И НЕ КлассификаторОрганизацийЕГАИС.КПП = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	битПунктыНазначения.Ссылка КАК ПунктНазначения,
		|	втДанныеОрганизацииЕГАИС.КодОрганизацииЕГАИС КАК КодОрганизацииЕГАИС,
		|	втДанныеОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
		|ПОМЕСТИТЬ втДанныеПунктовНазначения
		|ИЗ
		|	втДанныеОрганизацииЕГАИС КАК втДанныеОрганизацииЕГАИС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.битПунктыНазначения КАК битПунктыНазначения
		|		ПО втДанныеОрганизацииЕГАИС.ИНН = битПунктыНазначения.Клиент.ИНН
		|			И втДанныеОрганизацииЕГАИС.КПП = битПунктыНазначения.Клиент.КПП
		|ГДЕ
		|	битПунктыНазначения.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанныеПунктовНазначения.ПунктНазначения КАК ПунктНазначения,
		|	втДанныеПунктовНазначения.КодОрганизацииЕГАИС КАК КодЕГАИС,
		|	втДанныеПунктовНазначения.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
		|ИЗ
		|	втДанныеПунктовНазначения КАК втДанныеПунктовНазначения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ЛицензииПунктовНазначения.СрезПоследних(
		|				,
		|				ПунктНазначения В
		|					(ВЫБРАТЬ
		|						втДанныеПунктовНазначения.ПунктНазначения
		|					ИЗ
		|						втДанныеПунктовНазначения КАК втДанныеПунктовНазначения)) КАК бг_ЛицензииПунктовНазначенияСрезПоследних
		|		ПО втДанныеПунктовНазначения.ПунктНазначения = бг_ЛицензииПунктовНазначенияСрезПоследних.ПунктНазначения";
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПунктНазначенияОбъект = ВыборкаДетальныеЗаписи.ПунктНазначения.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ПунктНазначенияОбъект, ВыборкаДетальныеЗаписи);
		ПунктНазначенияОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

