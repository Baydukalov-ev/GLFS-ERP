
#Область ПрограммныйИнтерфейс

// Возвращает список ЕК-штрихкодов упаковки.
//
// Параметры:
//  Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения.
// 
// Возвращаемое значение:
//  Массив - штрихкоды упаковки.
//
Функция ШтрихкодыУпаковки(Упаковка) Экспорт
	
	ДанныеУпаковки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Упаковка,
		"ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения, Владелец");
		
	ТипЕдиницыИзмерения = ДанныеУпаковки.ЕдиницаИзмерениябг_ТипЕдиницыИзмерения;
	Номенклатура = ДанныеУпаковки.Владелец;
	
	ТекстЗапроса = ТекстЗапросаШтрихкодыУпаковки(ТипЕдиницыИзмерения);
	
	Если ТекстЗапроса = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТипЕдиницыИзмерения", ТипЕдиницыИзмерения);
	
	Если ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Бутылка Тогда
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	ИначеЕсли ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Коробка Тогда
		Запрос.УстановитьПараметр("Упаковка", Упаковка);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Штрихкод");
	
КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// штучного товара.
//
// Возвращаемое значение:
//  Строка - Штрихкод штучного товара.
//
Функция СформироватьШтрихкодEAN13() Экспорт

	ПрефиксУзлаШтрихкода = РегистрыСведений.ШтрихкодыНоменклатуры.ПрефиксУзлаШтрихкода();
	
	Код = Неопределено;
	Диапазон = Неопределено;
	Диапазоны = МаксимальныеЗначенияКодовШтучныхШтрихкодов();
	Если Диапазоны = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(
			РегистрыСведений.ШтрихкодыНоменклатуры.ТекстСообщенияНеНастроеныДоступныеДиапазоныШтучныхШтрихкодов());
		Возврат Неопределено;
	КонецЕсли;
	Для Каждого СтрокаТЧ Из Диапазоны Цикл
		Код = СтрокаТЧ.Код + 1;
		Диапазон = СтрокаТЧ.Диапазон;
		Прервать;
	КонецЦикла;
	
	Если Код = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(
			РегистрыСведений.ШтрихкодыНоменклатуры.ТекстСообщенияНетСвободныхКодовШтучныхШтрихкодов());
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодПоКоду(Код, Диапазон, ПрефиксУзлаШтрихкода);

КонецФункции

// Функция возвращает массив максимальное значений кодов штучных штрихкодов
// по диапазонам.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Максимальные значения кодов по диапазонам.
//
Функция МаксимальныеЗначенияКодовШтучныхШтрихкодов() Экспорт
	
	ДиапазоныШтучныхШтрихкодов = ЗначениеНастроекПовтИсп.ДиапазоныШтучныхШтрихкодов();
	
	Если ДиапазоныШтучныхШтрихкодов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеТипаЧисла = ОбщегоНазначения.ОписаниеТипаЧисло(15, 0);
	
	МаксимальныеЗначения = Новый ТаблицаЗначений();
	МаксимальныеЗначения.Колонки.Добавить("Код",		ОписаниеТипаЧисла);
	МаксимальныеЗначения.Колонки.Добавить("Диапазон",	ОбщегоНазначения.ОписаниеТипаСтрока(2));
	
	ПрефиксУзла			= Строка(Константы.ПрефиксШтрихкодовУзлаРИБ.Получить());
	ТекстыЗапросов		= Новый Массив;
	СтрокиНачалаКода	= Новый Массив;
	
	Для Каждого СтрокаТЧ Из ДиапазоныШтучныхШтрихкодов Цикл
		
		ТекстЗапросаСтроки =
		"ВЫБРАТЬ
		|	""#СтрокаТЧДиапазон""							КАК Диапазон,
		|	ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 4, 9)	КАК КодСтрока,
		|	ШтрихкодыНоменклатуры.Штрихкод					КАК Штрихкод
		|ИЗ
		|	Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО ""#СтрокаТЧНачалоКода__________""";
		
		СтрокаТЧНачалоКода = СтрокаТЧ.Диапазон + ПрефиксУзла;
		
		ТекстЗапросаСтроки = СтрЗаменить(ТекстЗапросаСтроки, "#СтрокаТЧДиапазон", СтрокаТЧ.Диапазон);
		ТекстЗапросаСтроки = СтрЗаменить(ТекстЗапросаСтроки, "#СтрокаТЧНачалоКода", СтрокаТЧНачалоКода);
		
		ТекстыЗапросов.Добавить(ТекстЗапросаСтроки);
		
		СтрокаМаксимальногоЗначения = МаксимальныеЗначения.Добавить();
		СтрокаМаксимальногоЗначения.Диапазон	= СтрокаТЧ.Диапазон;
		СтрокаМаксимальногоЗначения.Код			= 0;
		
		СтрокиНачалаКода.Добавить(СтрокаТЧНачалоКода);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	Запрос.Текст = Запрос.Текст + "
	|УПОРЯДОЧИТЬ ПО
	|	КодСтрока УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ПроверенныеДиапазоны = Новый Массив;
	КоличествоДиапазонов = МаксимальныеЗначения.Количество();
	
	МаксимальныйКодШтучногоТовара = РегистрыСведений.ШтрихкодыНоменклатуры.МаксимальныйКодШтучногоТовара();
	
	Для Каждого СтрокаТЧ Из РезультатЗапроса Цикл
		
		Если ПроверенныеДиапазоны.Количество() = КоличествоДиапазонов Тогда
			Прервать;
		ИначеЕсли СтрокиНачалаКода.Найти(Лев(СтрокаТЧ.Штрихкод, 3)) = Неопределено
			Или ПроверенныеДиапазоны.Найти(СтрокаТЧ.Диапазон) <> Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Код = ОписаниеТипаЧисла.ПривестиЗначение(СтрокаТЧ.КодСтрока);
		СтрокаМаксимальногоЗначения = МаксимальныеЗначения.Найти(СтрокаТЧ.Диапазон, "Диапазон");
		
		Если Код = 0 Тогда
			Продолжить;
		ИначеЕсли Код >= МаксимальныйКодШтучногоТовара Тогда
			ПроверенныеДиапазоны.Добавить(СтрокаТЧ.Диапазон);
			МаксимальныеЗначения.Удалить(СтрокаМаксимальногоЗначения);
			
			Продолжить;
		КонецЕсли;
		
		СтрокаМаксимальногоЗначения.Код = Код;
		
		ПроверенныеДиапазоны.Добавить(СтрокаТЧ.Диапазон);
		
	КонецЦикла;
	
	Возврат МаксимальныеЗначения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаШтрихкодыУпаковки(ТипЕдиницыИзмерения)
	
	ТекстЗапроса = Неопределено;
	
	Если ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Бутылка Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	бг_Штрихкоды_ЕК_Номенклатуры.Штрихкод КАК Штрихкод
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК бг_Штрихкоды_ЕК_Номенклатуры
		|		ПО УпаковкиЕдиницыИзмерения.Ссылка = бг_Штрихкоды_ЕК_Номенклатуры.Владелец
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.Владелец = &Номенклатура
		|	И бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = &ТипЕдиницыИзмерения
		|	И НЕ бг_Штрихкоды_ЕК_Номенклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Штрихкод";
		
	ИначеЕсли ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Коробка Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	бг_Штрихкоды_ЕК_Номенклатуры.Штрихкод КАК Штрихкод,
		|	бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения КАК ТипЕдиницыИзмерения
		|ПОМЕСТИТЬ втШтрихкодыУпаковки
		|ИЗ
		|	Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК бг_Штрихкоды_ЕК_Номенклатуры
		|ГДЕ
		|	бг_Штрихкоды_ЕК_Номенклатуры.Владелец = &Упаковка
		|	И НЕ бг_Штрихкоды_ЕК_Номенклатуры.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втШтрихкодыУпаковки.Штрихкод КАК Штрихкод
		|ИЗ
		|	втШтрихкодыУпаковки КАК втШтрихкодыУпаковки
		|ГДЕ
		|	втШтрихкодыУпаковки.ТипЕдиницыИзмерения = &ТипЕдиницыИзмерения
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	втШтрихкодыУпаковки.Штрихкод
		|ИЗ
		|	втШтрихкодыУпаковки КАК втШтрихкодыУпаковки";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
