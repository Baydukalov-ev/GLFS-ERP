
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_НастроитьЭлементыФормы();
	
	Элементы["бг_Дополнительно"].Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект["бг_Комментарий"]);
	
	Если  ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
		И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("СправочникСсылка.СкидкиНаценки") Тогда
		Объект.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования, "Наименование");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&Перед("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.бг_ТребуетсяПодтверждениеМТ И Не ЗначениеЗаполнено(Объект.бг_КодСтрокиБюджета) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
    		НСтр("ru = 'Для скидок, требующих подтверждение от мобильной торговли, необходимо указать код строки бюджета'"),
    		,
    		"бг_КодСтрокиБюджета",
    		,
    		Отказ);
		
	КонецЕсли;
		
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_ВытеснитьСкидки(Команда)
	
	СкидкиНаценкиКлиент.бг_ОткрытьФормуВытеснения(
		ЭтаФорма,
		Команда.Имя,
		Объект.Ссылка
	);
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ВытеснитьПериодыДействия(Команда)
	
	СкидкиНаценкиКлиент.бг_ОткрытьФормуВытеснения(
		ЭтаФорма,
		Команда.Имя,
		Объект.Ссылка
	);
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьОтборыНаОснованииЦеновыхГрупп(Команда)
	Если Объект.бг_ЦеновыеГруппы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПолеЦеновойГруппы = "ЦеноваяГруппа";
	ИсточникЦеновойГруппы = Объект.бг_ИсточникЦеновойГруппы;
	СписокЗначений = Новый СписокЗначений;
	Для каждого СтрокаЦеноваяГруппа Из Объект.бг_ЦеновыеГруппы Цикл
		
		Если ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.Смешанный") Тогда
			Если ЗначениеЗаполнено(СтрокаЦеноваяГруппа.СкюМТ) Тогда
				ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.SKU_MT");
				ПолеЦеновойГруппы = "СкюМТ";
			ИначеЕсли ЗначениеЗаполнено(СтрокаЦеноваяГруппа.Бренд_МТ) Тогда
				ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.BrandMT");
				ПолеЦеновойГруппы = "Бренд_МТ";
			ИначеЕсли ЗначениеЗаполнено(СтрокаЦеноваяГруппа.ЦеноваяГруппа) Тогда
				ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.BrandTM");
			КонецЕсли;
		ИначеЕсли ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.ПустаяСсылка") Тогда
			ТипЦеновойГруппы = ТипЗнч(СтрокаЦеноваяГруппа.ЦеноваяГруппа);
			
			Если ТипЦеновойГруппы = Тип("СправочникСсылка.Номенклатура") Тогда
				ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.Номенклатура");
			ИначеЕсли ТипЦеновойГруппы = Тип("СправочникСсылка.бг_ЕК_СКЮ_СкюМТ") Тогда
				ИсточникЦеновойГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.SKU_MT");
			КонецЕсли;
		КонецЕсли;
		СписокЗначений.Добавить(СтрокаЦеноваяГруппа[ПолеЦеновойГруппы]);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СписокЗначений)
		И ЗначениеЗаполнено(ИсточникЦеновойГруппы) Тогда
		бг_ЗаполнитьОтборыНаОснованииЦеновыхГруппНаСервере(ИсточникЦеновойГруппы, СписокЗначений);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
&Вместо("УточнениеПоЦеновымГруппамПредставлениеОбработкаНавигационнойСсылки")
Процедура бг_УточнениеПоЦеновымГруппамПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВоВременномХранилище", АдресУточненияЗначенияСкидкиНаценкиВоВременномХранилище());
	ПараметрыФормы.Вставить("ТолькоПросмотр", Элементы.СпособПредоставления.ТолькоПросмотр);
	ПараметрыФормы.Вставить("ИсточникГруппы", Объект.бг_ИсточникЦеновойГруппы);
	
	ДополнительныеПараметры = Новый Структура;
	
	ОткрытьФорму(
		"Справочник.СкидкиНаценки.Форма.бг_УточнениеСкидкиНаценки",
		ПараметрыФормы,
		ЭтаФорма,
		УникальныйИдентификатор,,,
		Новый ОписаниеОповещения("РедактированиеУточненияЗначенияСкидкиНаценкиЗавершение", ЭтотОбъект, ДополнительныеПараметры)
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиенте
&Вместо("РедактированиеУточненияЗначенияСкидкиНаценкиЗавершение")
Процедура бг_РедактированиеУточненияЗначенияСкидкиНаценкиЗавершение(Результат, ДополнительныеПараметры)
	Если Результат <> Неопределено Тогда
		Объект.бг_ИсточникЦеновойГруппы = Результат.ИсточникГруппы;
		ПродолжитьВызов(Результат.АдресВоВременномХранилище, ДополнительныеПараметры);
	Иначе
		ПродолжитьВызов(Результат, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбновитьКартинкуКомментария(Элемент)
	
	Элементы["бг_Дополнительно"].Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект["бг_Комментарий"]);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_НастройкиЭлементовФормы()
	НастройкиЭлементов  = Новый Структура;
	
	НастройкаПроцента   = Новый Структура;
	НастройкаПроцента  .Вставить("ОграничениеТипа",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 4, ДопустимыйЗнак.Любой));
	НастройкаПроцента  .Вставить("Формат",               "ЧЦ=15; ЧДЦ=4");
	НастройкаПроцента  .Вставить("ФорматРедактирования", "ЧЦ=15; ЧДЦ=4");
	
	НастройкаКоличества = Новый Структура;
	НастройкаКоличества.Вставить("ОграничениеТипа",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 3, ДопустимыйЗнак.Любой));
	НастройкаКоличества.Вставить("Формат",               "ЧЦ=15; ЧДЦ=3");
	НастройкаКоличества.Вставить("ФорматРедактирования", "ЧЦ=15; ЧДЦ=3");
	
	НастройкаСуммы     = Новый Структура;
	НастройкаСуммы     .Вставить("ОграничениеТипа",      Метаданные.ОпределяемыеТипы.ДенежнаяСуммаЛюбогоЗнака.Тип);
	НастройкаСуммы     .Вставить("Формат",               "ЧЦ=15; ЧДЦ=2");
	НастройкаСуммы     .Вставить("ФорматРедактирования", "ЧЦ=15; ЧДЦ=2");
	
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиПодарок",                     НастройкаКоличества);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиСумма",                       НастройкаСуммы);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиСуммаДляКаждойСтроки",        НастройкаСуммы);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиКоличество",                  НастройкаКоличества);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценки",                            НастройкаПроцента);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиМинимальнаяОкругляемаяСумма", НастройкаСуммы);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиБонусы",                      НастройкаПроцента);
	НастройкиЭлементов.Вставить("ЗначениеСкидкиНаценкиБонусыСумма",                 НастройкаСуммы);
	
	Возврат НастройкиЭлементов;
КонецФункции

&НаСервере
Процедура бг_НастроитьЭлементыФормы()
	НастройкиЭлементовФормы = бг_НастройкиЭлементовФормы();
	Для каждого НастройкаЭлемента из НастройкиЭлементовФормы Цикл
		Для каждого СвойствоНастройки из НастройкаЭлемента.Значение Цикл
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,                   // ЭлементыФормы
				НастройкаЭлемента.Ключ,     // ИмяЭлемента
				СвойствоНастройки.Ключ,     // ИмяСвойства
				СвойствоНастройки.Значение  // Значение
			);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
&После("ИзменитьВидимостьЭлементов")
Процедура бг_ИзменитьВидимостьЭлементов()
	
	ЭлементФормы = Элементы.Найти("бг_Накопительная");
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.Видимость = СкидкиНаценкиПовтИсп.бг_НакоплениеСкидкиДоступно(Объект.СпособПримененияСкидки, Объект.СпособПредоставления);
	КонецЕсли;
	
	ЭлементФормы = Элементы.Найти("бг_ОграничениеСкидки");
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.Видимость = СкидкиНаценкиПовтИсп.бг_ОграничениеСкидкиДоступно(Объект.СпособПримененияСкидки, Объект.СпособПредоставления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&Вместо("АдресУточненияЗначенияСкидкиНаценкиВоВременномХранилище")
Функция бг_АдресУточненияЗначенияСкидкиНаценкиВоВременномХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.бг_ЦеновыеГруппы.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("ЗагрузитьУточненияЗначенияСкидкиНаценкиИзВременногоХранилища")
Процедура бг_ЗагрузитьУточненияЗначенияСкидкиНаценкиИзВременногоХранилища(Адрес)

	ТаблицаЗначений = ПолучитьИзВременногоХранилища(Адрес);

#Удаление
	Объект.ЦеновыеГруппы.Загрузить(ТаблицаЗначений);
#КонецУдаления
#Вставка
	Объект.бг_ЦеновыеГруппы.Загрузить(ТаблицаЗначений);
#КонецВставки

	Модифицированность = Истина;

	ОбновитьПредставлениеУточненияЗначенияСкидкиНаценки();

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьПредставлениеУточненияЗначенияСкидкиНаценки")
Процедура бг_ОбновитьПредставлениеУточненияЗначенияСкидкиНаценки()

#Удаление
	Если Объект.ЦеновыеГруппы.Количество() = 0 Тогда
#КонецУдаления
#Вставка
	Если Объект.бг_ЦеновыеГруппы.Количество() = 0 Тогда
#КонецВставки
		УточнениеПоЦеновымГруппамПредставление = Новый ФорматированнаяСтрока(НСтр("ru = 'Уточнить';
		|en = 'Specify'"),,,,"Изменить");
	Иначе
		УточнениеПоЦеновымГруппамПредставление = Новый ФорматированнаяСтрока(НСтр("ru = 'Есть уточнения';
		|en = 'There are clarifications'"),,,,"Изменить");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьЭлементыФормы()
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_Организация",
		Элементы.Заголовок,
		"Объект.бг_Организация");

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_КаналыПродаж",
		Элементы.Заголовок,
		"Объект.бг_КаналыПродаж");

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ШаблонСкидкиЧКН",
		Элементы.ГруппаПредоставлениеСкидки,
		"Объект.бг_ШаблонСкидкиЧКН");
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_Накопительная",
		Элементы.ГруппаСпособПредоставления,
		"Объект.бг_Накопительная",
		,
		,
		"ПолеФлажка"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_Акционная",
		Элементы.ГруппаСпособПредоставления,
		"Объект.бг_Акционная",
		,
		,
		"ПолеФлажка"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_БлокируетСуммовыеСкидки",
		Элементы.ГруппаСпособПредоставления,
		"Объект.бг_БлокируетСуммовыеСкидки",
		,
		,
		"ПолеФлажка"
	);
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_БезусловноеПрименениеПослеПервогоСрабатывания",
		Элементы.Основное,
		"Объект.бг_БезусловноеПрименениеПослеПервогоСрабатывания",
		,
		,
		"ПолеФлажка"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_НеУчитыватьПороги",
		Элементы.Основное,
		"Объект.бг_НеУчитыватьПороги",
		,
		,
		"ПолеФлажка"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграничениеСкидки",
		Элементы.ГруппаОписание,
		"Объект.бг_ОграничениеСкидки",
		,
		Элементы.СтраницыОписаниеСкидкиНаценки
	);
	Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ТребуетсяПодтверждениеМТ",
		Элементы.ГруппаСпособПредоставления,
		"Объект.бг_ТребуетсяПодтверждениеМТ",
		,
		,
		"ПолеФлажка"
	);	

	// Исключения
	СтраницаИсключения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьСтраницуНаФорму(
			ЭтаФорма, "бг_СтраницаИсключения", НСтр("ru='Исключения'; en = 'Exceptions'"), "СтраницыФормы");
	СтраницаИсключения.ПутьКДаннымЗаголовка = "Объект.бг_Исключения.КоличествоСтрок";

	ТаблицаИсключения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьТаблицуНаФорму(
		ЭтаФорма,
		"бг_Исключения",
		СтраницаИсключения,
		"Объект.бг_Исключения"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ИсключенияОбъект",
		ТаблицаИсключения,
		"Объект.бг_Исключения.Объект"
	);

	// Ограничения
	СтраницаОграничения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьСтраницуНаФорму(
			ЭтаФорма, "бг_СтраницаОграничения", НСтр("ru='Ограничения'; en = 'Restrictions'"), "СтраницыФормы");
	СтраницаОграничения.ПутьКДаннымЗаголовка = "Объект.бг_Ограничения.КоличествоСтрок";

	ТаблицаОграничения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьТаблицуНаФорму(
		ЭтаФорма,
		"бг_Ограничения",
		СтраницаОграничения,
		"Объект.бг_Ограничения"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграниченияОбъект",
		ТаблицаОграничения,
		"Объект.бг_Ограничения.Объект"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграниченияПоСуммеСкидки",
		ТаблицаОграничения,
		"Объект.бг_Ограничения.ПоСуммеСкидки"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграниченияПоОбъему",
		ТаблицаОграничения,
		"Объект.бг_Ограничения.ПоОбъему"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграниченияПоСуммеСкидкиНаПунктНазначения",
		ТаблицаОграничения,
		"Объект.бг_Ограничения.ПоСуммеСкидкиНаПунктНазначения"
	);

	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ОграниченияПоОбъемуНаПунктНазначения",
		ТаблицаОграничения,
		"Объект.бг_Ограничения.ПоОбъемуНаПунктНазначения"
	);

	// Дополнительно
	ДопСтраница = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		ЭтаФорма,
		"бг_Дополнительно",
		Элементы.СтраницыФормы,
		ВидГруппыФормы.Страница
	);
	ДопСтраница.Заголовок = НСтр("ru = 'Дополнительно'; en = 'Extra information'");
	
	Группа = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		ЭтаФорма,
		"бг_КодификаторыСкидки",
		ДопСтраница,
		ВидГруппыФормы.ОбычнаяГруппа
	);
	Группа.Заголовок = НСтр(
		"ru = 'Кодификаторы скидки (наценки)';
		|en = 'Discount (markup) codifiers'"
	);
	Группа.ОтображатьЗаголовок = Ложь;
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ДатаСоздания",
		Группа,
		"Объект.бг_ДатаСоздания"
	);	
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_КодСтрокиБюджета",
		Группа,
		"Объект.бг_КодСтрокиБюджета"
	);
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_НомерКонтракта",
		Группа,
		"Объект.бг_НомерКонтракта"
	);
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_ТипСкидкиНаценкиCRM",
		ДопСтраница,
		"Объект.бг_ТипСкидкиНаценкиCRM"
	);
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_Комментарий",
		ДопСтраница,
		"Объект.бг_Комментарий"
	);
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.УстановитьДействие("ПриИзменении", "бг_ОбновитьКартинкуКомментария");
	
	Элемент = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтаФорма,
		"бг_Автор",
		ДопСтраница,
		"Объект.бг_Автор"
	);
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.ТолькоПросмотр = Истина;
	
	СкидкиНаценкиСервер.бг_ДобавитьКомандыВытеснения(ЭтаФорма, КоманднаяПанель);
	
	ЗаголовокКнопки = НСтр("ru = 'Заполнить отборы на основании ценовых групп'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(
		ЭтотОбъект,
		"бг_ЗаполнитьОтборыНаОснованииЦеновыхГрупп",
		Элементы.УсловияПредоставленияКоманднаяПанель,
		ЗаголовокКнопки,
		"бг_ЗаполнитьОтборыНаОснованииЦеновыхГрупп",
		"бг_ЗаполнитьОтборыНаОснованииЦеновыхГрупп", ,
		ВидКнопкиФормы.КнопкаКоманднойПанели);
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьОтборыНаОснованииЦеновыхГруппНаСервере(ИсточникЦеновойГруппы, Значение)

	Поле = "Номенклатура." + Перечисления.бг_ИсточникиЦеновойГруппы.НастройкиПолейЗапроса()[ИсточникЦеновойГруппы].Путь;
	Для каждого СтрокаУсловиеПредоставления Из Объект.УсловияПредоставления Цикл
		УсловиеПредоставления = СтрокаУсловиеПредоставления.УсловиеПредоставления.УсловиеПредоставления;
		ТипЗначенияУсловиеПредоставления = ТипЗнч(УсловиеПредоставления);
		
		Если УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж
			Или УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж Тогда
			
			УсловиеПредоставленияОбъект = СтрокаУсловиеПредоставления.УсловиеПредоставления.ПолучитьОбъект();
			СхемаКомпоновкиДанных = Справочники.СкидкиНаценки.ПолучитьМакет("ОтборУсловияПредоставленияСуммаКоличество");
			
			НастройкиКомпоновки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			
		ИначеЕсли ТипЗначенияУсловиеПредоставления = Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УсловиеПредоставления, "ИмяОбъекта") 
			= "бг_УсловиеПредоставленияСкидкиНаценкиЗаАссортимент" Тогда
			
			УсловиеПредоставленияОбъект = СтрокаУсловиеПредоставления.УсловиеПредоставления.ПолучитьОбъект();
			СхемаКомпоновкиДанных = Справочники.СкидкиНаценки.ПолучитьМакет("ОтборСтрокНоменклатура");
			ПараметрыВнешнейОбработки = УсловиеПредоставленияОбъект.ПараметрыВнешнейОбработки.Получить();
			ПараметрыВнешнейОбработки.ВариантОтбораНоменклатуры = 
			Перечисления.ВариантыОтбораНоменклатурыДляРасчетаСкидокНаценок.ОтборКомпоновкиДанных;
			
			НастройкиКомпоновки = ПараметрыВнешнейОбработки.ХранилищеНастроекКомпоновкиДанных.Получить();
			
		Иначе
			Продолжить;
		КонецЕсли;

		ЭлементОтбора = КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(
			НастройкиКомпоновки,
			Поле,
			Значение,
			ВидСравненияКомпоновкиДанных.ВСписке,
			Истина);
		
		Если ТипЗнч(УсловиеПредоставления) = Тип("ПеречислениеСсылка.УсловияПредоставленияСкидокНаценок") Тогда
			НастройкиКомпоновкиДанных = Новый Структура;
			НастройкиКомпоновкиДанных.Вставить("ОтборПоНоменклатуре", НастройкиКомпоновки);
			
			УсловиеПредоставленияОбъект.ВариантОтбораНоменклатуры = 
				Перечисления.ВариантыОтбораНоменклатурыДляРасчетаСкидокНаценок.ОтборКомпоновкиДанных;
			УсловиеПредоставленияОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиКомпоновкиДанных);
			СкидкиНаценкиСервер.ОбновитьКэшированныйЗапрос(УсловиеПредоставленияОбъект);
		Иначе
			ПараметрыВнешнейОбработки.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиКомпоновки);
			УсловиеПредоставленияОбъект.ПараметрыВнешнейОбработки = Новый ХранилищеЗначения(ПараметрыВнешнейОбработки);
		КонецЕсли;
			
		Попытка
			УсловиеПредоставленияОбъект.Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %1 по причине: %2';
				|en = 'Cannot process object %1. Reason: %2'");
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ТекстСообщения, УсловиеПредоставленияОбъект.Ссылка, 
				ПодробноеПредставлениеОшибки(ОписаниеОшибки())));
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура бг_ПриОткрытииПосле(Отказ)

	Если Элементы.Найти("РазрешитьРедактированиеРеквизитовОбъекта") <> Неопределено Тогда
		ЗаблокированныеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтаФорма, , Истина);
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьРазрешенностьРедактированияРеквизитов(ЭтаФорма, 
			ЗаблокированныеРеквизиты);
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
