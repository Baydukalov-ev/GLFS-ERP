
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТаблицаЗначений = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	УточненияЗначенияСкидкиНаценки.Загрузить(ТаблицаЗначений);
	ТолькоПросмотрЭлементов = Параметры.ТолькоПросмотр ИЛИ Не ПравоДоступа("Изменение", Метаданные.Справочники.СкидкиНаценки);
	Элементы.УточненияЗначенияСкидкиНаценки.ТолькоПросмотр = ТолькоПросмотрЭлементов;
	Элементы.ФормаЗавершитьРедактирование.Доступность = Не ТолькоПросмотрЭлементов;
	Элементы.ИсточникГруппы.ТолькоПросмотр = ТолькоПросмотрЭлементов;
	ИсточникГруппы = Параметры.ИсточникГруппы;
	Если НЕ ЗначениеЗаполнено(ИсточникГруппы) Тогда
		ИсточникГруппы = Перечисления.бг_ИсточникиЦеновойГруппы[0];
	КонецЕсли;
	УстановитьОграничениеТипа();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	Для Каждого СтрокаТЧ Из УточненияЗначенияСкидкиНаценки Цикл
		НомерСтроки = УточненияЗначенияСкидкиНаценки.Индекс(СтрокаТЧ) + 1;
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ЦеноваяГруппа) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не заполнена колонка ""Ценовая группа"" в строке %1 списка ""Уточнения значения скидки (наценки)""';
					|en = 'Column ""Price group"" in line %1 of list ""Discount (markup) value specifications"" is not filled in'"), НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,,ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("УточненияЗначенияСкидкиНаценки", НомерСтроки, "СпособДоставки"),, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Новый Структура;
	Данные.Вставить("ИсточникГруппы",            ИсточникГруппы);
	Данные.Вставить("АдресВоВременномХранилище", АдресТабличнойЧастиУточненияПоЦеновымГруппамВоВременномХранилище());
	
	Закрыть(Данные);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТабличногоДокумента(Команда)
	
	Если ИсточникГруппы = ПредопределенноеЗначение("Перечисление.бг_ИсточникиЦеновойГруппы.Смешанный") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для данного типа источника загрузка не предусмотрена'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "СкидкиНаценки.бг_ЦеновыеГруппы";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка уточнений из файла';
										|en = 'Import Item list from file'");

	ПараметрыЗагрузки.ДополнительныеПараметры =  Новый Структура;
	ПараметрыЗагрузки.ДополнительныеПараметры.Вставить("ИсточникГруппы", ИсточникГруппы);
	
	ПараметрыЗагрузки.КолонкиМакета = ОписаниеКолонокМакетаДляЗагрузки();

	Оповещение = Новый ОписаниеОповещения("ЗагрузитьДанныеИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсточникГруппыПриИзменении(Элемент)
	
	УстановитьОграничениеТипа();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникГруппыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресТабличнойЧастиУточненияПоЦеновымГруппамВоВременномХранилище()

	Возврат ПоместитьВоВременноеХранилище(УточненияЗначенияСкидкиНаценки.Выгрузить(), УникальныйИдентификатор);

КонецФункции

&НаСервере
Процедура УстановитьОграничениеТипа()
	
	НастройкаПоля = Перечисления.бг_ИсточникиЦеновойГруппы.НастройкиПолейЗапроса()[ИсточникГруппы];
	
	КолонкаТабличногоПоля = Элементы.УточненияЗначенияСкидкиНаценкиЦеноваяГруппа;
	КолонкаТабличногоПоля.ДоступныеТипы   = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НастройкаПоля.Тип));
	КолонкаТабличногоПоля.ОграничениеТипа = КолонкаТабличногоПоля.ДоступныеТипы;
	Если ИсточникГруппы = Перечисления.бг_ИсточникиЦеновойГруппы.Смешанный Тогда
		КолонкаТабличногоПоля.Заголовок       = "Бренд ТМ";
	Иначе
		КолонкаТабличногоПоля.Заголовок       = Строка(ИсточникГруппы);
	КонецЕсли;
	
	РеквизитыСмешанногоТипа = Новый Структура("Бренд_МТ, Вкус, СкюМТ");
	Для каждого Реквизит Из РеквизитыСмешанногоТипа Цикл
		Элементы["УточненияЗначенияСкидкиНаценки" + Реквизит.Ключ].Видимость = ИсточникГруппы = Перечисления.бг_ИсточникиЦеновойГруппы.Смешанный;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеКолонокМакетаДляЗагрузки();
	
	КолонкиМакета = Новый Массив;
	
	Для каждого ЭлементКолонка Из Элементы.УточненияЗначенияСкидкиНаценки.ПодчиненныеЭлементы Цикл
		Если ЭлементКолонка.Видимость Тогда
			
			Если ЭлементКолонка.Имя	= "УточненияЗначенияСкидкиНаценкиЗначениеСкидкиНаценки" Тогда
				ОписаниеТипа = Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(15, 4));
				ШиринаКолонки = 15;
			Иначе
				ОписаниеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200));
				ШиринаКолонки = 100;
			КонецЕсли;
			
			ИмяКолонки = СтрЗаменить(ЭлементКолонка.Имя, ЭлементКолонка.Родитель.Имя, "");
			
			Колонка = ЗагрузкаДанныхИзФайлаКлиентСервер.ОписаниеКолонкиМакета(ИмяКолонки, 
				ОписаниеТипа, 
				ЗаголовокПоляФормы(ЭлементКолонка), ШиринаКолонки);
			
			Колонка.Позиция = КолонкиМакета.Количество();
			КолонкиМакета.Добавить(Колонка);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат КолонкиМакета;
	
КонецФункции

&НаКлиенте
Функция ЗаголовокПоляФормы(ПолеФормы);

	Если ЗначениеЗаполнено(ПолеФормы.Заголовок) Тогда
		Возврат ПолеФормы.Заголовок;
	Иначе
		Возврат ЗаголовокРеквизита(ПолеФормы.Имя, ПолеФормы.Родитель.Имя);
	КонецЕсли;

КонецФункции

&НаСервере
Функция ЗаголовокРеквизита(ИмяРеквизита, ПутьКРеквизитам = "");

	МассивРеквизитов = ПолучитьРеквизиты(ПутьКРеквизитам);
	Для каждого Реквизит Из МассивРеквизитов Цикл
		Если ПутьКРеквизитам + Реквизит.Имя = ИмяРеквизита Тогда
			Возврат Реквизит.Заголовок;
		КонецЕсли;
	КонецЦикла;
	Возврат "";

КонецФункции
	
&НаКлиенте
Процедура ЗагрузитьДанныеИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьДанныеИзФайлаНаСервере(АдресЗагруженныхДанных, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзФайлаНаСервере(АдресЗагруженныхДанных, ДополнительныеПараметры)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	Для Каждого Строка Из ЗагруженныеДанные Цикл
		СтрокаТЧ = УточненияЗначенияСкидкиНаценки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Строка);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
