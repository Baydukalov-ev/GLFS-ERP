#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Функция возвращает текст запроса для определения состояние набора перез записью.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаСостояниеНабораПередЗаписью() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	БанковскиеГарантии.Период КАК Период,
	|	БанковскиеГарантии.Регистратор КАК Регистратор,
	|	БанковскиеГарантии.НомерСтроки КАК НомерСтроки,
	|	БанковскиеГарантии.Активность КАК Активность,
	|	БанковскиеГарантии.ВидДвижения КАК ВидДвижения,
	|	БанковскиеГарантии.Организация КАК Организация,
	|	БанковскиеГарантии.БанковскаяГарантия КАК БанковскаяГарантия,
	|	БанковскиеГарантии.Сумма КАК Сумма,
	|	БанковскиеГарантии.Количество КАК Количество
	|ПОМЕСТИТЬ Движениябг_БанковскиеГарантииПередЗаписью
	|ИЗ
	|	РегистрНакопления.бг_БанковскиеГарантии КАК БанковскиеГарантии
	|ГДЕ
	|	БанковскиеГарантии.Регистратор = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса для определения измений нового набора относительно текущего с учетом накопленных изменений
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаИзменениеНабораОтносительноДанныхПередЗаписью() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ВложенныйЗапрос.Период) КАК Период,
	|	Организация,
	|	ВложенныйЗапрос.БанковскаяГарантия КАК БанковскаяГарантия,
	|	СУММА(ВложенныйЗапрос.КоличествоИзменение) КАК КоличествоИзменение,
	|	ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ Движениябг_БанковскиеГарантииИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаИзменений.Период КАК Период,
	|		Организация,
	|		ТаблицаИзменений.БанковскаяГарантия КАК БанковскаяГарантия,
	|		СУММА(ТаблицаИзменений.КоличествоИзменение) КАК КоличествоИзменение,
	|		СУММА(ТаблицаИзменений.Количество) КАК Количество
	|	ИЗ
	|		(ВЫБРАТЬ
	|			КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Период,
	|			Таблица.Организация,
	|			Таблица.БанковскаяГарантия КАК БанковскаяГарантия,
	|			ВЫБОР Таблица.ВидДвижения
	|				КОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -Таблица.Количество
	|				ИНАЧЕ Таблица.Количество
	|			КОНЕЦ КАК КоличествоИзменение,
	|			0 КАК Количество
	|		ИЗ
	|			Движениябг_БанковскиеГарантииПередЗаписью КАК Таблица
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ),
	|			Таблица.Организация,
	|			Таблица.БанковскаяГарантия,
	|			ВЫБОР Таблица.ВидДвижения
	|				КОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА Таблица.Количество
	|				ИНАЧЕ -Таблица.Количество
	|			КОНЕЦ,
	|			Таблица.Количество
	|		ИЗ
	|			РегистрНакопления.бг_БанковскиеГарантии КАК Таблица
	|		ГДЕ
	|			Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организация,
	|		ТаблицаИзменений.БанковскаяГарантия,
	|		ТаблицаИзменений.Период
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаИзменений.КоличествоИзменение) <> 0) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	ВложенныйЗапрос.БанковскаяГарантия,
	|	ВложенныйЗапрос.Количество";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
		
	Если Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("Движениябг_БанковскиеГарантииПередЗаписью") = Неопределено Тогда
		Регистратор = Отбор.Регистратор.Значение;

		ПараметрыКонтроля=Новый Структура;
		Запрос = Новый Запрос(ТекстЗапросаСостояниеНабораПередЗаписью());
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Регистратор);
		
		Запрос.Выполнить();
		
		ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства, 
			"Движениябг_БанковскиеГарантииИзменения", Ложь, ПараметрыКонтроля);
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		Или Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	Регистратор=Отбор.Регистратор.Значение;
		
	Запрос = Новый Запрос(ТекстЗапросаИзменениеНабораОтносительноДанныхПередЗаписью());
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
		
	Выборка = Результат.Выбрать();
	ДополнительныеСвойства.ТаблицыКонтроля.Движениябг_БанковскиеГарантииИзменения.ЕстьЗаписиВТаблице = Выборка.Следующий() И Выборка.Количество > 0;
	
КонецПроцедуры

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
