
#Область ПрограммныйИнтерфейс

Функция ИмяВременнойТаблицыИзменений() Экспорт
	
	Возврат СтрШаблон("%1_ИзмененияДвижений", СоздатьНаборЗаписей().Метаданные().Имя);
	
КонецФункции

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	ИмяТаблицыИзменений = ИмяВременнойТаблицыИзменений();
	ИмяТаблицыОшибок    = ИмяТаблицыИзменений + "_ОшибкиКонтроляИзменений";
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, ИмяТаблицыИзменений) Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	Т.СкидкаНаценка КАК СкидкаНаценка,
			|	Т.Начислено КАК Начислено
			|ИЗ
			|	ВТ_Изменения КАК Т
			|ГДЕ
			|	ЛОЖЬ";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_Изменения", ИмяТаблицыИзменений);
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицыОшибок);
	КонецЕсли;
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	ИмяТаблицыИзменений = ИмяВременнойТаблицыИзменений();
	ИмяТаблицыОшибок    = ИмяТаблицыИзменений + "_ОшибкиКонтроляИзменений";
	ТаблицаОшибок       = Неопределено;
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, ИмяТаблицыИзменений)
		И РезультатыКонтроля.Свойство(ИмяТаблицыОшибок, ТаблицаОшибок) Тогда
		Для Каждого СтрокаОшибки Из ТаблицаОшибок Цикл
			ТекстСообщения = НСтр("ru = 'Текст ошибки с параметрами %1, %2 и %3'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаОшибки.СкидкаНаценка, СтрокаОшибки.Начислено, СтрокаОшибки.КСписанию);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ, , , Отказ);
		КонецЦикла
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти
