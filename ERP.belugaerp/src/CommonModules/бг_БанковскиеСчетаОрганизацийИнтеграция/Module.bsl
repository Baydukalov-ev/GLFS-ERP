#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта, СписокСвойств, ИсключаяСвойства, СтандартнаяОбработка) Экспорт
	
	Если бг_ОбщегоНазначенияСервер.ОтменитьЗагрузкуОбъекта(ЗагружаемыйОбъект, СтруктураОбъекта, Неопределено, Неопределено, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗагружаемыйОбъект.ЭтоНовый() Тогда
		ЗагружаемыйОбъект.Заполнить(Неопределено);
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("ВидСчета") Тогда
		ЗагружаемыйОбъект.ТипСчета = ТипСчетаПоВходящимДанным(СтруктураОбъекта.ВидСчета);	
	КонецЕсли;
	
	ЗагружаемыйОбъект.ВыводитьСуммуБезКопеек = СтруктураОбъекта.СуммаБезКопеек;
		
	Если СтруктураОбъекта.МесяцПрописью Тогда
		ЗагружаемыйОбъект.ВариантВыводаМесяца = Перечисления.ВариантыВыводаМесяцаВДатеДокумента.Прописью;
	Иначе
		ЗагружаемыйОбъект.ВариантВыводаМесяца = Перечисления.ВариантыВыводаМесяцаВДатеДокумента.Числом;
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства, 
		РеквизитыИСвойства.МетаданныеОбъекта, 
		ВыгружаемыеРеквизиты());
				
КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	КлючМаршрутизации = КлючМаршрутизации + ".ERP";
	
	Возврат КлючМаршрутизации; 
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	ВыгружаемыеРеквизиты.Добавить("Банк");
	ВыгружаемыеРеквизиты.Добавить("БанкДляРасчетов");
	ВыгружаемыеРеквизиты.Добавить("БИКБанка");
	ВыгружаемыеРеквизиты.Добавить("ВалютаДенежныхСредств");
	ВыгружаемыеРеквизиты.Добавить("Владелец");
	ВыгружаемыеРеквизиты.Добавить("ГосударственныйКонтракт");
	ВыгружаемыеРеквизиты.Добавить("Закрыт");
	ВыгружаемыеРеквизиты.Добавить("КоррСчетБанка");
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("НомерСчета");
	ВыгружаемыеРеквизиты.Добавить("ОтдельныйСчетГОЗ");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Предопределенный");
	ВыгружаемыеРеквизиты.Добавить("ТекстКорреспондента");
	ВыгружаемыеРеквизиты.Добавить("ТекстНазначения");
		
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

Функция ТипСчетаПоВходящимДанным(ВидСчета)
	
	ТипСчета = Неопределено;
	
	Если ВидСчета = "Расчетный" Тогда
		ТипСчета = Перечисления.ТипыБанковскихСчетов.Расчетный;
	ИначеЕсли ВидСчета = "Депозитный" Тогда
		ТипСчета = Перечисления.ТипыБанковскихСчетов.Депозитный;
	ИначеЕсли ВидСчета = "Ссудный" Тогда
		ТипСчета = Перечисления.ТипыБанковскихСчетов.Прочий;
	ИначеЕсли ВидСчета = "Аккредитивный" Тогда
		ТипСчета = Перечисления.ТипыБанковскихСчетов.Прочий;
	ИначеЕсли ВидСчета = "Иной" Тогда
		ТипСчета = Перечисления.ТипыБанковскихСчетов.Прочий;
	КонецЕсли;
	
	Возврат ТипСчета;

КонецФункции

#КонецОбласти // Конец СлужебныеПроцедурыИФункции