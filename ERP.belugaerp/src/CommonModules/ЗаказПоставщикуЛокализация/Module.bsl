
&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		бг_ЗаполнитьДокументНаОснованииЗаказаПоставщику(Объект, ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ЗаполнитьДокументНаОснованииЗаказаПоставщику(Объект, ДанныеЗаполнения)
	
	ШапкаЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Валюта, ЦенаВключаетНДС, Согласован, НалогообложениеНДС, ДатаСогласования, ДатаПоступления, Комментарий, ДокументОснование, Номер");
	
	НастрокиСозданияЗаказа = РегистрыСведений.бг_НастройкаСозданияЗаказов.ПолучитьНастройкиСозданияЗаказа(ДанныеЗаполнения.ДокументОснование);
	
	ЗаполнитьЗначенияСвойств(Объект, ШапкаЗаказа, "Дата, Валюта, ЦенаВключаетНДС, Согласован, НалогообложениеНДС, ДатаСогласования, ДатаПоступления, Комментарий");
	ЗаполнитьЗначенияСвойств(Объект, НастрокиСозданияЗаказа);
	
	Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
	Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Подтвержден;
	Объект.Контрагент = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер);
	Объект.Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Соглашение, "Склад");
	Объект.бг_ОснованиеЗаказа = ДанныеЗаполнения;
	Объект.НомерПоДаннымПоставщика = ШапкаЗаказа.Номер;
	Объект.ДатаПоДаннымПоставщика = Объект.Дата;
	Объект.Комментарий = СтрШаблон("Документ создан на основании %1", Строка(ДанныеЗаполнения));
	
	Параметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
	Параметры.ВалютаВзаиморасчетов = Объект.Валюта;
	
	Объект.Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(Объект, Объект.ХозяйственнаяОперация, Параметры);
	
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		ЗакупкиВызовСервера.ЗаполнитьБанковскиеСчетаПоДоговору(Объект.Договор, Объект.БанковскийСчет);
	Иначе
		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();

		СтруктураПараметров.Организация             = Объект.Организация;
		СтруктураПараметров.ФормаОплаты             = Объект.ФормаОплаты;
		СтруктураПараметров.НаправлениеДеятельности = Объект.НаправлениеДеятельности;

		Объект.БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	КонецЕсли;
	
	ПересчитатьСуммуСУчетомРучнойСкидки	= Новый Структура("Очищать", Ложь);
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму", "КоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки", "КоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", ПересчитатьСуммуСУчетомРучнойСкидки);
	
	ТоварыЗаказа = ПолучитьТоварыЗаказа(ДанныеЗаполнения);
	Объект.Товары.Загрузить(ТоварыЗаказа);
	
	Для Каждого СтрокаТовара Из Объект.Товары Цикл
		Если СтруктураДействий <> Неопределено Тогда
			СтрокаТовара.ДатаПоступления = ШапкаЗаказа.ДатаПоступления;
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТовара, СтруктураДействий, Неопределено);
		КонецЕсли;
	КонецЦикла;
		
	НоменклатураПартнеровСервер.ЗаполнитьНоменклатуруПартнераПоНоменклатуреПриИзмененииПартнера(Объект.Товары, Объект.Партнер);
	
КонецПроцедуры

Функция ПолучитьТоварыЗаказа(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
	|	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
	|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаказПоставщикуТовары.Количество КАК Количество,
	|	ЗаказПоставщикуТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказПоставщикуТовары.КодСтроки КАК КодСтроки,
	|	ЗаказПоставщикуТовары.Отменено КАК Отменено,
	|	ЗаказПоставщикуТовары.ПричинаОтмены КАК ПричинаОтмены,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.Цена, 1) КАК Цена
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ЗаказПоставщикуТовары.Номенклатура = ЗаказКлиентаТовары.Номенклатура
	|			И ЗаказПоставщикуТовары.Характеристика = ЗаказКлиентаТовары.Характеристика
	|			И ЗаказПоставщикуТовары.Ссылка.ДокументОснование = ЗаказКлиентаТовары.Ссылка
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику";
	Запрос.УстановитьПараметр("ЗаказПоставщику", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЗаказКлиента", ДанныеЗаполнения.ДокументОснование);
	ТаблицаТовары = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТовары;
	
КонецФункции
