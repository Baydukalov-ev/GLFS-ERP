#Область ПрограммныйИнтерфейс

// Возвращает признак наличия движений по регистру ОстаткиАлкогольнойПродукцииЕГАИС
//
// Параметры:
//  Ссылка - ДокументСсылка - Документ регистратор движений
//
// Возвращаемое значение:
//   Булево - Истина, если движения есть
//
Функция ЕстьДвиженияЕАГИС(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор = &Регистратор";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Выборка.Следующий();
	Возврат Результат;
КонецФункции

// Возвращает идентификатор запроса ЕГАИС
//
// Параметры:
//  Документ - ДокументСсылка.битОтчетОПроизводствеЕГАИС, ДокументСсылка.ТТНВходящаяЕГАИС - Документ ЕГАИС
//
// Возвращаемое значение:
//   ИдентификаторЗапроса - Строка - Идентификатор запроса подтверждения для документа ЕГАИС
//
Функция ИдентификаторЗапросаЕГАИС(Документ, Операции) Экспорт
	
	ДанныеЗапросаЕГАИС = ДанныеЗапросаЕГАИС(Документ, Операции);
	
	ИдентификаторЗапросаЕГАИС = "";
	Если ДанныеЗапросаЕГАИС <> Неопределено Тогда
		ИдентификаторЗапросаЕГАИС = ДанныеЗапросаЕГАИС.ИдентификаторЗапроса;	
	КонецЕсли;

	Возврат ИдентификаторЗапросаЕГАИС;

КонецФункции

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	СтрокиСРеквизитом = РеквизитыИСвойства.Реквизиты.НайтиСтроки(Новый Структура("ИмяСвойстваXDTO", "Идентификатор"));
	Для каждого СтрокаРеквизита Из СтрокиСРеквизитом Цикл
		СтрокаРеквизита.ИмяСвойстваXDTO = "";
	КонецЦикла;
	адаптер_НастройкиОбмена.УдалитьРеквизит(РеквизитыИСвойства, , "ДанныеПроверкиИПодбора");
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства, ФорматСообщения);
	
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, 
				НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт
	
	ТекстПоиска = 	"NULL КАК бг_Идентификатор,";
	ТекстЗамены =	"ВыгружаемыйОбъект.Идентификатор КАК бг_Идентификатор,";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_обработчикиСобытийСтандартный;
	адаптер_обработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_обработчикиСобытийСтандартный");
	
	ДанныеОбъекта = адаптер_обработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	
	Если ДанныеОбъекта.Реквизиты.Количество() > 0 Тогда
		
		Операции = Новый Массив;
		Операции.Добавить(Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение);
		Операции.Добавить(Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
		Операции.Добавить(Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ);		
		Операции.Добавить(Перечисления.ВидыДокументовЕГАИС.бг_ОтчетОПроизводствеЕГАИС);
		ДанныеЗапросаЕГАИС = ДанныеЗапросаЕГАИС(Объект, Операции);
		
		ИдентификаторЗапросаАкта = "";
		ДатаЗапросаАкта = Дата(1, 1, 1);
		Если ДанныеЗапросаЕГАИС <> Неопределено Тогда
			ИдентификаторЗапросаАкта = ДанныеЗапросаЕГАИС.ИдентификаторЗапроса;
			ДатаЗапросаАкта = ДанныеЗапросаЕГАИС.ДатаСозданияЗапроса;
		КонецЕсли;
		
		РеквизитыОбъекта = ДанныеОбъекта.Реквизиты[0];
		РеквизитыОбъекта.Вставить("бг_ЕстьДвиженияЕГАИС", ЕстьДвиженияЕАГИС(Объект));
		РеквизитыОбъекта.Вставить("ИдентификаторЗапросаАкта", ИдентификаторЗапросаАкта);
		РеквизитыОбъекта.Вставить("ДатаЗапросаАкта", ДатаЗапросаАкта);
		РеквизитыОбъекта.Вставить("СтатусТТН", СтатусТТН(Объект));
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "ЕстьРасхождения") Тогда
			РеквизитыОбъекта.Вставить("РасхожденияПринятыхМарок", РасхожденияПринятыхМарок(Объект, ДанныеСообщения));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция ВыполненыУсловияВыгрузкиОбъекта(ДанныеСообщения) Экспорт
	Результат = Неопределено;
	Если ДанныеСообщения.МетаданныеОбъекта = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
		Результат = Истина;
		Для Каждого СтрокаДокумента Из ДанныеСообщения.Объект.Товары Цикл
			Результат = Мин(Результат, ЗначениеЗаполнено(СтрокаДокумента.Серия));
		КонецЦикла;
		Если Не Результат Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнены серии номенклатуры'; 
					   |en = 'Не заполнены серии номенклатуры'"); 
			ДанныеСообщения.ТекстОшибки = ТекстОшибки;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства, ФорматСообщения)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	// Реквизиты шапки
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства, 
		Метаданные.Документы.ТТНВходящаяЕГАИС, 
		,
		"ИдентификаторЗапросаАкта", 
		ОбщегоНазначения.ОписаниеТипаСтрока(36));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства, 
		Метаданные.Документы.ТТНВходящаяЕГАИС, 
		,
		"ДатаЗапросаАкта", 
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));		
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства, 
		Метаданные.Документы.ТТНВходящаяЕГАИС, 
		,
		"бг_ЕстьДвиженияЕГАИС", 
		Новый ОписаниеТипов("Булево"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ТТНВходящаяЕГАИС, 
		,
		"бг_Идентификатор", 
		ОбщегоНазначения.ОписаниеТипаСтрока(50));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ТТНВходящаяЕГАИС, 
		,
		"СтатусТТН", 
		Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыОбработкиТТНВходящейЕГАИС"));
	
	// Табличная часть марок с расхождениями
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"РасхожденияПринятыхМарок.КодМарки",
		ОбщегоНазначения.ОписаниеТипаСтрока(бг_МаркируемаяПродукция.ДлиныШтрихкодовМарок().ПолнаяМарка));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"РасхожденияПринятыхМарок.ИдентификаторСтроки",
		ОбщегоНазначения.ОписаниеТипаСтрока(5));
		
КонецПроцедуры

Функция СтатусТТН(Документ)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ДанныеСтатуса = РегистрыСведений.СтатусыДокументовЕГАИС.ТекущееСостояние(Документ);	
	
	СтатусТТН = Новый Структура(
		"ЗначениеПеречисления",
		адаптер_РаботаСДаннымиИБ.ПеречислениеВСтроку(ДанныеСтатуса.Статус));
	
	Возврат СтатусТТН;
	
КонецФункции

Функция РасхожденияПринятыхМарок(Документ, ДанныеСообщения) 
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ТаблицаРасхожденийПринятыхМарок = Документы.ТТНВходящаяЕГАИС.бг_ДанныеПринимаемыхШтрихкодовРасхождения(Документ);	
	ТаблицаРасхожденийПринятыхМарокДляВыгрузки = ТаблицаРасхожденийПринятыхМарок.Скопировать(, "КодМарки, ИдентификаторСтроки");
	
	РасхожденияПринятыхМарок = адаптер_РаботаСДаннымиИБ.ТаблицаЗначенийВСтруктуруРеквизитов(
		ТаблицаРасхожденийПринятыхМарокДляВыгрузки, 
		Неопределено,
		ДанныеСообщения);
		
	Возврат РасхожденияПринятыхМарок;	
	
КонецФункции

Функция ДанныеЗапросаЕГАИС(Документ, Операции) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.ИдентификаторЗапроса КАК ИдентификаторЗапроса,
	|	Т.ДатаСоздания КАК ДатаСозданияЗапроса
	|ИЗ
	|	Справочник.ЕГАИСПрисоединенныеФайлы КАК Т
	|ГДЕ
	|	Т.Документ = &ДокументСсылка
	|	И НЕ Т.ПометкаУдаления
	|	И Т.Операция В(&Операции)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.ДатаСоздания УБЫВ";
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.УстановитьПараметр("Операции", Операции);
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеЗапросаЕГАИС = Неопределено;
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();	
		Выборка.Следующий();
		
		ДанныеЗапросаЕГАИС = Новый Структура("ИдентификаторЗапроса, ДатаСозданияЗапроса");
		ЗаполнитьЗначенияСвойств(ДанныеЗапросаЕГАИС, Выборка);
	КонецЕсли;
	
	Возврат ДанныеЗапросаЕГАИС;	
	
КонецФункции

#КонецОбласти
