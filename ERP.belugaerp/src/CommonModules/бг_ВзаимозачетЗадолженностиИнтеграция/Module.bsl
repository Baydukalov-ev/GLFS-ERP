#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты(); 

	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства, 
		РеквизитыИСвойства.МетаданныеОбъекта, 
		Реквизиты);
	
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
					
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");

	ДлинаСтроки50 = 50;
	ОписаниеТиповСтрока50 = ОбщегоНазначения.ОписаниеТипаСтрока(ДлинаСтроки50);
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ОбъектыРасчетов,
		"Договор",
		,
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ОбъектыРасчетов,
		"Объект",
		,
		Метаданные.ОпределяемыеТипы.ОбъектРасчетов.Тип);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ПервичныйДокумент,
		"Дата", ,
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ПервичныйДокумент,
		"Номер", ,
		ОписаниеТиповСтрока50);
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ПервичныйДокумент,
		"ДатаВходящегоДокумента", ,
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ПервичныйДокумент,
		"НомерВходящегоДокумента", ,
		ОписаниеТиповСтрока50);
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ПервичныйДокумент,
		"ТипПервичногоДокумента", ,
		Новый ОписаниеТипов("ПеречислениеСсылка.ТипыПервичныхДокументов"));
КонецПроцедуры

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Шапка
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");

	ВыгружаемыеРеквизиты.Добавить("Валюта");
	ВыгружаемыеРеквизиты.Добавить("ВидОперации");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("КонтрагентДебитор");
	ВыгружаемыеРеквизиты.Добавить("КонтрагентКредитор");
	ВыгружаемыеРеквизиты.Добавить("ОбъектРасчетовДебиторКредитор");
	ВыгружаемыеРеквизиты.Добавить("ОбъектРасчетовИнтеркампани");
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("ОрганизацияКредитор");
	ВыгружаемыеРеквизиты.Добавить("Ответственный");
	ВыгружаемыеРеквизиты.Добавить("Подразделение");
	ВыгружаемыеРеквизиты.Добавить("Руководитель");
	ВыгружаемыеРеквизиты.Добавить("СуммаДокумента");
	ВыгружаемыеРеквизиты.Добавить("СуммаРегл");
	ВыгружаемыеРеквизиты.Добавить("СуммаУпр");
	ВыгружаемыеРеквизиты.Добавить("ТипДебитора");
	ВыгружаемыеРеквизиты.Добавить("ТипКредитора");

	// ДебиторскаяЗадолженность
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.ВалютаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.ИдентификаторСтроки");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.ОбъектРасчетов");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.Организация");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.Партнер");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.Сумма");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.СуммаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.СуммаРегл");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.СуммаУпр");
	ВыгружаемыеРеквизиты.Добавить("ДебиторскаяЗадолженность.ТипРасчетов");

	// КредиторскаяЗадолженность
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.ВалютаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.ИдентификаторСтроки");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.ОбъектРасчетов");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.Организация");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.Партнер");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.Сумма");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.СуммаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.СуммаРегл");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.СуммаУпр");
	ВыгружаемыеРеквизиты.Добавить("КредиторскаяЗадолженность.ТипРасчетов");

	Возврат ВыгружаемыеРеквизиты;

КонецФункции

#КонецОбласти

