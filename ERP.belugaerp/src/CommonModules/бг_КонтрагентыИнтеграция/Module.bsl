
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта, СписокСвойств, 
			ИсключаяСвойства, СтандартнаяОбработка) Экспорт

	Если СтруктураОбъекта.Свойство("ЭтоТТ") Тогда
			СтандартнаяОбработка = Ложь;
			ЗагружаемыйОбъект.ДополнительныеСвойства.Вставить("СтандартнаяЗаписьНеТребуется", Истина);
			Если СтруктураОбъекта.Свойство("Код") 
				И ЗначениеЗаполнено(СтруктураОбъекта.Код) Тогда
				ЗагрузитьКонтрагентаCRM(ЗагружаемыйОбъект, СтруктураОбъекта);
			КонецЕсли;	
			Возврат;
	КонецЕсли;
	
	Если бг_ОбщегоНазначенияСервер.ОтменитьЗагрузкуОбъекта(ЗагружаемыйОбъект, 
		СтруктураОбъекта, Неопределено, Неопределено, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоРозничныйПокупатель = КонтрагентРозничныйПокупатель(СтруктураОбъекта.ИНН);
	
	ЗагружаемыйОбъект.Партнер = бг_ПартнерыИнтеграция.ЗагрузитьОбъектИзОбъектаКонтрагенты(
									СтруктураОбъекта, 
									ЗагружаемыйОбъект, 
									ЭтоРозничныйПокупатель);
									
	Если ЭтоРозничныйПокупатель Тогда
		
		СтруктураОбъекта.ИНН = "";
		СтруктураОбъекта.КПП = "";
		
		ЗагружаемыйОбъект.бг_РозничныйПокупатель = Истина;
		ЗагружаемыйОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
		ЗагружаемыйОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
	ИначеЕсли СтруктураОбъекта.ЮрФизЛицо.ЗначениеПеречисления = "ЮрЛицо" Тогда
		
		Если СтруктураОбъекта.НеЯвляетсяРезидентом Тогда
			ЗагружаемыйОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
		Иначе
			ЗагружаемыйОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо
		КонецЕсли;
		
		ЗагружаемыйОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо
			
	ИначеЕсли СтруктураОбъекта.ЮрФизЛицо.ЗначениеПеречисления = "ФизЛицо" Тогда
		
		Если КонтрагентИП(СтруктураОбъекта.ИНН) Тогда
			ЗагружаемыйОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель;
		Иначе
			ЗагружаемыйОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
		КонецЕсли;
		
		ЗагружаемыйОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
	КонецЕсли;
	
	СтруктураОбъекта.Удалить("ЮрФизЛицо");
	
	ЗагружаемыйОбъект.ДополнительнаяИнформация = СтруктураОбъекта.ДополнительноеОписание;
	
	бг_ОбщегоНазначенияСервер.ЗаполнитьВОбъектеСтрокуКонтактнойИнформации(
		ЗагружаемыйОбъект, 
		Перечисления.ТипыКонтактнойИнформации.Адрес, 
		Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, 
		СтруктураОбъекта, 
		"ЮА");
		
	бг_ОбщегоНазначенияСервер.ЗаполнитьВОбъектеСтрокуКонтактнойИнформации(
		ЗагружаемыйОбъект, 
		Перечисления.ТипыКонтактнойИнформации.Адрес, 
		Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, 
		СтруктураОбъекта, "ФА");
	
КонецПроцедуры

Функция НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Если СтруктураОбъекта = Неопределено Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли; 
	
	Контрагент = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта);
	
	Если ОбщегоНазначения.СсылкаСуществует(Контрагент) Тогда
		Возврат Контрагент;
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("КодSY")
		И ЗначениеЗаполнено(СтруктураОбъекта.КодSY) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.бг_КодКлиентаSY = &бг_КодКлиентаSY
		|	И НЕ Контрагенты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("бг_КодКлиентаSY", СтруктураОбъекта.КодSY);
		
		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураОбъекта.ИНН)
		Или КонтрагентРозничныйПокупатель(СтруктураОбъекта.ИНН) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("НеЯвляетсяРезидентом")
		И СтруктураОбъекта.НеЯвляетсяРезидентом Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка 
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И &УсловиеПоискаПоКПП
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.ПометкаУдаления";
	
	Если ЗначениеЗаполнено(СтруктураОбъекта.КПП) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоКПП", "Контрагенты.КПП = &КПП")
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоКПП", "ИСТИНА");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИНН", СтруктураОбъекта.ИНН);
	Запрос.УстановитьПараметр("КПП", СтруктураОбъекта.КПП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ВыгрузитьСвязанныеОбъекты(СправочникОбъект) Экспорт
	
	Если Не СправочникОбъект.ЭтоНовый()
		И СправочникОбъект.бг_ФирмаПроизводитель <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СправочникОбъект.Ссылка, "бг_ФирмаПроизводитель") Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.бг_КонтрагентПроизводитель = &бг_КонтрагентПроизводитель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.Владелец.бг_КонтрагентПроизводитель = &бг_КонтрагентПроизводитель";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("бг_КонтрагентПроизводитель", СправочникОбъект.Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			бг_ОбщегоНазначенияСервер.ЗарегистрироватьИсходящееСообщениеПриЗаписи(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты();
	
	ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты);
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства, 
		РеквизитыИСвойства.МетаданныеОбъекта, 
		Реквизиты);
		
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, 
			ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт
	
	ТекстПоиска = "NULL КАК НаименованиеВидаКонтактнойИнформации";
	ТекстЗамены = "КонтактнаяИнформация.Вид.Наименование КАК НаименованиеВидаКонтактнойИнформации";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);

	ТекстПоиска = "NULL КАК НомерСтроки";
	ТекстЗамены = "КонтактнаяИнформация.НомерСтроки КАК НомерСтроки";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	КлючМаршрутизации = КлючМаршрутизации + ".ERP";
	
	Возврат КлючМаршрутизации; 
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Шапка
	ВыгружаемыеРеквизиты.Добавить("бг_РозничныйПокупатель");
	ВыгружаемыеРеквизиты.Добавить("ГоловнойКонтрагент");
	ВыгружаемыеРеквизиты.Добавить("ИНН");
	ВыгружаемыеРеквизиты.Добавить("КодПоОКПО");
	ВыгружаемыеРеквизиты.Добавить("КПП");
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("НаименованиеПолное");
	ВыгружаемыеРеквизиты.Добавить("ДополнительнаяИнформация");
	ВыгружаемыеРеквизиты.Добавить("ОбособленноеПодразделение");
	ВыгружаемыеРеквизиты.Добавить("Партнер");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Предопределенный");
	ВыгружаемыеРеквизиты.Добавить("СтранаРегистрации");
	ВыгружаемыеРеквизиты.Добавить("ЮрФизЛицо");
	ВыгружаемыеРеквизиты.Добавить("ЮридическоеФизическоеЛицо");
	ВыгружаемыеРеквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"КодSY",
			ОбщегоНазначения.ОписаниеТипаСтрока(9),
			"бг_КодКлиентаSY"));
	
	// КонтактнаяИнформация 
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Тип");
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Представление");
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Значение");
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Вид");
	
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

Процедура ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_Клиент", 
			Новый ОписаниеТипов("Булево"), 
			"Партнер.Клиент"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_Поставщик", 
			Новый ОписаниеТипов("Булево"), 
			"Партнер.Поставщик"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_Перевозчик", 
			Новый ОписаниеТипов("Булево"), 
			"Партнер.Перевозчик"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_БизнесРегион", 
			Новый ОписаниеТипов("СправочникСсылка.БизнесРегионы"), 
			"Партнер.БизнесРегион"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_ОсновнойМенеджер", 
			Новый ОписаниеТипов("СправочникСсылка.Пользователи"), 
			"Партнер.ОсновнойМенеджер"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Партнер_ГруппаПартнера", 
			Новый ОписаниеТипов("СправочникСсылка.битГруппыПартнеров"), 
			"Партнер.бг_ГруппаПартнера"));
	
КонецПроцедуры

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	// КонтактнаяИнформация
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"КонтактнаяИнформация.НаименованиеВидаКонтактнойИнформации",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"КонтактнаяИнформация.НомерСтроки",
		ОбщегоНазначения.ОписаниеТипаЧисло(15));
		
КонецПроцедуры

Функция КонтрагентРозничныйПокупатель(ИНН)
	
	СтрокаИНН = бг_КонстантыПовтИсп.ЗначениеКонстанты("СписокИННОрганизацийДляИдентификацииЧастныхКлиентов");
	Возврат Не СтрНайти(СтрокаИНН, ИНН) = 0;
	
КонецФункции

Функция КонтрагентИП(ИНН)
	
	Возврат СтрДлина(СокрЛП(ИНН)) = 12;
	
КонецФункции

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ВидыКонтактнойИнформации,
		"ИмяПредопределенныхДанных");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ВидыКонтактнойИнформации,
		"Наименование");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ВидыКонтактнойИнформации,
		"Наименование");

	
КонецПроцедуры

Функция КонтрагентПоИННКПП(ИНН, КПП = Неопределено, ОбособленноеПодразделение = Неопределено)

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка 
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И &УсловиеПоискаПоКПП
	|	И &УсловиеПоискаПоОбособленноеПодразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.ПометкаУдаления";
	
	Если ЗначениеЗаполнено(КПП) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоКПП", "Контрагенты.КПП = &КПП")
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоКПП", "ИСТИНА");
	КонецЕсли;

	Если ЗначениеЗаполнено(ОбособленноеПодразделение) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоОбособленноеПодразделение", "Контрагенты.ОбособленноеПодразделение = &ОбособленноеПодразделение")
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоОбособленноеПодразделение", "ИСТИНА");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", ОбособленноеПодразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
КонецФункции 

#Область ОбработкаКонтрагентаCRM

Процедура ЗагрузитьКонтрагентаCRM(ЗагружаемыйОбъект, СтруктураОбъекта)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	КаналПродаж = Неопределено;
	Если СтруктураОбъекта.Свойство("КаналПродаж") Тогда
		КаналПродаж = адаптер_РаботаСДаннымиИБ.ПолучитьЗначениеРеквизита(СтруктураОбъекта.КаналПродаж);
	КонецЕсли;
	
	Территория = Неопределено;
	Если СтруктураОбъекта.Свойство("СубъектФедерации") Тогда
		Территория = адаптер_РаботаСДаннымиИБ.ПолучитьЗначениеРеквизита(СтруктураОбъекта.СубъектФедерации);
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("ЭтоЮрлицо") И СтруктураОбъекта.ЭтоЮрлицо = Истина Тогда	
		ЕстьИдентификаторКонтрагентаERP = СтруктураОбъекта.Свойство("ИдентификаторERP") 
			И ЗначениеЗаполнено(СтруктураОбъекта.ИдентификаторERP);
		
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		
		Если ЕстьИдентификаторКонтрагентаERP Тогда
			Контрагент = Справочники.Контрагенты.ПолучитьСсылку(
				Новый УникальныйИдентификатор(СтруктураОбъекта.ИдентификаторERP));
		КонецЕсли;
			
		Если Не (ЗначениеЗаполнено(Контрагент) И ОбщегоНазначения.СсылкаСуществует(Контрагент)) Тогда
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("бг_КодКлиентаSY", СтруктураОбъекта.Код);
		КонецЕсли;
		
		Если Не (ЗначениеЗаполнено(Контрагент) И ОбщегоНазначения.СсылкаСуществует(Контрагент)) Тогда
			Контрагент = КонтрагентПоИННКПП(СтруктураОбъекта.ИНН, СтруктураОбъекта.КПП, Ложь);		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Контрагент) И ОбщегоНазначения.СсылкаСуществует(Контрагент) Тогда
			
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ОбособленноеПодразделение") = Ложь Тогда
				
				КонтрагентОбъект = Контрагент.ПолучитьОбъект();
				КонтрагентОбъект.бг_КодКлиентаSY = СтруктураОбъекта.Код;
				КонтрагентОбъект.Записать();
			
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураОбъекта.ЭтоТТ = Истина Тогда 
		
		ЕстьИдентификаторПунктаНазначенияERP = СтруктураОбъекта.Свойство("ИдентификаторПунктаНазначенияERP") 
			И ЗначениеЗаполнено(СтруктураОбъекта.ИдентификаторПунктаНазначенияERP);
			
		ПунктыНазначения = Новый Массив;
		ПунктНазначения = Справочники.битПунктыНазначения.ПустаяСсылка();
		
		Если ЕстьИдентификаторПунктаНазначенияERP Тогда
			ПунктНазначения = Справочники.битПунктыНазначения.ПолучитьСсылку(
				Новый УникальныйИдентификатор(СтруктураОбъекта.ИдентификаторПунктаНазначенияERP)); 
			Если ЗначениеЗаполнено(ПунктНазначения) И ОбщегоНазначения.СсылкаСуществует(ПунктНазначения) Тогда
				ПунктыНазначения.Добавить(ПунктНазначения);
			КонецЕсли;
		КонецЕсли;

		ДополнитьМассивПунктовНазначенияПоКодуTTSY(ПунктыНазначения, СтруктураОбъекта.Код);
						
		Если ЗначениеЗаполнено(ПунктыНазначения) Тогда
			
			Для каждого ОбрабатываемыйПунктНазначения Из ПунктыНазначения Цикл
			
				ЗаполнитьРеквизитыCRMПунктаНазначения(ОбрабатываемыйПунктНазначения, СтруктураОбъекта, КаналПродаж, Территория);				
			
			КонецЦикла;
						
		ИначеЕсли ТипЗнч(СтруктураОбъекта.ГоловнойКонтрагент) = Тип("Структура")
			И ЗначениеЗаполнено(СтруктураОбъекта.ГоловнойКонтрагент) Тогда	
			
			Если СтруктураОбъекта.Свойство("ЭтоЮрлицо") И СтруктураОбъекта.ЭтоЮрлицо = Истина Тогда
				ИНН = СтруктураОбъекта.ИНН;	
				КПП = СтруктураОбъекта.КПП_ТТ;
			Иначе	
				ИНН = СтруктураОбъекта.ГоловнойКонтрагент.ИНН;
				КПП = СтруктураОбъекта.КПП_ТТ;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КПП) Тогда
				
				ТекстЗапроса = ТекстЗапросаПунктыНазначения();
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоискаПоКПП", "Контрагенты.КПП = &КПП");
				
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("ИНН", ИНН);
				Запрос.УстановитьПараметр("КПП", КПП);
				
				ВыборкаПунктыНазначения = Запрос.Выполнить().Выбрать();
				
				Пока ВыборкаПунктыНазначения.Следующий() Цикл
					
					ЗаполнитьРеквизитыCRMПунктаНазначения(ВыборкаПунктыНазначения.Ссылка, СтруктураОбъекта, КаналПродаж, Территория);
					
				КонецЦикла;
				
			КонецЕсли;
						
		КонецЕсли;
		
	КонецЕсли;	
	
	Если СтруктураОбъекта.Свойство("ЭтоСеть")
		И ЗначениеЗаполнено(СтруктураОбъекта.ЭтоСеть)
		И СтруктураОбъекта.ЭтоСеть Тогда
		
		КлючевойКлиент = Справочники.бг_КлючевыеКлиенты.СсылкаСИдентификаторомCRM(СтруктураОбъекта.Идентификатор); 
		
		Если КлючевойКлиент = Неопределено Тогда
			
			УникальныйИдентификатор = Новый УникальныйИдентификатор(СтруктураОбъекта.Идентификатор);
			СсылкаУникальногоИдентификатора = Справочники.бг_КлючевыеКлиенты.ПолучитьСсылку(УникальныйИдентификатор);
			
			КлючевойКлиент = Справочники.бг_КлючевыеКлиенты.СоздатьЭлемент();
			КлючевойКлиент.УстановитьСсылкуНового(СсылкаУникальногоИдентификатора);
			КлючевойКлиент.ИдентификаторCRM = СтруктураОбъекта.Идентификатор;
			
		Иначе 
			
			КлючевойКлиент = КлючевойКлиент.ПолучитьОбъект();
			
		КонецЕсли;
		
		КлючевойКлиент.Наименование = СтруктураОбъекта.Наименование;	
		КлючевойКлиент.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьМассивПунктовНазначенияПоКодуTTSY(ПунктыНазначения, КодТТSY)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	битПунктыНазначения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.битПунктыНазначения КАК битПунктыНазначения
		|ГДЕ
		|	битПунктыНазначения.КодТТSY = &КодТТSY";
	
	Запрос.УстановитьПараметр("КодТТSY", КодТТSY);
	
	Пункты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПунктыНазначения, Пункты, Истина);
		
КонецПроцедуры

Процедура ЗаполнитьРеквизитыCRMПунктаНазначения(Ссылка, СтруктураОбъекта, КаналПродаж, Территория)

	ПунктНазначенияОбъект = Ссылка.ПолучитьОбъект(); 
	Если Не (ЗначениеЗаполнено(ПунктНазначенияОбъект.КодТТSY) 
		И ПунктНазначенияОбъект.КодТТSY <> СтруктураОбъекта.Код) Тогда
		
		ПунктНазначенияОбъект.КодТТSY 			= СтруктураОбъекта.Код;
		ПунктНазначенияОбъект.ИдентификаторCRM 	= СтруктураОбъекта.Идентификатор;
		ПунктНазначенияОбъект.КаналПродаж		= КаналПродаж;
		ПунктНазначенияОбъект.Территория		= Территория;
		
		ПунктНазначенияОбъект.Записать();

	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПунктыНазначения()

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И &УсловиеПоискаПоКПП
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битПунктыНазначения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Контрагент КАК ВТ_Контрагент
	|		ПО битПунктыНазначения.Клиент = ВТ_Контрагент.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

#КонецОбласти

#КонецОбласти // Конец СлужебныеПроцедурыИФункции