#Область ПрограммныйИнтерфейс

// Помечает на удаление документ выбранного типа из таблицы подчиненных документов. 
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//                 
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Процедура ПометитьНаУдалениеПодчиненныйДокумент(ПодчиненныеДокументы, ИмяДокумента) Экспорт

	ДанныеПодчиненногоДокумента = ДанныеПодчиненногоДокумента(ПодчиненныеДокументы, ИмяДокумента);
	Если ДанныеПодчиненногоДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеПодчиненногоДокумента.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = ДанныеПодчиненногоДокумента.Документ.ПолучитьОбъект();
	ДокументОбъект.УстановитьПометкуУдаления(Истина);

КонецПроцедуры

// Помечает на удаление документы выбранного типа из таблицы подчиненных документов. 
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//                 
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Процедура ПометитьНаУдалениеПодчиненныеДокументы(ПодчиненныеДокументы, ИмяДокумента) Экспорт

	ДанныеПодчиненныхДокументов = ДанныеПодчиненныхДокументов(ПодчиненныеДокументы, ИмяДокумента);
	
	Для Каждого ДанныеПодчиненногоДокумента Из ДанныеПодчиненныхДокументов Цикл
		
		Если ДанныеПодчиненногоДокумента.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДанныеПодчиненногоДокумента.Документ.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

// Отменяет проведение документа выбранного типа из таблицы подчиненных документов. 
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//                 
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Процедура ОтменитьПроведениеПодчиненногоДокумента(ПодчиненныеДокументы, ИмяДокумента) Экспорт

	ДанныеПодчиненногоДокумента = ДанныеПодчиненногоДокумента(ПодчиненныеДокументы, ИмяДокумента);
	Если ДанныеПодчиненногоДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДанныеПодчиненногоДокумента.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = ДанныеПодчиненногоДокумента.Документ.ПолучитьОбъект();
	ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);

КонецПроцедуры

// Отменяет проведение документов выбранных типов из таблицы подчиненных документов.
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Процедура ОтменитьПроведениеПодчиненныхДокументов(ПодчиненныеДокументы, ИмяДокумента) Экспорт

	ДанныеПодчиненныхДокументов = ДанныеПодчиненныхДокументов(ПодчиненныеДокументы, ИмяДокумента);
	
	Для Каждого ДанныеПодчиненногоДокумента Из ДанныеПодчиненныхДокументов Цикл
		
		Если Не ДанныеПодчиненногоДокумента.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДанныеПодчиненногоДокумента.Документ.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЦикла;
	
КонецПроцедуры

// Вовзвращает пустую структуру полей данных документа аналогичную ДанныеПодчиненногоДокумента(). 
//
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Функция НовыйДанныеПодчиненногоДокумента(ИмяДокумента) Экспорт
	
	Возврат Новый Структура("ИмяДокумента, Документ, ПометкаУдаления, Проведен, Номер", ИмяДокумента,, Ложь, Ложь, "");
	
КонецФункции

// Вовзвращает данные документа выбранного типа из таблицы подчиненных документов. 
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//                 
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Функция ДанныеПодчиненногоДокумента(ПодчиненныеДокументы, ИмяДокумента) Экспорт
	
	ДанныеПодчиненногоДокумента = ПодчиненныеДокументы.Найти(ИмяДокумента, "ИмяДокумента");
	
	Если ДанныеПодчиненногоДокумента <> Неопределено 
		И Не ЗначениеЗаполнено(ДанныеПодчиненногоДокумента.Документ) Тогда
		
		ДанныеПодчиненногоДокумента = Неопределено;
	КонецЕсли;
	
	Возврат ДанныеПодчиненногоДокумента;
	
КонецФункции

// Вовзвращает данные документов выбранного типа из таблицы подчиненных документов. 
//
// Параметры:
//  ПодчиненныеДокументы - ТаблицаЗначений - таблица документов, поля:
//  	Документ, Проведен, ПометкаУдаления, ИмяДокумента.
//                 
//  ИмяДокумента - Строка - имя документа как в конфигурации.
//
Функция ДанныеПодчиненныхДокументов(ПодчиненныеДокументы, ИмяДокумента) Экспорт
	
	Отбор = Новый Структура("ИмяДокумента", ИмяДокумента);
	
	ДанныеПодчиненныхДокументов = ПодчиненныеДокументы.НайтиСтроки(Отбор);
	
	Возврат ДанныеПодчиненныхДокументов;
	
КонецФункции

#КонецОбласти