#Область ПрограммныйИнтерфейс

Процедура ЗакрытьЗаказыКлиентов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);		
			
	ПричинаОтменыЗаказа = бг_КонстантыПовтИсп.ЗначениеКонстанты("ПричинаЗакрытияЗаказов");
		
	ЗаказыКЗакрытию = ЗаказыКлиентовДляЗакрытия();
	
	СтруктураДополнительныхПараметров = Новый Структура;
	СтруктураДополнительныхПараметров.Вставить("ИмяТабличнойЧасти",				"Товары");
	СтруктураДополнительныхПараметров.Вставить("ПричинаОтмены",					ПричинаОтменыЗаказа);
	СтруктураДополнительныхПараметров.Вставить("ПроверятьОстатки",				Ложь);
	СтруктураДополнительныхПараметров.Вставить("ОтменитьНеотработанныеСтроки",	Истина);
	СтруктураДополнительныхПараметров.Вставить("СкорректироватьМерныеТовары",	Ложь);
	СтруктураДополнительныхПараметров.Вставить("СкорректироватьМерныеТоварыПоПриемке", Ложь);
	СтруктураДополнительныхПараметров.Вставить("СкорректироватьЦены",			Ложь);
	СтруктураДополнительныхПараметров.Вставить("ЗакрыватьЗаказы",				Истина);	 
		
	ВыполнитьЗакрытиеЗаказов(ЗаказыКЗакрытию, СтруктураДополнительныхПараметров);
		
КонецПроцедуры	

Процедура ПометитьНаУдалениеПодчиненныеДокументы(Источник) Экспорт
	
	// помечать на удаление связанные документы только у полностью закрытых заказов
	КоличествоСтрокТоваров = Источник.Товары.Количество();
	
	КоличествоОтмененныхСтрок = Источник.Товары.Итог("Отменено");
	
	Если Не (КоличествоОтмененныхСтрок > 0 
		И КоличествоСтрокТоваров = КоличествоОтмененныхСтрок) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПодчиненныеДокументы = Документы.ЗаказКлиента.бг_ПодчиненныеДокументы(Источник.Ссылка);
	
	бг_РаботаСДокументами.ПометитьНаУдалениеПодчиненныеДокументы(ПодчиненныеДокументы, "РасходныйОрдерНаТовары");
	бг_РаботаСДокументами.ПометитьНаУдалениеПодчиненныеДокументы(ПодчиненныеДокументы, "битОтражениеФактаПоРасходномуОрдеру");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗаказыКлиентовДляЗакрытия()
	
	Запрос = Новый Запрос; 
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бг_НастройкиЗакрытияЗаказов.Организация КАК Организация,
	|	бг_НастройкиЗакрытияЗаказов.ИсточникЗаказа КАК ИсточникЗаказа,
	|	бг_НастройкиЗакрытияЗаказов.КоличествоДнейПросрочки КАК КоличествоДнейПросрочки
	|ПОМЕСТИТЬ НастройкиЗакрытияЗаказов
	|ИЗ
	|	РегистрСведений.бг_НастройкиЗакрытияЗаказов КАК бг_НастройкиЗакрытияЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЗакрытияЗаказов.Организация КАК Организация,
	|	НастройкиЗакрытияЗаказов.КоличествоДнейПросрочки КАК КоличествоДнейПросрочки
	|ПОМЕСТИТЬ НастройкиЗакрытияПоОрганизациям
	|ИЗ
	|	НастройкиЗакрытияЗаказов КАК НастройкиЗакрытияЗаказов
	|ГДЕ
	|	НастройкиЗакрытияЗаказов.ИсточникЗаказа = ЗНАЧЕНИЕ(Перечисление.бг_ИсточникиЗагрузкиЗаказовКлиентов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЗакрытияЗаказов.Организация КАК Организация,
	|	НастройкиЗакрытияЗаказов.ИсточникЗаказа КАК ИсточникЗаказа,
	|	НастройкиЗакрытияЗаказов.КоличествоДнейПросрочки КАК КоличествоДнейПросрочки
	|ПОМЕСТИТЬ НастройкиЗакрытияПоОрганизациямИИсточникам
	|ИЗ
	|	НастройкиЗакрытияЗаказов КАК НастройкиЗакрытияЗаказов
	|ГДЕ
	|	НастройкиЗакрытияЗаказов.ИсточникЗаказа <> ЗНАЧЕНИЕ(Перечисление.бг_ИсточникиЗагрузкиЗаказовКлиентов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиЗакрытияЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК ЗаказКлиента,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента.Организация КАК Организация,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента.бг_ИсточникЗаказа КАК ИсточникЗаказа
	|ПОМЕСТИТЬ ЗаказыКлиентов
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки КАК ЗаказыКлиентовОстатки
	|ГДЕ
	|	ЗаказыКлиентовОстатки.ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
	|	И ЗаказыКлиентовОстатки.ЗаказКлиента.Проведен
	|	И (ЗаказыКлиентовОстатки.ЗаказаноОстаток <> 0
	|			ИЛИ ЗаказыКлиентовОстатки.КОформлениюОстаток <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаказКлиента,
	|	Организация,
	|	ИсточникЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКлиентов.ЗаказКлиента КАК ЗаказКлиента
	|ИЗ
	|	ЗаказыКлиентов КАК ЗаказыКлиентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиЗакрытияПоОрганизациям КАК НастройкиЗакрытияПоОрганизациям
	|		ПО (ЗаказыКлиентов.Организация = НастройкиЗакрытияПоОрганизациям.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиЗакрытияПоОрганизациямИИсточникам КАК НастройкиЗакрытияПоОрганизациямИИсточникам
	|		ПО (ЗаказыКлиентов.Организация = НастройкиЗакрытияПоОрганизациямИИсточникам.Организация)
	|			И (ЗаказыКлиентов.ИсточникЗаказа = НастройкиЗакрытияПоОрганизациямИИсточникам.ИсточникЗаказа)
	|ГДЕ
	|	ЕСТЬNULL(НастройкиЗакрытияПоОрганизациямИИсточникам.КоличествоДнейПросрочки, ЕСТЬNULL(НастройкиЗакрытияПоОрганизациям.КоличествоДнейПросрочки, 0)) <> 0
	|	И ДОБАВИТЬКДАТЕ(ЗаказыКлиентов.ДатаОтгрузки, ДЕНЬ, ЕСТЬNULL(НастройкиЗакрытияПоОрганизациямИИсточникам.КоличествоДнейПросрочки, ЕСТЬNULL(НастройкиЗакрытияПоОрганизациям.КоличествоДнейПросрочки, 0))) < &ТекущаяДата";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаказКлиента");
			
КонецФункции	
	
Процедура ВыполнитьЗакрытиеЗаказов(ДокументыКОбработке, СтруктураДополнительныхПараметров)
	
	ШаблонОшибки = НСтр("ru='Автозакрытие заказов клиентов: %ОписаниеОшибки%'");
	
	Для Каждого Документ Из ДокументыКОбработке Цикл
		
		Попытка
			
			ЗакрытьЗаказ(Документ, СтруктураДополнительныхПараметров);
			
		Исключение
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,
				Документ,
				СтрЗаменить(ШаблонОшибки, "%ОписаниеОшибки%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
				
		КонецПопытки;	
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗакрытьЗаказ(Документ, СтруктураДополнительныхПараметров)

	// Захват объекта для редактирования			
	ЗаблокироватьДанныеДляРедактирования(Документ);
	
	// Получение объекта документа
	ДокументОбъект = Документ.ПолучитьОбъект();
	
	ДокументИзменен = ЗаказыСервер.СкорректироватьСтрокиЗаказа(ДокументОбъект, СтруктураДополнительныхПараметров);
	
	Если ДокументИзменен Тогда
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти
