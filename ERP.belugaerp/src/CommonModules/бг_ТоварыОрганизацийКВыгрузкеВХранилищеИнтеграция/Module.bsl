#Область ПрограммныИнтерфейс

Процедура ЗарегистрироватьИсходящееСообщениеВыгрузкиОстатков() Экспорт

	Перем адаптер_ПодпискиНаСобытияВызовСервера, адаптер_НастройкиОбменаПовтИсп;
	адаптер_ПодпискиНаСобытияВызовСервера = ОбщегоНазначения.ОбщийМодуль("адаптер_ПодпискиНаСобытияВызовСервера");
	адаптер_НастройкиОбменаПовтИсп = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбменаПовтИсп");
	
	ПараметрыПодключения = адаптер_НастройкиОбменаПовтИсп.НастройкиПодключенияДляВыгрузки();
	Если ПараметрыПодключения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяРегистраСведений = Метаданные.РегистрыСведений.бг_ТоварыОрганизацийКВыгрузкеВХранилище.ПолноеИмя();
	НастройкиВыгрузки = адаптер_НастройкиОбменаПовтИсп.ПолучитьНастройкиВыгрузкиПоОбъекту(ПолноеИмяРегистраСведений);
		
	Если НастройкиВыгрузки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не бг_КонстантыПовтИсп.ЗначениеКонстанты("ИспользоватьВыгрузкуОстатковТоваровОрганизацийВоВнешнееХранилище") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураЗаписиРегистра = Новый Структура("Отбор, ПолноеИмя", Новый Массив, ПолноеИмяРегистраСведений);
	ДополнительныеСвойства = Новый Структура("ВыполнитьОбработкуНовогоСообщения", Истина);
	
	НачатьТранзакцию();
	Попытка
		// Блокируем константу, чтобы избежать одновременного выполнения выгрузки в разных экземплярах задания
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Константа.бг_ДатаПоследнейВыгрузкиОстатковВХранилище");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		адаптер_ПодпискиНаСобытияВызовСервера.ЗарегистрироватьИсходящееСообщение(
			СтруктураЗаписиРегистра, ДополнительныеСвойства, НастройкиВыгрузки);
		
		Если ДополнительныеСвойства.Свойство("ТелоНовогоСообщенияУспешноСформировано")
			И ДополнительныеСвойства.ТелоНовогоСообщенияУспешноСформировано Тогда
			ОбновитьДатуПоследнейВыгрузкиОстатковВХранилище();	
			ЗафиксироватьТранзакцию();
		Иначе
			ОтменитьТранзакцию();
		КонецЕсли;
	Исключение
		ОтменитьТранзакцию();
		
		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Выгрузка остатков товаров организаций во внешнее хранилище'"),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ОписаниеОшибки);
			
		ВызватьИсключение ОписаниеОшибки;
	КонецПопытки;
	
КонецПроцедуры 

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
		
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);

КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(СправочникЗаписиРегистров, ДанныеСообщения) Экспорт
	
	// ДанныеВыгружаемогоОбъекта - пустая структура данных, если не заполнить, то сообщение не будет выгружено.
	ДанныеВыгружаемогоОбъекта = Новый Структура;
	ДанныеВыгружаемогоОбъекта.Вставить("ПолноеИмя",	ДанныеСообщения.МетаданныеОбъекта.ПолноеИмя());
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты",	Новый Массив);
	ДанныеВыгружаемогоОбъекта.Вставить("Отбор",		Новый Массив);
		
	КаталогВыгрузкиОстатков = бг_КонстантыПовтИсп.ЗначениеКонстанты("КаталогВыгрузкиДанныхДляВнешнегоХранилища");
	
	// Получаем необходимые данные сразу в формате, необходимом для обработки адаптером.
	ВыгружаемыеДанные = ВыгружаемыеДанные(
		ДанныеСообщения,
		КаталогВыгрузкиОстатков);
	
	Если ВыгружаемыеДанные = Неопределено Тогда
		Возврат ДанныеВыгружаемогоОбъекта;
	КонецЕсли;
	
	// Заполняем "Реквизиты".
	ДанныеШапки = Новый Структура;
	ДанныеШапки.Вставить("АдресФайлаОстатков",		ВыгружаемыеДанные.АдресФайлаОстатковJSON);
	
	ДанныеВыгружаемогоОбъекта.Реквизиты.Добавить(ДанныеШапки);
	
	Возврат ДанныеВыгружаемогоОбъекта;
	
КонецФункции

Процедура ОчиститьИзмененияДляВыгрузкиВоВнешнееХранилище() Экспорт
	
	ДатаПоследнейВыгрузкиОстатков = Константы.бг_ДатаПоследнейВыгрузкиОстатковВХранилище.Получить();
	КоличествоДнейХраненияИзменений = бг_КонстантыПовтИсп.ЗначениеКонстанты("КоличествоДнейХраненияИзмененийТоваровОрганизаций");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.Период КАК Период
		|ИЗ
		|	РегистрСведений.бг_ТоварыОрганизацийКВыгрузкеВХранилище КАК бг_ТоварыОрганизацийКВыгрузкеВХранилище
		|ГДЕ
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.Период < &ДатаПоследнейВыгрузкиОстатков
		|	И РАЗНОСТЬДАТ(бг_ТоварыОрганизацийКВыгрузкеВХранилище.Период, &ТекущаяДата, ДЕНЬ) >= &КоличествоДнейХраненияИзменений";	
	Запрос.УстановитьПараметр("ДатаПоследнейВыгрузкиОстатков", ДатаПоследнейВыгрузкиОстатков);
	Запрос.УстановитьПараметр("КоличествоДнейХраненияИзменений", КоличествоДнейХраненияИзменений);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		ИзмененияКВыгрузкеНаборЗаписей = РегистрыСведений.бг_ТоварыОрганизацийКВыгрузкеВХранилище.СоздатьНаборЗаписей();
		ИзмененияКВыгрузкеНаборЗаписей.Отбор.Период.Установить(Выборка.Период);		
		ИзмененияКВыгрузкеНаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	// Реквизиты в шапку сообщения
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"АдресФайлаОстатков",
		ОбщегоНазначения.ОписаниеТипаСтрока(500));
		
	// Реквизиты в запись
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Склад",
		Новый ОписаниеТипов("СправочникСсылка.Склады"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Номенклатура",
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Серия",
		Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));	
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Количество",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));

КонецПроцедуры

Функция ВыгружаемыеДанные(ДанныеСообщения, КаталогВыгрузкиОстатков)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
		
	ОстаткиКВыгрузке = ОстаткиТоваровОрганизацийКВыгрузке();

	Если ОстаткиКВыгрузке.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Конвертируем полученные данные остатков в структуру данных адаптера.
	ВыгружаемыеДанные = Новый Структура;
		
	// Попытка сохранить остатки в файл JSON.
	АдресФайлаОстатковJSON = АдресФайлаОстатковJSON(
		ДанныеПоОстаткамВФорматеJSON(ОстаткиКВыгрузке),
		КаталогВыгрузкиОстатков);
	
	Если АдресФайлаОстатковJSON <> Неопределено Тогда
		ВыгружаемыеДанные.Вставить("АдресФайлаОстатковJSON", АдресФайлаОстатковJSON);
	КонецЕсли;

	Возврат ВыгружаемыеДанные;

КонецФункции

Функция ОстаткиТоваровОрганизацийКВыгрузке()
	
	ДатаПоследнейВыгрузкиОстатков = Константы.бг_ДатаПоследнейВыгрузкиОстатковВХранилище.Получить(); 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПоместитьНеОбработанныеИзмененияТоваровОрганизацийКВыгрузкеВоВременнуюТаблицу(МенеджерВременныхТаблиц);
	
	ОстаткиИзмененныеРанееДатыВыгрузки = ОстаткиТоваровИзмененныеРанееПоследнейДатыВыгрузки(
		ДатаПоследнейВыгрузкиОстатков, МенеджерВременныхТаблиц);
	ОстаткиИзмененныеПозднееДатыВыгрузки = ОстаткиТоваровИзмененныеПозднееПоследнейДатыВыгрузки(
		ДатаПоследнейВыгрузкиОстатков, МенеджерВременныхТаблиц);
	
	ОстаткиКВыгрузке = ОстаткиИзмененныеРанееДатыВыгрузки.Скопировать();	
	Для Каждого СтрокаОстатки Из ОстаткиИзмененныеПозднееДатыВыгрузки Цикл 
		ЗаполнитьЗначенияСвойств(ОстаткиКВыгрузке.Добавить(), СтрокаОстатки) 
	КонецЦикла;
	
	УстановитьПризнакОбработкиИзмененийТоваровОрганизаций(МенеджерВременныхТаблиц);
	
	Возврат ОстаткиКВыгрузке;
	
КонецФункции

Процедура ПоместитьНеОбработанныеИзмененияТоваровОрганизацийКВыгрузкеВоВременнуюТаблицу(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.Период КАК Период,
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.Организация КАК Организация,
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.ИдентификаторЗаписи КАК ИдентификаторЗаписи,
		|	бг_ТоварыОрганизацийКВыгрузкеВХранилище.ДатаАктуальностиОстатков КАК ДатаАктуальностиОстатков
		|ПОМЕСТИТЬ втИзмененияТоваровОрганизацийКВыгрузке
		|ИЗ
		|	РегистрСведений.бг_ТоварыОрганизацийКВыгрузкеВХранилище КАК бг_ТоварыОрганизацийКВыгрузкеВХранилище
		|ГДЕ
		|	НЕ бг_ТоварыОрганизацийКВыгрузкеВХранилище.Обработано
		|	И бг_ТоварыОрганизацийКВыгрузкеВХранилище.Период < &НачалоДняТекущаяДата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втИзмененияТоваровОрганизацийКВыгрузке.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ втАналитикиУчетаНоменклатуры
		|ИЗ
		|	втИзмененияТоваровОрганизацийКВыгрузке КАК втИзмененияТоваровОрганизацийКВыгрузке
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втАналитикиУчетаНоменклатуры.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	ВЫРАЗИТЬ(КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Справочник.Склады) КАК МестоХранения,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение
		|ПОМЕСТИТЬ втДанныеАналитикиУчетаНоменклатуры
		|ИЗ
		|	втАналитикиУчетаНоменклатуры КАК втАналитикиУчетаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО втАналитикиУчетаНоменклатуры.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|ГДЕ
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады
		|	И НЕ КлючиАналитикиУчетаНоменклатуры.МестоХранения = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	И КлючиАналитикиУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИзмененияТоваровОрганизацийКВыгрузке.Период КАК Период,
		|	втИзмененияТоваровОрганизацийКВыгрузке.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	втИзмененияТоваровОрганизацийКВыгрузке.Организация КАК Организация,
		|	втИзмененияТоваровОрганизацийКВыгрузке.ИдентификаторЗаписи КАК ИдентификаторЗаписи,
		|	втИзмененияТоваровОрганизацийКВыгрузке.ДатаАктуальностиОстатков КАК ДатаАктуальностиОстатков
		|ПОМЕСТИТЬ втИзмененияТоваровОрганизацийДляОбработки
		|ИЗ
		|	втИзмененияТоваровОрганизацийКВыгрузке КАК втИзмененияТоваровОрганизацийКВыгрузке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеАналитикиУчетаНоменклатуры КАК втДанныеАналитикиУчетаНоменклатуры
		|		ПО втИзмененияТоваровОрганизацийКВыгрузке.АналитикаУчетаНоменклатуры = втДанныеАналитикиУчетаНоменклатуры.АналитикаУчетаНоменклатуры";
	Запрос.УстановитьПараметр("НачалоДняТекущаяДата", НачалоДня(ТекущаяДата()));
	РезультатЗапроса = Запрос.Выполнить();

КонецПроцедуры

Функция ОстаткиТоваровИзмененныеРанееПоследнейДатыВыгрузки(ДатаПоследнейВыгрузкиОстатков, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	втИзмененияТоваровОрганизацийДляОбработки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	втИзмененияТоваровОрганизацийДляОбработки.Организация КАК Организация,
		|	МИНИМУМ(втИзмененияТоваровОрганизацийДляОбработки.ДатаАктуальностиОстатков) КАК ДатаАктуальностиОстатков
		|ПОМЕСТИТЬ втДатыАктуальностиОстатковПоИзмерениям
		|ИЗ
		|	втИзмененияТоваровОрганизацийДляОбработки КАК втИзмененияТоваровОрганизацийДляОбработки
		|ГДЕ
		|	втИзмененияТоваровОрганизацийДляОбработки.ДатаАктуальностиОстатков < &ДатаПоследнейВыгрузкиОстатков
		|
		|СГРУППИРОВАТЬ ПО
		|	втИзмененияТоваровОрганизацийДляОбработки.АналитикаУчетаНоменклатуры,
		|	втИзмененияТоваровОрганизацийДляОбработки.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втДатыАктуальностиОстатков.ДатаАктуальностиОстатков КАК ДатаАктуальностиОстатков,
		|	втДатыАктуальностиОстатков.Организация КАК Организация
		|ИЗ
		|	втДатыАктуальностиОстатковПоИзмерениям КАК втДатыАктуальностиОстатков";	
	Запрос.УстановитьПараметр("ДатаПоследнейВыгрузкиОстатков", ДатаПоследнейВыгрузкиОстатков);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОстаткиКВыгрузке = Новый ТаблицаЗначений;
	ОстаткиКВыгрузке.Колонки.Добавить("Организация",	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ОстаткиКВыгрузке.Колонки.Добавить("Склад",			Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ОстаткиКВыгрузке.Колонки.Добавить("Номенклатура",	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ОстаткиКВыгрузке.Колонки.Добавить("Серия",			Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ОстаткиКВыгрузке.Колонки.Добавить("Количество",		ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ОстаткиКВыгрузке.Колонки.Добавить("Период",			ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Пока Выборка.Следующий() Цикл	
		ОстаткиТоваровПоДатеАктуальности = ОстаткиТоваровПоДатеАктуальности(
			Выборка.ДатаАктуальностиОстатков, Выборка.Организация, МенеджерВременныхТаблиц);
		ДополнитьОстаткамиНаДатыБезДвижений(ОстаткиТоваровПоДатеАктуальности);
		
		Для Каждого СтрокаОстатки Из ОстаткиТоваровПоДатеАктуальности Цикл 
			ЗаполнитьЗначенияСвойств(ОстаткиКВыгрузке.Добавить(), СтрокаОстатки);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ОстаткиКВыгрузке;
	
КонецФункции

Функция ОстаткиТоваровИзмененныеПозднееПоследнейДатыВыгрузки(ДатаПоследнейВыгрузкиОстатков, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстаткиИОбороты.Организация КАК Организация,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ТоварыОрганизацийОстаткиИОбороты.Период КАК Период
		|ПОМЕСТИТЬ втВсеОстаткиПоДням
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&ДатаПоследнейВыгрузкиОстатков, , День, , ) КАК ТоварыОрганизацийОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втИзмененияТоваровОрганизацийДляОбработки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	втИзмененияТоваровОрганизацийДляОбработки.Организация КАК Организация,
		|	НАЧАЛОПЕРИОДА(втИзмененияТоваровОрганизацийДляОбработки.ДатаАктуальностиОстатков, ДЕНЬ) КАК Период,
		|	0 КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ втАналитикиНоменклатурыБезОстатков
		|ИЗ
		|	втИзмененияТоваровОрганизацийДляОбработки КАК втИзмененияТоваровОрганизацийДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеОстаткиПоДням КАК втВсеОстаткиПоДням
		|		ПО втИзмененияТоваровОрганизацийДляОбработки.АналитикаУчетаНоменклатуры = втВсеОстаткиПоДням.АналитикаУчетаНоменклатуры
		|			И втИзмененияТоваровОрганизацийДляОбработки.Организация = втВсеОстаткиПоДням.Организация
		|ГДЕ
		|	втИзмененияТоваровОрганизацийДляОбработки.ДатаАктуальностиОстатков >= &ДатаПоследнейВыгрузкиОстатков
		|	И втВсеОстаткиПоДням.АналитикаУчетаНоменклатуры ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВсеОстаткиПоДням.Организация КАК Организация,
		|	ВЫРАЗИТЬ(КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Справочник.Склады) КАК Склад,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	СУММА(втВсеОстаткиПоДням.КоличествоКонечныйОстаток) КАК Количество,
		|	втВсеОстаткиПоДням.Период КАК Период
		|ИЗ
		|	втВсеОстаткиПоДням КАК втВсеОстаткиПоДням
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО втВсеОстаткиПоДням.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|ГДЕ
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады
		|	И НЕ КлючиАналитикиУчетаНоменклатуры.МестоХранения = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	И КлючиАналитикиУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	втВсеОстаткиПоДням.Организация,
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Серия,
		|	втВсеОстаткиПоДням.Период
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	втАналитикиНоменклатурыБезОстатков.Организация,
		|	ВЫРАЗИТЬ(КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Справочник.Склады),
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Серия,
		|	втАналитикиНоменклатурыБезОстатков.КоличествоКонечныйОстаток,
		|	втАналитикиНоменклатурыБезОстатков.Период
		|ИЗ
		|	втАналитикиНоменклатурыБезОстатков КАК втАналитикиНоменклатурыБезОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО втАналитикиНоменклатурыБезОстатков.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|ГДЕ
		|	КлючиАналитикиУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады
		|	И НЕ КлючиАналитикиУчетаНоменклатуры.МестоХранения = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	И КлючиАналитикиУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Склад,
		|	Номенклатура,
		|	Серия,
		|	Период";
	Запрос.УстановитьПараметр("ДатаПоследнейВыгрузкиОстатков", ДатаПоследнейВыгрузкиОстатков);	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОстаткиТоваровПоДатеАктуальности(ДатаАктуальностиОстатков, Организация, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзмеренияОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ИзмеренияОстатков.Организация КАК Организация
		|ПОМЕСТИТЬ втАналитикиПоОрганизацииИДатеАктуальности
		|ИЗ
		|	втДатыАктуальностиОстатковПоИзмерениям КАК ИзмеренияОстатков
		|ГДЕ
		|	ИзмеренияОстатков.ДатаАктуальностиОстатков = &ДатаАктуальностиОстатков
		|	И ИзмеренияОстатков.Организация = &Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстаткиИОбороты.Организация КАК Организация,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ТоварыОрганизацийОстаткиИОбороты.Период КАК Период
		|ПОМЕСТИТЬ втВсеОстаткиПоДням
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(
		|			&ДатаАктуальностиОстатков,
		|			,
		|			День,
		|			,
		|			(АналитикаУчетаНоменклатуры, Организация) В
		|				(ВЫБРАТЬ
		|					ИзмеренияОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|					ИзмеренияОстатков.Организация КАК Организация
		|				ИЗ
		|					втАналитикиПоОрганизацииИДатеАктуальности КАК ИзмеренияОстатков)) КАК ТоварыОрганизацийОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втАналитикиПоОрганизацииИДатеАктуальности.Организация КАК Организация,
		|	втДанныеАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
		|	втДанныеАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	втДанныеАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	СУММА(ЕСТЬNULL(втВсеОстаткиПоДням.КоличествоКонечныйОстаток, 0)) КАК Количество,
		|	ЕСТЬNULL(втВсеОстаткиПоДням.Период, &ДатаАктуальностиОстатков) КАК Период
		|ИЗ
		|	втАналитикиПоОрганизацииИДатеАктуальности КАК втАналитикиПоОрганизацииИДатеАктуальности
		|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеОстаткиПоДням КАК втВсеОстаткиПоДням
		|		ПО втАналитикиПоОрганизацииИДатеАктуальности.АналитикаУчетаНоменклатуры = втВсеОстаткиПоДням.АналитикаУчетаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеАналитикиУчетаНоменклатуры КАК втДанныеАналитикиУчетаНоменклатуры
		|		ПО втАналитикиПоОрганизацииИДатеАктуальности.АналитикаУчетаНоменклатуры = втДанныеАналитикиУчетаНоменклатуры.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	втАналитикиПоОрганизацииИДатеАктуальности.Организация,
		|	втДанныеАналитикиУчетаНоменклатуры.МестоХранения,
		|	втДанныеАналитикиУчетаНоменклатуры.Номенклатура,
		|	втДанныеАналитикиУчетаНоменклатуры.Серия,
		|	втВсеОстаткиПоДням.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Склад,
		|	Номенклатура,
		|	Серия,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втВсеОстаткиПоДням
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втАналитикиПоОрганизацииИДатеАктуальности";
	Запрос.УстановитьПараметр("ДатаАктуальностиОстатков", ДатаАктуальностиОстатков);
	Запрос.УстановитьПараметр("Организация", Организация);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДополнитьОстаткамиНаДатыБезДвижений(ТаблицаОстатковНачальная)
	
	Если ТаблицаОстатковНачальная.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТаблицаОстатковДополненная = ТаблицаОстатковНачальная.СкопироватьКолонки();
	
	НачалоДняТекущейДаты = НачалоДня(ТекущаяДата());
	Для НомерТекущейСтроки = 0 По ТаблицаОстатковНачальная.Количество() - 1 Цикл
		ТекущаяСтрока = ТаблицаОстатковНачальная[НомерТекущейСтроки];
		ГраницаДополненияПериодов = ГраницаДополненияПериодовДляТекущейСтрокиТаблицы(
			НомерТекущейСтроки, ТекущаяСтрока, ТаблицаОстатковНачальная, НачалоДняТекущейДаты);
			
		ТекущаяДополняемаяДата = ТекущаяСтрока.Период;
		Пока ТекущаяДополняемаяДата < ГраницаДополненияПериодов Цикл
			НоваяСтрокаОстатков = ТаблицаОстатковДополненная.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаОстатков, ТекущаяСтрока);
			НоваяСтрокаОстатков.Период = ТекущаяДополняемаяДата;
				
			ТекущаяДополняемаяДата = НачалоСледующегоДня(НоваяСтрокаОстатков.Период);	
		КонецЦикла;	
	КонецЦикла;
	
	ТаблицаОстатковНачальная = ТаблицаОстатковДополненная;
	
КонецПроцедуры

Функция ГраницаДополненияПериодовДляТекущейСтрокиТаблицы(НомерТекущейСтроки, ТекущаяСтрока, ТаблицаОстатков, НачалоДняТекущейДаты)
	
	ГраницаДополненияПериодов = НачалоДняТекущейДаты;
	Если НомерТекущейСтроки < ТаблицаОстатков.Количество() - 1 Тогда
		СледующаяСтрокаОстатков = ТаблицаОстатков[НомерТекущейСтроки + 1];
		Если Не КлючиОстатковОтличаются(ТекущаяСтрока, СледующаяСтрокаОстатков) Тогда
			ГраницаДополненияПериодов = СледующаяСтрокаОстатков.Период;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ГраницаДополненияПериодов;
	
КонецФункции

Функция КлючиОстатковОтличаются(ИсходнаяСтрокаОстатков, СравниваемаяСтрокаОстатков)
	
	КлючиОстатковОтличаются = Истина;
	
	Если ИсходнаяСтрокаОстатков.Организация = СравниваемаяСтрокаОстатков.Организация
		И ИсходнаяСтрокаОстатков.Склад = СравниваемаяСтрокаОстатков.Склад
		И ИсходнаяСтрокаОстатков.Номенклатура = СравниваемаяСтрокаОстатков.Номенклатура
		И ИсходнаяСтрокаОстатков.Серия = СравниваемаяСтрокаОстатков.Серия Тогда
		
		КлючиОстатковОтличаются = Ложь;	
	КонецЕсли;
	
	Возврат КлючиОстатковОтличаются;

КонецФункции

Функция НачалоСледующегоДня(ТекущийДень)

	Возврат КонецДня(ТекущийДень) + 1;
	
КонецФункции

Процедура УстановитьПризнакОбработкиИзмененийТоваровОрганизаций(МенеджерВременныхТаблиц)
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	втИзмененияТоваровОрганизацийКВыгрузке.Период КАК Период,
		|	втИзмененияТоваровОрганизацийКВыгрузке.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	втИзмененияТоваровОрганизацийКВыгрузке.Организация КАК Организация,
		|	втИзмененияТоваровОрганизацийКВыгрузке.ИдентификаторЗаписи КАК ИдентификаторЗаписи,
		|	втИзмененияТоваровОрганизацийКВыгрузке.ДатаАктуальностиОстатков КАК ДатаАктуальностиОстатков,
		|	ИСТИНА КАК Обработано
		|ИЗ
		|	втИзмененияТоваровОрганизацийКВыгрузке КАК втИзмененияТоваровОрганизацийКВыгрузке";	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.бг_ТоварыОрганизацийКВыгрузкеВХранилище.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция АдресФайлаОстатковJSON(ДанныеПоОстаткамJSON, Знач Каталог)
	
	Каталог = СокрЛП(Каталог);
	ИмяФайла = Строка(Новый УникальныйИдентификатор());
	
	Если Не ЗначениеЗаполнено(Каталог) Тогда
		ВызватьИсключение НСтр("ru='Не задан каталог выгрузки остатков для внешнего хранилища.'");
	КонецЕсли;
	
	Если Не Прав(Каталог, 1) = "\" Тогда
		АдресФайлаОстатковJSON = СтрШаблон("%1\%2.json", Каталог, ИмяФайла);
	Иначе
		АдресФайлаОстатковJSON = СтрШаблон("%1%2.json", Каталог, ИмяФайла);
	КонецЕсли;
	
	Попытка
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.ОткрытьФайл(АдресФайлаОстатковJSON, "UTF-8",, Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет));
		ЗаписатьJSON(ЗаписьJSON, ДанныеПоОстаткамJSON);
		ЗаписьJSON.Закрыть();
		
		Возврат АдресФайлаОстатковJSON;		
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция ДанныеПоОстаткамВФорматеJSON(ТаблицаОстатков)
	
	ДанныеПоОстаткамJSON = Новый Массив;
	
	Для каждого СтрокаОстатков Из ТаблицаОстатков Цикл	
		ЗаписьПоОстакуТовараJSON = Новый Структура;
		
		Если ЗначениеЗаполнено(СтрокаОстатков.Организация) Тогда
			ЗаписьПоОстакуТовараJSON.Вставить(
				"Организация",
				XMLСтрока(СтрокаОстатков.Организация));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОстатков.Склад) Тогда
			ЗаписьПоОстакуТовараJSON.Вставить(
				"Склад",
				XMLСтрока(СтрокаОстатков.Склад));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОстатков.Номенклатура) Тогда
			ЗаписьПоОстакуТовараJSON.Вставить(
				"Номенклатура",
				XMLСтрока(СтрокаОстатков.Номенклатура));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОстатков.Серия) Тогда
			ЗаписьПоОстакуТовараJSON.Вставить(
				"Серия",
				XMLСтрока(СтрокаОстатков.Серия));
		КонецЕсли;
		
		ЗаписьПоОстакуТовараJSON.Вставить("Количество", СтрокаОстатков.Количество);
		ЗаписьПоОстакуТовараJSON.Вставить("Период", СтрокаОстатков.Период);
		
		ДанныеПоОстаткамJSON.Добавить(ЗаписьПоОстакуТовараJSON);
		
	КонецЦикла;
	
	Возврат ДанныеПоОстаткамJSON;

КонецФункции

Процедура ОбновитьДатуПоследнейВыгрузкиОстатковВХранилище()
	
	Константы.бг_ДатаПоследнейВыгрузкиОстатковВХранилище.Установить(НачалоДня(ТекущаяДата()));	
	
КонецПроцедуры

#КонецОбласти

