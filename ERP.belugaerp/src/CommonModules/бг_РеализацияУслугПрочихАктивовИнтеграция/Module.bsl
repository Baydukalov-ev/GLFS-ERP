#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());  
	
	ДобавитьКлючевыеРеквизиты(РеквизитыИСвойства);

КонецПроцедуры	

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");	
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	Если ИсточникОбъект = Неопределено Тогда
		Если ДанныеСообщения.Свойство("Объект") Тогда
			ТаблицаРасходы		  = ТабличнаяЧастьРасходыПоСсылке(ДанныеСообщения.Объект);
			ХозяйственнаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСообщения.Объект, "ХозяйственнаяОперация");
		Иначе
			ХозяйственнаяОперация = Неопределено;
		КонецЕсли;
	Иначе
		ХозяйственнаяОперация 	= ИсточникОбъект.ХозяйственнаяОперация;
		ТаблицаРасходы 			= ИсточникОбъект.Расходы.Выгрузить();
	КонецЕсли;		
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов Тогда
		
		// Проверка ограничения на продажу ОС и НМА в одном документе
		РезультатПроверки = Документы.РеализацияУслугПрочихАктивов.бг_ЭтоПродажиНМАиОСВОдномДокументе(ТаблицаРасходы);
		
		Если РезультатПроверки.Результат Тогда 
		     ВызватьИсключение НСтр("ru='Нельзя в одном документе указывать реализацию ОС и НМА'");
		КонецЕсли;
		
		//Дополнение Ключа
		ДополнитьКлючМаршрутизацииДляОСиНМА(РезультатПроверки, КлючМаршрутизации);
		
	КонецЕсли;				
		
	Возврат КлючМаршрутизации; 
	
КонецФункции

Процедура ДополнитьКлючМаршрутизацииДляОСиНМА(РезультатПроверки, КлючМаршрутизации)
		
	Если РезультатПроверки.ЕстьОсновныеСредства Тогда
		КлючМаршрутизации = КлючМаршрутизации + ".ОС";
	ИначеЕсли РезультатПроверки.ЕстьНМА Тогда
		КлючМаршрутизации = КлючМаршрутизации + ".НМА";
	КонецЕсли;
		
КонецПроцедуры

Функция ТабличнаяЧастьРасходыПоСсылке(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияУслугПрочихАктивовРасходы.НомерСтроки КАК НомерСтроки,
	|	РеализацияУслугПрочихАктивовРасходы.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РеализацияУслугПрочихАктивовРасходы.ВидАктива КАК ВидАктива
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Расходы КАК РеализацияУслугПрочихАктивовРасходы
	|ГДЕ
	|	РеализацияУслугПрочихАктивовРасходы.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Реквизиты шапки
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("ХозяйственнаяОперация");
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("Подразделение");
	ВыгружаемыеРеквизиты.Добавить("Менеджер");
	ВыгружаемыеРеквизиты.Добавить("Партнер");
	ВыгружаемыеРеквизиты.Добавить("Контрагент");
	ВыгружаемыеРеквизиты.Добавить("Соглашение");
	ВыгружаемыеРеквизиты.Добавить("Договор");
	ВыгружаемыеРеквизиты.Добавить("ГруппаФинансовогоУчета");
	ВыгружаемыеРеквизиты.Добавить("Валюта");
	ВыгружаемыеРеквизиты.Добавить("ВалютаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("ЦенаВключаетНДС");
	ВыгружаемыеРеквизиты.Добавить("НалогообложениеНДС");
	ВыгружаемыеРеквизиты.Добавить("СуммаДокумента");
	ВыгружаемыеРеквизиты.Добавить("СуммаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("ДатаПлатежа");
	ВыгружаемыеРеквизиты.Добавить("ФормаОплаты");
	ВыгружаемыеРеквизиты.Добавить("БанковскийСчетОрганизации");
	ВыгружаемыеРеквизиты.Добавить("БанковскийСчетКонтрагента");
	ВыгружаемыеРеквизиты.Добавить("Грузоотправитель");
	ВыгружаемыеРеквизиты.Добавить("Грузополучатель");
	ВыгружаемыеРеквизиты.Добавить("БанковскийСчетГрузоотправителя");
	ВыгружаемыеРеквизиты.Добавить("БанковскийСчетГрузополучателя");
	ВыгружаемыеРеквизиты.Добавить("АдресДоставки");
	ВыгружаемыеРеквизиты.Добавить("ДоверенностьНомер");
	ВыгружаемыеРеквизиты.Добавить("ДоверенностьДата");
	ВыгружаемыеРеквизиты.Добавить("ДоверенностьВыдана");
	ВыгружаемыеРеквизиты.Добавить("ДоверенностьЛицо");
	ВыгружаемыеРеквизиты.Добавить("Отпустил");
	ВыгружаемыеРеквизиты.Добавить("ОтпустилДолжность");
	ВыгружаемыеРеквизиты.Добавить("Основание");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("КонтактноеЛицо");
	ВыгружаемыеРеквизиты.Добавить("Руководитель");
	ВыгружаемыеРеквизиты.Добавить("ГлавныйБухгалтер");
	ВыгружаемыеРеквизиты.Добавить("ПорядокРасчетов");
	ВыгружаемыеРеквизиты.Добавить("ОснованиеДата");
	ВыгружаемыеРеквизиты.Добавить("ОснованиеНомер");
	ВыгружаемыеРеквизиты.Добавить("ИдентификаторПлатежа");
	ВыгружаемыеРеквизиты.Добавить("НаправлениеДеятельности");
	ВыгружаемыеРеквизиты.Добавить("ДокументОснование");
	ВыгружаемыеРеквизиты.Добавить("РеализацияНаОсновании");
	ВыгружаемыеРеквизиты.Добавить("ОтпустилДолжность");
	ВыгружаемыеРеквизиты.Добавить("КурсЧислитель");
	ВыгружаемыеРеквизиты.Добавить("КурсЗнаменатель");
	ВыгружаемыеРеквизиты.Добавить("Статус");
	ВыгружаемыеРеквизиты.Добавить("ДатаПереходаПраваСобственности");
	ВыгружаемыеРеквизиты.Добавить("РеализацияВзаимозависимомуЛицу");
	ВыгружаемыеРеквизиты.Добавить("ОплатаВВалюте");
	ВыгружаемыеРеквизиты.Добавить("ОбъектРасчетов");
	ВыгружаемыеРеквизиты.Добавить("Автор");
	
	// Реквизиты ТЧ "Доходы"
	ВыгружаемыеРеквизиты.Добавить("Доходы.Содержание");
	ВыгружаемыеРеквизиты.Добавить("Доходы.Количество");
	ВыгружаемыеРеквизиты.Добавить("Доходы.ЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("Доходы.Цена");
	ВыгружаемыеРеквизиты.Добавить("Доходы.Сумма");
	ВыгружаемыеРеквизиты.Добавить("Доходы.СтавкаНДС");
	ВыгружаемыеРеквизиты.Добавить("Доходы.СуммаНДС");
	ВыгружаемыеРеквизиты.Добавить("Доходы.СуммаСНДС");
	ВыгружаемыеРеквизиты.Добавить("Доходы.СтатьяДоходов");
	ВыгружаемыеРеквизиты.Добавить("Доходы.АналитикаДоходов");
	ВыгружаемыеРеквизиты.Добавить("Доходы.ИдентификаторСтроки");
	ВыгружаемыеРеквизиты.Добавить("Доходы.СуммаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("Доходы.КодТНВЭД");
	
	// Реквизиты ТЧ "Расходы"
	ВыгружаемыеРеквизиты.Добавить("Расходы.СтатьяРасходов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.АналитикаРасходов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.СтатьяАктивовПассивов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.АналитикаАктивовПассивов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.Сумма");
	ВыгружаемыеРеквизиты.Добавить("Расходы.СуммаРегл");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ПостояннаяРазница");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ВременнаяРазница");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ВидАктива");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ВнеоборотныйАктив");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ВосстановитьАмортизационнуюПремию");
	ВыгружаемыеРеквизиты.Добавить("Расходы.СтатьяДоходов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.АналитикаДоходов");
	ВыгружаемыеРеквизиты.Добавить("Расходы.СуммаАмортизационнойПремии");
	ВыгружаемыеРеквизиты.Добавить("Расходы.ИдентификаторСтроки");
	ВыгружаемыеРеквизиты.Добавить("Расходы.НастройкаСчетовУчета");
	
	// Реквизиты ТЧ "РасшифровкаПлатежа"
	ВыгружаемыеРеквизиты.Добавить("РасшифровкаПлатежа.Сумма");
	ВыгружаемыеРеквизиты.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	ВыгружаемыеРеквизиты.Добавить("РасшифровкаПлатежа.ОбъектРасчетов");
	
	// Реквизиты ТЧ "ПрослеживаемыеТовары"
	ВыгружаемыеРеквизиты.Добавить("ПрослеживаемыеТовары.НомерГТД");
	ВыгружаемыеРеквизиты.Добавить("ПрослеживаемыеТовары.КодТНВЭД");
	ВыгружаемыеРеквизиты.Добавить("ПрослеживаемыеТовары.КоличествоПоРНПТ");
	ВыгружаемыеРеквизиты.Добавить("ПрослеживаемыеТовары.ОсновноеСредство");

	Возврат СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
КонецФункции

Процедура ДобавитьКлючевыеРеквизиты(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ОбъектыРасчетов,
		"Объект", , 
		Метаданные.ОпределяемыеТипы.ОбъектРасчетов.Тип);
	
	бг_ПриобретениеТоваровУслугИнтеграция.ДобавитьКлючевыеПоляПервичногоДокумента(РеквизитыИСвойства);
	
КонецПроцедуры

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
