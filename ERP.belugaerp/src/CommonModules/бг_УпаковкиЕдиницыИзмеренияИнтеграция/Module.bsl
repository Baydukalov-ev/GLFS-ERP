#Область ПрограммныйИнтерфейс

Функция НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта) Экспорт
	
	Если СтруктураОбъекта = Неопределено Тогда
		Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
	
	Ссылка = бг_ОбщегоНазначенияСервер.СсылкаНаКлассификатор(
		СтруктураОбъекта,
		"Код",
		, //ЗначениеКлюча
		"ТаблицаДанных.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)");
	
	Возврат Ссылка;
	
КонецФункции

Процедура ВыгрузитьСвязанныеОбъекты(СправочникОбъект) Экспорт

	Если НеобходимоВыгружатьСвязаннуюНоменклатуру(СправочникОбъект) Тогда
		ВыгрузитьСвязаннуюНоменклатуру(СправочникОбъект);
	КонецЕсли;
	
КонецПроцедуры

Функция КодПаллеты() Экспорт
	
	Возврат "3001";
	
КонецФункции

Функция Европаллета() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТипоразмерыУпаковок.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТипоразмерыУпаковок КАК ТипоразмерыУпаковок
	|ГДЕ
	|	ТипоразмерыУпаковок.Наименование = ""Европаллета""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипоразмерыУпаковок.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт

	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты(); 
	
	ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты);
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		Реквизиты);

	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);

КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	Если ИсточникОбъект <> Неопределено Тогда
		Владелец = ИсточникОбъект.Владелец;
	ИначеЕсли ДанныеСообщения.Свойство("Объект") Тогда
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСообщения.Объект, "Владелец");
	Иначе	
		Возврат КлючМаршрутизации;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Владелец) И ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		ДанныеОпределенияКлюча = Новый Структура("ВидНоменклатуры, ВедетсяВERP, ВариантСинхронизацииWMS");
		
		ДанныеНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Владелец,
			"ВидНоменклатуры, ВидНоменклатуры.бг_ВедетсяВERP, ВидНоменклатуры.бг_ВариантСинхронизацииWMS");
			
		ДанныеОпределенияКлюча.ВидНоменклатуры = ДанныеНоменклатуры.ВидНоменклатуры; 
		ДанныеОпределенияКлюча.ВедетсяВERP = ДанныеНоменклатуры.ВидНоменклатурыбг_ВедетсяВERP; 
		ДанныеОпределенияКлюча.ВариантСинхронизацииWMS = ДанныеНоменклатуры.ВидНоменклатурыбг_ВариантСинхронизацииWMS; 
		
		Если ЗначениеЗаполнено(ДанныеОпределенияКлюча.ВидНоменклатуры) Тогда
			
			Если ДанныеОпределенияКлюча.ВедетсяВERP = Истина Тогда
				КлючМаршрутизации = КлючМаршрутизации + ".ERP";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеОпределенияКлюча.ВариантСинхронизацииWMS) Тогда
				КлючМаршрутизации = КлючМаршрутизации + ".WMS";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КлючМаршрутизации; 
	
КонецФункции

Процедура ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта, СписокСвойств, ИсключаяСвойства, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	СтандартнаяОбработка = Ложь;
	адаптер_ОбработчикиСобытийСтандартный.ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта);  
	ЗагружаемыйОбъект.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка;
	ЗагружаемыйОбъект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
	ЗагружаемыйОбъект.ДополнительныеСвойства.Вставить("ЭтоНоменклатураТОиР", Истина); 
	
	Если СтруктураОбъекта.Числитель = 1
		И СтруктураОбъекта.Знаменатель = 1 Тогда
		ЗагружаемыйОбъект.ДополнительныеСвойства.Вставить("СтандартнаяЗаписьНеТребуется", Истина);
	КонецЕсли;
	
КонецПроцедуры   

Процедура ЗаписатьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	Если ЗагружаемыйОбъект.ДополнительныеСвойства.Свойство("ЭтоНоменклатураТОиР") Тогда 
		
		Если ЗагружаемыйОбъект.ДополнительныеСвойства.Свойство("СтандартнаяЗаписьНеТребуется")
			И ЗагружаемыйОбъект.ДополнительныеСвойства.СтандартнаяЗаписьНеТребуется Тогда
			Возврат;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		адаптер_ОбработчикиСобытийСтандартный.ЗаписатьЗагружаемыйОбъект(ЗагружаемыйОбъект);
		Справочники.адаптер_ИсходящиеСообщения.ЗарегистрироватьИсходящееСообщениеПриЗаписи(
			ЗагружаемыйОбъект,
			,
			,
			ЗагружаемыйОбъект);
		Возврат;
	КонецЕсли;   
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	ДанныеВыгружаемогоОбъекта = адаптер_ОбработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	
	Если ДанныеВыгружаемогоОбъекта.Реквизиты.Количество() > 0  Тогда
		РеквизитыОбъекта = ДанныеВыгружаемогоОбъекта.Реквизиты[0];
		ДобавитьДанныеШтрихкодов(РеквизитыОбъекта, Объект);
	КонецЕсли;
	
	Возврат ДанныеВыгружаемогоОбъекта;

КонецФункции

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт
	
	// Выводить ключевое поле КодЕК_ПОСМ только для бг_ВариантСинхронизацииWMS = КодЕК_ПОСМ
	ЗаменяемыйТекст =
	"ВЫРАЗИТЬ(ВыгружаемыйОбъект.Владелец КАК Справочник.Номенклатура).КодЕК_ПОСМ КАК Владелец_ЗначениеРеквизитаКодЕК_ПОСМ";
	
	ТекстЗамены =
		СтрШаблон(
			"ВЫБОР
			|	КОГДА ВЫРАЗИТЬ(ВыгружаемыйОбъект.Владелец КАК Справочник.Номенклатура).ВидНоменклатуры.бг_ВариантСинхронизацииWMS
			| 			= ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_ПОСМ)
			|		ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ВыгружаемыйОбъект.Владелец КАК Справочник.Номенклатура).Код КАК СТРОКА(%1))
			|	ИНАЧЕ """"
			|КОНЕЦ КАК Владелец_ЗначениеРеквизитаКодЕК_ПОСМ",
			Формат(бг_НоменклатураИнтеграция.ДлинаКодаЕК_ПОСМ(), "ЧГ=0"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЗаменяемыйТекст, ТекстЗамены);
	
КонецПроцедуры

Функция РеквизитыУпаковокВыгружаемыеСНоменклатурой() Экспорт
	
	Реквизиты = Новый Массив;
	
	Реквизиты.Добавить("Наименование");
	Реквизиты.Добавить("Код");
	Реквизиты.Добавить("ЕдиницаИзмерения");
	Реквизиты.Добавить("ПометкаУдаления");
	Реквизиты.Добавить("Числитель");
	Реквизиты.Добавить("Знаменатель");
	Реквизиты.Добавить("Вес");
	Реквизиты.Добавить("бг_ИдентификаторЕКНоменклатуры");
	
	Возврат Реквизиты;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;

	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Код");
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("Владелец");
	ВыгружаемыеРеквизиты.Добавить("Родитель");
	ВыгружаемыеРеквизиты.Добавить("ЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("Числитель");
	ВыгружаемыеРеквизиты.Добавить("Знаменатель");
	ВыгружаемыеРеквизиты.Добавить("Объем");
	ВыгружаемыеРеквизиты.Добавить("ОбъемЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("Вес");
	ВыгружаемыеРеквизиты.Добавить("ВесЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("бг_КоличествоСлоевВПаллете");
	ВыгружаемыеРеквизиты.Добавить("бг_КоличествоМестВСлое");
	ВыгружаемыеРеквизиты.Добавить("бг_КодЕК_Номенклатуры");
	ВыгружаемыеРеквизиты.Добавить("бг_ИдентификаторЕКНоменклатуры");
	ВыгружаемыеРеквизиты.Добавить("бг_ТипЕдиницыИзмерения");
	ВыгружаемыеРеквизиты.Добавить("МеждународноеСокращение");
	ВыгружаемыеРеквизиты.Добавить("Глубина");
	ВыгружаемыеРеквизиты.Добавить("ГлубинаЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("Ширина");
	ВыгружаемыеРеквизиты.Добавить("ШиринаЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("Высота");
	ВыгружаемыеРеквизиты.Добавить("ВысотаЕдиницаИзмерения");
	ВыгружаемыеРеквизиты.Добавить("КоличествоУпаковок");
	ВыгружаемыеРеквизиты.Добавить("бг_КоличествоСлоевВПаллете");
	ВыгружаемыеРеквизиты.Добавить("бг_КоличествоМестВСлое");
	ВыгружаемыеРеквизиты.Добавить("бг_Проверен");
	
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

Процедура ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"бг_ТипЕдиницыИзмерения",
			Новый ОписаниеТипов("ПеречислениеСсылка.бг_ТипыЕдиницИзмерения"),
			"бг_ТипЕдиницыИзмерения"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ВидНоменклатуры",
			Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"),
			"Владелец.ВидНоменклатуры"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_Наименование",
			ОбщегоНазначения.ОписаниеТипаСтрока(0),
			"Владелец.Наименование"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ВидАлкогольнойПродукции",
			Новый ОписаниеТипов("СправочникСсылка.ВидыАлкогольнойПродукции"),
			"Владелец.ВидАлкогольнойПродукции"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ОбъемДАЛ",
			ОбщегоНазначения.ОписаниеТипаЧисло(16, 8),
			"Владелец.ОбъемДАЛ"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_Крепость",
			ОбщегоНазначения.ОписаниеТипаЧисло(5, 3),
			"Владелец.Крепость"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ЕдиницаИзмеренияКод",
			ОбщегоНазначения.ОписаниеТипаСтрока(0),
			"Владелец.ЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ИспользоватьСерии",
			Новый ОписаниеТипов("Булево"),
			"Владелец.ВидНоменклатуры.ИспользоватьСерии"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_Описание",
			ОбщегоНазначения.ОписаниеТипаСтрока(0),
			"Владелец.Описание"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ЕдиницаДляОтчетовКод",
			ОбщегоНазначения.ОписаниеТипаСтрока(0),
			"Владелец.ЕдиницаДляОтчетов.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_НаименованиеПолное",
			ОбщегоНазначения.ОписаниеТипаСтрока(0),
			"Владелец.НаименованиеПолное"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_КодОКП",
			Новый ОписаниеТипов("СправочникСсылка.ОбщероссийскийКлассификаторПродукции"),
			"Владелец.КодОКП"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_СтавкаНДС",
			Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"),
			"Владелец.СтавкаНДС"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ИмпортнаяАлкогольнаяПродукция",
			Новый ОписаниеТипов("Булево"),
			"Владелец.ИмпортнаяАлкогольнаяПродукция"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_КодТНВЭД",
			Новый ОписаниеТипов("СправочникСсылка.КлассификаторТНВЭД"),
			"Владелец.КодТНВЭД"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_КодОКПД2",
			Новый ОписаниеТипов("СправочникСсылка.КлассификаторОКПД2"),
			"Владелец.КодОКПД2"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ТоварнаяКатегория",
			Новый ОписаниеТипов("СправочникСсылка.ТоварныеКатегории"),
			"Владелец.ТоварнаяКатегория"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_Выбыл",
			ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),
			"Владелец.бг_Выбыл"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ГодУрожая",
			ОбщегоНазначения.ОписаниеТипаЧисло(4),
			"Владелец.бг_ГодУрожая"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ТемператураХранения",
			ОбщегоНазначения.ОписаниеТипаСтрока(100),
			"Владелец.бг_ТемператураХранения"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_СтранаПроизводителя",
			Новый ОписаниеТипов("СправочникСсылка.СтраныМира"),
			"Владелец.бг_КонтрагентПроизводитель.бг_ФирмаПроизводитель.Страна"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_СрокГодности",
			ОбщегоНазначения.ОписаниеТипаЧисло(15),
			"Владелец.СрокГодности"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ПроизводительИмпортерКонтрагент_бг_ФирмаПроизводитель",
			Новый ОписаниеТипов("СправочникСсылка.бг_ЕК_СКЮ_Фирмы"),
			"Владелец.ПроизводительИмпортерКонтрагент.бг_ФирмаПроизводитель"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"ЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"ЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_ЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.ЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_ЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.Родитель.ЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_Добавлен",
			ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),
			"Владелец.бг_Добавлен"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_КонтрагентПроизводитель_бг_ФирмаПроизводитель",
			Новый ОписаниеТипов("СправочникСсылка.бг_ЕК_СКЮ_Фирмы"),
			"Владелец.бг_КонтрагентПроизводитель.бг_ФирмаПроизводитель"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ВесЧислитель",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Владелец.ВесЧислитель"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_КоличествоУпаковок",
			ОбщегоНазначения.ОписаниеТипаЧисло(10),
			"Родитель.КоличествоУпаковок"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Вес",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Вес"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Глубина",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Глубина"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Ширина",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Ширина"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Высота",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Высота"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_Вес",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Родитель.Вес"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_Глубина",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Родитель.Глубина"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_Ширина",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Родитель.Ширина"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_Высота",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Родитель.Высота"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_бг_КоличествоСлоевВПаллете",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.бг_КоличествоСлоевВПаллете"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_бг_КоличествоМестВСлое",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.бг_КоличествоМестВСлое"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Числитель",
			ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
			"Родитель.Числитель"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Наименование",
			ОбщегоНазначения.ОписаниеТипаСтрока(50),
			"Родитель.Наименование"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ВариативностьНаименование",
			ОбщегоНазначения.ОписаниеТипаСтрока(100),
			"Владелец.бг_Вариативность.Наименование"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ОсновноеНаименованиеНаименование",
			ОбщегоНазначения.ОписаниеТипаСтрока(100),
			"Владелец.бг_ОсновноеНаименование.Наименование"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_СрокГодности",
			Новый ОписаниеТипов("СправочникСсылка.бг_ЕК_Номенклатура_СрокГодности"),
			"Владелец.бг_СрокГодности"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_Проверен",
			Новый ОписаниеТипов("Булево"),
			"Владелец.бг_Проверен"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ОбменB2B",
			Новый ОписаниеТипов("Булево"),
			"Владелец.бг_ОбменB2B"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"ГлубинаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"ГлубинаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"ШиринаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"ШиринаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"ВысотаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"ВысотаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_ГлубинаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.ГлубинаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_ШиринаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.ШиринаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_ВысотаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.ВысотаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_ГлубинаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.Родитель.ГлубинаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_ШиринаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.Родитель.ШиринаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Родитель_Родитель_ВысотаЕдиницаИзмерения_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(4),
			"Родитель.Родитель.ВысотаЕдиницаИзмерения.Код"));
		
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_Статус",
			Новый ОписаниеТипов("ПеречислениеСсылка.бг_СтатусыНСИ"),
			"Владелец.бг_Статус"));   
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ВидНоменклатуры_ОграничиватьДобавлениеИзменениеНоменклатуры",
			Новый ОписаниеТипов("Булево"),
			"Владелец.ВидНоменклатуры.бг_ОграничиватьДобавлениеИзменениеНоменклатуры"));   
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"бг_ВариантСинхронизацииWMS",
			Новый ОписаниеТипов("ПеречислениеСсылка.бг_ВариантыСинхронизацииНоменклатурыWMS"),
			"Владелец.ВидНоменклатуры.бг_ВариантСинхронизацииWMS"));   
			
	ОписаниеТипаЧисла2 = ОбщегоНазначения.ОписаниеТипаЧисло(2);
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ТемператураОт",
			ОписаниеТипаЧисла2,
			"Владелец.бг_ТемператураОт"));
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_ТемператураДо",
			ОписаниеТипаЧисла2,
			"Владелец.бг_ТемператураДо"));
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_Влажность",
			ОписаниеТипаЧисла2,
			"Владелец.бг_Влажность"));
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_бг_КонтрагентПроизводитель",
			Новый ОписаниеТипов("СправочникСсылка.Контрагенты"),
			"Владелец.бг_КонтрагентПроизводитель"));
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Номенклатура_ПроизводительИмпортерКонтрагент",
			Новый ОписаниеТипов("СправочникСсылка.Контрагенты"),
			"Владелец.ПроизводительИмпортерКонтрагент"));
	
КонецПроцедуры

Функция ЗагрузитьОбъектИзОбъектаНоменклатура(
	ЗагружаемыйОбъектНоменклатураСсылка,
	ЕдиницаИзмерения,
	Родитель,
	КоличествоУпаковок,
	Типоразмер,
	Числитель,
	ТипУпаковки,
	Глубина,
	Ширина,
	Высота,
	Вес,
	бг_КоличествоСлоевВПаллете,
	бг_КоличествоМестВСлое) Экспорт
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
	|	И УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	УпаковкиЕдиницыИзмерения.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Владелец", ЗагружаемыйОбъектНоменклатураСсылка.Ссылка);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		УпаковкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		УпаковкаОбъект = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
		УпаковкаОбъект.Заполнить(Неопределено);
	КонецЕсли;
	
	СтруктураОбъектаЕдиницаИзмеренияКилограмм = Новый Структура(
		"ПолноеИмя, Код",
		"Справочник.УпаковкиЕдиницыИзмерения",
		КодКилограмма());
	
	ЕдиницаИзмеренияКилограмм = бг_ОбщегоНазначенияСервер.СсылкаНаКлассификатор(
		СтруктураОбъектаЕдиницаИзмеренияКилограмм,
		"Код",
		, //ЗначениеКлюча
		"ТаблицаДанных.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)");
	
	СтруктураОбъектаЕдиницаИзмеренияМиллиметр = Новый Структура(
		"ПолноеИмя, Код",
		"Справочник.УпаковкиЕдиницыИзмерения",
		КодМиллиметра());
	
	ЕдиницаИзмеренияМиллиметр = бг_ОбщегоНазначенияСервер.СсылкаНаКлассификатор(
		СтруктураОбъектаЕдиницаИзмеренияМиллиметр,
		"Код",
		, //ЗначениеКлюча
		"ТаблицаДанных.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)");
	
	СтруктураОбъектаЕдиницаИзмеренияМетрКубический = Новый Структура(
		"ПолноеИмя, Код",
		"Справочник.УпаковкиЕдиницыИзмерения",
		КодМетраКубического());
	
	ЕдиницаИзмеренияМетрКубический = бг_ОбщегоНазначенияСервер.СсылкаНаКлассификатор(
		СтруктураОбъектаЕдиницаИзмеренияМетрКубический,
		"Код",
		, //ЗначениеКлюча
		"ТаблицаДанных.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)");
	
	УпаковкаОбъект.ПометкаУдаления = ЗагружаемыйОбъектНоменклатураСсылка.ПометкаУдаления;
	УпаковкаОбъект.Владелец = ЗагружаемыйОбъектНоменклатураСсылка;
	УпаковкаОбъект.Родитель = Родитель;
	УпаковкаОбъект.ЕдиницаИзмерения = ЕдиницаИзмерения;
	УпаковкаОбъект.Числитель = Числитель;
	УпаковкаОбъект.Знаменатель = 1;
	УпаковкаОбъект.КоличествоУпаковок = КоличествоУпаковок;
	УпаковкаОбъект.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка;
	УпаковкаОбъект.ТипУпаковки = ТипУпаковки;
	УпаковкаОбъект.Вес = Вес;
	УпаковкаОбъект.ВесЕдиницаИзмерения = ЕдиницаИзмеренияКилограмм;
	УпаковкаОбъект.бг_КоличествоСлоевВПаллете = бг_КоличествоСлоевВПаллете;
	УпаковкаОбъект.бг_КоличествоМестВСлое = бг_КоличествоМестВСлое;
	
	УпаковкаОбъект.Типоразмер = Типоразмер;
	
	Если ЗначениеЗаполнено(УпаковкаОбъект.Типоразмер) Тогда
		РеквизитыТипоразмера = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УпаковкаОбъект.Типоразмер, "Глубина, ГлубинаЕдиницаИзмерения, Ширина, ШиринаЕдиницаИзмерения, Высота, ВысотаЕдиницаИзмерения, Объем, ОбъемЕдиницаИзмерения, Безразмерная");
		ЗаполнитьЗначенияСвойств(УпаковкаОбъект, РеквизитыТипоразмера);
	Иначе
		УпаковкаОбъект.Глубина = Глубина;
		УпаковкаОбъект.ГлубинаЕдиницаИзмерения = ЕдиницаИзмеренияМиллиметр;
		УпаковкаОбъект.Ширина = Ширина;
		УпаковкаОбъект.ШиринаЕдиницаИзмерения = ЕдиницаИзмеренияМиллиметр;
		УпаковкаОбъект.Высота = Высота;
		УпаковкаОбъект.ВысотаЕдиницаИзмерения = ЕдиницаИзмеренияМиллиметр;
		УпаковкаОбъект.ОбъемЕдиницаИзмерения = ЕдиницаИзмеренияМетрКубический;
		ЗаполнитьОбъем(УпаковкаОбъект);
	КонецЕсли;
	
	УпаковкаОбъект.ЛинейныеРазмерыПредставление = Строка(УпаковкаОбъект.Высота) + " X " + Строка(УпаковкаОбъект.Ширина) + " X " + Строка(УпаковкаОбъект.Глубина);
	УпаковкаОбъект.Наименование = Справочники.УпаковкиЕдиницыИзмерения.СформироватьНаименование(УпаковкаОбъект.ТипУпаковки, УпаковкаОбъект.ЕдиницаИзмерения, УпаковкаОбъект.Числитель, УпаковкаОбъект.Знаменатель, УпаковкаОбъект.Владелец.ЕдиницаИзмерения);
	
	УпаковкаОбъект.ДополнительныеСвойства.Вставить("адаптер_ЭтоЗагрузкаДанных", Истина);
	
	УпаковкаОбъект.Записать();
	
	Возврат УпаковкаОбъект.Ссылка;
	
КонецФункции

Функция КодКилограмма()
	
	Возврат "166";
	
КонецФункции

Функция КодМиллиметра()
	
	Возврат "003";
	
КонецФункции

Функция КодМетраКубического()
	
	Возврат "113";
	
КонецФункции

Процедура ЗаполнитьОбъем(Объект)
	
	Если Объект.ШиринаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка()
		Или Объект.ГлубинаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка()
		Или Объект.ВысотаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка()
		Или Объект.ОбъемЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
		
		Объект.Объем = 0;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(&ШиринаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель / ВЫРАЗИТЬ(&ШиринаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Знаменатель КАК КоэффициентШирина,
		|	ВЫРАЗИТЬ(&ВысотаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель / ВЫРАЗИТЬ(&ВысотаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Знаменатель КАК КоэффициентВысота,
		|	ВЫРАЗИТЬ(&ГлубинаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель / ВЫРАЗИТЬ(&ГлубинаЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Знаменатель КАК КоэффициентГлубина,
		|	ВЫРАЗИТЬ(&ОбъемЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель / ВЫРАЗИТЬ(&ОбъемЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Знаменатель КАК КоэффициентОбъем";
		
		Запрос.УстановитьПараметр("ШиринаЕдиницаИзмерения", 	Объект.ШиринаЕдиницаИзмерения);
		Запрос.УстановитьПараметр("ВысотаЕдиницаИзмерения", 	Объект.ВысотаЕдиницаИзмерения);
		Запрос.УстановитьПараметр("ГлубинаЕдиницаИзмерения", 	Объект.ГлубинаЕдиницаИзмерения);
		Запрос.УстановитьПараметр("ОбъемЕдиницаИзмерения", 		Объект.ОбъемЕдиницаИзмерения);		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			Объект.Объем = Объект.Высота * Выборка.КоэффициентВысота * Объект.Глубина * Выборка.КоэффициентГлубина * Объект.Ширина * Выборка.КоэффициентШирина / Выборка.КоэффициентОбъем;	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)		
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.УпаковкиЕдиницыИзмерения,
		"Наименование");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.УпаковкиЕдиницыИзмерения,
		"Код");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"Артикул");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"КодЕК_ПОСМ",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(бг_НоменклатураИнтеграция.ДлинаКодаЕК_ПОСМ()));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.ВидыАлкогольнойПродукции,
		"Наименование");
КонецПроцедуры

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,,
		"ШтрихкодУпаковки",
		ОписаниеТипаШтрихкода());
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,,
		"ВсеШтрихкоды.Штрихкод",
		ОписаниеТипаШтрихкода());
		
КонецПроцедуры

Процедура ДобавитьДанныеШтрихкодов(РеквизитыОбъекта, Упаковка)
	
	СписокШтрихкодов = Справочники.УпаковкиЕдиницыИзмерения.бг_Штрихкоды(Упаковка);
	Если СписокШтрихкодов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеШтрихкодов = Новый Массив;
	
	Для каждого Штрихкод Из СписокШтрихкодов Цикл
		ДанныеШтрихкодов.Добавить(Новый Структура("Штрихкод", Штрихкод));
	КонецЦикла;
	
	РеквизитыОбъекта.Вставить("ВсеШтрихкоды", ДанныеШтрихкодов);
	РеквизитыОбъекта.Вставить("ШтрихкодУпаковки", СписокШтрихкодов[0]);
	
КонецПроцедуры

Функция НеобходимоВыгружатьСвязаннуюНоменклатуру(УпаковкаОбъект)

	Возврат ЗначениеЗаполнено(УпаковкаОбъект.Владелец)
		И ТипЗнч(УпаковкаОбъект.Владелец) = Тип("СправочникСсылка.Номенклатура")
		И УпаковкаОбъект.ДополнительныеСвойства.Свойство("бг_НеобходимоВыгружатьСвязаннуюНоменклатуру")
		И УпаковкаОбъект.ДополнительныеСвойства.бг_НеобходимоВыгружатьСвязаннуюНоменклатуру;

КонецФункции

Процедура ВыгрузитьСвязаннуюНоменклатуру(УпаковкаОбъект)

	бг_ОбщегоНазначенияСервер.ЗарегистрироватьИсходящееСообщениеПриЗаписи(УпаковкаОбъект.Владелец);

КонецПроцедуры

Функция ОписаниеТипаШтрихкода()
	
	Возврат ОбщегоНазначения.ОписаниеТипаСтрока(200);
	
КонецФункции

#КонецОбласти
