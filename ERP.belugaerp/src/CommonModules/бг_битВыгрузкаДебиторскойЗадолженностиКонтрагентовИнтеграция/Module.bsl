#Область ПрограммныйИнтерфейс

Процедура ВыполнитьРегламентноеЗадание() Экспорт

	Перем адаптер_ПодпискиНаСобытияВызовСервера, адаптер_НастройкиОбменаПовтИсп;
	адаптер_ПодпискиНаСобытияВызовСервера = ОбщегоНазначения.ОбщийМодуль("адаптер_ПодпискиНаСобытияВызовСервера");
	адаптер_НастройкиОбменаПовтИсп = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбменаПовтИсп");

	ПараметрыПодключения = адаптер_НастройкиОбменаПовтИсп.НастройкиПодключенияДляВыгрузки();
	Если ПараметрыПодключения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	НастройкиВыгрузки = адаптер_НастройкиОбменаПовтИсп.
		ПолучитьНастройкиВыгрузкиПоОбъекту(
		Метаданные.РегламентныеЗадания.битВыгрузкаДебиторскойЗадолженностиКонтрагентов.ПолноеИмя());
	Если НастройкиВыгрузки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные", Метаданные.РегламентныеЗадания.битВыгрузкаДебиторскойЗадолженностиКонтрагентов);

	УстановитьПривилегированныйРежим(Истина);
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Если Задания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОтборыДляВыгрузкиЗадолженности = ОрганизацииДляВыгрузкиДебиторскойЗадолженности();
	Пока ОтборыДляВыгрузкиЗадолженности.Следующий() Цикл
	
		ИдентификаторОрганизации = ОтборыДляВыгрузкиЗадолженности.Организация.УникальныйИдентификатор();
		ДополнительныеСвойства = Новый Структура;
		ДополнительныеСвойства.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
		ДополнительныеСвойства.Вставить("ТикерОрганизации", ОтборыДляВыгрузкиЗадолженности.ТикерОрганизации);
		
		адаптер_ПодпискиНаСобытияВызовСервера.ЗарегистрироватьИсходящееСообщение(
			Задания[0], ДополнительныеСвойства, НастройкиВыгрузки);
	
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт

	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");

	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства, адаптер_НастройкиОбмена);
	ДобавитьКлючевыеРеквизитыКВыгрузке(РеквизитыИСвойства, адаптер_НастройкиОбмена);

КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса,
		ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	ТекстЗапросаТаблицаКлючей = "";
	ТекстЗапроса = "ВЫБРАТЬ 1";

КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	КлючМаршрутизации = "xml.ВыгрузкаДебиторскойЗадолженностиКонтрагентов";
	
	Если ДанныеСообщения.ДополнительныеСвойстваОбъекта.Свойство("ТикерОрганизации")
		И ЗначениеЗаполнено(ДанныеСообщения.ДополнительныеСвойстваОбъекта.ТикерОрганизации) Тогда
			КлючМаршрутизации = "xml.ВыгрузкаДебиторскойЗадолженностиКонтрагентов."
				+ ДанныеСообщения.ДополнительныеСвойстваОбъекта.ТикерОрганизации;
	КонецЕсли;
	
	Возврат КлючМаршрутизации;
	
КонецФункции

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");

	ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(Объект, ДанныеСообщения);
	
	ДанныеВыгружаемогоОбъекта = Новый Структура;
	ДанныеВыгружаемогоОбъекта.Вставить("ПолноеИмя", ПараметрыВыполненияЗапросов.ПолноеИмя);
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Новый Массив);
	
	ВыгружаемыеДанные = ВыгружаемыеДанные(ДанныеСообщения.ДополнительныеСвойстваОбъекта);
	
	Если ВыгружаемыеДанные.РезультатПоШапке.Пустой() Тогда
		Возврат ДанныеВыгружаемогоОбъекта;
	КонецЕсли;

	Реквизиты = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
		ВыгружаемыеДанные.РезультатПоШапке,
		ПараметрыВыполненияЗапросов.ТаблицаКлючей,
		ДанныеСообщения);

	Если Реквизиты.Количество() > 0 Тогда

		Для Каждого СтрокаСообщения Из Реквизиты Цикл

			ЗаполнитьВыгружаемыеДанныеТорговыхТочекКонтрагента(СтрокаСообщения, ВыгружаемыеДанные);

			ЗадолженностьТорговыхТочек = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
				ВыгружаемыеДанные.РезультатПоТоварам,
				ПараметрыВыполненияЗапросов.ТаблицаКлючей,
				ДанныеСообщения);

			СтрокаСообщения.Контрагент.Вставить("ЗадолженностьТорговыхТочек", ЗадолженностьТорговыхТочек);

		КонецЦикла;

	КонецЕсли;

	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Реквизиты);

	Возврат ДанныеВыгружаемогоОбъекта;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция ОрганизацииДляВыгрузкиДебиторскойЗадолженности()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	АналитикаУчета.Организация.бг_Тикер КАК ТикерОрганизации
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(, 
	|			ОбъектРасчетов.Объект ССЫЛКА Документ.РеализацияТоваровУслуг) КАК РасчетыПоСрокам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|		ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();

КонецФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства, адаптер_НастройкиОбмена)
	
	ТипЧисло = ОбщегоНазначения.ОписаниеТипаЧисло(15, 5);
	
#Область ЗадолженностьВРазрезеОрганизацииИКонтрагента
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ОбщаяДебиторскаяЗадолженность", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ТекущаяДебиторскаяЗадолженность", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ОстатокКредитногоЛимита", ТипЧисло);
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"СуммаКредитногоЛимита", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ПросроченнаяДебиторскаяЗадолженность", ТипЧисло);
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"СпособНазначенияКредитногоЛимита",
			ОбщегоНазначения.ОписаниеТипаСтрока(25));
#КонецОбласти
#Область ДетальныеДанныеПоТорговымТочкамКонтрагента
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства, 
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.бг_ПунктНазначения",
		Новый ОписаниеТипов("СправочникСсылка.битПунктыНазначения"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.ОбщаяДебиторскаяЗадолженность", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.ТекущаяДебиторскаяЗадолженность", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.ОстатокКредитногоЛимита", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.СуммаКредитногоЛимита", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.ПросроченнаяДебиторскаяЗадолженность", ТипЧисло);

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		,
		"ЗадолженностьТорговыхТочек.СуммаНеОтгруженныхЗаказов", ТипЧисло);
#КонецОбласти
КонецПроцедуры

Процедура ДобавитьКлючевыеРеквизитыКВыгрузке(РеквизитыИСвойства, адаптер_НастройкиОбмена)

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Организации,
		"бг_Тикер");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		"Наименование");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		"ИНН");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		"КПП");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.битПунктыНазначения,
		"Наименование");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.битПунктыНазначения,
		"ИдентификаторCRM");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.битПунктыНазначения,
		"КодТТSY");

КонецПроцедуры

Функция ВыгружаемыеДанные(СтруктураПараметров)

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаВыгружаемыхДанных();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Если СтруктураПараметров.Свойство("ИдентификаторОрганизации") Тогда
		Организация = Справочники.Организации.ПолучитьСсылку(
			Новый УникальныйИдентификатор(СтруктураПараметров.ИдентификаторОрганизации));
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СтатусыЗаказовКлиентаДляПолученияОтгрузок = Новый Массив;
	СтатусыЗаказовКлиентаДляПолученияОтгрузок.Добавить(
		Перечисления.бг_РезультатыСогласования.Согласовано);
	СтатусыЗаказовКлиентаДляПолученияОтгрузок.Добавить(
		Перечисления.бг_РезультатыСогласования.СогласованоПринудительно);
	СтатусыЗаказовКлиентаДляПолученияОтгрузок.Добавить(
		Перечисления.бг_РезультатыСогласования.АвтоСогласование);
	Запрос.УстановитьПараметр("СтатусыЗаказовКлиентаДляПолученияОтгрузок", СтатусыЗаказовКлиентаДляПолученияОтгрузок);
	//назначение на договор пока не учитывается.
	Запрос.УстановитьПараметр("СпособНазначенияЛимитаНеНазначенЛимит", "НеНазначенЛимит");
	Запрос.УстановитьПараметр("СпособНазначенияЛимитаНаКонтрагента", "НаКонтрагента");
	Запрос.УстановитьПараметр("СпособНазначенияЛимитаНаТорговуюТочку", "НаТорговуюТочку");
	РезультатЗапроса = Запрос.Выполнить();
	ВыгружаемыеДанные = Новый Структура;
	ВыгружаемыеДанные.Вставить("РезультатПоШапке", РезультатЗапроса);
	ВыгружаемыеДанные.Вставить("МенеджерВТ", Запрос.МенеджерВременныхТаблиц);

	Возврат ВыгружаемыеДанные;

КонецФункции

Функция ТекстЗапросаВыгружаемыхДанных()

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаУчета.Организация КАК Организация,
	|	ВЫРАЗИТЬ(АналитикаУчета.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(РасчетыПоСрокам.ОбъектРасчетов.Объект 
	|		КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения КАК бг_ПунктНазначения,
	|	СУММА(РасчетыПоСрокам.ДолгОстаток) КАК ОбщаяДебиторскаяЗадолженность,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоСрокам.ДатаПлановогоПогашения < &ТекущаяДата
	|				ТОГДА РасчетыПоСрокам.ДолгОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПросроченнаяДебиторскаяЗадолженность
	|ПОМЕСТИТЬ ОстаткиЗадолженности
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(, 
	|			ОбъектРасчетов.Объект ССЫЛКА Документ.РеализацияТоваровУслуг) КАК РасчетыПоСрокам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|		ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|ГДЕ
	|	АналитикаУчета.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчета.Организация,
	|	ВЫРАЗИТЬ(РасчетыПоСрокам.ОбъектРасчетов.Объект КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения,
	|	ВЫРАЗИТЬ(АналитикаУчета.Контрагент КАК Справочник.Контрагенты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	бг_ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказКлиента).бг_ПунктНазначения КАК бг_ПунктНазначения,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента КАК ЗаказКлиента,
	|	СУММА(ЗаказыКлиентовОстатки.СуммаОстаток) КАК ЗаказаноПоПунктуНазначения
	|ПОМЕСТИТЬ ЗаказаноИНеОтгруженоПоПунктуНазначения
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(, 
	|		ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).ДатаОтгрузки <= &ТекущаяДата) КАК ЗаказыКлиентовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказКлиента).бг_ПунктНазначения,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	бг_ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказаноИНеОтгруженоПоПунктуНазначения.бг_ПунктНазначения КАК бг_ПунктНазначения,
	|	СУММА(ЗаказаноИНеОтгруженоПоПунктуНазначения.ЗаказаноПоПунктуНазначения) КАК ЗаказаноПоПунктуНазначения
	|ПОМЕСТИТЬ ЗаказаноИНеОтгруженоПоПунктуНазначенияССогласованием
	|ИЗ
	|	ЗаказаноИНеОтгруженоПоПунктуНазначения КАК ЗаказаноИНеОтгруженоПоПунктуНазначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_СогласованиеЗаказовКлиентов КАК СогласованиеЗаказовКлиентов
	|		ПО ЗаказаноИНеОтгруженоПоПунктуНазначения.ЗаказКлиента = СогласованиеЗаказовКлиентов.ЗаказКлиента
	|ГДЕ
	|	СогласованиеЗаказовКлиентов.РезультатСогласованияФК
	|		В(&СтатусыЗаказовКлиентаДляПолученияОтгрузок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказаноИНеОтгруженоПоПунктуНазначения.бг_ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бг_КредитныеЛимитыКредитный.Контрагент КАК Контрагент,
	|	бг_КредитныеЛимитыКредитный.ПунктНазначения КАК ПунктНазначения,
	|	СУММА(ЕСТЬNULL(бг_КредитныеЛимитыКредитный.Сумма, 0)) КАК Сумма
	|ПОМЕСТИТЬ бг_КредитныеЛимитыКредитный
	|ИЗ
	|	РегистрСведений.бг_КредитныеЛимиты КАК бг_КредитныеЛимитыКредитный
	|ГДЕ
	|	бг_КредитныеЛимитыКредитный.ВидЛимита = ЗНАЧЕНИЕ(Перечисление.бг_ВидыКредитныхЛимитов.Кредитный)
	|
	|СГРУППИРОВАТЬ ПО
	|	бг_КредитныеЛимитыКредитный.Контрагент,
	|	бг_КредитныеЛимитыКредитный.ПунктНазначения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.Организация КАК Организация,
	|	ОстаткиЗадолженности.Контрагент КАК Контрагент,
	|	ОстаткиЗадолженности.бг_ПунктНазначения КАК бг_ПунктНазначения,
	|	ОстаткиЗадолженности.ОбщаяДебиторскаяЗадолженность КАК ОбщаяДебиторскаяЗадолженность,
	|	ОстаткиЗадолженности.ПросроченнаяДебиторскаяЗадолженность КАК ПросроченнаяДебиторскаяЗадолженность,
	|	ЕСТЬNULL(НеОтгруженныеЗаказыТорговыхТочек.ЗаказаноПоПунктуНазначения, 0) КАК СуммаНеОтгруженныхЗаказов,
	|	ОстаткиЗадолженности.ОбщаяДебиторскаяЗадолженность - 
	|		ОстаткиЗадолженности.ПросроченнаяДебиторскаяЗадолженность КАК ТекущаяДебиторскаяЗадолженность,
	|	ЕСТЬNULL(ЛимитНазначенныеНаТорговыеТочки.Сумма, ЕСТЬNULL(ЛимитыНазначенныеНаКонтрагента.Сумма, 0))
	|		- ОстаткиЗадолженности.ОбщаяДебиторскаяЗадолженность
	|			- ЕСТЬNULL(НеОтгруженныеЗаказыТорговыхТочек.ЗаказаноПоПунктуНазначения, 0) КАК ОстатокКредитногоЛимита,
	|	ЕСТЬNULL(ЛимитНазначенныеНаТорговыеТочки.Сумма, 
	|		ЕСТЬNULL(ЛимитыНазначенныеНаКонтрагента.Сумма, 0)) КАК СуммаКредитногоЛимита,
	|	ОстаткиЗадолженности.бг_ПунктНазначения.КодТТSY КАК КодТТSY,
	|	ОстаткиЗадолженности.бг_ПунктНазначения.ИдентификаторCRM КАК бг_ПунктНазначенияИдентификаторCRM,
	|	ВЫБОР
	|		КОГДА ЛимитНазначенныеНаТорговыеТочки.ПунктНазначения ЕСТЬ NULL
	|				И ЛимитыНазначенныеНаКонтрагента.Контрагент ЕСТЬ NULL
	|			ТОГДА 99
	|		КОГДА ЛимитНазначенныеНаТорговыеТочки.ПунктНазначения ЕСТЬ NULL
	|				И НЕ ЛимитыНазначенныеНаКонтрагента.Контрагент ЕСТЬ NULL
	|			ТОГДА 2
	|		КОГДА НЕ ЛимитНазначенныеНаТорговыеТочки.ПунктНазначения ЕСТЬ NULL
	|			ТОГДА 1
	|	КОНЕЦ КАК ПриоритетСпособаНазначенияКредитногоЛимита
	|ПОМЕСТИТЬ ЗадолженностьПоТорговымТочкам
	|ИЗ
	|	ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ЛЕВОЕ СОЕДИНЕНИЕ бг_КредитныеЛимитыКредитный КАК ЛимитНазначенныеНаТорговыеТочки
	|		ПО ОстаткиЗадолженности.бг_ПунктНазначения = ЛимитНазначенныеНаТорговыеТочки.ПунктНазначения
	|			И ОстаткиЗадолженности.Контрагент = ЛимитНазначенныеНаТорговыеТочки.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ бг_КредитныеЛимитыКредитный КАК ЛимитыНазначенныеНаКонтрагента
	|		ПО ОстаткиЗадолженности.Контрагент = ЛимитыНазначенныеНаКонтрагента.Контрагент
	|			И (ЛимитыНазначенныеНаКонтрагента.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказаноИНеОтгруженоПоПунктуНазначенияССогласованием КАК НеОтгруженныеЗаказыТорговыхТочек
	|		ПО ОстаткиЗадолженности.бг_ПунктНазначения = НеОтгруженныеЗаказыТорговыхТочек.бг_ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПоКонтрагенту.Организация КАК Организация_ЗначениеРеквизитаИдентификатор,
	|	ЗадолженностьПоКонтрагенту.Организация КАК Организация_ЗначенияРеквизитаТаблицаКлючей,
	|	ЗадолженностьПоКонтрагенту.Организация.бг_Тикер КАК Организация_ЗначениеРеквизитаБг_Тикер,
	|	ЗадолженностьПоКонтрагенту.Контрагент КАК Контрагент_ЗначениеРеквизитаИдентификатор,
	|	ЗадолженностьПоКонтрагенту.Контрагент КАК Контрагент_ЗначениеРеквизитаТаблицаКлючей,
	|	ЗадолженностьПоКонтрагенту.Контрагент.ИНН КАК Контрагент_ЗначениеРеквизитаИНН,
	|	ЗадолженностьПоКонтрагенту.Контрагент.КПП КАК Контрагент_ЗначениеРеквизитаКПП,
	|	СУММА(ЗадолженностьПоКонтрагенту.ОбщаяДебиторскаяЗадолженность) КАК ОбщаяДебиторскаяЗадолженность,
	|	СУММА(ЗадолженностьПоКонтрагенту.ПросроченнаяДебиторскаяЗадолженность) КАК ПросроченнаяДебиторскаяЗадолженность,
	|	СУММА(ЗадолженностьПоКонтрагенту.ТекущаяДебиторскаяЗадолженность) КАК ТекущаяДебиторскаяЗадолженность,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЗадолженностьПоКонтрагенту.ПриоритетСпособаНазначенияКредитногоЛимита) = 1
	|				ТОГДА СУММА(ЗадолженностьПоКонтрагенту.ОстатокКредитногоЛимита)
	|		ИНАЧЕ 
	|			МАКСИМУМ(ЗадолженностьПоКонтрагенту.СуммаКредитногоЛимита) 
	|				- СУММА(ЗадолженностьПоКонтрагенту.ОбщаяДебиторскаяЗадолженность)
	|					- СУММА(ЗадолженностьПоКонтрагенту.СуммаНеОтгруженныхЗаказов)
	|	КОНЕЦ КАК ОстатокКредитногоЛимита,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЗадолженностьПоКонтрагенту.ПриоритетСпособаНазначенияКредитногоЛимита) = 1
	|				ТОГДА СУММА(ЗадолженностьПоКонтрагенту.СуммаКредитногоЛимита)
	|		ИНАЧЕ 
	|			МАКСИМУМ(ЗадолженностьПоКонтрагенту.СуммаКредитногоЛимита)
	|	КОНЕЦ КАК СуммаКредитногоЛимита,
	|	ВЫБОР 
	|		КОГДА МИНИМУМ(ЗадолженностьПоКонтрагенту.ПриоритетСпособаНазначенияКредитногоЛимита) = 1 
	|			ТОГДА &СпособНазначенияЛимитаНаТорговуюТочку 
	|		КОГДА МИНИМУМ(ЗадолженностьПоКонтрагенту.ПриоритетСпособаНазначенияКредитногоЛимита) = 2 
	|			ТОГДА &СпособНазначенияЛимитаНаКонтрагента
	|		ИНАЧЕ &СпособНазначенияЛимитаНеНазначенЛимит 
	|	КОНЕЦ КАК СпособНазначенияКредитногоЛимита
	|ИЗ
	|	ЗадолженностьПоТорговымТочкам КАК ЗадолженностьПоКонтрагенту
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадолженностьПоКонтрагенту.Организация,
	|	ЗадолженностьПоКонтрагенту.Организация.бг_Тикер,
	|	ЗадолженностьПоКонтрагенту.Контрагент,
	|	ЗадолженностьПоКонтрагенту.Контрагент.ИНН,
	|	ЗадолженностьПоКонтрагенту.Контрагент.КПП,
	|	ЗадолженностьПоКонтрагенту.Организация,
	|	ЗадолженностьПоКонтрагенту.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиЗадолженности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаказаноИНеотгруженоПоПунктуНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаказаноИНеотгруженоПоПунктуНазначенияССогласованием";
	
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ЗаполнитьВыгружаемыеДанныеТорговыхТочекКонтрагента(РеквизитыШапки, ВыгружаемыеДанные)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВыгружаемыеДанные.МенеджерВТ;
	Контрагент = Справочники.Контрагенты.ПолучитьСсылку(
		Новый УникальныйИдентификатор(РеквизитыШапки.Контрагент.Идентификатор));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗадолженностьТорговыхТочекКонтрагента.бг_ПунктНазначения КАК бг_ПунктНазначения_ЗначениеРеквизитаИдентификатор,
	|	ЗадолженностьТорговыхТочекКонтрагента.бг_ПунктНазначения КАК бг_ПунктНазначения_ЗначениеРеквизитаТаблицаКлючей,
	|	ЗадолженностьТорговыхТочекКонтрагента.бг_ПунктНазначения.Наименование КАК бг_ПунктНазначения_ЗначениеРеквизитаНаименование,
	|	ЗадолженностьТорговыхТочекКонтрагента.бг_ПунктНазначенияИдентификаторCRM КАК бг_ПунктНазначения_ЗначениеРеквизитаИдентификаторCRM,
	|	ЗадолженностьТорговыхТочекКонтрагента.КодТТSY КАК бг_ПунктНазначения_ЗначениеРеквизитаКодТТSY,
	|	ЗадолженностьТорговыхТочекКонтрагента.ОбщаяДебиторскаяЗадолженность КАК ОбщаяДебиторскаяЗадолженность,
	|	ЗадолженностьТорговыхТочекКонтрагента.ПросроченнаяДебиторскаяЗадолженность КАК ПросроченнаяДебиторскаяЗадолженность,
	|	ЗадолженностьТорговыхТочекКонтрагента.ТекущаяДебиторскаяЗадолженность КАК ТекущаяДебиторскаяЗадолженность,
	|	ЗадолженностьТорговыхТочекКонтрагента.СуммаКредитногоЛимита КАК СуммаКредитногоЛимита,
	|	ЗадолженностьТорговыхТочекКонтрагента.СуммаНеОтгруженныхЗаказов КАК СуммаНеОтгруженныхЗаказов,
	|	ЗадолженностьТорговыхТочекКонтрагента.ОстатокКредитногоЛимита КАК ОстатокКредитногоЛимита
	|ИЗ
	|	ЗадолженностьПоТорговымТочкам КАК ЗадолженностьТорговыхТочекКонтрагента
	|ГДЕ
	|	ЗадолженностьТорговыхТочекКонтрагента.Контрагент = &Контрагент";

	РезультатЗапроса = Запрос.Выполнить();
	ВыгружаемыеДанные.Вставить("РезультатПоТоварам", РезультатЗапроса);

КонецПроцедуры

#КонецОбласти