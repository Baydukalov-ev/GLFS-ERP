#Область ПрограммныйИнтерфейс

// Возвращает структуру параметров для первоначального заполнения записи транспортной информации
// 
// Возвращаемое значение:
//   Структура - см. РегистрыСведений.бг_ТранспортнаяИнформация.ПараметрыЗаполненияТранспортнойИнформации
// 				с добавленным свойством ТранспортноеСредство
// 
Функция ПараметрыЗаполненияТранспортнойИнформации() Экспорт             
	Результат = РегистрыСведений.бг_ТранспортнаяИнформация.ПараметрыЗаполненияТранспортнойИнформации();
	Результат.Вставить("ТранспортноеСредство");
	Возврат Результат;
КонецФункции

// Возвращает строковое представление незаполненной транспортной информации по умолчанию.
//
// Возвращаемое значение:
//   Строка
//
Функция ПредставлениеПустойТранспортнойИнформации() Экспорт

	Возврат НСтр("ru='<транспортная информация не указана>'");

КонецФункции

// Возвращает строковое представление транспортной информации по переданному документу.
//
// Параметры:
//  Объект  - Произвольный - объект, по которому хранится информация в регистре бг_ТранспортнаяИнформация.
//  ВключатьПредставлениеОбъекта  - Булево - в представление будет включено представление самого объекта (необязательный).
//  ТранспортнаяИнформация  - Структура - см. ТранспортнаяИнформация() (необязательный).
//
// Возвращаемое значение:
//   Строка
//
Функция ПредставлениеТранспортнойИнформации(Объект, ВключатьПредставлениеОбъекта = Ложь, ТранспортнаяИнформация = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если ТранспортнаяИнформация = Неопределено Тогда
		ТранспортнаяИнформация = РегистрыСведений.бг_ТранспортнаяИнформация.ТранспортнаяИнформация(Объект);
	КонецЕсли;
	
	Если ТранспортнаяИнформация = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПредставлениеТранспортнойИнформации = "";
	
	НомерОбъекта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
		ТранспортнаяИнформация.ОбъектНомер,
		Истина,
		Истина);
	
	// Упрощенное представление транспортной информации, со временем может меняться.
	Если ВключатьПредставлениеОбъекта Тогда
		
		Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			
			ПредставлениеОбъекта = СтрШаблон(
				НСтр("ru='Заказ №%1 от %2'"),
				НомерОбъекта,
				Формат(ТранспортнаяИнформация.ОбъектДата, "ДФ=dd.MM.yyyy"));
				
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			ПредставлениеОбъекта = СтрШаблон(
				НСтр("ru='РТУ №%1 от %2'"),
				НомерОбъекта,
				Формат(ТранспортнаяИнформация.ОбъектДата, "ДФ=dd.MM.yyyy"));
				
		Иначе
			ПредставлениеОбъекта = Строка(ТранспортнаяИнформация.Объект);
		КонецЕсли;
		
	Иначе
		ПредставлениеОбъекта = "";	
	КонецЕсли;
	
	ПредставлениеАвтомобиля = ?(
		ЗначениеЗаполнено(ТранспортнаяИнформация.ТранспортноеСредствоПредставление),
		ТранспортнаяИнформация.ТранспортноеСредствоПредставление,
		НСтр("ru='<не указан>'"));
	
	Если ВключатьПредставлениеОбъекта Тогда
		
		ПредставлениеТранспортнойИнформации = СтрШаблон(
			НСтр("ru='Автомобиль: %1 (%2)'"),
			ПредставлениеАвтомобиля,
			ПредставлениеОбъекта);
			
	Иначе
		
		ПредставлениеТранспортнойИнформации = СтрШаблон(
			НСтр("ru='Автомобиль: %1'"),
			ПредставлениеАвтомобиля);
		
	КонецЕсли;
		
	Если ПустаяСтрока(ПредставлениеТранспортнойИнформации) Тогда
		Возврат бг_ТранспортнаяИнформация.ПредставлениеПустойТранспортнойИнформации();
	Иначе
		Возврат ПредставлениеТранспортнойИнформации;
	КонецЕсли;

КонецФункции

// Возвращает структуру транспортной информации, необходимой для заполнения реквизитов ТОРГ12.
//
// Параметры:
//  Документ - ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ПеремещениеТоваров - Документ, 
//		по которому требуется получить транспортную информацию для ТОРГ12.
//
// Возвращаемое значение:
//   ВыборкаИзРезультатаЗапроса
//
Функция ТранспортнаяИнформацияДляТОРГ12(Документ) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА бг_ТранспортнаяИнформация.Перевозчик.НаименованиеПолное = """"
	|				ТОГДА бг_ТранспортнаяИнформация.Перевозчик.Наименование
	|			ИНАЧЕ бг_ТранспортнаяИнформация.Перевозчик.НаименованиеПолное
	|		КОНЕЦ, """") КАК НаименованиеПеревозчика,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА бг_ТранспортнаяИнформация.Заказчик.НаименованиеПолное = """"
	|				ТОГДА бг_ТранспортнаяИнформация.Заказчик.Наименование
	|			ИНАЧЕ бг_ТранспортнаяИнформация.Заказчик.НаименованиеПолное
	|		КОНЕЦ, """") КАК НаименованиеЗаказчика,
	|	ВЫБОР
	|		КОГДА Документ.Контрагент.НаименованиеПолное = """"
	|			ТОГДА Документ.Контрагент.Наименование
	|		ИНАЧЕ Документ.Контрагент.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеКонтрагента,
	|	бг_ТранспортнаяИнформация.Водитель.бг_Должность КАК ВодительДолжность,
	|	ВЫБОР
	|		КОГДА бг_ТранспортнаяИнформация.Водитель ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия + "" "" + ФИОФизическихЛицСрезПоследних.Имя + "" "" + ФИОФизическихЛицСрезПоследних.Отчество, бг_ТранспортнаяИнформация.Водитель.ФИО)
	|		КОГДА бг_ТранспортнаяИнформация.Водитель = НЕОПРЕДЕЛЕНО
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(бг_ТранспортнаяИнформация.Водитель, """")
	|	КОНЕЦ КАК ФИОВодителя,
	|	бг_ТранспортнаяИнформация.ТранспортноеСредство.Наименование КАК НаименованиеТранспортногоСредства,
	|	бг_ТранспортнаяИнформация.ВидПеревозки.ТипТранспортаЕГАИС КАК ТипТранспортаЕГАИС,
	|	бг_ТранспортнаяИнформация.Прицеп.Наименование КАК НаименованиеПрицепа
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК бг_ТранспортнаяИнформация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|			ПО (бг_ТранспортнаяИнформация.Водитель = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо)
	|		ПО (бг_ТранспортнаяИнформация.Объект = Документ.Ссылка)
	|ГДЕ
	|	Документ.Ссылка = &Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА бг_ТранспортнаяИнформация.Перевозчик.НаименованиеПолное = """"
	|				ТОГДА бг_ТранспортнаяИнформация.Перевозчик.Наименование
	|			ИНАЧЕ бг_ТранспортнаяИнформация.Перевозчик.НаименованиеПолное
	|		КОНЕЦ, """"),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА бг_ТранспортнаяИнформация.Заказчик.НаименованиеПолное = """"
	|				ТОГДА бг_ТранспортнаяИнформация.Заказчик.Наименование
	|			ИНАЧЕ бг_ТранспортнаяИнформация.Заказчик.НаименованиеПолное
	|		КОНЕЦ, """"),
	|	"""",
	|	бг_ТранспортнаяИнформация.Водитель.бг_Должность,
	|	ВЫБОР
	|		КОГДА бг_ТранспортнаяИнформация.Водитель ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия + "" "" + ФИОФизическихЛицСрезПоследних.Имя + "" "" + ФИОФизическихЛицСрезПоследних.Отчество, бг_ТранспортнаяИнформация.Водитель.ФИО)
	|		КОГДА бг_ТранспортнаяИнформация.Водитель = НЕОПРЕДЕЛЕНО
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(бг_ТранспортнаяИнформация.Водитель, """")
	|	КОНЕЦ,
	|	бг_ТранспортнаяИнформация.ТранспортноеСредство.Наименование,
	|	бг_ТранспортнаяИнформация.ВидПеревозки.ТипТранспортаЕГАИС,
	|	бг_ТранспортнаяИнформация.Прицеп.Наименование
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК бг_ТранспортнаяИнформация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|			ПО бг_ТранспортнаяИнформация.Водитель = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	|		ПО (бг_ТранспортнаяИнформация.Объект = Документ.Ссылка)
	|ГДЕ
	|	Документ.Ссылка = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка; 
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

// Возвращает фактический адрес доставки контрагента.
//
// Параметры:
//  ЮрЛицо - СправочнкСсылка.Контрагенты, СправочнкСсылка.Организации.
//		Грузополучатель, по которому необходимо получить фактический адрес доставки.
//
// Возвращаемое значение:
//   Строка
//
Функция ФактическийАдресДоставкиЮрЛица(ЮрЛицо) Экспорт

	Если ТипЗнч(ЮрЛицо) = Тип("СправочникСсылка.Контрагенты") Тогда
		ВидКИФактическийАдрес = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
	Иначе
		ВидКИФактическийАдрес = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации;
	КонецЕсли;
	
	КонтактнаяИнформация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЮрЛицо, "КонтактнаяИнформация");
	
	Если КонтактнаяИнформация = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеФактическогоАдреса = КонтактнаяИнформацияБЗК.НайтиКонтактнуюИнформацию(
		КонтактнаяИнформация.Выгрузить(),
		Неопределено,
		ВидКИФактическийАдрес);
	
	Если ДанныеФактическогоАдреса <> Неопределено Тогда
		Возврат ДанныеФактическогоАдреса.Представление;
	КонецЕсли;

КонецФункции

// Возвращает ключ записи по объекту транспортной информации.
//
// Параметры:
//  ОбъектТранспортнойИнформации - ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ЗаказКлиента.
// 		Грузополучатель, по которому необходимо получить адрес доставки.
//  ДанныеЗаполнения - Структура, Неопределено - См. ПараметрыЗаполненияТранспортнойИнформации()
//
// Возвращаемое значение:
//   РегистрСведенийКлючЗаписи.бг_ТранспортнаяИнформация 
//
Функция КлючЗаписиТранспортнойИнформации(ОбъектТранспортнойИнформации, ДанныеЗаполнения = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьТранспортнойИнформации = СоздатьНайтиЗаписьТранспортнойИнформации(
		ОбъектТранспортнойИнформации,
		ДанныеЗаполнения);
	
	ОтборЗаписи = Новый Структура("Объект, ТранспортноеСредство");
	ЗаполнитьЗначенияСвойств(ОтборЗаписи, ЗаписьТранспортнойИнформации);
	
	Возврат РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьКлючЗаписи(ОтборЗаписи);
		
КонецФункции

// Переопределяет заполнение транспортных реквизитов документа ТТНИсходящаяЕГАИС.
//
// Параметры:
//  ТТНИсходящаяЕГАИСОбъект  - ДокументОбъект.ТТНИсходящаяЕГАИС - Заполняемый документ ТТНИсходящаяЕГАИС.
//
Процедура ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ТТНИсходящаяЕГАИСОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ТТНИсходящаяЕГАИСОбъект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		// Реквизиты шапки
		КонтрагентыПоТранспортуРТУ = КонтрагентыПоТранспортуРТУ(ТТНИсходящаяЕГАИСОбъект.ДокументОснование);
		
		Если ЗначениеЗаполнено(КонтрагентыПоТранспортуРТУ.Грузоотправитель) Тогда
			
			Если ЗначениеЗаполнено(КонтрагентыПоТранспортуРТУ.ГрузоотправительЕГАИС) Тогда
				ТТНИсходящаяЕГАИСОбъект.Грузоотправитель = КонтрагентыПоТранспортуРТУ.ГрузоотправительЕГАИС;
			КонецЕсли;
		КонецЕсли;
		
		ТТНИсходящаяЕГАИСОбъект.ПунктРазгрузки = КонтрагентыПоТранспортуРТУ.ПунктНазначенияАдрес;
		ТТНИсходящаяЕГАИСОбъект.ПунктПогрузки = КонтрагентыПоТранспортуРТУ.ПунктПогрузкиАдрес;
		ТТНИсходящаяЕГАИСОбъект.Грузополучатель = КонтрагентыПоТранспортуРТУ.ГрузополучательЕГАИС;

	ИначеЕсли ТипЗнч(ТТНИсходящаяЕГАИСОбъект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

		АдресаТранспортногоРаздела = АдресаТранспортногоРазделаТТНПоПеремещению(
			ТТНИсходящаяЕГАИСОбъект.ДокументОснование);
			
		ЗаполнитьЗначенияСвойств(ТТНИсходящаяЕГАИСОбъект, АдресаТранспортногоРаздела);
		
	Иначе
		//NOP
	КонецЕсли;
	
	// Реквизиты транспортного блока
	ТранспортнаяИнформация = ТранспортнаяИнформацияДляТОРГ12(ТТНИсходящаяЕГАИСОбъект.ДокументОснование);
	Если ТранспортнаяИнформация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТТНИсходящаяЕГАИСОбъект.Перевозчик = ТранспортнаяИнформация.НаименованиеПеревозчика;
	ТТНИсходящаяЕГАИСОбъект.ТипТранспорта = ТранспортнаяИнформация.ТипТранспортаЕГАИС;
	ТТНИсходящаяЕГАИСОбъект.Заказчик = ТранспортнаяИнформация.НаименованиеЗаказчика;
	ТТНИсходящаяЕГАИСОбъект.Водитель = ТранспортнаяИнформация.ФИОВодителя;
	ТТНИсходящаяЕГАИСОбъект.НомерТранспортногоСредства = ТранспортнаяИнформация.НаименованиеТранспортногоСредства;
	ТТНИсходящаяЕГАИСОбъект.Прицеп = ТранспортнаяИнформация.НаименованиеПрицепа;


КонецПроцедуры

// Возвращает признак наличия записи транспортной информации по объекту.
//
// Параметры:
//  ОбъектТранспортнойИнформации  - Произвольный - Объект, к которому привязана транспортная информация.
//
// Возвращаемое значение:
//   Булево - признак наличия записи транспортной информации по объекту.
//
Функция ТранспортнаяИнформацияСоздана(ОбъектТранспортнойИнформации) Экспорт

	Если Не ЗначениеЗаполнено(ОбъектТранспортнойИнформации) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектТранспортнойИнформации);
	НаборЗаписей.Прочитать();
	
	Возврат НаборЗаписей.Количество() > 0;

КонецФункции

// Возвращает первую запись транспортной информации по объекту из набора.
// Предполагается, что по документу есть только одна запись транспортной информации.
//
// Параметры:
//  ОбъектТранспортнойИнформации  - Произвольный - Объект, к которому привязана транспортная информация.
//  ДанныеЗаполнения - Структура, Неопределено - См. ПараметрыЗаполненияТранспортнойИнформации()
//
// Возвращаемое значение:
//   РегистрСведенийЗапись.бг_ТранспортнаяИнформация - запись транспортной информации по объекту.
//
Функция СоздатьНайтиЗаписьТранспортнойИнформации(ОбъектТранспортнойИнформации, ДанныеЗаполнения = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектТранспортнойИнформации);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Объект = ОбъектТранспортнойИнформации;
		
		Если ДанныеЗаполнения <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеЗаполнения);
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	ИначеЕсли НаборЗаписей.Количество() > 1 Тогда
		
		ЗаписиУдалить = Новый Массив;
		Для Индекс = 1 По НаборЗаписей.Количество() - 1 Цикл
			ЗаписиУдалить.Добавить(НаборЗаписей[Индекс]);	
		КонецЦикла;
		
		Для каждого ЗаписьУдалить Из ЗаписиУдалить Цикл
			НаборЗаписей.Удалить(ЗаписьУдалить);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	Возврат НаборЗаписей[0];

КонецФункции

// Актуализирует запись транспортной информации
//
// Параметры:
//  ОбъектТранспортнойИнформации - Произвольный - Объект, к которому привязана транспортная информация.
//  ДанныеЗаполнения - Структура - данные, которые необходимо обновить
//    
Процедура АктуализироватьЗаписьТранспортнойИнформации(ОбъектТранспортнойИнформации, ДанныеЗаполнения) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектТранспортнойИнформации);
	НаборЗаписей.Прочитать();

	Если НаборЗаписей.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(НаборЗаписей[0], ДанныеЗаполнения);

	НаборЗаписей.Записать();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КонтрагентыПоТранспортуРТУ(РеализацияТоваровУслуг)

	КонтрагентыПоТранспортуРТУ = Новый Структура(
		"Грузоотправитель, Грузополучатель, ГрузоотправительЕГАИС, ГрузополучательЕГАИС, ПунктПогрузкиАдрес, ПунктНазначенияАдрес");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.бг_ПунктНазначения.Адрес КАК ПунктНазначенияАдрес,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель,
	|	МАКСИМУМ(КлассификаторОрганизацийЕГАИСОрганизация.Ссылка) КАК ГрузоотправительЕГАИС,
	|	РеализацияТоваровУслуг.бг_ПунктНазначения.ОрганизацияЕГАИС КАК ГрузополучательЕГАИС,
	|	ЕСТЬNULL(Склады.бг_ПунктНазначения.Адрес, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК ПунктПогрузкиАдрес
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИСОрганизация
	|		ПО РеализацияТоваровУслуг.Организация = КлассификаторОрганизацийЕГАИСОрганизация.Контрагент
	|			И (КлассификаторОрганизацийЕГАИСОрганизация.СоответствуетОрганизации)
	|			И (НЕ КлассификаторОрганизацийЕГАИСОрганизация.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО РеализацияТоваровУслуг.Склад = Склады.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &РеализацияТоваровУслуг
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.бг_ПунктНазначения.Адрес,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Грузополучатель,
	|	РеализацияТоваровУслуг.бг_ПунктНазначения.ОрганизацияЕГАИС,
	|	Склады.бг_ПунктНазначения.Адрес";
	
	Запрос.УстановитьПараметр("РеализацияТоваровУслуг", РеализацияТоваровУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(КонтрагентыПоТранспортуРТУ, Выборка);
	КонецЕсли;
	
	Возврат КонтрагентыПоТранспортуРТУ;


КонецФункции

Функция АдресаТранспортногоРазделаТТНПоПеремещению(ПеремещениеТоваров)
	
	АдресаТранспортногоРаздела = Новый Структура("ПунктПогрузки,ПунктРазгрузки");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыОтправители.Ссылка КАК КонтрагентПунктаРазгрузкиОтправитель,
	|	КонтрагентыПолучатели.Ссылка КАК КонтрагентПунктаРазгрузкиПолучатель
	|ПОМЕСТИТЬ КонтрагентыПунктовРазгрузки
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладыОтправители
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК КонтрагентыОтправители
	|			ПО СкладыОтправители.бг_ПунктРазгрузки = КонтрагентыОтправители.Ссылка
	|		ПО ПеремещениеТоваров.СкладОтправитель = СкладыОтправители.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладыПолучатели
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК КонтрагентыПолучатели
	|			ПО СкладыПолучатели.бг_ПунктРазгрузки = КонтрагентыПолучатели.Ссылка
	|		ПО ПеремещениеТоваров.СкладПолучатель = СкладыПолучатели.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПунктыНазначения.Адрес КАК АдресОтправителя
	|ПОМЕСТИТЬ ДанныеОтправителя
	|ИЗ
	|	Справочник.битПунктыНазначения КАК ПунктыНазначения
	|ГДЕ
	|	ПунктыНазначения.Клиент В
	|			(ВЫБРАТЬ
	|				КонтрагентыПунктовРазгрузки.КонтрагентПунктаРазгрузкиОтправитель
	|			ИЗ
	|				КонтрагентыПунктовРазгрузки КАК КонтрагентыПунктовРазгрузки)
	|	И НЕ ПунктыНазначения.ПометкаУдаления
	|	И ПунктыНазначения.ОрганизацияЕГАИС <> ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПунктыНазначения.Адрес КАК АдресПолучателя
	|ПОМЕСТИТЬ ДанныеПолучателя
	|ИЗ
	|	Справочник.битПунктыНазначения КАК ПунктыНазначения
	|ГДЕ
	|	ПунктыНазначения.Клиент В
	|			(ВЫБРАТЬ
	|				КонтрагентыПунктовРазгрузки.КонтрагентПунктаРазгрузкиПолучатель
	|			ИЗ
	|				КонтрагентыПунктовРазгрузки КАК КонтрагентыПунктовРазгрузки)
	|	И НЕ ПунктыНазначения.ПометкаУдаления
	|	И ПунктыНазначения.ОрганизацияЕГАИС <> ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОтправителя.АдресОтправителя КАК АдресОтправителя,
	|	ДанныеПолучателя.АдресПолучателя КАК АдресПолучателя
	|ИЗ
	|	ДанныеОтправителя КАК ДанныеОтправителя,
	|	ДанныеПолучателя КАК ДанныеПолучателя";
	
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ПеремещениеТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		АдресаТранспортногоРаздела.ПунктПогрузки = Выборка.АдресОтправителя;
		АдресаТранспортногоРаздела.ПунктРазгрузки = Выборка.АдресПолучателя;
		
	КонецЕсли;
	
	Возврат АдресаТранспортногоРаздела;
	
КонецФункции

#КонецОбласти
