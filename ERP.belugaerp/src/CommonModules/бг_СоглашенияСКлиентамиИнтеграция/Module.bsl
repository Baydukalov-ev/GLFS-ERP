
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты();
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		Реквизиты);
	
	ДобавитьПроизвольныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный, адаптер_РаботаСДаннымиИБ;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ДанныеОбъекта = адаптер_ОбработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(
						Объект, 
						ДанныеСообщения);
	
	Если ДанныеОбъекта.Реквизиты.Количество() > 0 Тогда
		
		РеквизитыОбъекта = ДанныеОбъекта.Реквизиты[0];
		
		ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(
										Объект, 
										ДанныеСообщения);
		
		ЗаполнитьСкидки(
			РеквизитыОбъекта, 
			Объект, 
			ПараметрыВыполненияЗапросов, 
			ДанныеСообщения);
		
	КонецЕсли;
	
	Возврат ДанныеОбъекта;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()
	
	ВыгружаемыеРеквизиты = Новый Массив;
	
	ВыгружаемыеРеквизиты.Добавить("бг_КлючевойКлиент");
	ВыгружаемыеРеквизиты.Добавить("ДатаНачалаДействия");
	ВыгружаемыеРеквизиты.Добавить("ДатаОкончанияДействия");
	ВыгружаемыеРеквизиты.Добавить("Контрагент");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("Предопреленный");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	
	Возврат ВыгружаемыеРеквизиты;
	
КонецФункции

Процедура ДобавитьПроизвольныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Скидки.Скидка",
		Новый ОписаниеТипов("СправочникСсылка.СкидкиНаценки"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Скидки.ДатаНачалаДействия",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Скидки.ДатаОкончанияДействия",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.бг_КлючевыеКлиенты,
		"Наименование");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.бг_КлючевыеКлиенты,
		"ИдентификаторCRM");

КонецПроцедуры

Процедура ЗаполнитьСкидки(РеквизитыОбъекта, Объект, ПараметрыВыполненияЗапросов, ДанныеСообщения)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Источник", Объект);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка КАК Скидка,
	|	ДействиеСкидокНаценокСрезПоследних.Период КАК ДатаНачалаДействия
	|ПОМЕСТИТЬ втНачалоДействия
	|ИЗ
	|	РегистрСведений.ДействиеСкидокНаценок.СрезПоследних(
	|			&Период,
	|			Источник = &Источник
	|				И Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДействияСкидок.Действует)) КАК ДействиеСкидокНаценокСрезПоследних
	|ГДЕ
	|	ДействиеСкидокНаценокСрезПоследних.Источник = &Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДействиеСкидокНаценокСрезПоследних.Период КАК ДатаОкончанияДействия,
	|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка КАК Скидка
	|ПОМЕСТИТЬ втОкончаниеДействия
	|ИЗ
	|	РегистрСведений.ДействиеСкидокНаценок.СрезПоследних(
	|			,
	|			Источник = &Источник
	|				И Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДействияСкидок.НеДействует) ) КАК ДействиеСкидокНаценокСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНачалоДействия.Скидка КАК Скидка_ЗначениеРеквизитаИдентификатор,
	|	втНачалоДействия.ДатаНачалаДействия КАК ДатаНачалаДействия,
	|	ЕСТЬNULL(втОкончаниеДействия.ДатаОкончанияДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияДействия
	|ИЗ
	|	втНачалоДействия КАК втНачалоДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОкончаниеДействия КАК втОкончаниеДействия
	|		ПО (втНачалоДействия.Скидка = втОкончаниеДействия.Скидка)";
	
	Результат = Запрос.Выполнить();
	
	Скидки = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
				Результат,
				ПараметрыВыполненияЗапросов.ТаблицаКлючей,
				ДанныеСообщения);
		
	РеквизитыОбъекта.Вставить("Скидки", Скидки);
	
КонецПроцедуры

#КонецОбласти
