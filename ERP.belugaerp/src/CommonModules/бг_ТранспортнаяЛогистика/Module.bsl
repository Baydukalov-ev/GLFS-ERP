#Область ПрограммныйИнтерфейс

// Возвращает транспортную информацию по переданному документу.
//
// Возвращаемое значение:
//   Массив - СправочникСсылка.Контрагенты - контрагенты перевозчики
//
Функция КонтрагентыПеревозчики() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО Контрагенты.Партнер = Партнеры.Ссылка
	|			И (Партнеры.Перевозчик)";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

// Возвращает пункт назначения для грузополучателя.
//
// Параметры:
//  Контрагент  - СправочникСсылка.Контрагенты - Грузополучатель.
//
// Возвращаемое значение:
//  ПунктНазначения - СправочникСсылка.битПунктыНазначения
//
Функция ПунктНазначенияГрузополучателя(Контрагент) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	|	ПунктыНазначения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.битПунктыНазначения КАК ПунктыНазначения
	|ГДЕ
	|	ПунктыНазначения.Клиент = &Клиент
	|	И НЕ ПунктыНазначения.ПометкаУдаления";
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() = 1
		И Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает все пункты назначения по ИНН клиента.
//
// Параметры:
//  Контрагент  - СправочникСсылка.Контрагенты
//
// Возвращаемое значение:
//  Массив
//
Функция ПунктыНазначенияПоИННГрузополучателя(Контрагент) Экспорт
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Новый Массив;	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битПунктыНазначения.Ссылка КАК ПунктНазначения
	|ИЗ
	|	(ВЫБРАТЬ
	|		Контрагенты.ИНН КАК ИНН
	|	ИЗ
	|		Справочник.Контрагенты КАК Контрагенты
	|	ГДЕ
	|		Контрагенты.Ссылка = &Контрагент) КАК ИННКонтрагента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.битПунктыНазначения КАК битПунктыНазначения
	|			ПО (Контрагенты.Ссылка = (ВЫРАЗИТЬ(битПунктыНазначения.Клиент КАК Справочник.Контрагенты))
	|					И НЕ битПунктыНазначения.ПометкаУдаления)
	|		ПО (ИННКонтрагента.ИНН = Контрагенты.ИНН)";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПунктНазначения");	
	
КонецФункции	

// Возвращает срок доставки товара до пункта назначения
//
// Параметры:
//  СкладОтправления  - СправочникСсылка.Склада
//  ПунктНазначения  - СправочникСсылка.битПунктыНазначения
//
// Возвращаемое значение:
//  Число - Срок доставки (суток)
//
Функция СрокДоставкиДоПунктаНазначения(СкладОтправления, ПунктНазначения) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(СкладОтправления)
		Или Не ЗначениеЗаполнено(ПунктНазначения) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасстояниеДоПунктовРазгрузки.СрокДоставки КАК СрокДоставки
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_РасстояниеДоПунктовРазгрузки КАК РасстояниеДоПунктовРазгрузки
	|		ПО (Склады.Ссылка = &СкладОтправления)
	|			И Склады.бг_ПунктНазначения = РасстояниеДоПунктовРазгрузки.ПунктРазгрузкиОрганизации
	|			И (РасстояниеДоПунктовРазгрузки.ПунктРазгрузки = &ПунктРазгрузки)";
	Запрос.УстановитьПараметр("СкладОтправления", СкладОтправления);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПунктНазначения);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СрокДоставки;
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции

// Возвращает время работы пункта назначения
//
// Параметры:
//  ПунктНазначения  - СправочникСсылка.битПунктыНазначения
//
// Возвращаемое значение:
//  Структура
//
Функция ВремяРаботыПунктаНазначения(ПунктНазначения) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	// Время работы пункта назначения по-умолчанию с 9:00 до 18:00
	ВремяРаботыПунктаНазначенияПоУмолчанию = Новый Структура("ВремяДоставкиС, ВремяДоставкиПо",
				'00010101090000', '00010101180000');
	
	Если Не ЗначениеЗаполнено(ПунктНазначения) Тогда
		Возврат ВремяРаботыПунктаНазначенияПоУмолчанию;
	КонецЕсли;
	
	ДанныеПунктаНазначения =
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПунктНазначения, "ВремяРаботыС, ВремяРаботыПо");
		
	Если ЗначениеЗаполнено(ДанныеПунктаНазначения.ВремяРаботыС)
		Или ЗначениеЗаполнено(ДанныеПунктаНазначения.ВремяРаботыПо) Тогда
		
		ВремяРаботыПунктаНазначения = Новый Структура("ВремяДоставкиС, ВремяДоставкиПо",
				ДанныеПунктаНазначения.ВремяРаботыС, ДанныеПунктаНазначения.ВремяРаботыПо);
	Иначе
		ВремяРаботыПунктаНазначения = ВремяРаботыПунктаНазначенияПоУмолчанию;		
	КонецЕсли;
	
	Возврат ВремяРаботыПунктаНазначения;		
КонецФункции

#КонецОбласти