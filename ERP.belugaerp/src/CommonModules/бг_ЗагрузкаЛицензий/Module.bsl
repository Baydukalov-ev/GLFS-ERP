
#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьПриостановленныеЛицензии(ТипЛицензии = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Настройки.ТипЛицензии КАК ТипЛицензии,
	|	Настройки.АдресСайта КАК АдресСайта,
	|	Настройки.ПутьКФайлу КАК ПутьКФайлу,
	|	Настройки.ИмяФайла КАК ИмяФайла,
	|	Настройки.ЗагружатьТолькоИзмененные КАК ЗагружатьТолькоИзмененные
	|ИЗ
	|	РегистрСведений.бг_НастройкиЗагрузкиПриостановленныхЛицензий КАК Настройки";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		РезультатПроверки = ПолучениеФайловИзИнтернетаСлужебный.ПроверитьДоступностьСервера(Выборка.АдресСайта);
		Если Не РезультатПроверки.Доступен Тогда
			
			СоздатьДокументСОшибкойСайтНеДоступен(Перечисления.бг_ВидыОшибокЗагрузкиАлкогольнойЛицензииПоставщиков.СайтФСРАРНедоступен,
				ОписаниеОшибки());
			Продолжить;
			
		КонецЕсли;
		
		ОписаниеФайла = ЗагрузитьФайл(Выборка);
		Если ПустаяСтрока(ОписаниеФайла.ПутьКЛокальномуФайлу) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ХешСуммыФайловСовпадают(ОписаниеФайла)
			И Выборка.ЗагружатьТолькоИзмененные Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			ОбработанныеДанные = ОбработатьФайл(ОписаниеФайла);
		Исключение
			
			СоздатьДокументСОшибкойЗагрузки(
				Перечисления.бг_ВидыОшибокЗагрузкиАлкогольнойЛицензииПоставщиков.ОбработкаФайлаНеУдалась,
				НСтр("ru = 'Не удалось обработать файл: '",
					ОбщегоНазначения.КодОсновногоЯзыка()) + ОписаниеОшибки(),
				Выборка.ТипЛицензии);
			Продолжить;
			
		КонецПопытки;
		
		ЗагрузитьДанныеВИБ(ОбработанныеДанные, ОписаниеФайла);
	
	КонецЦикла;
	
КонецПроцедуры

// Считывает данные из табличного документа в таблицу значений.
// Параметры:
//	ОбластьДанных - ТабличныйДокумент
//	НачальныйНомерСтроки - Число
//	ОписаниеКолонок - Соответствие Из КлючИЗначение
//		*Ключ - Число - номер колонки в файле.
//		*Значение - Строка - имя колонки.
// Возвращаемое значение:
//	ТаблицаЗначений
//
Функция ТаблицаДанныхИзФайла(ОбластьДанных, НачальныйНомерСтроки = 1, ОписаниеКолонок = Неопределено) Экспорт
	
	ПустыеСтроки = Новый Массив;
	Для НомерПустойСтроки = 1 По НачальныйНомерСтроки - 1 Цикл
		ПустыеСтроки.Добавить(НомерПустойСтроки);
	КонецЦикла;
	
	ИндексСтроки = НачальныйНомерСтроки;
	Пока ИндексСтроки <= ОбластьДанных.ВысотаТаблицы Цикл
		
		ИмяСтроки = СтрШаблон("R%1", Формат(ИндексСтроки, "ЧГ=0"));
		ИндексСтроки = ИндексСтроки + 1;
		
		ЕстьДанныеВСтроке = Ложь;
		ИндексКолонки = 1;
		Пока Не ЕстьДанныеВСтроке
			И ИндексКолонки <= ОбластьДанных.ШиринаТаблицы Цикл
			
			Ячейка = ОбластьДанных.Область(
				СтрШаблон("%1C%2", ИмяСтроки, Формат(ИндексКолонки, "ЧГ=0")));
			ИндексКолонки = ИндексКолонки + 1;
			
			ЕстьДанныеВСтроке = ЕстьДанныеВСтроке Или ЗначениеЗаполнено(Ячейка.Текст);
			
		КонецЦикла;
		
		Если Не ЕстьДанныеВСтроке Тогда
			ПустыеСтроки.Добавить(ИндексСтроки - 1);
		КонецЕсли;
		
	КонецЦикла;
	
	Смещение = 0;
	Для Каждого ИндексСтроки Из ПустыеСтроки Цикл
		
		ОбластьДанных.УдалитьОбласть(
			ОбластьДанных.Область(
				СтрШаблон("R%1", Формат(ИндексСтроки - Смещение, "ЧГ=0"))),
				ТипСмещенияТабличногоДокумента.ПоВертикали);
		Смещение = Смещение + 1;
		
	КонецЦикла;
	
	Если Не ОписаниеКолонок = Неопределено Тогда
		УстановитьИменаКолонокТаблицы(ОбластьДанных, ОписаниеКолонок);
	КонецЕсли;
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьДанных.Область());
	Построитель.Выполнить();
	
	Возврат Построитель.Результат.Выгрузить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаДанных

Функция ЗагрузитьФайл(ПараметрыЗагрузки)
	
	РезультатЗагрузки = Новый Структура;
	РезультатЗагрузки.Вставить("ТипЛицензии", ПараметрыЗагрузки.ТипЛицензии);
	РезультатЗагрузки.Вставить("ИмяФайлаНаСайте", "");
	РезультатЗагрузки.Вставить("ПутьКЛокальномуФайлу", "");
	РезультатЗагрузки.Вставить("ХешСуммаФайла", "");
	
	Запрос = Новый HTTPЗапрос;
	Соединение = Новый HTTPСоединение(ПараметрыЗагрузки.АдресСайта,,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	
	ПутьКФайлу = ПараметрыЗагрузки.ПутьКФайлу;
	Если Не Лев(ПутьКФайлу, 1) = "/" Тогда
		ПутьКФайлу = "/" + ПутьКФайлу;
	КонецЕсли;
	ИмяФайла = ПараметрыЗагрузки.ИмяФайла;
	
	РасширениеФайла = Прав(ИмяФайла,
		СтрДлина(ИмяФайла) - СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) + 1);
	ИмяФайлаДляПроверки = Лев(ИмяФайла, СтрДлина(ИмяФайла) - СтрДлина(РасширениеФайла));
	
	Если СтрДлина(ИмяФайлаДляПроверки) = 1 И ИмяФайлаДляПроверки = "*" Тогда

		Запрос.АдресРесурса = ПутьКФайлу;
		
		Ответ = Соединение.Получить(Запрос);
		Тело = Ответ.ПолучитьТелоКакСтроку();
		
		ПозицияНачалаРасширения = СтрНайти(Тело, РасширениеФайла);
		ПозицияНачалаПутиКФайлу = СтрНайти(Тело, """", НаправлениеПоиска.СКонца, ПозицияНачалаРасширения) + 1;
		
		ПутьКФайлуСИменем = Сред(Тело, ПозицияНачалаПутиКФайлу,
			ПозицияНачалаРасширения - ПозицияНачалаПутиКФайлу + СтрДлина(РасширениеФайла));
		ИмяФайла = Сред(ПутьКФайлуСИменем, СтрНайти(ПутьКФайлуСИменем, "/", НаправлениеПоиска.СКонца) + 1);
		ПутьКФайлу = СтрЗаменить(ПутьКФайлуСИменем, ИмяФайла, "");
		
	КонецЕсли;
	
	Запрос.АдресРесурса = ПутьКФайлу + ИмяФайла;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ТекстОшибкиПолученияФайла = "";
	Попытка
		Ответ = Соединение.Получить(Запрос, ИмяВременногоФайла);
	Исключение
		ТекстОшибкиПолученияФайла = ОписаниеОшибки();
	КонецПопытки;
	
	Если Не ПустаяСтрока(ТекстОшибкиПолученияФайла)
		Или Не Ответ.КодСостояния = 200 Тогда
		СоздатьДокументСОшибкойЗагрузки(
			Перечисления.бг_ВидыОшибокЗагрузкиАлкогольнойЛицензииПоставщиков.СкачатьФайлНеУдалось,
			ТекстОшибкиПолученияФайла, ПараметрыЗагрузки.ТипЛицензии);
		Возврат РезультатЗагрузки;
	КонецЕсли;
	
	Хеширование = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеширование.ДобавитьФайл(ИмяВременногоФайла);
	
	РезультатЗагрузки.ХешСуммаФайла = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(
		ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Хеширование.ХешСумма));
	РезультатЗагрузки.ИмяФайлаНаСайте = ИмяФайла;
	РезультатЗагрузки.ПутьКЛокальномуФайлу = ИмяВременногоФайла;
	
	Возврат РезультатЗагрузки;
	
КонецФункции

Функция ХешСуммыФайловСовпадают(ОписаниеФайла)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ТекущиеДанные.ХешСуммаФайла = &ХешСуммаТекущая) КАК ФайлыИдентичны,
	|	(НЕ &ХешСуммаТекущая = ЕСТЬNULL(КонтрольныеДанные.ХешСуммаФайла, """")) КАК ФайлОбновлялся
	|ИЗ
	|	РегистрСведений.бг_ИсторияЗагрузкиАлкогольныхЛицензийПоставщиков.СрезПоследних(
	|		,
	|			ТипЛицензии = &ТипЛицензии) КАК ТекущиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ИсторияЗагрузкиАлкогольныхЛицензийПоставщиков.СрезПоследних(
	|			&ИнтервалКонтроля,
	|			ТипЛицензии = &ТипЛицензии) КАК КонтрольныеДанные
	|		ПО ТекущиеДанные.ТипЛицензии = КонтрольныеДанные.ТипЛицензии";
	
	Запрос.УстановитьПараметр("ХешСуммаТекущая", ОписаниеФайла.ХешСуммаФайла);
	Запрос.УстановитьПараметр("ТипЛицензии", ОписаниеФайла.ТипЛицензии);
	Запрос.УстановитьПараметр("ИнтервалКонтроля", ТекущаяДатаСеанса() - 3600);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		РегистрыСведений.бг_ИсторияЗагрузкиАлкогольныхЛицензийПоставщиков.ЗаписатьНовыеДанные(ТекущаяДатаСеанса(),
			ОписаниеФайла.ТипЛицензии, ОписаниеФайла.ХешСуммаФайла);
		Возврат Ложь;
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	РегистрыСведений.бг_ИсторияЗагрузкиАлкогольныхЛицензийПоставщиков.ЗаписатьНовыеДанные(ТекущаяДатаСеанса(),
		ОписаниеФайла.ТипЛицензии, ОписаниеФайла.ХешСуммаФайла);
	
	Если Не Выборка.ФайлОбновлялся Тогда
		СоздатьДокументСОшибкойЗагрузки(Перечисления.бг_ВидыОшибокЗагрузкиАлкогольнойЛицензииПоставщиков.ФайлНеОбновился,
			НСтр("ru = 'Файл не обновлялся в течение 60 минут.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ОписаниеФайла.ТипЛицензии);
	КонецЕсли;
	
	Возврат Выборка.ФайлыИдентичны;
	
КонецФункции

#КонецОбласти

#Область ОбработкаДанных

Процедура УстановитьИменаКолонокТаблицы(ОбластьДанных, ОписаниеКолонок)
	
	Для Каждого КлючИЗначение Из ОписаниеКолонок Цикл
		
		Если КлючИЗначение.Ключ = "ПерваяСтрока" Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаВТаблицеДанных Из КлючИЗначение.Значение Цикл
			
			Если КолонкаВТаблицеДанных.Значение > ОбластьДанных.ШиринаТаблицы Тогда
				
				ШаблонОшибки = НСтр("ru = 'Загрузка прервана. Неверно задан номер колонки для значения %1.'");
				ВызватьИсключение СтрШаблон(ШаблонОшибки, КлючИЗначение.Ключ);
				
			КонецЕсли;
			
			Ячейка = ОбластьДанных.Область(СтрШаблон("R1C%1", Формат(КолонкаВТаблицеДанных.Значение, "ЧГ=0")));
			Ячейка.Текст = КолонкаВТаблицеДанных.Ключ;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОбработатьФайл(ОписаниеФайла)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ОписаниеФайла.ПутьКЛокальномуФайлу);
	
	ТаблицаДанных = ТаблицаДанныхИзФайла(ТабДок, 2);
		
	ОбработанныеДанные = Новый ТаблицаЗначений;
	ОбработанныеДанные.Колонки.Добавить("ИНН", Метаданные.ОпределяемыеТипы.ИНН.Тип);
	ОбработанныеДанные.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(9)));
	ОбработанныеДанные.Колонки.Добавить("НомерЛицензии", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ОбработанныеДанные.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	
	СокращенияМесяцев = Новый Соответствие;
	СокращенияМесяцев.Вставить("янв", "01");
	СокращенияМесяцев.Вставить("фев", "02");
	СокращенияМесяцев.Вставить("мар", "03");
	СокращенияМесяцев.Вставить("апр", "04");
	СокращенияМесяцев.Вставить("май", "05");
	СокращенияМесяцев.Вставить("июн", "06");
	СокращенияМесяцев.Вставить("июл", "07");
	СокращенияМесяцев.Вставить("авг", "08");
	СокращенияМесяцев.Вставить("сен", "09");
	СокращенияМесяцев.Вставить("окт", "10");
	СокращенияМесяцев.Вставить("ноя", "11");
	СокращенияМесяцев.Вставить("дек", "12");
	
	Для Каждого ОписаниеДанных Из ТаблицаДанных Цикл
		
		ГотовыеДанные = ОбработанныеДанные.Добавить();
		Если ОписаниеФайла.ТипЛицензии = Перечисления.бг_ТипыЛицензийПоставщиковАлкогольнойПродукции.Розничная Тогда
			
			ГотовыеДанные.ИНН = СокрЛП(ОписаниеДанных.ИННОрганизации);
			ГотовыеДанные.КПП =
				СокрЛП(ОписаниеДанных.КППОбособленногоПодразделенияОрганизацииОсуществляющегоЛицензируемыйВидДеятельности);
			ГотовыеДанные.НомерЛицензии = СокрЛП(ОписаниеДанных.НомерЛицензииСоответствующийНомеруЗаписиВРеестре);

			ДатаРазбитая = СтрРазделить(ОписаниеДанных.ДатаИзмененияСведенийОДействииЛицензии, " ");
			ГотовыеДанные.Дата = Дата(ДатаРазбитая[2]
				+ СокращенияМесяцев.Получить(НРег(ДатаРазбитая[1])) + ДатаРазбитая[0]);
			
		Иначе
			
			ГотовыеДанные.ИНН = ОписаниеДанных.ИНН;
			ДатаРазбитая = СтрРазделить(ОписаниеДанных.ДатаПринятияРешения, ".");
			ГотовыеДанные.Дата = Дата(ДатаРазбитая[2] + ДатаРазбитая[1] + ДатаРазбитая[0]);
			ГотовыеДанные.НомерЛицензии = СокрЛП(Сред(ОписаниеДанных.НомерЗаписиВРеестре___номерБланка,
				СтрНайти(ОписаниеДанных.НомерЗаписиВРеестре___номерБланка, "№") + 1));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОбработанныеДанные;
	
КонецФункции

Процедура ЗагрузитьДанныеВИБ(Данные, ОписаниеФайла)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.ИНН КАК ИНН,
	|	Т.КПП КАК КПП,
	|	Т.НомерЛицензии КАК НомерЛицензии,
	|	Т.Дата КАК Дата
	|ПОМЕСТИТЬ ДанныеПредварительные
	|ИЗ
	|	&ИсходныеДанные КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИНН КАК ИНН,
	|	Т.КПП КАК КПП,
	|	Т.НомерЛицензии КАК НомерЛицензии,
	|	МАКСИМУМ(Т.Дата) КАК Дата
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	ДанныеПредварительные КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ИНН,
	|	Т.КПП,
	|	Т.НомерЛицензии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(Данные.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриостановки,
	|	ЕСТЬNULL(Данные.ИНН, Лицензии.Владелец.ИНН) КАК ИНН,
	|	ЕСТЬNULL(Данные.КПП, ПунктыНазначения.ПунктНазначения.КПП) КАК КПП,
	|	ЕСТЬNULL(Данные.НомерЛицензии, Лицензии.бг_НомерРАР) КАК НомерЛицензии,
	|	Лицензии.Ссылка КАК Лицензия
	|ИЗ
	|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК Лицензии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции.бг_ПунктыНазначения КАК ПунктыНазначения
	|		ПО Лицензии.Ссылка = ПунктыНазначения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
	|		ПО Данные.ИНН = Лицензии.Владелец.ИНН
	|			И Данные.НомерЛицензии = Лицензии.бг_НомерРАР
	|ГДЕ
	|	(Лицензии.ДатаОкончания >= &ТекущаяДата
	|		ИЛИ Лицензии.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(Данные.КПП, """") = """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ Данные.КПП = ПунктыНазначения.ПунктНазначения.КПП
	|	КОНЕЦ
	|	И Лицензии.бг_ТипЛицензии = &ТипЛицензии
	|	И (Данные.Дата ЕСТЬ NULL
	|			И НЕ Лицензии.бг_ПриостановленаСДаты = ДАТАВРЕМЯ(1, 1, 1)
	|		ИЛИ НЕ Данные.Дата ЕСТЬ NULL
	|			И НЕ Данные.Дата = Лицензии.бг_ПриостановленаСДаты)";
	
	Запрос.УстановитьПараметр("ИсходныеДанные", Данные);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТипЛицензии", ОписаниеФайла.ТипЛицензии);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДокументЗагрузки = Документы.битЗагрузкаПриостановленныхЛицензийКонтрагентов.СоздатьДокумент();
	ДокументЗагрузки.Дата = ТекущаяДатаСеанса();
	ДокументЗагрузки.ТипЛицензии = ОписаниеФайла.ТипЛицензии;
	ДокументЗагрузки.ИмяФайла = ОписаниеФайла.ИмяФайлаНаСайте;
	ДокументЗагрузки.РезультатЗагрузки = "Успешно";
	
	Выборка = Результат.Выбрать();
	
	ТекстыОшибок = Новый Массив;
	Пока Выборка.Следующий() Цикл
	
		СтрокаЗагрузки = ДокументЗагрузки.ЗагруженныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗагрузки, Выборка);
		
		ЛицензияОбъект = Выборка.Лицензия.ПолучитьОбъект();
		ЛицензияОбъект.бг_ПриостановленаСДаты = Выборка.ДатаПриостановки;
		
		Попытка
			ЛицензияОбъект.Записать();
		Исключение
			ТекстыОшибок.Добавить(ОписаниеОшибки());
		КонецПопытки;
	
	КонецЦикла;
	
	Если ТекстыОшибок.Количество() Тогда
		
		ДокументЗагрузки.ВидОшибки = Перечисления.бг_ВидыОшибокЗагрузкиАлкогольнойЛицензииПоставщиков.ОбновлениеЛицензииНеУдалось;
		ДокументЗагрузки.РезультатЗагрузки = "Ошибка с обновлением лицензий";
		ДокументЗагрузки.Комментарий = СтрСоединить(ТекстыОшибок, Символы.ПС);
		
	КонецЕсли;
	
	ДокументЗагрузки.Записать();
	
	ДанныеФайла = Новый ДвоичныеДанные(ОписаниеФайла.ПутьКЛокальномуФайлу);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДанныеФайла);
	
	ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
	ПараметрыФайла.ВладелецФайлов = ДокументЗагрузки.Ссылка;
	ПараметрыФайла.ИмяБезРасширения = ОписаниеФайла.ИмяФайлаНаСайте;
	
	РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресВременногоХранилища);
	
	УдалитьФайлы(ОписаниеФайла.ПутьКЛокальномуФайлу);
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияОшибок

Процедура СоздатьДокументСОшибкойСайтНеДоступен(ВидОшибки, ТекстОшибки)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Т.Дата) КАК Дата
	|ИЗ
	|	Документ.битЗагрузкаПриостановленныхЛицензийКонтрагентов КАК Т
	|ГДЕ
	|	Т.Дата < &ВремяЗагрузки
	|
	|ИМЕЮЩИЕ
	|	НЕ МАКСИМУМ(Т.Дата) ЕСТЬ NULL
	|	И РАЗНОСТЬДАТ(МАКСИМУМ(Т.Дата), &ВремяЗагрузки, ЧАС) >= 3";
	
	Запрос.УстановитьПараметр("ВремяЗагрузки", ТекущаяДатаСеанса());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьДокументСОшибкойЗагрузки(ВидОшибки, ТекстОшибки, Неопределено);
	
КонецПроцедуры

Процедура СоздатьДокументСОшибкойЗагрузки(ВидОшибки, ТекстОшибки, ТипЛицензии)
	
	ДокументЗагрузки = Документы.битЗагрузкаПриостановленныхЛицензийКонтрагентов.СоздатьДокумент();
	ДокументЗагрузки.Дата = ТекущаяДатаСеанса();
	ДокументЗагрузки.ВидОшибки = ВидОшибки;
	ДокументЗагрузки.ТипЛицензии = ТипЛицензии;
	ДокументЗагрузки.РезультатЗагрузки = "Ошибка";
	ДокументЗагрузки.Комментарий = ТекстОшибки;
	ДокументЗагрузки.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти