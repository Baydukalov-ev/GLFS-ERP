#Область ПрограммныйИнтерфейс

#Область ОбработкаЗаполнения

&После("ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС")
Процедура бг_ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
		
		бг_ЗаполнитьАктПостановкиНаБалансНаОснованииПрочегоОприходованияТоваров(
			ДокументОбъект,
			ДанныеЗаполнения,
			ТекстЗаполнения,
			СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&ИзменениеИКонтроль("ЗаполнитьСгенерироватьСерии")
Функция бг_ЗаполнитьСгенерироватьСерии(ТабличнаяЧасть, ВыделенныеСтроки = Неопределено, ПараметрыЗаполнения = Неопределено, СтруктураДействий = Неопределено)

	УстановитьПривилегированныйРежим(Истина);

	// Инициализация результирующей структуры
	Результат = ИнтеграцияЕГАИС.РезультатЗаполненияСерий();

	ДополнительныеКолонки = "";

	// Получение структуры параметров по умолчанию
	Параметры = Новый Структура(
	"ПоляЗаполнения, КолонкиПоЗначению, ДругиеИменаКолонок",
	"Серия", Новый Структура, Новый Структура);
	ОбщегоНазначенияУТКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыЗаполнения, Истина);

	// Получение выгрузки по табличной части
	Таблица = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
	ТабличнаяЧасть,
	ВыделенныеСтроки,
	"НомерСтроки, Номенклатура, Характеристика, АлкогольнаяПродукция, Серия, Справка2" + ДополнительныеКолонки,
	Параметры.КолонкиПоЗначению,
	Параметры.ДругиеИменаКолонок);

	СтрокиБезНоменклатуры = Таблица.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого СтрокаБезНоменклатуры Из СтрокиБезНоменклатуры Цикл

		ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.';
		|en = 'Не указана номенклатура в строке %НомерСтроки%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаБезНоменклатуры.НомерСтроки);

		Результат.ЗаполнениеЗавершено = Ложь;

		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
		"Объект.Товары.Номенклатура",
		ТекстСообщения, 
		Неопределено);

	КонецЦикла;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	// Получение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) КАК АвтоматическиГенерироватьСерии,
	|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьДатуПроизводстваСерии, ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии) КАК ИспользоватьДатуПроизводстваСерии,
	|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьПроизводителяЕГАИССерии, ВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии) КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьСправку2ЕГАИССерии, ВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии) КАК ИспользоватьСправку2ЕГАИССерии,
	|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьСрокГодностиСерии, ВидыНоменклатуры.ИспользоватьСрокГодностиСерии) КАК ИспользоватьСрокГодностиСерии,
	|	ЕСТЬNULL(ВладельцыСерии.Ссылка, ВидыНоменклатуры.Ссылка) КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ВтВидыНоменклатуры
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВладельцыСерии
	|		ПО ВтТовары.Номенклатура.ВладелецСерий = ВладельцыСерии.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ИСТИНА
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	Справки2ЕГАИС.НомерСправки1 КАК НомерСправки1,
	|	ЕСТЬNULL(Справки1ЕГАИС.Ссылка,ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)) КАК Справка1,
	|	Справки1ЕГАИС.ДатаРозлива КАК Справка1ДатаРозлива,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,
	|	СпрНоменклатура.СрокГодности КАК СрокГодности,
	|	СпрНоменклатура.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
	|ПОМЕСТИТЬ ТаблицаТоварыПолная
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО ВтТовары.Справка2 = Справки2ЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ВтТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВтТовары.Номенклатура = СпрНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки1ЕГАИС КАК Справки1ЕГАИС
	|		ПО Справки2ЕГАИС.НомерСправки1 = Справки1ЕГАИС.РегистрационныйНомер
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВладельцыСерии
	|		ПО ВтТовары.Номенклатура.ВладелецСерий = ВладельцыСерии.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ЛОЖЬ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоварыПолная.НомерСправки1 КАК НомерСправки1
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ТаблицаТоварыПолная.Справка1 = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|	И (ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|			ИЛИ ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА)
	|";
#Вставка
	бг_СерииНоменклатуры.ИзменитьЗапросАлкогольнойПродукцииГенерацияСерий(Запрос, ПараметрыЗаполнения);
#КонецВставки
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-1].Пустой() И НЕ ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выбрать();

		МассивЗапросовСправок1 = Новый Массив;
		Пока Выборка.Следующий() Цикл

			ПараметрыЗапроса = Новый Структура;
			ПараметрыЗапроса.Вставить("Операция"         , Перечисления.ВидыДокументовЕГАИС.ЗапросСправки1);
			ПараметрыЗапроса.Вставить("ИмяПараметра"     , "");
			ПараметрыЗапроса.Вставить("ЗначениеПараметра", Выборка.НомерСправки1);
			ПараметрыЗапроса.Вставить("ОрганизацияЕГАИС" , ПараметрыЗаполнения.ОрганизацияЕГАИС);

			МассивЗапросовСправок1.Добавить(ПараметрыЗапроса);

		КонецЦикла;
		Результат.АдресМассиваЗапросов = ПоместитьВоВременноеХранилище(МассивЗапросовСправок1);
		Результат.ЗаполнениеЗавершено = Ложь;
		Возврат Результат;
	КонецЕсли;

	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-2].Пустой() Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-2].Выбрать();

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = НСтр("ru = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.';
			|en = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Выборка.Номенклатура);

			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Номенклатура",
			ТекстСообщения, 
			Неопределено);

		КонецЦикла;
		Результат.ЗаполнениеЗавершено = Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|";

	ТаблицаСрокиГодности = Запрос.Выполнить().Выгрузить();
	ТаблицаСрокиГодности.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	Для Каждого ТекСтрока Из ТаблицаСрокиГодности Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Справка1ДатаРозлива) Тогда
			ТекСтрока.ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекСтрока.Справка1ДатаРозлива,
			ТекСтрока.СрокГодностиНоменклатуры,
			ТекСтрока.ЕдиницаИзмеренияСрокаГодности);
		КонецЕсли;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСрокиГодности", ТаблицаСрокиГодности);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаСрокиГодности.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Номенклатура КАК Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика КАК Характеристика,
	|	ТаблицаСрокиГодности.Справка2 КАК Справка2,
	|	ТаблицаСрокиГодности.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаСрокиГодности.СрокГодностиНоменклатуры КАК СрокГодностиНоменклатуры,
	|	ТаблицаСрокиГодности.ГоденДо КАК ГоденДо,
	|	ТаблицаСрокиГодности.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
	|ПОМЕСТИТЬ
	|	ВТГоденДо
	|ИЗ
	|	&ТаблицаСрокиГодности КАК ТаблицаСрокиГодности
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСрокиГодности.Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВЫБОР
	|		КОГДА ВтТовары.Справка1ДатаРозлива = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка) ТОГДА
	|			ВТГоденДо.Справка1ДатаРозлива
	|		ИНАЧЕ
	|			ВтТовары.Справка1ДатаРозлива
	|	КОНЕЦ КАК Справка1ДатаРозлива,
	|	ВТГоденДо.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
	|ПОМЕСТИТЬ
	|	ВтТоварыКонечная
	|ИЗ
	|	ТаблицаТоварыПолная КАК ВтТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|			ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоденДо КАК ВТГоденДо
	|		ПО ВтТовары.Номенклатура = ВТГоденДо.Номенклатура
	|			И ВтТовары.Характеристика = ВТГоденДо.Характеристика
	|			И ВтТовары.АлкогольнаяПродукция = ВТГоденДо.АлкогольнаяПродукция
	|			И ВтТовары.Справка2 = ВТГоденДо.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2ЕГАИС,
	|	ВтТовары.Справка1ДатаРозлива КАК ДатаПроизводства,
	|	ВтТовары.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК ПроизводительЕГАИС,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|			ПО СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
	|			ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ
	|	И (ВЫБОР
	|		КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
	|			ВтТовары.ГоденДо <> &ПустаяДата
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.Справка2 КАК Справка2ЕГАИС,
	|	ВтТовары.Справка1ДатаРозлива КАК ДатаПроизводства,
	|	ВтТовары.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК ПроизводительЕГАИС,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|			ПО СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
	|					СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
	|				ИНАЧЕ
	|					ИСТИНА
	|				КОНЕЦ)
	|ГДЕ
	|	СерииНоменклатуры.Ссылка ЕСТЬ NULL
	|	И ВЫБОР
	|		КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
	|			ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ
	|	И (ВЫБОР
	|		КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
	|			ВтТовары.ГоденДо <> &ПустаяДата
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|;
	|";

	ПакетРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаГенерацияСерий = ПакетРезультатов[ПакетРезультатов.Количество()-1].Выгрузить();
	ТаблицаГенерацияСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацияСерий.Индексы.Добавить("ВидНоменклатуры, Справка2ЕГАИС, ДатаПроизводства, ГоденДо, ПроизводительЕГАИС");
	Для Каждого ТекСтрока Из ТаблицаГенерацияСерий Цикл
#Вставка
		Если Не ЗначениеЗаполнено(ТекСтрока.ВидНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
#КонецВставки
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(ТекСтрока);
#Вставка
		бг_СерииНоменклатуры.ДозаполнитьРеквизитыСерииПриГенерацииЕГАИС(НоваяСерия, ТабличнаяЧасть, ПараметрыЗаполнения);
#КонецВставки
		Попытка
			НоваяСерия.Записать();
			ТекСтрока.Серия = НоваяСерия.Ссылка;
			Результат.ЗаполнениеЗавершено = Истина;
		Исключение
			Результат.ЗаполнениеЗавершено = Ложь;

			ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%';
			|en = 'Не удалось сгенерировать серию по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СерииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Серия",
			ТекстСообщения, 
			Неопределено);
		КонецПопытки;
	КонецЦикла;

	ВыборкаЗаполнениеСерий = ПакетРезультатов[ПакетРезультатов.Количество()-2].Выбрать();
	Пока ВыборкаЗаполнениеСерий.Следующий() Цикл
#Вставка
		Если Не ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.ВидНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
#КонецВставки
		СтрокаТовары = ТабличнаяЧасть[ВыборкаЗаполнениеСерий.НомерСтроки-1];
		Если ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.Серия) Тогда
			СтрокаТовары.Серия = ВыборкаЗаполнениеСерий.Серия;
			Результат.ЗаполнениеЗавершено = Истина;
		Иначе
			ПараметрыПоиска = Новый Структура("ВидНоменклатуры", ВыборкаЗаполнениеСерий.ВидНоменклатуры);
			Если ВыборкаЗаполнениеСерий.ИспользоватьДатуПроизводстваСерии Тогда
				ПараметрыПоиска.Вставить("ДатаПроизводства", ВыборкаЗаполнениеСерий.ДатаПроизводства);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("ПроизводительЕГАИС", ВыборкаЗаполнениеСерий.ПроизводительЕГАИС);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСправку2ЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Справка2ЕГАИС", ВыборкаЗаполнениеСерий.Справка2ЕГАИС);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСрокГодностиСерии Тогда
				ПараметрыПоиска.Вставить("ГоденДо", ВыборкаЗаполнениеСерий.ГоденДо);
			КонецЕсли;
			НайденныеСтроки = ТаблицаГенерацияСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
				Результат.ЗаполнениеЗавершено = Истина;
			Иначе
				Результат.ЗаполнениеЗавершено = Ложь;
			КонецЕсли;
		КонецЕсли;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, Неопределено);
	КонецЦикла;
	
#Вставка
	бг_СерииНоменклатуры.АктуализироватьНоменклатуруВСерияхТаблицы(ТабличнаяЧасть);
#КонецВставки

	Возврат Результат;

КонецФункции

&После("ЗаполнениеРеквизитовФормы")
Процедура бг_ЗаполнениеРеквизитовФормы(Форма)
	
	ИмяРеквизитаФормыОбъект = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС").ИмяРеквизитаФормыОбъект;
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
	Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяЭлементаФормы) Тогда
		
		ЭлементИнтерфейса  = Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы];
		Объект = Форма[ИмяРеквизитаФормыОбъект];
		НеобходимоОбработатьДляПриобретения = Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" 
		И (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту 
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС) И Объект.ЕстьАлкогольнаяПродукция;
		
		Если НеобходимоОбработатьДляПриобретения Тогда
			
			ТекстГиперссылки = бг_ИнтеграцияЕГАИС.ТекстДокументаЕГАИСВПриобретенииТоваров(Объект);
			
			ЭлементИнтерфейса.Видимость = ЗначениеЗаполнено(ТекстГиперссылки);
			Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстГиперссылки;
		КонецЕсли;
		
	КонецЕсли;

	
КонецПроцедуры

&После("ЗаполнитьТранспортныеРеквизитыТТНИсходящей")
Процедура бг_ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект, ТранспортнаяНакладная)
	бг_ТранспортнаяИнформация.ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект);
КонецПроцедуры

&Вместо("ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров")
Процедура бг_ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

#Область КодРасширенияПеред
	ДанныеДокумента 				= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
										ДанныеЗаполнения,	
										"Организация, бг_НомерДокументаУПП, бг_ПунктНазначения.Адрес, Дата");
										
	ИспользоватьНумерациюРТиУИзERP 	= бг_КонстантыПовтИсп.ЗначениеКонстанты(
										"ИспользоватьНумерациюРТиУИзERP",
										ДанныеДокумента.Организация);
	
	Если Не ИспользоватьНумерациюРТиУИзERP
		И Не ЗначениеЗаполнено(ДанныеДокумента.бг_НомерДокументаУПП) Тогда
		ВызватьИсключение НСтр("ru='Нельзя вводить ТТН, пока не получен номер реализации из УПП'");
	КонецЕсли;
#КонецОбласти

#Область ТиповойКодЗаполнениеШапкиТТН
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Партнер               КАК Партнер,
	|	ДокументОснование.СпособДоставки        КАК ТипДоставки,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		ТранспортныеНакладные = Документы.ТранспортнаяНакладная.ТранспортныеНакладныеДокументовОснований(РеквизитыДокумента.ДокументОснование);
		ТранспортнаяНакладная = Неопределено;
		
		Если ТранспортныеНакладные.Количество() = 0 Тогда 
			Если ЗначениеЗаполнено(ДокументОбъект.НомерТТН) Тогда 
				ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерТТН);
			КонецЕсли;
		ИначеЕсли ТранспортныеНакладные.Количество() = 1 Тогда
			ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ТранспортныеНакладные[0].Номер);
			ДокументОбъект.ДатаТТН  = ТранспортныеНакладные[0].Дата;
			ТранспортнаяНакладная   = ТранспортныеНакладные[0].ТранспортнаяНакладная;
		Иначе
			ДокументОбъект.НомерТТН = Неопределено;
			ДокументОбъект.ДатаТТН  = Неопределено;
		КонецЕсли;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоПартнеруИКонтрагенту(
			РеквизитыДокумента.Партнер,
			РеквизитыДокумента.Грузополучатель);
		
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект, ТранспортнаяНакладная);
		
	КонецЕсли;
#КонецОбласти

#Область КодРасширенияВыборТекстаЗапросаЗаполненияТоваров
	Запрос = Новый Запрос;
	Если бг_ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров(ДанныеЗаполнения, ДокументОбъект.Ссылка) Тогда
		Запрос.Текст = бг_ТекстЗапросаТоварыЗаполнениеТТНИсходящейПоРТУСохранениеПорядкаСтрок();
	Иначе
		Запрос.Текст = бг_ТекстЗапросаТоварыЗаполнениеТТНИсходящейПоРТУТиповой();
	КонецЕсли;
#КонецОбласти
	
#Область ТиповойКодЗаполнениеПараметровЗапросаТоваров
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Грузоотправитель));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",          Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
#КонецОбласти
	
#Область КодРасширенияПосле
	Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(ДокументОбъект);

	Номер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "Номер");
	ДокументОбъект.НомерТТН = Номер;
	ДокументОбъект.Дата = ДанныеДокумента.Дата;
	ДокументОбъект.Экспедитор = "-";
    ДокументОбъект.Перенаправление = "-";
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ПунктРазгрузки) Тогда
		ДокументОбъект.ПунктРазгрузки = ДанныеДокумента.бг_ПунктНазначенияАдрес;	
	КонецЕсли;

#КонецОбласти
	
КонецПроцедуры

&После("ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров")
Процедура бг_ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	бг_ЗаполнитьЦеныВТабличнойЧастиТоварыПеремещения(ДокументОбъект);
	Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(ДокументОбъект);
	
КонецПроцедуры

// Создан по аналогии с типовой процедурой ЕстьРасхожденияМеждуДокументомПриобретениеТоваровУслугИТТНЕГАИС
//
Функция бг_ЕстьРасхожденияМеждуДокументомВозвратТоваровОтКлиентаИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ВозвратТоваровОтКлиента) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И Сопоставлено.Серия <> &ПустаяСерия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|		И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество   КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ВозвратТоваровОтКлиента);
	Запрос.УстановитьПараметр("ПустаяСерия", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

&ИзменениеИКонтроль("ЗаполнитьПоступлениеТоваровУслугНаОснованииТТНВходящаяЕГАИС")
Процедура бг_ЗаполнитьПоступлениеТоваровУслугНаОснованииТТНВходящаяЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Организация");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Период", ЗначенияРеквизитов.Дата);
	Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(ЗначенияРеквизитов.Организация));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.НомерТТН КАК НомерВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.ДатаТТН КАК ДатаВходящегоДокумента,
	|	СтатусыДокументовЕГАИС.Статус КАК СтатусОбработки,
	|	ТТНВходящаяЕГАИС.Ссылка КАК ТоварноТранспортнаяНакладнаяЕГАИС,
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК Склад,
	|	ТТНВходящаяЕГАИС.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель.ТорговыйОбъект
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик.ТорговыйОбъект
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|	КОНЕЦ КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК ЕстьАлкогольнаяПродукция
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка)
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И Товары.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК Склад,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика,
	|	ТТНВходящаяЕГАИСТовары.Серия КАК Серия,
	|	ТТНВходящаяЕГАИСТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
	|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.ЕстьРасхождения
	|			ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 1 / ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.ЕстьРасхождения
	|			ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1) = 0
	|			ТОГДА 0
	|		ИНАЧЕ 1 / ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТТНВходящаяЕГАИСТовары.Сумма КАК Сумма,
	|	ТТНВходящаяЕГАИСТовары.Цена * ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.Ссылка = ТТНВходящаяЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&Период,
	|			Страна = &СтранаРегистрации ИЛИ Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтавкиНДСНоменклатуры
	|		ПО ТТНВходящаяЕГАИСТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Период, Страна = &СтранаРегистрации) КАК ОсновныеСтавкиНДС
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументОснование";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ТоварноТранспортнаяНакладнаяЕГАИС,
		ВыборкаШапка.СтатусОбработки,,,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	
	ЕстьНесопоставленныеТовары = НЕ ПакетЗапросов[1].Пустой();
	Если ЕстьНесопоставленныеТовары Тогда
		ТекстОшибки = НСтр("ru = 'В документе %Документ% есть несопоставленные товары. Ввод на основании такого документа запрещен.';
							|en = 'В документе %Документ% есть несопоставленные товары. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
#Вставка
	бг_ЗаполнитьПоДаннымГрузоотправителя(ДокументОбъект, ДанныеЗаполнения);
#КонецВставки
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ВыборкаТовары = ПакетЗапросов[ПакетЗапросов.Количество() - 1].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаТовары);
		НоваяСтрокаТовары.Сумма     = НоваяСтрокаТовары.КоличествоУпаковок * НоваяСтрокаТовары.Цена;
		НоваяСтрокаТовары.СуммаНДС  = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(НоваяСтрокаТовары.Сумма, НоваяСтрокаТовары.СтавкаНДС, ДокументОбъект.ЦенаВключаетНДС);
		НоваяСтрокаТовары.СуммаСНДС = НоваяСтрокаТовары.Сумма + ?(ДокументОбъект.ЦенаВключаетНДС, 0, НоваяСтрокаТовары.СуммаНДС);
		
		Если ЗначениеЗаполнено(НоваяСтрокаТовары.Номенклатура) Тогда
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", ДокументОбъект.Партнер);
			СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", НоваяСтрокаТовары.Упаковка);
			СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
			СтруктураДействий.Вставить("ПроверитьСтатьюАналитикуРасходов", НоваяСтрокаТовары.Номенклатура);
			СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
			СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
				ДокументОбъект.ПоступлениеПоЗаказам, ДокументОбъект.ТребуетсяЗалогЗаТару));
			
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, КэшированныеЗначения);
			
			Если ИспользоватьСерииНоменклатуры Тогда
				НоваяСтрокаСерии = ДокументОбъект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрокаТовары);
			Иначе
				НоваяСтрокаТовары.Серия = "";
				НоваяСтрокаТовары.СтатусУказанияСерий = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИспользоватьСерииНоменклатуры Тогда
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ПриобретениеТоваровУслуг);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);
		НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект, ПараметрыУказанияСерий);
#Вставка
	бг_ЗаполнитьДанныеГТДВДокументеПоступления(ДокументОбъект);
#КонецВставки
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеТТНИсходящейПоРТУ

Функция бг_ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров(РеализацияТоваровУслуг, ТТНИсходящаяЕГАИС)

	ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров = Истина;
	
	Если бг_ЕстьДублиСтрокТоваровПоКлючевымПолямВРТУ(РеализацияТоваровУслуг) Тогда
		ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров = Ложь;	
	КонецЕсли;
	
	Если бг_ЕстьУжеОформленныеТТНИсходящиеПоРТУ(РеализацияТоваровУслуг, ТТНИсходящаяЕГАИС) Тогда
		ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров = Ложь;	
	КонецЕсли;
	
	Если Не ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='В реализации присутствуют дубли строк по номенклатуре и серии.'"));
	КонецЕсли;
	
	Возврат ВозможноЗаполнениеТТНИсходящейПоРТУССохранениемПорядкаСтрокТоваров;

КонецФункции

Функция бг_ЕстьДублиСтрокТоваровПоКлючевымПолямВРТУ(РеализацияТоваровУслуг)

	Товары = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеализацияТоваровУслуг, "Товары").Выгрузить();
	КоличествоТоваровДоСвертки = Товары.Количество();

	Товары.Свернуть("Номенклатура, Серия");
	КоличествоТоваровПослеСвертки = Товары.Количество();
	
	Если КоличествоТоваровДоСвертки <> КоличествоТоваровПослеСвертки Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Было выполнено создание ТТН по стандартному алгоритму без сохранения порядка строк.'"));
		Возврат Истина;
	КонецЕсли;         
	
	Возврат Ложь;

КонецФункции

Функция бг_ЕстьУжеОформленныеТТНИсходящиеПоРТУ(РеализацияТоваровУслуг, ТТНИсходящаяЕГАИС)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТТНИсходящаяЕГАИС.Ссылка КАК ТТНИсходящаяЕГАИС
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНИсходящаяЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.Ссылка <> &ТТНИсходящаяЕГАИС
	|	И ТТНИсходящаяЕГАИС.ДокументОснование = &РеализацияТоваровУслуг
	|	И ТТНИсходящаяЕГАИС.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&СтатусыОтменыЕГАИС)";	
	Запрос.УстановитьПараметр("РеализацияТоваровУслуг", РеализацияТоваровУслуг);
	Запрос.УстановитьПараметр("ТТНИсходящаяЕГАИС", ТТНИсходящаяЕГАИС);
	Запрос.УстановитьПараметр("СтатусыОтменыЕГАИС", Документы.ТТНИсходящаяЕГАИС.бг_СтатусыОтменыЕГАИС());
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='По реализации уже оформлены ТТН исходящие.'"));
		Возврат Истина;
	Иначе
		Возврат Ложь;	
	КонецЕсли;
	
КонецФункции

Функция бг_ТекстЗапросаТоварыЗаполнениеТТНИсходящейПоРТУСохранениеПорядкаСтрок()

	Возврат
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			(Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования)
	|				И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Товары.СуммаСНДС * ВЫБОР
	|			КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|				ТОГДА 1
	|			КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|				ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Сумма
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = Товары.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Количество КАК Количество,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СУММА(Товары.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(Товары.Сумма) / СУММА(Товары.Количество)
	|		КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Цена
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО Товары.Номенклатура = СопоставленныеПозиции.Номенклатура
	|			И Товары.Серия = СопоставленныеПозиции.Серия
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция,
	|	Товары.Количество,
	|	Товары.Количество,
	|	Товары.Сумма
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
КонецФункции

Функция бг_ТекстЗапросаТоварыЗаполнениеТТНИсходящейПоРТУТиповой()

	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),                 "ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ЧекЕГАИС"));
	МассивСтрок.Добавить(
	"ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС * 
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Сумма * (ВЫБОР
	|		КОГДА
	|			ЕСТЬNULL(Серии.Количество, 0) <> 0
	|			И Товары.Количество <> 0
	|		ТОГДА
	|			Серии.Количество / Товары.Количество
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК ЧИСЛО(31,2)) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыЧекЕГАИС КАК Т)");
	
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	
	Возврат СтрСоединить(МассивСтрок);

КонецФункции

#КонецОбласти

#Область ЗаполнениеТТНИсходящейПоПеремещению

Процедура бг_ЗаполнитьЦеныВТабличнойЧастиТоварыПеремещения(ДокументОбъект)
	
	РеквизитыПеремещения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДокументОбъект.ДокументОснование, 
		"Дата,Организация,ВидЦены");
	
	Если Не ЗначениеЗаполнено(РеквизитыПеремещения.ВидЦены) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = ЦеныПредприятияЗаполнениеСервер.НовыйПараметрыЗаполненияЗаполнитьЦены();
	
	ПараметрыЗаполнения.Дата = РеквизитыПеремещения.Дата;
	ПараметрыЗаполнения.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	ПараметрыЗаполнения.Организация = РеквизитыПеремещения.Организация;
	ПараметрыЗаполнения.ВидЦены = РеквизитыПеремещения.ВидЦены;
	ПараметрыЗаполнения.ПоляЗаполнения = "Цена";
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ЦеныПредприятияЗаполнениеСервер.ЗаполнитьЦены(
		ДокументОбъект.Товары,, 
		ПараметрыЗаполнения, 
		СтруктураДействий);
		
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПоступленияПоТТНВходящей

Процедура бг_ЗаполнитьПоДаннымГрузоотправителя(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.Грузоотправитель.бг_ПунктРазгрузки.Партнер КАК Партнер,
	|	ТТНВходящаяЕГАИС.Грузоотправитель.бг_ПунктРазгрузки.ГоловнойКонтрагент КАК Контрагент
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &Ссылка
	|	И НЕ ЕСТЬNULL(ТТНВходящаяЕГАИС.Грузоотправитель.бг_ПунктРазгрузки, ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)";
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Партнер) И ЗначениеЗаполнено(Выборка.Контрагент) Тогда
		ДокументОбъект.Партнер = Выборка.Партнер;
		ДокументОбъект.Контрагент = Выборка.Контрагент;
	КонецЕсли;
	ДокументОбъект.Соглашение = Справочники.СоглашенияСПоставщиками.бг_СоглашениеПоПартнеруИОрганизации(
		ДокументОбъект.Партнер, ДокументОбъект.Организация);
	ДокументОбъект.бг_ЗаполнитьУсловияЗакупокПоУмолчанию(Ложь, Истина);
	
	Если ЗначениеЗаполнено(ДокументОбъект.Соглашение) Тогда
		ДокументОбъект.Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Соглашение, "бг_Договор");
		Если ЗначениеЗаполнено(ДокументОбъект.Договор) Тогда
			ЗакупкиВызовСервера.ЗаполнитьБанковскиеСчетаПоДоговору(
				ДокументОбъект.Договор, ДокументОбъект.БанковскийСчетОрганизации, ДокументОбъект.БанковскийСчетКонтрагента);
			ЗаполнениеОбъектовПоСтатистике.ЗаполнитьПодчиненныеРеквизитыОбъекта(ДокументОбъект, "Договор");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.бг_ПунктПогрузки) Тогда
		Клиент = ?(ЗначениеЗаполнено(ДокументОбъект.Грузоотправитель),
			ДокументОбъект.Грузоотправитель,
			ДокументОбъект.Контрагент);
		ДокументОбъект.бг_ПунктПогрузки = бг_ПунктНазначенияКлиентаСЛицензией(Клиент, ДокументОбъект.ДатаВходящегоДокумента);
	КонецЕсли;
		
КонецПроцедуры

Процедура бг_ЗаполнитьДанныеГТДВДокументеПоступления(ДокументПоступленияОбъект) Экспорт
	
	Серии = ДокументПоступленияОбъект.Товары.ВыгрузитьКолонку("Серия");
	ДанныеГТД = бг_ДанныеГТДСерийНоменклатуры(Серии);
	
	Для Каждого СтрокаТоваров Из ДокументПоступленияОбъект.Товары Цикл
		НайденныеДанныеГТД = ДанныеГТД.НайтиСтроки(Новый Структура("Серия", СтрокаТоваров.Серия));
		Если ЗначениеЗаполнено(НайденныеДанныеГТД) Тогда
			СтрокаТоваров.НомерГТД = НайденныеДанныеГТД[0].НомерГТД;
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры

Функция бг_ДанныеГТДСерийНоменклатуры(Серии)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	СерииНоменклатуры.Справка2ЕГАИС.Справка1.бг_НомерГТД КАК НомерГТД
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Ссылка В(&Серии)
		|	И СерииНоменклатуры.бг_Номенклатура.ВестиУчетПоГТД
		|	И СерииНоменклатуры.бг_Номенклатура.ИмпортнаяАлкогольнаяПродукция";
	Запрос.УстановитьПараметр("Серии", Серии);	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция бг_ПунктНазначенияКлиентаСЛицензией(Клиент, ДатаДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	битПунктыНазначения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ЛицензииПунктовНазначения КАК бг_ЛицензииПунктовНазначения
	|		ПО (бг_ЛицензииПунктовНазначения.ПунктНазначения = битПунктыНазначения.Ссылка)
	|			И (бг_ЛицензииПунктовНазначения.Лицензия.ДатаОкончания >= НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ))
	|ГДЕ
	|	битПунктыНазначения.Клиент = &Клиент
	|	И битПунктыНазначения.КПП = битПунктыНазначения.Клиент.КПП
	|	И НЕ битПунктыНазначения.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		ПунктыНазначения = Результат.Выгрузить();	
		Если ПунктыНазначения.Количество() = 1 Тогда
			Возврат ПунктыНазначения[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции 

#КонецОбласти

#Область ОбработкаЗаполнения

#Область АктПостановкиНаБалансЕГАИС

// За основу взят метод ИнтеграцияЕГАИСУТ.ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияИзлишковТовара().
//
Процедура бг_ЗаполнитьАктПостановкиНаБалансНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения,
	ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения("Товары");
	Запрос.Текст = ТекстЗапросаЗаполнения("АктПостановкиНаБалансЕГАИС", "ПрочееОприходованиеТоваров", Настройки);
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр(
		"КонечныеСтатусыАктПостановкиНаБалансЕГАИС",
		Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыШапки.ДокументОснование,,
			РеквизитыШапки.ЕстьОшибкиПроведен);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(
		ДокументОбъект,
		РезультатЗапроса[РезультатЗапроса.Количество() - 1],
		ДанныеЗаполнения,
		Истина);
		
	бг_ЗаполнитьАктПостановкиНаБалансНаОснованииПрочегоОприходованияТоваровПоИнвентаризации(
		ДокументОбъект,
		ДанныеЗаполнения);
	
КонецПроцедуры

Процедура бг_ЗаполнитьАктПостановкиНаБалансНаОснованииПрочегоОприходованияТоваровПоИнвентаризации(
	АктПостановкиНаБалансЕГАИСОбъект, ПрочееОприходованиеТоваров)
	
	ИнвентаризацияПродукцииЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ПрочееОприходованиеТоваров,
		"бг_ИнвентаризацияПродукцииЕГАИС");
		
	Если Не (ТипЗнч(ИнвентаризацияПродукцииЕГАИС) = Тип("ДокументСсылка.битИнвентаризацияПродукцииЕГАИС")
		И ЗначениеЗаполнено(ИнвентаризацияПродукцииЕГАИС)) Тогда
		
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполненияПоИнвентаризации = бг_ДанныеЗаполненияАктаПостановкиНаБалансПоИнвентаризации(ИнвентаризацияПродукцииЕГАИС);
	
	АктПостановкиНаБалансЕГАИСОбъект.ОрганизацияЕГАИС = ДанныеЗаполненияПоИнвентаризации.Шапка.ОрганизацияЕГАИС;
	
	Для каждого СтрокаТовары Из АктПостановкиНаБалансЕГАИСОбъект.Товары Цикл
		
		СтрокаТовары.КоличествоПоСправке1 = СтрокаТовары.Количество;
		
		ПараметрыПоиска = Новый Структура("Номенклатура, Серия");
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, СтрокаТовары);
		
		НайденныеСтрокиТоварыИнвентаризация = ДанныеЗаполненияПоИнвентаризации.Товары.НайтиСтроки(ПараметрыПоиска);
		
		КоличествоНайденныхСтрок = НайденныеСтрокиТоварыИнвентаризация.Количество();
		
		Если КоличествоНайденныхСтрок > 0 Тогда
			
			ЗаполнитьЗначенияСвойств(СтрокаТовары, НайденныеСтрокиТоварыИнвентаризация[0]);
			
			Если КоличествоНайденныхСтрок > 1 Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
					НСтр("ru='При заполнении акта постановки на баланс в документе инвентаризации найдены дубли строк
					| по номенклатуре ""%1"" и серии ""%2""'"),
					СтрокаТовары.Номенклатура,
					СтрокаТовары.Серия));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция бг_ДанныеЗаполненияАктаПостановкиНаБалансПоИнвентаризации(ИнвентаризацияПродукцииЕГАИС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битИнвентаризацияПродукцииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ИЗ
	|	Документ.битИнвентаризацияПродукцииЕГАИС КАК битИнвентаризацияПродукцииЕГАИС
	|ГДЕ
	|	битИнвентаризацияПродукцииЕГАИС.Ссылка = &ИнвентаризацияПродукцииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битИнвентаризацияПродукцииЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	битИнвентаризацияПродукцииЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	битИнвентаризацияПродукцииЕГАИСТовары.Серия КАК Серия,
	|	битИнвентаризацияПродукцииЕГАИСТовары.КоличествоПоСправке1 КАК КоличествоПоСправке1,
	|	битИнвентаризацияПродукцииЕГАИСТовары.НомерТТН КАК НомерТТН,
	|	битИнвентаризацияПродукцииЕГАИСТовары.ДатаТТН КАК ДатаТТН,
	|	битИнвентаризацияПродукцииЕГАИСТовары.НомерПодтвержденияЕГАИС КАК НомерПодтвержденияЕГАИС,
	|	битИнвентаризацияПродукцииЕГАИСТовары.ДатаПодтвержденияЕГАИС КАК ДатаПодтвержденияЕГАИС,
	|	битИнвентаризацияПродукцииЕГАИСТовары.ДатаРозлива КАК ДатаРозлива
	|ИЗ
	|	Документ.битИнвентаризацияПродукцииЕГАИС.Товары КАК битИнвентаризацияПродукцииЕГАИСТовары
	|ГДЕ
	|	битИнвентаризацияПродукцииЕГАИСТовары.Ссылка = &ИнвентаризацияПродукцииЕГАИС";
	
	Запрос.УстановитьПараметр("ИнвентаризацияПродукцииЕГАИС", ИнвентаризацияПродукцииЕГАИС);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеЗаполненияПоИнвентаризации = Новый Структура;
	ДанныеЗаполненияПоИнвентаризации.Вставить("Шапка", РезультатыЗапроса[0].Выгрузить()[0]);
	ДанныеЗаполненияПоИнвентаризации.Вставить("Товары", РезультатыЗапроса[1].Выгрузить());
	
	Возврат ДанныеЗаполненияПоИнвентаризации;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
