#Область ПрограммныйИнтерфейс

#Область Паллетизация_РаботаСДокументами_События

// Обработчик изменения строки табличной части Товары на форме документа, выполняет действия для рассчета данных паллетизации.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ТоварыПриОкончанииРедактированияПосле(Форма) Экспорт
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик изменения номенклатуры на форме документа, выполняет действия для рассчета данных паллетизации.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  СтрокаТовары - строка табличной части "Товары".
//
Процедура ТоварыНоменклатураПриИзмененииПосле(Форма, СтрокаТовары) Экспорт
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОчиститьПоказателиПаллетизацииВСтрокеТовары(Форма, СтрокаТовары);
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
	Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
		
		ПаллетаПоУмолчанию = бг_НоменклатураВызовСервера.ПаллетизацияНоменклатурыПоУмолчанию(
			СтрокаТовары.Номенклатура);
			
		Если ЗначениеЗаполнено(ПаллетаПоУмолчанию) Тогда
			Форма.бг_ТоварыУпаковкаПаллетаОбработкаВыбораНаСервере(ПаллетаПоУмолчанию, СтрокаТовары.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик изменения количества упаковок на форме документа, выполняет действия для рассчета данных паллетизации.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  СтрокаТовары - строка табличной части "Товары".
//
Процедура ТоварыКоличествоУпаковокПриИзмененииПосле(Форма, СтрокаТовары) Экспорт
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьПоказателиПаллетизацииВСтрокеТовары(СтрокаТовары);
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик удаления строки на форме документа, выполняет действия для рассчета данных паллетизации.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ТоварыПослеУдаленияПосле(Форма) Экспорт
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик изменения флага отменено на форме документа, выполняет действия для рассчета данных паллетизации.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ТоварыОтмененоПриИзмененииПосле(Форма) Экспорт
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик выбора упаковки (коробки или паллеты) в товарах на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  * Прочие стандартные параметры обработчика.
//
Процедура ТоварыУпаковкаПаллетаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Форма.Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		бг_УпаковкиЕдиницыИзмеренияКлиентСервер.СообщитьОНеверноВыбраннойУпаковкеПаллете();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выберите номенклатуру'"));
		Возврат;
	КонецЕсли;
	
	Форма.бг_ТоварыУпаковкаПаллетаОбработкаВыбораНаСервере(ВыбранноеЗначение, ТекущаяСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры

// Обработчик очистки упаковки (коробки или паллеты) в товарах на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  * Прочие стандартные параметры обработчика.
//
Процедура ТоварыУпаковкаПаллетаОчистка(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	ТекущаяСтрока = Форма.Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОчиститьПоказателиПаллетизацииВСтрокеТовары(Форма, ТекущаяСтрока);
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик изменения количества паллет в товарах на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ТоварыКоличествоПаллетПриИзменении(Форма) Экспорт

	ТекущаяСтрока = Форма.Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьКоличествоУпаковокИПаллетизациюВСтрокеТовары(
		Форма,
		ТекущаяСтрока);
		
	Форма.бг_ТоварыКоличествоУпаковокПриИзменении();
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

// Обработчик изменения количества коробок в товарах на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ТоварыКоличествоКоробокПриИзменении(Форма) Экспорт
		
	ТекущаяСтрока = Форма.Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьКоличествоУпаковокИПаллетизациюВСтрокеТовары(
		Форма,
		ТекущаяСтрока);
		
	Форма.бг_ТоварыКоличествоУпаковокПриИзменении();
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);
	
КонецПроцедуры

#КонецОбласти // Конец Паллетизация_РаботаСДокументами_События

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#КонецОбласти  // Конец СлужебныеПроцедурыИФункции
