#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры	

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт

	ТекстЗапроса = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапроса);
	ТекстЗапросаТаблицаКлючей = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапросаТаблицаКлючей);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(Объект, ДанныеСообщения);
	
	ВыгружаемыеДанные = ВыгружаемыеДанные(Объект);
	
	Реквизиты = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
		ВыгружаемыеДанные.РезультатПоШапке,
		ПараметрыВыполненияЗапросов.ТаблицаКлючей,
		ДанныеСообщения);
		
	Если Реквизиты.Количество() > 0 Тогда
			
		Товары = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
			ВыгружаемыеДанные.РезультатПоТоварам,
			ПараметрыВыполненияЗапросов.ТаблицаКлючей,
			ДанныеСообщения);
		
		Реквизиты[0].Вставить("Товары", Товары);
		
		// Данные пользователя ИБ - для приема в таком же формате из TRIM.
		Реквизиты[0].Вставить("АутентификацияОС", Неопределено);
		Реквизиты[0].Вставить("ПользовательОС", Неопределено);
		Реквизиты[0].Вставить("ИмяПользователя", Неопределено);
		
		Ответственный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Ответственный");
		Если ЗначениеЗаполнено(Ответственный) Тогда
			
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный, "ИдентификаторПользователяИБ"));
			
			Если ПользовательИБ <> Неопределено Тогда
				Реквизиты[0].АутентификацияОС = ПользовательИБ.АутентификацияОС;
				Реквизиты[0].ПользовательОС = ПользовательИБ.ПользовательОС;
				Реквизиты[0].ИмяПользователя = ПользовательИБ.Имя;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	ДанныеВыгружаемогоОбъекта = Новый Структура;
	ДанныеВыгружаемогоОбъекта.Вставить("ПолноеИмя", ПараметрыВыполненияЗапросов.ПолноеИмя);
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Реквизиты);
	
	Возврат ДанныеВыгружаемогоОбъекта;
	
КонецФункции

Функция ВыполненыУсловияВыгрузкиОбъекта(ДанныеСообщения) Экспорт
	
	Результат = Истина;
	Если ЭтоРасходыНаПоступлениеОС(ДанныеСообщения.Объект) Тогда
		ТекстОшибки = НСтр("ru = 'В документе указаны расходы на поступление ОС, документ не выгружается'"); 
		ДанныеСообщения.ТекстОшибки = ТекстОшибки;
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта, СписокСвойств, ИсключаяСвойства, СтандартнаяОбработка) Экспорт

	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	СтандартнаяОбработка = Ложь;
	адаптер_ОбработчикиСобытийСтандартный.ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта);  
	ЗагружаемыйОбъект.Проведен = Ложь;    
	
	Для каждого СтрокаТЧ Из ЗагружаемыйОбъект.Товары Цикл
		СтрокаТЧ.Упаковка = Неопределено;
	КонецЦикла;
	
	ЗагружаемыйОбъект.Комментарий = СтрШаблон(НСтр("ru='Загружен из TRIM (Расходная накладная №%1 от %2)'"), 
		СтруктураОбъекта.Номер, СтруктураОбъекта.Дата);
	ЗагружаемыйОбъект.Номер = "";
	ЗагружаемыйОбъект.Ответственный = бг_ПользователиИнтеграция.НайтиПользователяПоАутентификацииОС("\\" + СтруктураОбъекта.ПользовательОС);
	
КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	КлючМаршрутизации = КлючМаршрутизации + ".ERP";
	
	Возврат КлючМаршрутизации; 
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Реквизиты шапки
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("Склад");
	ВыгружаемыеРеквизиты.Добавить("Подразделение");
	ВыгружаемыеРеквизиты.Добавить("Ответственный");
	ВыгружаемыеРеквизиты.Добавить("ХозяйственнаяОперация");
	ВыгружаемыеРеквизиты.Добавить("бг_РазрешитьПараллельнуюСборку");
	ВыгружаемыеРеквизиты.Добавить("бг_Исполнитель");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	
	// Реквизиты ТЧ "Товары"
	ВыгружаемыеРеквизиты.Добавить("Товары.Номенклатура");
	ВыгружаемыеРеквизиты.Добавить("Товары.Количество");
	ВыгружаемыеРеквизиты.Добавить("Товары.Серия");
	ВыгружаемыеРеквизиты.Добавить("Товары.СтатьяРасходов");
	ВыгружаемыеРеквизиты.Добавить("Товары.ФизическоеЛицо");
	
	Возврат СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
КонецФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"АутентификацияОС",
		Новый ОписаниеТипов("Булево"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта, 
		, // ИмяРеквизита
		"ПользовательОС",
		Новый ОписаниеТипов("Строка"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ИмяПользователя",
		Новый ОписаниеТипов("Строка"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.Упаковка",
		Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.КоличествоУпаковок",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.СрокЭксплуатации",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5)));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.НаименованиеКатегорииЭксплуатации",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.ПодразделениеТоваров",
		Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.ИнвентарныйУчет",
		Новый ОписаниеТипов("Булево"));

КонецПроцедуры

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.СерииНоменклатуры,
		"Наименование");

КонецПроцедуры

Функция ВыгружаемыеДанные(Ссылка)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ГруппыПродукции);
	
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	СоздатьВременнуюТаблицуБухгалтерскихПроводок(Запрос);
	
	Запрос.Текст = ТекстЗапросаВыгружаемыхДанных();
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ВыгружаемыеДанные = Новый Структура;
	ВыгружаемыеДанные.Вставить("РезультатПоШапке", РезультатыЗапросов[1]);
	ВыгружаемыеДанные.Вставить("РезультатПоТоварам", РезультатыЗапросов[2]);
	
	Возврат ВыгружаемыеДанные;

КонецФункции

Процедура СоздатьВременнуюТаблицуБухгалтерскихПроводок(Запрос)

	// Действие вынесено в отдельную временную таблицу, т.к. расширение не работает с виртуальной таблицей
	//  регистра бухгалтерии основной конфигурации в конструкторе - для возможности
	//  редактирования в конструкторе основного запроса.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ХозрасчетныйДвиженияССубконто.СчетДт) КАК СчетДт,
	|	МИНИМУМ(ХозрасчетныйДвиженияССубконто.СчетДт.Код) КАК СчетДтКод,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ КАК Субконто,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1.Код
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2.Код
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СубконтоКод
	|ПОМЕСТИТЬ ВТ_БухгалтерскиеПроводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор = &Ссылка
	|				И (ВидСубконтоДт1 В (&ВидыСубконто)
	|					ИЛИ ВидСубконтоДт2 В (&ВидыСубконто)
	|					ИЛИ ВидСубконтоДт3 В (&ВидыСубконто)),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|ГДЕ
	|	ХозрасчетныйДвиженияССубконто.КоличествоКт <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1.Код
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2.Код
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	|		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ";
	
	Запрос.Выполнить();

КонецПроцедуры

Функция ТекстЗапросаВыгружаемыхДанных()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК БазоваяУпаковка
	|ПОМЕСТИТЬ ВТ_БазовыеУпаковки
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (ВнутреннееПотреблениеТоваровТовары.Ссылка = &Ссылка)
	|			И ВнутреннееПотреблениеТоваровТовары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И ВнутреннееПотреблениеТоваровТовары.Номенклатура.ЕдиницаИзмерения = УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|			И (УпаковкиЕдиницыИзмерения.Числитель = 1)
	|			И (УпаковкиЕдиницыИзмерения.Знаменатель = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК Идентификатор,
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК ТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваров.Дата КАК Дата,
	|	ВнутреннееПотреблениеТоваров.Номер КАК Номер,
	|	ВнутреннееПотреблениеТоваров.Проведен КАК Проведен,
	|	ВнутреннееПотреблениеТоваров.ПометкаУдаления КАК ПометкаУдаления,
	|	ВнутреннееПотреблениеТоваров.бг_РазрешитьПараллельнуюСборку КАК бг_РазрешитьПараллельнуюСборку,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваров.бг_Исполнитель КАК Справочник.Пользователи) КАК бг_Исполнитель_ЗначениеРеквизитаИдентификатор_Сч1,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваров.бг_Исполнитель КАК Справочник.ГруппыПользователей) КАК бг_Исполнитель_ЗначениеРеквизитаИдентификатор_Сч2,
	|	ТИПЗНАЧЕНИЯ(ВнутреннееПотреблениеТоваров.бг_Исполнитель) КАК бг_Исполнитель_ЗначениеРеквизитаТипЗначения,
	|	ВнутреннееПотреблениеТоваров.Склад КАК Склад_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваров.Склад КАК Склад_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваров.Организация КАК Организация_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваров.Организация КАК Организация_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваров.Подразделение КАК Подразделение_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваров.Подразделение КАК Подразделение_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваров.Подразделение.Код КАК Подразделение_ЗначениеРеквизитаКод,
	|	ВнутреннееПотреблениеТоваров.Ответственный КАК Ответственный_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваров.Ответственный КАК Ответственный_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваров.Ответственный.Наименование КАК Ответственный_ЗначениеРеквизитаНаименование,
	|	ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация_ЗначениеРеквизитаЗначениеПеречисления,
	|	ВнутреннееПотреблениеТоваров.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.Ссылка = &Ссылка
	|	И (ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура.Код КАК Номенклатура_ЗначениеРеквизитаКод,
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Номенклатура_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Номенклатура_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваровТовары.Серия.Наименование КАК Серия_ЗначениеРеквизитаНаименование,
	|	ВнутреннееПотреблениеТоваровТовары.Серия КАК Серия_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваровТовары.Серия КАК Серия_ЗначениеРеквизитаТаблицаКлючей,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).Ссылка КАК СтатьяРасходов_ЗначениеРеквизитаИдентификатор,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).Ссылка КАК СтатьяРасходов_ЗначениеРеквизитаТаблицаКлючей,
	|	ТИПЗНАЧЕНИЯ(ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов) КАК СтатьяРасходов_ЗначениеРеквизитаТипЗначения,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).Код КАК СтатьяРасходов_ЗначениеРеквизитаКод,
	|	ЕСТЬNULL(ВТ_БухгалтерскиеПроводки.СчетДТ, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетДТ_ЗначениеРеквизитаИдентификатор,
	|	ЕСТЬNULL(ВТ_БухгалтерскиеПроводки.СчетДТ, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетДТ_ЗначениеРеквизитаТаблицаКлючей,
	|	ЕСТЬNULL(ВТ_БухгалтерскиеПроводки.СчетДТКод, """") КАК СчетДТ_ЗначениеРеквизитаКод,
	|	ЕСТЬNULL(ВТ_БазовыеУпаковки.БазоваяУпаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка_ЗначениеРеквизитаИдентификатор,
	|	ЕСТЬNULL(ВТ_БазовыеУпаковки.БазоваяУпаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваровТовары.ФизическоеЛицо.Код КАК ФизическоеЛицо_ЗначениеРеквизитаКод,
	|	ВнутреннееПотреблениеТоваровТовары.ФизическоеЛицо.бг_КодБК КАК ФизическоеЛицо_ЗначениеРеквизитабг_КодБК,
	|	ВнутреннееПотреблениеТоваровТовары.ФизическоеЛицо КАК ФизическоеЛицо_ЗначениеРеквизитаИдентификатор,
	|	ВнутреннееПотреблениеТоваровТовары.ФизическоеЛицо КАК ФизическоеЛицо_ЗначениеРеквизитаТаблицаКлючей,
	|	ВнутреннееПотреблениеТоваровТовары.Количество КАК Количество,
	|	КатегорииЭксплуатации.СрокЭксплуатации КАК СрокЭксплуатации,
	|	ВЫБОР
	|		КОГДА КатегорииЭксплуатации.ИнвентарныйУчет
	|			ТОГДА ВнутреннееПотреблениеТоваровТовары.ИнвентарныйНомер
	|		ИНАЧЕ КатегорииЭксплуатации.Наименование
	|	КОНЕЦ КАК НаименованиеКатегорииЭксплуатации,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.АналитикаРасходов КАК Справочник.СтруктураПредприятия) КАК ПодразделениеТоваров_ЗначениеРеквизитаИдентификатор,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.АналитикаРасходов КАК Справочник.СтруктураПредприятия) КАК ПодразделениеТоваров_ЗначениеРеквизитаТаблицаКлючей,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваровТовары.АналитикаРасходов КАК Справочник.СтруктураПредприятия).Код КАК ПодразделениеТоваров_ЗначениеРеквизитаКод,
	|	ЕСТЬNULL(КатегорииЭксплуатации.ИнвентарныйУчет, ЛОЖЬ) КАК ИнвентарныйУчет
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БухгалтерскиеПроводки КАК ВТ_БухгалтерскиеПроводки
	|		ПО ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов = ВТ_БухгалтерскиеПроводки.Субконто
	|			ИЛИ ВнутреннееПотреблениеТоваровТовары.АналитикаРасходов = ВТ_БухгалтерскиеПроводки.Субконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеУпаковки КАК ВТ_БазовыеУпаковки
	|		ПО ВнутреннееПотреблениеТоваровТовары.Номенклатура = ВТ_БазовыеУпаковки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|		ПО ВнутреннееПотреблениеТоваровТовары.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
	|ГДЕ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЭтоРасходыНаПоступлениеОС(Объект) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втСтатьиПоступленияОС
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВнутреннееПотреблениеТоваровТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтатьиПоступленияОС КАК втСтатьиПоступленияОС
		|		ПО (ВнутреннееПотреблениеТоваровТовары.Ссылка = &Объект)
		|			И ВнутреннееПотреблениеТоваровТовары.СтатьяРасходов = втСтатьиПоступленияОС.Ссылка";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
