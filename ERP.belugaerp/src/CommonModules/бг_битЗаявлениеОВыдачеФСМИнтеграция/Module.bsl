#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
			
КонецПроцедуры	

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт

	ТекстЗапроса = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапроса);
	ТекстЗапросаТаблицаКлючей = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапросаТаблицаКлючей);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(Объект, ДанныеСообщения);
	
	ВыгружаемыеДанные = ВыгружаемыеДанные(Объект);
	
	Реквизиты = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
		ВыгружаемыеДанные.РезультатПоШапке,
		ПараметрыВыполненияЗапросов.ТаблицаКлючей,
		ДанныеСообщения);
		
	Если Реквизиты.Количество() > 0 Тогда

		ЗаполнитьИдентификаторПунктаРазгрузки(Реквизиты);	
		
		Товары = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
			ВыгружаемыеДанные.РезультатПоТоварам,
			ПараметрыВыполненияЗапросов.ТаблицаКлючей,
			ДанныеСообщения);
			
		Реквизиты[0].Вставить("Товары", Товары);	
	КонецЕсли;
		
	ДанныеВыгружаемогоОбъекта = Новый Структура;
	ДанныеВыгружаемогоОбъекта.Вставить("ПолноеИмя", ПараметрыВыполненияЗапросов.ПолноеИмя);
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Реквизиты);
	
	Возврат ДанныеВыгружаемогоОбъекта;
	
КонецФункции

Процедура ЗаполнитьИдентификаторПунктаРазгрузки(Реквизиты) Экспорт

	// Сопоставляем ПунктРазгрузки только по идентификатору. Передаем идентификатор в строковом виде без учета
	// типов данных источника (для упрощения), объектов для сопоставления очень мало.
	
	Если Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокумента = Реквизиты[0];
	
	// В свойстве "ПунктРазгрузки" хранится ссылка на контрагента или склад, связанный с получателем ЕГАИС.
	//  Конвертируем в строковый идентификатор.
	Если ДанныеДокумента.Свойство("ПунктРазгрузки")
		И ЗначениеЗаполнено(ДанныеДокумента.ПунктРазгрузки) Тогда
		
		ДанныеДокумента.ПунктРазгрузки = Строка(ДанныеДокумента.ПунктРазгрузки.УникальныйИдентификатор());
	Иначе
		ДанныеДокумента.Вставить("ПунктРазгрузки", "");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Реквизиты шапки
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("ОрганизацияЕГАИС");
	ВыгружаемыеРеквизиты.Добавить("ТерриториальныйОрганРАР");
	ВыгружаемыеРеквизиты.Добавить("ИдентификаторЕГАИС");
	ВыгружаемыеРеквизиты.Добавить("ВидАлкогольнойПродукции");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	
	// Реквизиты ТЧ "Товары"
	ВыгружаемыеРеквизиты.Добавить("Товары.Номенклатура");
	ВыгружаемыеРеквизиты.Добавить("Товары.Количество");
	
	Возврат СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
КонецФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	// ПунктРазгрузки: в ERP это склад или контрагент, в УПП - отдельный справочник алкПунктыРазгрузки.
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ПунктРазгрузки",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(36)));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.ТипМарки",
		Новый ОписаниеТипов("СправочникСсылка.бг_КлассификаторТиповМарок"));
		
 	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.Крепость",
		Новый ОписаниеТипов(Метаданные.Справочники.Номенклатура.Реквизиты.Крепость.Тип));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.Емкость",
		Новый ОписаниеТипов(Метаданные.Справочники.Номенклатура.Реквизиты.ОбъемДАЛ.Тип));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Товары.Объем",
		Новый ОписаниеТипов(Метаданные.Справочники.Номенклатура.Реквизиты.ОбъемДАЛ.Тип));
		
КонецПроцедуры

Функция ВыгружаемыеДанные(Ссылка)

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаВыгружаемыхДанных();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтатусПроведенЕГАИС", Перечисления.СтатусыОбработкиЗапросаАкцизныхМарокЕГАИС.бг_ПроведенЕГАИС);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ВыгружаемыеДанные = Новый Структура;
	ВыгружаемыеДанные.Вставить("РезультатПоШапке", РезультатыЗапросов[0]);
	ВыгружаемыеДанные.Вставить("РезультатПоТоварам", РезультатыЗапросов[1]);
	
	Возврат ВыгружаемыеДанные;

КонецФункции

Функция ТекстЗапросаВыгружаемыхДанных()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	битЗаявлениеОВыдачеФСМ.Ссылка КАК Идентификатор,
	|	битЗаявлениеОВыдачеФСМ.Ссылка КАК ТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМ.ПометкаУдаления КАК ПометкаУдаления,
	|	битЗаявлениеОВыдачеФСМ.Проведен КАК Проведен,
	|	битЗаявлениеОВыдачеФСМ.Дата КАК Дата,
	|	битЗаявлениеОВыдачеФСМ.Номер КАК Номер,
	|	битЗаявлениеОВыдачеФСМ.Организация КАК Организация_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМ.Организация КАК Организация_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС.Код КАК ОрганизацияЕГАИС_ЗначениеРеквизитаКод,
	|	битЗаявлениеОВыдачеФСМ.ТерриториальныйОрганРАР КАК ТерриториальныйОрганРАР_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМ.ТерриториальныйОрганРАР КАК ТерриториальныйОрганРАР_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМ.ТерриториальныйОрганРАР.Код КАК ТерриториальныйОрганРАР_ЗначениеРеквизитаКод,
	|	битЗаявлениеОВыдачеФСМ.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМ.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМ.ВидАлкогольнойПродукции.Код КАК ВидАлкогольнойПродукции_ЗначениеРеквизитаКод,
	|	битЗаявлениеОВыдачеФСМ.ИдентификаторЕГАИС КАК ИдентификаторЕГАИС,
	|	ВЫБОР
	|		КОГДА битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС.СоответствуетОрганизации = ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС.ТорговыйОбъект КАК Справочник.Склады).Ссылка
	|		ИНАЧЕ ВЫРАЗИТЬ(битЗаявлениеОВыдачеФСМ.ОрганизацияЕГАИС.Контрагент КАК Справочник.Контрагенты).Ссылка
	|	КОНЕЦ КАК ПунктРазгрузки,
	|	битЗаявлениеОВыдачеФСМ.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.битЗаявлениеОВыдачеФСМ КАК битЗаявлениеОВыдачеФСМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО битЗаявлениеОВыдачеФСМ.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	битЗаявлениеОВыдачеФСМ.Ссылка = &Ссылка
	|	И СтатусыДокументовЕГАИС.Статус = &СтатусПроведенЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура КАК Номенклатура_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура КАК Номенклатура_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.Код КАК Номенклатура_ЗначениеРеквизитаКод,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.бг_ТипМарки КАК ТипМарки_ЗначениеРеквизитаИдентификатор,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.бг_ТипМарки КАК ТипМарки_ЗначениеРеквизитаТаблицаКлючей,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.бг_ТипМарки.Код КАК ТипМарки_ЗначениеРеквизитаКод,
	|	битЗаявлениеОВыдачеФСМТовары.Количество КАК Количество,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.Крепость КАК Крепость,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.ОбъемДАЛ * 10 КАК Емкость,
	|	битЗаявлениеОВыдачеФСМТовары.Номенклатура.ОбъемДАЛ * битЗаявлениеОВыдачеФСМТовары.Количество КАК Объем
	|ИЗ
	|	Документ.битЗаявлениеОВыдачеФСМ.Товары КАК битЗаявлениеОВыдачеФСМТовары
	|ГДЕ
	|	битЗаявлениеОВыдачеФСМТовары.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
