#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;  // Используем модуль из расширения БИТMDT.
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров = Новый Массив;
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_ДвижениеМарок");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_СогласованиеЗаказовКлиентов");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_СоставУпаковок");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_МинимальныеЦеныАлкогольнойПродукции");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_ТранспортнаяИнформация");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.бг_ФиксацияПечатиДокументов");
	ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Добавить("РегистрСведений.ЦеныНоменклатуры25");

	Если ИменаОбрабатываемыхВСобственныхМодуляхРегистров.Найти(Объект.ИмяРегистра) <> Неопределено Тогда
		МодульРегистра = бг_ОбщегоНазначенияСервер.ОбщийМодульИнтеграции(Объект.ИмяРегистра, Истина);
		Возврат МодульРегистра.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	Иначе
		Возврат адаптер_обработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеРегистратора(СправочникЗаписиРегистров) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	адаптер_ЗаписиРегистровОтбор.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
	|	адаптер_ЗаписиРегистровОтбор.ПолноеИмяОбъектаМетаданных КАК ПолноеИмяОбъектаМетаданных
	|ИЗ
	|	Справочник.адаптер_ЗаписиРегистров.Отбор КАК адаптер_ЗаписиРегистровОтбор
	|ГДЕ
	|	адаптер_ЗаписиРегистровОтбор.Ссылка = &СправочникЗаписиРегистров
	|	И адаптер_ЗаписиРегистровОтбор.Имя = ""Регистратор""";
	
	Запрос.УстановитьПараметр("СправочникЗаписиРегистров", СправочникЗаписиРегистров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ПараметрыПоискаРегистратора = Новый Структура;
		ПараметрыПоискаРегистратора.Вставить("ПолноеИмя", Выборка.ПолноеИмяОбъектаМетаданных);
		ПараметрыПоискаРегистратора.Вставить("Идентификатор", Выборка.ИдентификаторОбъекта);
		
		Регистратор = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(ПараметрыПоискаРегистратора);
		
		ДанныеРегистратора = Неопределено;
		Если ОбщегоНазначения.СсылкаСуществует(Регистратор) Тогда	
			РеквизитыРегистратора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Регистратор, "Дата, Проведен, ПометкаУдаления");
			
			ДанныеРегистратора = Новый Структура;
			ДанныеРегистратора.Вставить("Ссылка", Регистратор);
			ДанныеРегистратора.Вставить("Проведен", РеквизитыРегистратора.Проведен);
			ДанныеРегистратора.Вставить("ПометкаУдаления", РеквизитыРегистратора.ПометкаУдаления);
			ДанныеРегистратора.Вставить("Дата", РеквизитыРегистратора.Дата);
			ДанныеРегистратора.Вставить("Тип", ТипЗнч(Регистратор));
		КонецЕсли;
		
		Возврат ДанныеРегистратора;
			
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

#КонецОбласти
