
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьМассивПроверяемыхРеквизитовБлокировки(МетаданныеОбъекта, МассивПроверяемыхРеквизитов, СтандартнаяОбработка) Экспорт
	
	МассивПроверяемыхРеквизитов.Добавить("Предопределенный");
	МассивПроверяемыхРеквизитов.Добавить("ПометкаУдаления");
	МассивПроверяемыхРеквизитов.Добавить("Родитель");
	МассивПроверяемыхРеквизитов.Добавить("Наименование");
	МассивПроверяемыхРеквизитов.Добавить("НаименованиеПолное");
	МассивПроверяемыхРеквизитов.Добавить("Клиент");
	МассивПроверяемыхРеквизитов.Добавить("Поставщик");
	МассивПроверяемыхРеквизитов.Добавить("ЮрФизЛицо");
	МассивПроверяемыхРеквизитов.Добавить("Комментарий");
	МассивПроверяемыхРеквизитов.Добавить("ДополнительноеОписание");
	
КонецПроцедуры

Функция ЗагрузитьОбъектИзОбъектаКонтрагенты(СтруктураОбъектаКонтрагенты, ЗагружаемыйОбъектКонтрагенты, КонтрагентРозничныйПокупатель) Экспорт
	
	Если Не КонтрагентРозничныйПокупатель Тогда
		
		Если ЗначениеЗаполнено(ЗагружаемыйОбъектКонтрагенты.Партнер) Тогда
			ПартнерОбъект = ЗагружаемыйОбъектКонтрагенты.Партнер.ПолучитьОбъект();
		Иначе
			ПартнерОбъект = Справочники.Партнеры.СоздатьЭлемент();
		КонецЕсли;
		
	Иначе
		
		ИдентификаторПартнераРозничногоПокупателя = бг_ОбщегоНазначенияСервер.ИдентификаторСУчетомТаблицыКлючей(
														СтруктураОбъектаКонтрагенты.Идентификатор, 
														"Справочник.Партнеры");
		
		Партнер = Справочники.Партнеры.ПолучитьСсылку(
					Новый УникальныйИдентификатор(
					ИдентификаторПартнераРозничногоПокупателя));
					
		ПартнерОбъект = Партнер.ПолучитьОбъект();
		
		Если ПартнерОбъект = Неопределено Тогда
			ПартнерОбъект = Справочники.Партнеры.СоздатьЭлемент();
			ПартнерОбъект.УстановитьСсылкуНового(Партнер);
			ПартнерОбъект.Родитель = ЗагружаемыйОбъектКонтрагенты.Партнер;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПартнерОбъект.ЭтоНовый() Тогда
		ПартнерОбъект.Заполнить(Неопределено);
	КонецЕсли;
	
	ПартнерОбъект.ПометкаУдаления = СтруктураОбъектаКонтрагенты.ПометкаУдаления;
	ПартнерОбъект.Наименование = СтруктураОбъектаКонтрагенты.Наименование;
	ПартнерОбъект.Клиент = СтруктураОбъектаКонтрагенты.Покупатель;
	ПартнерОбъект.Поставщик = СтруктураОбъектаКонтрагенты.Поставщик;
	
	Если СтруктураОбъектаКонтрагенты.Свойство("алкЭтоПеревозчик") Тогда
		ПартнерОбъект.Перевозчик = СтруктураОбъектаКонтрагенты.алкЭтоПеревозчик;
	ИначеЕсли СтруктураОбъектаКонтрагенты.Свойство("синПеревозчик") Тогда
		ПартнерОбъект.Перевозчик = СтруктураОбъектаКонтрагенты.синПеревозчик;
	КонецЕсли;
	
	Если ПартнерОбъект.Клиент
		Или ПартнерОбъект.Поставщик Тогда
		ПартнерОбъект.ПрочиеОтношения = Ложь;
	Иначе
		ПартнерОбъект.ПрочиеОтношения = Истина;
	КонецЕсли;
	
	ПартнерОбъект.Комментарий = СтруктураОбъектаКонтрагенты.Комментарий;
	ПартнерОбъект.НаименованиеПолное = СтруктураОбъектаКонтрагенты.НаименованиеПолное;
	ПартнерОбъект.ДополнительнаяИнформация = СтруктураОбъектаКонтрагенты.ДополнительноеОписание;
	
	Если СтруктураОбъектаКонтрагенты.ЮрФизЛицо.ЗначениеПеречисления = "ЮрЛицо" Тогда
		ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
	ИначеЕсли СтруктураОбъектаКонтрагенты.ЮрФизЛицо.ЗначениеПеречисления = "ФизЛицо" Тогда
		ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо;
	Иначе
		ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ПустаяСсылка();
	КонецЕсли;
	
	бг_ОбщегоНазначенияСервер.ЗаполнитьВОбъектеСтрокуКонтактнойИнформации(
		ПартнерОбъект, 
		Перечисления.ТипыКонтактнойИнформации.Адрес, 
		Справочники.ВидыКонтактнойИнформации.АдресПартнера, 
		СтруктураОбъектаКонтрагенты, "ФА");
	
	ПартнерОбъект.ДополнительныеСвойства.Вставить("адаптер_ЭтоЗагрузкаДанных", Истина);
	
	ПартнерОбъект.Записать();
	
	Возврат ПартнерОбъект.Ссылка;
	
КонецФункции

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());
		
КонецПроцедуры

Процедура ВыгрузитьСвязанныеОбъекты(СправочникОбъект) Экспорт
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Партнер = &Партнер";
	Запрос.УстановитьПараметр("Партнер", СправочникОбъект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		бг_ОбщегоНазначенияСервер.ЗарегистрироватьИсходящееСообщениеПриЗаписи(Выборка.Ссылка);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Шапка
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("Клиент");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("Поставщик");
	ВыгружаемыеРеквизиты.Добавить("НаименованиеПолное");
	ВыгружаемыеРеквизиты.Добавить("ДополнительнаяИнформация");
	ВыгружаемыеРеквизиты.Добавить("Перевозчик");
	ВыгружаемыеРеквизиты.Добавить("ЮрФизЛицо");
	
	// КонтактнаяИнформация 
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Тип");
	ВыгружаемыеРеквизиты.Добавить("КонтактнаяИнформация.Представление");
	
	ВыгружаемыеРеквизиты = СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

#КонецОбласти // Конец СлужебныеПроцедурыИФункции