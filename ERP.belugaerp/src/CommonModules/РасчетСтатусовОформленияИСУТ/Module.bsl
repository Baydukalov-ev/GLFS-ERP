
&ИзменениеИКонтроль("ПриОпределенииЗапросаДляЕГАИС")
Процедура бг_ПриОпределенииЗапросаДляЕГАИС(
	МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
	ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента();
	ТабличныеЧастиДокумента = Новый Массив;
	Если ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		ОтборНоменклатуры = "СправочникНоменклатура.ОсобенностьУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво))
		|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре";
	Иначе
		ОтборНоменклатуры = "ЛОЖЬ";
	КонецЕсли;
	ОтборНоменклатурыТолькоМаркируемая = ОтборНоменклатуры + "
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	ОтборНоменклатурыТолькоНемаркируемая = ОтборНоменклатуры + "
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ВнутреннееПотреблениеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие +"
				|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоМаркируемая);
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхПродажах Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТоварыРасход.ИмяПоляНазначениеТЧТовары = "ТаблицаТовары.Помещение";
			ТоварыРасход.ИмяПоляНазначениеТЧСерии  = "Помещение";
			Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса() Тогда
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			Иначе
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатурыТолькоНемаркируемая);
			КонецЕсли;
		
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтКлиента Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Номенклатура ИНАЧЕ ТаблицаТовары.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Характеристика ИНАЧЕ ТаблицаТовары.ХарактеристикаОприходование КОНЕЦ";
			
			ТоварыПриход.ИмяПоляНоменклатураТЧСерии   = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Номенклатура ИНАЧЕ ТаблицаСерии.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧСерии = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Характеристика ИНАЧЕ ТаблицаСерии.ХарактеристикаОприходование КОНЕЦ";;
			
			ТоварыПриход.ДопОтборы_Общие = ТоварыПриход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыТолькоМаркируемая);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхВозвратах Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			ТоварыРасход.ИмяПоляНазначениеТЧТовары = "ТаблицаТовары.Помещение";
			ТоварыРасход.ИмяПоляНазначениеТЧСерии  = "Помещение";
			Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса() Тогда
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			Иначе
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатурыТолькоНемаркируемая);
			КонецЕсли;
		
		КонецЕсли;
				
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеИзлишковТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		// Товары - приход и расход в одной ТЧ
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ТаблицаТовары.НоменклатураОприходование";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ТаблицаТовары.ХарактеристикаОприходование";
			ТоварыПриход.ИмяПоляСерияТЧТовары          = "ТаблицаТовары.СерияОприходование";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПриобретениеТоваровУслуг Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
#Вставка
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.битОтчетОбИмпортеПродукцииЕГАИС Тогда
			
			ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
			ОтборНоменклатуры =
				"СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
				|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
#КонецВставки
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваровУслуг Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ТТНИсходящаяЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыТТНИсходящаяЕГАИС",Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоМаркируемая);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ТТНИсходящаяЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыТТНИсходящаяЕГАИС",Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоНемаркируемая);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие;
			НоменклатураРасход.ДопСоединения_Общие = ТоварыРасход.ДопСоединения_Общие;
			
			НоменклатураРасход.ДопОтборы_Общие = НоменклатураРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
		
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие;
			НоменклатураРасход.ДопСоединения_Общие = ТоварыРасход.ДопСоединения_Общие;
			
			НоменклатураРасход.ДопОтборы_Общие = НоменклатураРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, НоменклатураРасход, ОтборНоменклатурыТолькоМаркируемая);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеНедостачТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
#Вставка
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПрочееОприходованиеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
#КонецВставки
	
	КонецЕсли;
	
КонецПроцедуры
