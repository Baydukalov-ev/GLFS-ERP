#Область ПрограммныИнтерфейс

// Регистрирует исходящие сообщения с информацией об изменениях свободных остатков товаров  для интернет-магазинов.
//  Вызывается из метода регламентного задания "битВыгрузкаИзмененийСвободныхОстатковДляИМ". 
//
Процедура ЗарегистрироватьИсходящиеСообщенияДляИМ() Экспорт

	Перем адаптер_ПодпискиНаСобытияВызовСервера;
	Перем адаптер_НастройкиОбменаПовтИсп;
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_ПодпискиНаСобытияВызовСервера = ОбщегоНазначения.ОбщийМодуль("адаптер_ПодпискиНаСобытияВызовСервера");
	адаптер_НастройкиОбменаПовтИсп = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбменаПовтИсп");
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");

	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыПодключения = адаптер_НастройкиОбменаПовтИсп.НастройкиПодключенияДляВыгрузки();
	Если ПараметрыПодключения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	НастройкиВыгрузки = адаптер_НастройкиОбменаПовтИсп.ПолучитьНастройкиВыгрузкиПоОбъекту(
		Метаданные.РегламентныеЗадания.битВыгрузкаИзмененийСвободныхОстатковДляИМ.ПолноеИмя());
		
	Если НастройкиВыгрузки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные", Метаданные.РегламентныеЗадания.битВыгрузкаИзмененийСвободныхОстатковДляИМ);
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	
	Если Задания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СчетчикЦиклов = 0;
	Пока Истина Цикл
		
		СчетчикЦиклов = СчетчикЦиклов + 1;
		
		Запрос = Новый Запрос();
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();	
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Задания.Номенклатура КАК Номенклатура,
		|	Задания.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ТоварыДляВыгрузкиИзмененийСвободныхОстатков
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 100
		|		Задания.Номенклатура КАК Номенклатура,
		|		Задания.Характеристика КАК Характеристика,
		|		Задания.ДатаЗаписи КАК ДатаЗаписи
		|	ИЗ
		|		РегистрСведений.бг_ИзмененияСвободныхОстатковДляИМ КАК Задания
		|	
		|	УПОРЯДОЧИТЬ ПО
		|		ДатаЗаписи) КАК Задания
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задания.ПричинаИзменения КАК ПричинаИзменения,
		|	Задания.Номенклатура КАК Номенклатура,
		|	Задания.Характеристика КАК Характеристика,
		|	Задания.Склад КАК Склад,
		|	Задания.РазделительЗаписи КАК РазделительЗаписи,
		|	Задания.Свободно КАК Свободно
		|ПОМЕСТИТЬ ЗаданияКВыгрузкеИзмененийСвободныхОстатков
		|ИЗ
		|	ТоварыДляВыгрузкиИзмененийСвободныхОстатков КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ИзмененияСвободныхОстатковДляИМ КАК Задания
		|		ПО (Задания.Номенклатура = Товары.Номенклатура)
		|			И (Задания.Характеристика = Товары.Характеристика)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПричинаИзменения,
		|	Номенклатура,
		|	Характеристика,
		|	Склад";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Если РезультатЗапроса[1].Выгрузить()[0].Количество = 0 Тогда
			Прервать;
		КонецЕсли;

		Если СчетчикЦиклов > 100 Тогда	
			// Чтобы регламентное задание не было "бесконечным", в случае если скопилось много неотправленных изменений,
			// прервем регламентное задание. Оставшиеся изменения будут отправляться по мере следующих стартов рег. задания.
			Прервать;
		КонецЕсли;	
		
		ДополнительныеПараметры = Новый Структура;
		
		ТоварыДляВыгрузки = 
			МенеджерВременныхТаблиц.Таблицы["ТоварыДляВыгрузкиИзмененийСвободныхОстатков"].ПолучитьДанные().Выгрузить();
		ДополнительныеПараметры.Вставить(
			"МассивНоменклатуры", 
			ТоварыДляВыгрузки.ВыгрузитьКолонку("Номенклатура"));	
		бг_ИнтеграцияSAP.СоздатьВТНоменклатура(МенеджерВременныхТаблиц, ДополнительныеПараметры);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураСегмента.Номенклатура КАК Номенклатура,
		|	НоменклатураСегмента.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТИсключаемаяНоменклатура
		|ИЗ
		|	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
		|ГДЕ
		|	НоменклатураСегмента.Сегмент = &СегментНоменклатурыЗапрещеннойКПродаже
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика";
		Запрос.УстановитьПараметр("СегментНоменклатурыЗапрещеннойКПродаже", 
			бг_КонстантыПовтИсп.ЗначениеКонстанты("СегментНоменклатурыНеПродаватьВинлаб"));
		Запрос.Выполнить();
		
		Запрос.УстановитьПараметр("Идентификатор", "ИспользоватьВыгрузкуСвободныхОстатковВSAP");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияДополнительныхКонстант.Разрез КАК Разрез
		|ПОМЕСТИТЬ СписокУзловИнтеграции	
		|ИЗ
		|	РегистрСведений.бг_ЗначенияДополнительныхКонстант КАК ЗначенияДополнительныхКонстант
		|ГДЕ
		|	ВЫРАЗИТЬ(ЗначенияДополнительныхКонстант.Константа КАК Справочник.бг_ДополнительныеКонстанты).Идентификатор = &Идентификатор
		|	И ЗначенияДополнительныхКонстант.Значение = ИСТИНА
		|
		|ИНДЕКСИРОВАТЬ ПО 
		|	ЗначенияДополнительныхКонстант.Разрез	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыгружаемыйОбъект.Ссылка КАК Ссылка,
		|	ВыгружаемыйОбъект.Наименование КАК Наименование,
		|	ВыгружаемыйОбъект.СкладИнтернетМагазина КАК СкладИнтернетМагазина
		|ИЗ
		|	Справочник.бг_НастройкиУзловИнтеграцииSAP КАК ВыгружаемыйОбъект
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокУзловИнтеграции КАК СписокУзловИнтеграции
		|		ПО ВыгружаемыйОбъект.Ссылка = СписокУзловИнтеграции.Разрез 
		|ГДЕ
		|	НЕ ВыгружаемыйОбъект.ПометкаУдаления
		|	И ВыгружаемыйОбъект.СкладИнтернетМагазина <> """"";
		
		ВыборкаСкладовИнтернетМагазинов = Запрос.Выполнить().Выбрать();
		Пока ВыборкаСкладовИнтернетМагазинов.Следующий() Цикл	
			
			ТаблицаИзмененийОстатков = ТаблицаИзмененийСвободныхОстатковТоваров(
											ВыборкаСкладовИнтернетМагазинов.Ссылка,
											МенеджерВременныхТаблиц);
			Если ТаблицаИзмененийОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			// Разделим изменения остатков по ключевым реквизитам.
			КлючевыеРеквизиты = "ПричинаИзменения";
			ТаблицаКлючевыхРеквизитов = ТаблицаИзмененийОстатков.Скопировать(, КлючевыеРеквизиты); 
			ТаблицаКлючевыхРеквизитов.Свернуть(КлючевыеРеквизиты, );
			ОтборКлючевыхРеквизитов = Новый Структура(КлючевыеРеквизиты);
			Для каждого СтрокаКлючевыхРеквизитов Из ТаблицаКлючевыхРеквизитов Цикл
				
				ЗаполнитьЗначенияСвойств(ОтборКлючевыхРеквизитов, СтрокаКлючевыхРеквизитов); 
				НайденныеСтрокиИзмененийОстатков = ТаблицаИзмененийОстатков.НайтиСтроки(ОтборКлючевыхРеквизитов);	
				Если НайденныеСтрокиИзмененийОстатков.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Остатки = Новый Массив;
				Для каждого СтрокаИзмененийОстатков Из НайденныеСтрокиИзмененийОстатков Цикл
					СтруктураСтроки = Новый Структура("КодПоставщика,Количество");
					ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаИзмененийОстатков);
					Остатки.Добавить(СтруктураСтроки);
				КонецЦикла;

				ДанныеОбъекта = Новый Структура;
				ДанныеОбъекта.Вставить("ПолноеИмя", 
					Метаданные.РегламентныеЗадания.битВыгрузкаИзмененийСвободныхОстатковДляИМ.ПолноеИмя());
				ДанныеОбъекта.Вставить("Реквизиты", Новый Массив);
				
				РеквизитыОбъекта = Новый Структура;
				РеквизитыОбъекта.Вставить("ИМ", ВыборкаСкладовИнтернетМагазинов.СкладИнтернетМагазина);
				
				ПричинаИзмененияСтрокой = 
					адаптер_РаботаСДаннымиИБ.ПеречислениеВСтроку(СтрокаКлючевыхРеквизитов.ПричинаИзменения);
				РеквизитыОбъекта.Вставить(
					"ПричинаИзменения", 
					Новый Структура("ЗначениеПеречисления",ПричинаИзмененияСтрокой));
					
				РеквизитыОбъекта.Вставить("Остатки", Остатки);
				
				ДанныеОбъекта.Реквизиты.Добавить(РеквизитыОбъекта); 	
				
				ДополнительныеСвойства = Новый Структура;
				ДополнительныеСвойства.Вставить(
						"ИдентификаторНастройкиУзлаИнтеграцииSAP", 
						ВыборкаСкладовИнтернетМагазинов.Ссылка.УникальныйИдентификатор());
				ДополнительныеСвойства.Вставить(
						"НаименованиеНастройкиУзлаИнтеграцииSAP", 
						ВыборкаСкладовИнтернетМагазинов.Наименование);
				ДополнительныеСвойства.Вставить("ПричинаИзменения",  ПричинаИзмененияСтрокой);
				
				бг_ИнтеграцияSAP.ЗарегистрироватьИсходящееСообщениеПоДаннымОбъекта(ДанныеОбъекта, Задания[0], ДополнительныеСвойства);
				
			КонецЦикла;	
				
		КонецЦикла;	

		ВыборкаЗаданий = 
			Запрос.МенеджерВременныхТаблиц.Таблицы["ЗаданияКВыгрузкеИзмененийСвободныхОстатков"].ПолучитьДанные().Выбрать();
		Пока ВыборкаЗаданий.Следующий() Цикл
			НаборЗаданий = РегистрыСведений.бг_ИзмененияСвободныхОстатковДляИМ.СоздатьНаборЗаписей();
			НаборЗаданий.Отбор.ПричинаИзменения.Установить(ВыборкаЗаданий.ПричинаИзменения);
			НаборЗаданий.Отбор.Номенклатура.Установить(ВыборкаЗаданий.Номенклатура);
			НаборЗаданий.Отбор.Склад.Установить(ВыборкаЗаданий.Склад);
			НаборЗаданий.Отбор.РазделительЗаписи.Установить(ВыборкаЗаданий.РазделительЗаписи);
			НаборЗаданий.Записать();
		КонецЦикла;
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
		
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, 
										   ТекстЗапросаТаблицаКлючей, 
										   ПараметрыЗапроса, 
										   НастройкаВыгрузки, 
										   Объект, 
										   СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ТекстЗапросаТаблицаКлючей = "";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыгружаемыйОбъект.СкладИнтернетМагазина КАК ИМ,
	|	ВыгружаемыйОбъект.Ссылка КАК НастройкаУзлаИнтеграцииSAP,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ПричиныИзмененияСвободныхОстатковДляИМ.ИнтернетЗаказ) КАК ПричинаИзменения_ЗначениеРеквизитаЗначениеПеречисления
	|ИЗ
	|	Справочник.бг_НастройкиУзловИнтеграцииSAP КАК ВыгружаемыйОбъект
	|ГДЕ
	|	&УсловиеЗапроса
	|	И ВыгружаемыйОбъект.Ссылка = &Ссылка
	|	И НЕ ВыгружаемыйОбъект.ПометкаУдаления
	|	И ВыгружаемыйОбъект.СкладИнтернетМагазина <> """"";

	ПараметрыЗапроса.Вставить("Ссылка", Справочники.бг_НастройкиУзловИнтеграцииSAP.ПолучитьСсылку(Новый УникальныйИдентификатор(НастройкаВыгрузки.ДополнительныеСвойстваОбъекта.ИдентификаторНастройкиУзлаИнтеграцииSAP)));
		
	ТекстЗапросаТаблицаКлючей = "";
	
КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	КлючМаршрутизации = КлючМаршрутизации + ".hybris";
		
	Возврат КлючМаршрутизации; 
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ИМ",
		ОбщегоНазначения.ОписаниеТипаСтрока(5));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ПричинаИзменения",
		Новый ОписаниеТипов("ПеречислениеСсылка.бг_ПричиныИзмененияСвободныхОстатковДляИМ"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства, 
		РеквизитыИСвойства.МетаданныеОбъекта, 
		,
		"Остатки.КодПоставщика",
		ОбщегоНазначения.ОписаниеТипаСтрока(36));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"Остатки.Количество",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
		
КонецПроцедуры

Функция ТаблицаИзмененийСвободныхОстатковТоваров(НастройкаУзлаИнтеграцииSAP, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НастройкаУзлаИнтеграцииSAP", НастройкаУзлаИнтеграцииSAP);
	Запрос.УстановитьПараметр("Организация", 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаУзлаИнтеграцииSAP, "Организация"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.Склад КАК Склад,
	|	Склады.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ВТ_СкладыИнтернетМагазинов
	|ИЗ
	|	Справочник.бг_НастройкиУзловИнтеграцииSAP.Склады КАК Склады
	|ГДЕ
	|	Склады.Ссылка = &НастройкаУзлаИнтеграцииSAP
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ПричинаИзменения КАК ПричинаИзменения,
	|	Остатки.Номенклатура КАК Номенклатура,
	|	СУММА(Остатки.Свободно) КАК Свободно
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	ЗаданияКВыгрузкеИзмененийСвободныхОстатков КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СкладыИнтернетМагазинов КАК ВТ_СкладыИнтернетМагазинов
	|		ПО Остатки.Склад = ВТ_СкладыИнтернетМагазинов.Склад
	|			И (ВЫРАЗИТЬ(Остатки.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВТ_СкладыИнтернетМагазинов.ВидНоменклатуры)
	|	ГДЕ
	|		НЕ (Остатки.Номенклатура, Остатки.Характеристика) В
	|				(ВЫБРАТЬ
	|					ВТИсключаемаяНоменклатура.Номенклатура КАК Номенклатура,
	|					ВТИсключаемаяНоменклатура.Характеристика КАК Характеристика
	|				ИЗ
	|					ВТИсключаемаяНоменклатура КАК ВТИсключаемаяНоменклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ПричинаИзменения,
	|	Остатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Остатки.ПричинаИзменения КАК ПричинаИзменения,
	|	ВТНоменклатура.КодДляПоискаНоменклатуры КАК КодПоставщика,
	|	СУММА(ВТ_Остатки.Свободно) КАК Количество
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(ВТНоменклатура.СКЮ_МТ КАК Справочник.бг_ЕК_СКЮ_СкюМТ).Код ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Остатки.ПричинаИзменения,
	|	ВТНоменклатура.КодДляПоискаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТ_Остатки.Свободно) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПричинаИзменения,
	|	ВТНоменклатура.КодДляПоискаНоменклатуры";
	
	ТаблицаИзмененийОстатков = Запрос.Выполнить().Выгрузить();	

	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТ_СкладыИнтернетМагазинов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Остатки";
	Запрос.Выполнить();	
	
	Возврат ТаблицаИзмененийОстатков;
	
КонецФункции

#КонецОбласти
