#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты();
    	ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты);

	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		Реквизиты);	
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	ДобавитьКлючевыеРеквизиты(РеквизитыИСвойства); 
	
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт
	
	ТекстПоиска = "ВыгружаемыйОбъект.Товары.Номенклатура.КодЕК_Номенклатуры КАК Номенклатура_ЗначениеРеквизитаКодЕК_Номенклатуры";
	ТекстЗамены = "ЕСТЬNULL(ВыгружаемыйОбъект.Товары.Серия.бг_УпаковкаПаллета.бг_КодЕК_Номенклатуры, """") КАК Номенклатура_ЗначениеРеквизитаКодЕК_Номенклатуры";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
	ТекстПоиска = "ВыгружаемыйОбъект.Товары.НоменклатураОприходование.КодЕК_Номенклатуры КАК НоменклатураОприходование_ЗначениеРеквизитаКодЕК_Номенклатуры";
	ТекстЗамены = "NULL КАК НоменклатураОприходование_ЗначениеРеквизитаКодЕК_Номенклатуры";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
	ТекстПоиска = "ВыгружаемыйОбъект.Товары.НоменклатураНабора.КодЕК_Номенклатуры КАК НоменклатураНабора_ЗначениеРеквизитаКодЕК_Номенклатуры";
	ТекстЗамены = "NULL КАК НоменклатураНабора_ЗначениеРеквизитаКодЕК_Номенклатуры";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);

	// Соединение с ТТН
	ТекстПоиска = "
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВыгружаемыйОбъект";
	ТекстЗамены = "
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВыгружаемыйОбъект
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
		|		ПО ВыгружаемыйОбъект.Ссылка = ТТНВходящаяЕГАИС.ДокументОснование";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
	// ИдентификаторЕГАИС
	ТекстПоиска = "NULL КАК ИдентификаторЕГАИС";
	ТекстЗамены = "ТТНВходящаяЕГАИС.ИдентификаторЕГАИС КАК ИдентификаторЕГАИС";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
	// ОтражатьСкладскиеДвижения
	ОтражатьСкладскиеДвижения = бг_ИнтеграцияЕГАИС.ОтражатьСкладскиеДвиженияПоОснованию(Объект);
	
	ТекстПоиска = "NULL КАК ОтражатьСкладскиеДвижения";
	ТекстЗамены = СтрШаблон(
		"%1 КАК ОтражатьСкладскиеДвижения",
		?(ОтражатьСкладскиеДвижения, "Истина", "Ложь"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстПоиска, ТекстЗамены);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_обработчикиСобытийСтандартный;
	адаптер_обработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_обработчикиСобытийСтандартный");
	
	ДанныеОбъекта = адаптер_обработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	
	Если ДанныеОбъекта.Реквизиты.Количество() = 0 Тогда
		Возврат ДанныеОбъекта;
	КонецЕсли;	
	
	РеквизитыОбъекта = ДанныеОбъекта.Реквизиты[0];

	ЗначенияРеквизитовОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Дата, Валюта");	
	Запись = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ЗначенияРеквизитовОбъекта.Дата,
		Новый Структура("Валюта", ЗначенияРеквизитовОбъекта.Валюта));
		
	Если Запись.Кратность = 0 Тогда
		КурсВалюты = 1;	
	Иначе	
	    КурсВалюты = Окр(Запись.Курс / Запись.Кратность, 5);
	КонецЕсли;
	
	РеквизитыОбъекта.Вставить("КурсВалюты", КурсВалюты);
	
	ЗаполнитьПунктНазначенияИЛицензию(РеквизитыОбъекта, Объект);
		
	Возврат ДанныеОбъекта;
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Реквизиты шапки
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	
	ВыгружаемыеРеквизиты.Добавить("Организация");
	ВыгружаемыеРеквизиты.Добавить("Сделка");
	ВыгружаемыеРеквизиты.Добавить("СуммаДокумента");
	ВыгружаемыеРеквизиты.Добавить("Подразделение");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("НомерВходящегоДокумента");
	ВыгружаемыеРеквизиты.Добавить("ДатаВходящегоДокумента");
	ВыгружаемыеРеквизиты.Добавить("НомерРасходногоКассовогоОрдера");
	ВыгружаемыеРеквизиты.Добавить("ДатаРасходногоКассовогоОрдера");
	ВыгружаемыеРеквизиты.Добавить("Контрагент");
	ВыгружаемыеРеквизиты.Добавить("Договор");
	ВыгружаемыеРеквизиты.Добавить("Автор");
	ВыгружаемыеРеквизиты.Добавить("ПокупательНеПлательщикНДС");
	ВыгружаемыеРеквизиты.Добавить("ПунктНазначенияГрузоотправителя");
	ВыгружаемыеРеквизиты.Добавить("ЛицензияПунктаНазначенияГрузоотправителя");
	ВыгружаемыеРеквизиты.Добавить("Валюта");
	ВыгружаемыеРеквизиты.Добавить("Склад");
	ВыгружаемыеРеквизиты.Добавить("ЦенаВключаетНДС");  
	ВыгружаемыеРеквизиты.Добавить("ДокументРеализации");
			
	// Реквизиты ТЧ "Товары"
	ВыгружаемыеРеквизиты.Добавить("Товары.Номенклатура");
	ВыгружаемыеРеквизиты.Добавить("Товары.НоменклатураОприходование");
	ВыгружаемыеРеквизиты.Добавить("Товары.Характеристика");
	ВыгружаемыеРеквизиты.Добавить("Товары.ХарактеристикаОприходование");
	ВыгружаемыеРеквизиты.Добавить("Товары.Упаковка");
	ВыгружаемыеРеквизиты.Добавить("Товары.КоличествоУпаковок");
	ВыгружаемыеРеквизиты.Добавить("Товары.Количество");
	ВыгружаемыеРеквизиты.Добавить("Товары.КоличествоПоРНПТ");
	ВыгружаемыеРеквизиты.Добавить("Товары.Цена");
	ВыгружаемыеРеквизиты.Добавить("Товары.УдалитьСтавкаНДС");
	ВыгружаемыеРеквизиты.Добавить("Товары.Сумма");
	ВыгружаемыеРеквизиты.Добавить("Товары.СтавкаНДС");
	ВыгружаемыеРеквизиты.Добавить("Товары.СуммаНДС");
	ВыгружаемыеРеквизиты.Добавить("Товары.СуммаСНДС");
	ВыгружаемыеРеквизиты.Добавить("Товары.КодСтроки");
	ВыгружаемыеРеквизиты.Добавить("Товары.Порча");
	ВыгружаемыеРеквизиты.Добавить("Товары.СтатусУказанияСерий");
	ВыгружаемыеРеквизиты.Добавить("Товары.ДокументРеализации");
	ВыгружаемыеРеквизиты.Добавить("Товары.Серия");
	ВыгружаемыеРеквизиты.Добавить("Товары.АналитикаУчетаНоменклатуры");
	ВыгружаемыеРеквизиты.Добавить("Товары.НоменклатураНабора");
	ВыгружаемыеРеквизиты.Добавить("Товары.ХарактеристикаНабора");
	ВыгружаемыеРеквизиты.Добавить("Товары.АналитикаУчетаНаборов");
	ВыгружаемыеРеквизиты.Добавить("Товары.Штрихкод");
	ВыгружаемыеРеквизиты.Добавить("Товары.ИдентификаторСтроки");
	ВыгружаемыеРеквизиты.Добавить("Товары.СпособОпределенияСебестоимости");
	ВыгружаемыеРеквизиты.Добавить("Товары.Себестоимость");
	ВыгружаемыеРеквизиты.Добавить("Товары.СебестоимостьБезНДС");
	ВыгружаемыеРеквизиты.Добавить("Товары.СебестоимостьРегл");
	ВыгружаемыеРеквизиты.Добавить("Товары.СебестоимостьПР");
	ВыгружаемыеРеквизиты.Добавить("Товары.СебестоимостьВР");
	ВыгружаемыеРеквизиты.Добавить("Товары.ВидЦеныСебестоимости");
	ВыгружаемыеРеквизиты.Добавить("Товары.ДатаЗаполненияСебестоимостиПоВидуЦены");
	ВыгружаемыеРеквизиты.Добавить("Товары.Назначение");
	ВыгружаемыеРеквизиты.Добавить("Товары.НомерГТД");
			
	// Реквизиты ТЧ "Штрихкоды упаковок"
	ВыгружаемыеРеквизиты.Добавить("ШтрихкодыУпаковок.ШтрихкодУпаковки");
	ВыгружаемыеРеквизиты.Добавить("ШтрихкодыУпаковок.ЗначениеШтрихкода");
		
	Возврат ВыгружаемыеРеквизиты;
	
КонецФункции

Процедура ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты)

	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
			
	Реквизиты.Добавить(адаптер_НастройкиОбмена.ОписаниеРеквизита(
		"ЗаказКлиентаОтгрузкаИзERP",
		Новый ОписаниеТипов("Булево"),
		"ДокументРеализации.ЗаказКлиента.бг_ОтгрузкаИзERP"));

КонецПроцедуры	

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // МетаданныеОбъекта
		"ОтражатьСкладскиеДвижения",
		Новый ОписаниеТипов("Булево"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // МетаданныеОбъекта
		"ИдентификаторЕГАИС",
		ОбщегоНазначения.ОписаниеТипаСтрока(50));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"КурсВалюты",
		ОбщегоНазначения.ОписаниеТипаЧисло(10, 5));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ПунктНазначенияГрузоотправителя",
		Новый ОписаниеТипов("СправочникСсылка.битПунктыНазначения"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		,
		"ЛицензияПунктаНазначенияГрузоотправителя",
		Новый ОписаниеТипов("СправочникСсылка.ЛицензииПоставщиковАлкогольнойПродукции"));

КонецПроцедуры

Процедура ДобавитьКлючевыеРеквизиты(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
			
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"ТоварнаяКатегория",
		,
		Новый ОписаниеТипов("СправочникСсылка.ТоварныеКатегории"));
					
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"КодЕК_Номенклатуры");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"ТипНоменклатуры",
		,
		Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.УпаковкиЕдиницыИзмерения,
		"бг_КодЕК_Номенклатуры",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(8));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"ЗаказКлиента",
		,
		Новый ОписаниеТипов("ДокументСсылка.ЗаказКлиента"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		"бг_КодКлиентаSY",
		"КодSY");

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Организации,
		"бг_Тикер");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Пользователи,
		"Подразделение",
		,
		Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Организации,
		"бг_ВестиУчетАкцизовПоПриобретеннымЦенностям",
		,
		Новый ОписаниеТипов("Булево"));
		
КонецПроцедуры

Процедура ЗаполнитьПунктНазначенияИЛицензию(РеквизитыОбъекта, Объект)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ПунктНазначенияГрузоотправителя = бг_ТранспортнаяЛогистика.ПунктНазначенияГрузополучателя(Объект.бг_Грузоотправитель);
	Если ЗначениеЗаполнено(ПунктНазначенияГрузоотправителя) Тогда
		
		адаптер_РаботаСДаннымиИБ.ЗаполнитьЗначениеРеквизита(
			РеквизитыОбъекта, 
			"ПунктНазначенияГрузоотправителя_ЗначениеРеквизитаИдентификатор",
			ПунктНазначенияГрузоотправителя,
			Новый ТаблицаЗначений);
		
		ЛицензииПунктаНазначения = бг_УчетАлкоголя.ЛицензииПунктаНазначения(ПунктНазначенияГрузоотправителя, Объект.Дата);
		Если ЛицензииПунктаНазначения.Количество() = 1 Тогда
			ЛицензияПунктаНазначенияГрузоотправителя = ЛицензииПунктаНазначения[0];
			
			адаптер_РаботаСДаннымиИБ.ЗаполнитьЗначениеРеквизита(
				РеквизитыОбъекта, 
				"ЛицензияПунктаНазначенияГрузоотправителя_ЗначениеРеквизитаИдентификатор",
				ЛицензияПунктаНазначенияГрузоотправителя,
				Новый ТаблицаЗначений);
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти // Конец СлужебныеПроцедурыИФункции
