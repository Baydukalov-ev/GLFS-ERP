#Область ПрограммныйИнтерфейс

Функция ПродажаАлкогольнойПродукции(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&Номенклатура)
	|	И СправочникНоменклатура.АлкогольнаяПродукция";
	
	Запрос.УстановитьПараметр("Номенклатура", ДокументОбъект.Товары.ВыгрузитьКолонку("Номенклатура"));
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура ПроверитьПунктНазначенияИЛицензиюВДокументе(ДокументОбъект, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Грузополучатель) Тогда
		ТекстОшибки = НСтр("ru = 'Укажите грузополучателя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"Грузополучатель",
			,
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.бг_ПунктНазначения) Тогда
		ТекстОшибки = НСтр("ru = 'Укажите пункт назначения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"бг_ПунктНазначения",
			,
			Отказ);
	КонецЕсли;
	
	Если ЭтоЭкспортнаяПродажа(ДокументОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.бг_Лицензия) Тогда
		ТекстОшибки = НСтр("ru = 'Укажите лицензию в пункте назначения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"бг_Лицензия",
			,
			Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битПунктыНазначения.Ссылка КАК ПунктНазначения,
	|	битПунктыНазначения.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	бг_ЛицензииПунктовНазначения.Лицензия КАК Лицензия,
	|	ЕСТЬNULL(бг_ЛицензииПунктовНазначения.Лицензия.Владелец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> &Контрагент КАК ЛицензияНеПринадлежитКонтрагенту
	|ИЗ
	|	Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ЛицензииПунктовНазначения КАК бг_ЛицензииПунктовНазначения
	|		ПО битПунктыНазначения.Ссылка = бг_ЛицензииПунктовНазначения.ПунктНазначения
	|			И (бг_ЛицензииПунктовНазначения.Лицензия = &Лицензия)
	|ГДЕ
	|	битПунктыНазначения.Ссылка = &ПунктНазначения
	|	И битПунктыНазначения.Клиент = &Клиент";
	
	Запрос.УстановитьПараметр("Клиент", ДокументОбъект.Грузополучатель);
	Запрос.УстановитьПараметр("Контрагент", ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("Лицензия", ДокументОбъект.бг_Лицензия);
	Запрос.УстановитьПараметр("ПунктНазначения", ДокументОбъект.бг_ПунктНазначения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Выбран пункт назначения который не связан с грузополучателем'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"бг_ПунктНазначения",
			,
			Отказ);
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Лицензия) Тогда
			ТекстОшибки = НСтр("ru = 'Выбрана лицензия которая не связана с пунктом назначения'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"бг_Лицензия",
				,
				Отказ);
		ИначеЕсли ВыборкаДетальныеЗаписи.ЛицензияНеПринадлежитКонтрагенту Тогда
			ТекстОшибки = НСтр("ru = 'Выбрана лицензия которая не принадлежит контрагенту'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"бг_Лицензия",
				,
				Отказ);
		ИначеЕсли Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОрганизацияЕГАИС) Тогда
			ТекстОшибки = НСтр("ru = 'В пункте назначения не заполнена организация ЕГАИС'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"бг_ПунктНазначения");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПунктНазначенияИЛицензиюВДокументе(ДокументОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Грузополучатель) Тогда
		ДокументОбъект.бг_ПунктНазначения = Неопределено;
		ДокументОбъект.бг_Лицензия = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОбъект.бг_ПунктНазначения) Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.бг_ПунктНазначения, "Клиент") <> ДокументОбъект.Грузополучатель Тогда
			ДокументОбъект.бг_ПунктНазначения = Неопределено;
			ДокументОбъект.бг_Лицензия = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.бг_ПунктНазначения) Тогда
		ДокументОбъект.бг_ПунктНазначения = бг_ТранспортнаяЛогистика.ПунктНазначенияГрузополучателя(ДокументОбъект.Грузополучатель);
		Если Не ЗначениеЗаполнено(ДокументОбъект.бг_ПунктНазначения) Тогда
			ДокументОбъект.бг_Лицензия = Неопределено;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЛицензиюВДокументе(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьЛицензиюВДокументе(ДокументОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не (ЗначениеЗаполнено(ДокументОбъект.Контрагент)
		И ЗначениеЗаполнено(ДокументОбъект.Грузополучатель)
		И ЗначениеЗаполнено(ДокументОбъект.бг_ПунктНазначения)) Тогда
	
		ДокументОбъект.бг_Лицензия = Неопределено;
		Возврат;
	КонецЕсли;
	
	ЛицензииПунктаНазначения = Новый Массив;
	ЛицензииПунктаНазначения = бг_УчетАлкоголя.ЛицензииПунктаНазначения(ДокументОбъект.бг_ПунктНазначения, ДокументОбъект.Дата);
	
	Если ЗначениеЗаполнено(ДокументОбъект.бг_Лицензия) Тогда
		
		ЛицензияСоответствуетОтбору = Истина;
		Если ЛицензииПунктаНазначения.Найти(ДокументОбъект.бг_Лицензия) = Неопределено Тогда
			ЛицензияСоответствуетОтбору = Ложь;
		ИначеЕсли ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.бг_Лицензия, "Владелец") <> ДокументОбъект.Контрагент Тогда
			ЛицензияСоответствуетОтбору = Ложь;
		КонецЕсли;
		
		Если Не ЛицензияСоответствуетОтбору Тогда
			ДокументОбъект.бг_Лицензия = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.бг_Лицензия) И ЛицензииПунктаНазначения.Количество() = 1 Тогда
		ДокументОбъект.бг_Лицензия = ЛицензииПунктаНазначения[0];
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив, ссылок на лицензии пункта назначения
// Параметры:
//  ПунктНазначения - СправочникСсылка.битПунктыНазначения;
//  ДатаЗапроса - Дата - дата для отбора лицензий по дате прекращения действия
//  ТолькоДействующие - Булево - Если Истина - в результат попадут только действующие лицензии
// 
// Возвращаемое значение:
//  Массив - лицензии привязанные к пункту назначения
//
Функция ЛицензииПунктаНазначения(ПунктНазначения, ДатаЗапроса = Неопределено, ТолькоДействующие = Истина) Экспорт
	
	Возврат РегистрыСведений.бг_ЛицензииПунктовНазначения.ЛицензииПунктаНазначения(
		ПунктНазначения,
		ДатаЗапроса,
		ТолькоДействующие);
	
КонецФункции

// Возвращает ссылку на действующую лицензию пункта назначения на дату запроса
// Параметры:
//	ПунктНазначения - СправочникСсылка.битПунктыНазначения;
//	ДатаЗапроса - Дата;
//
Функция ТекущаяЛицензияПунктаНазначения(ПунктНазначения, ДатаЗапроса = Неопределено) Экспорт
	
	Возврат РегистрыСведений.бг_ЛицензииПунктовНазначения.ТекущаяЛицензияПунктаНазначения(ПунктНазначения, ДатаЗапроса);
	
КонецФункции

// Возвращает признак того, что документ относится к продаже на экспорт
//
// Параметры:
//  Объект - ДокументОбъект.ЗаказКлиента
//         - ДокументОбъект.РеализацияТоваровУслуг
// 
// Возвращаемое значение:
//   Булево
//
Функция ЭтоЭкспортнаяПродажа(ДокументОбъект) Экспорт
	
	ТипыНалогообложения = Перечисления.ТипыНалогообложенияНДС.бг_ТипыНалогообложенияЭкспорта();
	Возврат ТипыНалогообложения.Найти(ДокументОбъект.НалогообложениеНДС) <> Неопределено;
	
КонецФункции

// Возвращает менеджера пункта назначения на указанную дату
//
// Параметры:
//  ПунктНазначения - СправочникСсылка.битПунктыНазначения
//  ДатаСреза - Дата, не обязательный, по умолчанию текущая дата сеанса
// 
// Возвращаемое значение:
//  Менеджер - СправочникСсылка.ФизическиеЛица
//
Функция МенеджерПунктаНазначения(ПунктНазначения, ДатаСреза = Неопределено) Экспорт
	
	Возврат РегистрыСведений.бг_МенеджерыПунктовНазначения.МенеджерПунктаНазначения(ПунктНазначения, ДатаСреза);
	
КонецФункции

#КонецОбласти
