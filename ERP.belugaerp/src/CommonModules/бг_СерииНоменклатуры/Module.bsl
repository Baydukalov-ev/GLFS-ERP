
#Область ПрограммныйИнтерфейс

#Область ФСМ

Функция РеквизитыФСМ() Экспорт
	
	РеквизитыФСМ = Новый Массив;
	
	Реквизиты = Метаданные.Справочники.СерииНоменклатуры.Реквизиты;
	
	РеквизитыФСМ.Добавить(Реквизиты.бг_СерияМарки);
	РеквизитыФСМ.Добавить(Реквизиты.бг_НомерРулона);
	РеквизитыФСМ.Добавить(Реквизиты.бг_НомерДиапазонаВРулоне);
	РеквизитыФСМ.Добавить(Реквизиты.бг_НачальныйНомерДиапазона);
	РеквизитыФСМ.Добавить(Реквизиты.бг_КонечныйНомерДиапазона);

	РеквизитыФСМ.Добавить(Реквизиты.бг_ЗаявлениеОВыдачеФСМ);
	РеквизитыФСМ.Добавить(Реквизиты.бг_НакладнаяНаВыдачуФСМ);
	
	Возврат РеквизитыФСМ;
	
КонецФункции

Процедура ДобавитьРеквизитыФСМ(Форма, Путь = "") Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив();
	
	СуществующиеРеквизиты = ОбщегоНазначения.ВыгрузитьКолонку(Форма.ПолучитьРеквизиты(Путь), "Имя");
	
	Для Каждого РеквизитФСМ Из РеквизитыФСМ() Цикл
		Если СуществующиеРеквизиты.Найти(РеквизитФСМ.Имя) = Неопределено Тогда
			ДобавляемыеРеквизиты.Добавить(
				Новый РеквизитФормы(
					РеквизитФСМ.Имя,
					РеквизитФСМ.Тип,
					Путь,
					РеквизитФСМ.Синоним));
		КонецЕсли;			
	КонецЦикла;	
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

Процедура ДобавитьПоляФСМ(Форма, Родитель = Неопределено, ИсточникДанных = Неопределено) Экспорт
	
	ПутьКДанным = ?(ЗначениеЗаполнено(ИсточникДанных), ИсточникДанных + ".", "");
	
	Если Форма.Элементы.Найти("ГруппаФСМ") <> Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ГруппаФСМ = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		Форма, 
		"ГруппаФСМ", 
		Родитель);
	ГруппаФСМ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаФСМ.ОтображатьЗаголовок = Истина;
	ГруппаФСМ.Заголовок = НСтр("ru = 'ФСМ'");

	Для Каждого РеквизитФСМ Из РеквизитыФСМ() Цикл
		бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			Форма, 
			РеквизитФСМ.Имя, 
			ГруппаФСМ, 
			ПутьКДанным + РеквизитФСМ.Имя);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДобавитьКолонкиФСМ(Форма, Таблица) Экспорт
	
	Для Каждого РеквизитФСМ Из РеквизитыФСМ() Цикл
		ИмяЭлемента = Таблица.Имя + РеквизитФСМ.Имя;
		Если Форма.Элементы.Найти(ИмяЭлемента) = Неопределено Тогда 
			бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
				Форма, 
				ИмяЭлемента, 
				Таблица,
				СтрШаблон("%1.%2", Таблица.ПутьКДанным, РеквизитФСМ.Имя));
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область ГенерацияСерийВТТН

Процедура ДозаполнитьПараметрыГенерацииСерийАлкогольнойПродукции(ПараметрыЗаполнения, Контекст) Экспорт

	Если ТипЗнч(Контекст.Объект.Ссылка) <> Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения.Вставить("бг_Производитель", Контекст.Объект.Грузоотправитель);
	ПараметрыЗаполнения.Вставить("бг_ОрганизацияВладелец", Документы.ТТНВходящаяЕГАИС.ОрганизацияВладелец(
		Контекст.Объект));
	ПараметрыЗаполнения.Вставить("бг_ОрганизацияЕГАИСВладелец", Контекст.Объект.Грузополучатель);
	ПараметрыЗаполнения.Вставить("бг_ДокументГенераторСерии", Контекст.Объект.Ссылка);

	Если ТипЗнч(Контекст.Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ПараметрыЗаполнения.Вставить("бг_ДокументВыпуска", Контекст.Объект.ДокументОснование);	
	КонецЕсли;
	
	Если Контекст.Объект.ВидОперации = Перечисления.ВидыОперацийТТНВходящейЕГАИС.ВозвратОтПокупателя Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Товары", Контекст.Объект.Товары.Выгрузить());
		Запрос.УстановитьПараметр("ИсторияСправок2", Контекст.Объект.ИсторияСправок2.Выгрузить());
		Запрос.УстановитьПараметр("Грузоотправитель", Контекст.Объект.Грузоотправитель);
		Запрос.УстановитьПараметр("Грузополучатель", Контекст.Объект.Грузополучатель);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСправок2.ГрузоотправительКод КАК ГрузоотправительКод,
		|	ИсторияСправок2.ГрузополучательКод КАК ГрузополучательКод,
		|	ИсторияСправок2.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ИсторияСправок2.НомерТТН КАК НомерТТН
		|ПОМЕСТИТЬ ИсторияСправок2
		|ИЗ
		|	&ИсторияСправок2 КАК ИсторияСправок2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСправок2.ГрузоотправительКод КАК ГрузоотправительКод,
		|	ИсторияСправок2.ГрузополучательКод КАК ГрузополучательКод,
		|	ИсторияСправок2.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ИсторияСправок2.НомерТТН КАК НомерТТН
		|ПОМЕСТИТЬ Справки2ПриРеализации
		|ИЗ
		|	ИсторияСправок2 КАК ИсторияСправок2
		|ГДЕ
		|	ИсторияСправок2.ГрузоотправительКод = ВЫРАЗИТЬ(&Грузополучатель КАК Справочник.КлассификаторОрганизацийЕГАИС).Код
		|	И ИсторияСправок2.ГрузополучательКод = ВЫРАЗИТЬ(&Грузоотправитель КАК Справочник.КлассификаторОрганизацийЕГАИС).Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Справки2ПриРеализации.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	Справки2ПриРеализации.НомерТТН КАК НомерТТН,
		|	ТТНИсходящаяЕГАИСТовары.Серия КАК Серия,
		|	ТТНИсходящаяЕГАИСТовары.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ТТНИсходящаяЕГАИСТовары.Ссылка.ИдентификаторЕГАИС КАК ИдентификаторЕГАИС
		|ИЗ
		|	Справки2ПриРеализации КАК Справки2ПриРеализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
		|		ПО Справки2ПриРеализации.НомерТТН = ТТНИсходящаяЕГАИСТовары.Ссылка.ИдентификаторЕГАИС";
		
		ПараметрыЗаполнения.Вставить("бг_Справки2ПриРеализации", Запрос.Выполнить().Выгрузить());
	КонецЕсли;

КонецПроцедуры

Процедура ИзменитьЗапросАлкогольнойПродукцииГенерацияСерий(Запрос, ПараметрыЗаполнения) Экспорт

	// ERP заполняет производителя при формировании серии из "КлассификаторАлкогольнойПродукцииЕГАИС",
	// необходимо подменить на переданного производителя для алкогольной продукции с видом лицензии "спирт".
	Если Не (ТипЗнч(ПараметрыЗаполнения) = Тип("Структура")
		И ПараметрыЗаполнения.Свойство("бг_Производитель")) Тогда
		
		Возврат;
	КонецЕсли;

	СтрокаПоиска = "КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,";
	
	СтрокаЗамены =
	"ВЫБОР
	|	КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Спирт)
	|        ИЛИ КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяПищеваяПродукция)
	|		ТОГДА &бг_Производитель
	|	ИНАЧЕ КлассификаторАлкогольнойПродукцииЕГАИС.Производитель
	|КОНЕЦ КАК Производитель,";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, СтрокаПоиска, СтрокаЗамены);
	
	Запрос.УстановитьПараметр("бг_Производитель", ПараметрыЗаполнения.бг_Производитель);
	 
	Если ПараметрыЗаполнения.Свойство("ПараметрыУказанияСерий") 
		И ПараметрыЗаполнения.ПараметрыУказанияСерий.Свойство("ПолноеИмяОбъекта")
		И ПараметрыЗаполнения.ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС" Тогда
		
		СтрокаПоиска = "ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ИСТИНА";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, СтрокаПоиска, "ИСТИНА");	
		СтрокаПоиска = "ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ЛОЖЬ";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, СтрокаПоиска, "ЛОЖЬ");		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДозаполнитьРеквизитыСерииПриГенерацииЕГАИС(СерияОбъект, Товары, ПараметрыЗаполнения) Экспорт
	
	ПараметрыЗаполнения.Свойство("бг_ОрганизацияВладелец", СерияОбъект.бг_ОрганизацияВладелец);
	ПараметрыЗаполнения.Свойство("бг_ОрганизацияЕГАИСВладелец", СерияОбъект.бг_ОрганизацияЕГАИСВладелец); 
	ПараметрыЗаполнения.Свойство("бг_ДокументВыпуска", СерияОбъект.бг_ДокументВыпуска);
	
	ПараметрыПоиска = Новый Структура("Справка2", СерияОбъект.Справка2ЕГАИС);
	НайденныеСтроки = Товары.НайтиСтроки(ПараметрыПоиска);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		СерияОбъект.бг_Номенклатура = НайденныеСтроки[0].Номенклатура;
		
		Если ЭтоСерияСпирта(СерияОбъект) Тогда
			СерияОбъект.бг_ИдентификаторСтрокиТТН = НайденныеСтроки[0].ИдентификаторСтроки;
			СерияОбъект.бг_ФактическаяКрепость    = НайденныеСтроки[0].бг_ФактическаяКрепость;
		Иначе
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НайденныеСтроки[0], "бг_УпаковкаПаллета") Тогда
				СерияОбъект.бг_УпаковкаПаллета = НайденныеСтроки[0].бг_УпаковкаПаллета;
			КонецЕсли;
		КонецЕсли;
 
		Если ПараметрыЗаполнения.Свойство("ПараметрыУказанияСерий") 
			И ПараметрыЗаполнения.ПараметрыУказанияСерий.Свойство("ПолноеИмяОбъекта")
			И ПараметрыЗаполнения.ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС" Тогда
			
			УстановитьНовыйНомерСерии(СерияОбъект);
		КонецЕсли;		
		
		// При возврате от покупателя заполнить СериюРеализации и ДатуРеализации
		Если ПараметрыЗаполнения.ПараметрыУказанияСерий.СкладскиеОперации.Найти(
				Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента) <> Неопределено
			И ПараметрыЗаполнения.Свойство("бг_Справки2ПриРеализации") Тогда
			
			СтрокаСправки2ПриРеализации = ПараметрыЗаполнения.бг_Справки2ПриРеализации.Найти(
				НайденныеСтроки[0].ИдентификаторСтроки, "ИдентификаторСтроки");
				
			Если СтрокаСправки2ПриРеализации <> Неопределено
				И ЗначениеЗаполнено(СтрокаСправки2ПриРеализации.Серия) Тогда
				
				СерияОбъект.бг_СерияРеализации = СтрокаСправки2ПриРеализации.Серия;
				СерияОбъект.бг_ДатаРеализации = СтрокаСправки2ПриРеализации.ДатаОтгрузки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("бг_ДокументГенераторСерии") Тогда
		СерияОбъект.бг_ДокументГенераторСерии = ПараметрыЗаполнения.бг_ДокументГенераторСерии;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Создает новую серию, заполняет переданными данными заполнения
//
// Параметры:
//	Владелец - СправочникСсылка.ВидыНоменклатуры - Владелец серии
//	ЗначенияПолей - Структура - Данные для заполнения значений реквизитов серии
//
// Возвращаемое значение:
//	СправочникСсылка.СерииНоменклатуры
//
Функция СоздатьСерию(Владелец, ЗначенияПолей) Экспорт
	НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
	
	ДанныеЗаполнения = Новый Структура("ВидНоменклатуры", Владелец);
	НоваяСерия.Заполнить(ДанныеЗаполнения);
	
	ЗаполнитьЗначенияСвойств(НоваяСерия, ЗначенияПолей);
	
	УстановитьНовыйНомерСерии(НоваяСерия);
	НоваяСерия.Записать();
	
	Возврат НоваяСерия.Ссылка;	
КонецФункции

// Устанавливает новый номер по порядку для серии.
// Параметры:
//  СерияОбъект - СправочникОбъект.СерииНоменклатуры.
// 
Процедура УстановитьНовыйНомерСерии(СерияОбъект) Экспорт
	
	МаксимальныйНомерСерии = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(СерияОбъект.ВидНоменклатуры);	
	СерияОбъект.Номер = Формат(МаксимальныйНомерСерии + 1, "ЧЦ=8; ЧВН=; ЧГ=");

КонецПроцедуры

Функция ЭтоСерияСпирта(СерияОбъект) Экспорт
	
	ВидЛицензииАлкогольнойПродукцииСправки2 = Справочники.Справки2ЕГАИС.бг_ВидЛицензииАлкогольнойПродукцииСправки2(СерияОбъект.Справка2ЕГАИС);
	
	Возврат ВидЛицензииАлкогольнойПродукцииСправки2 = Перечисления.ВидыЛицензийАлкогольнойПродукции.Спирт
		Или ВидЛицензииАлкогольнойПродукцииСправки2 = Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяПищеваяПродукция;
	
КонецФункции

Процедура АктуализироватьНоменклатуруВСерияхТаблицы(Товары) Экспорт
	
	КлючевыеПоля = "Номенклатура, Серия";
	
	СерииНоменклатуры = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
		Товары,
		, // Строки
		КлючевыеПоля);
		
	СерииНоменклатуры.Свернуть(КлючевыеПоля);	
	
	СерииСНевернойНоменклатурой = СерииСНевернойНоменклатурой(СерииНоменклатуры);
	
	Для каждого ДанныеСерииСНевернойНоменклатурой Из СерииСНевернойНоменклатурой Цикл
		
		АктуализироватьНоменклатуруВСерии(
			ДанныеСерииСНевернойНоменклатурой.Серия,
			ДанныеСерииСНевернойНоменклатурой.Номенклатура);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура АктуализироватьНоменклатуруВСерии(Серия, Номенклатура) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	СерияОбъект = Серия.ПолучитьОбъект();
	
	Если СерияОбъект.бг_Номенклатура = Номенклатура Тогда
		Возврат;
	КонецЕсли;
	
	СерияОбъект.бг_Номенклатура = Номенклатура;
	
	СерияОбъект.ОбменДанными.Загрузка = Истина;
	СерияОбъект.Записать();
	
КонецПроцедуры

Процедура ПерезаполнитьРеквизитыСерийГотовойПродукции(ЭтапПроизводстваОбъект) Экспорт
	Для Каждого СтрокаВыходноеИзделие Из ЭтапПроизводстваОбъект.ВыходныеИзделия Цикл
		Если Не ЗначениеЗаполнено(СтрокаВыходноеИзделие.Серия) Тогда
			Продолжить;
		КонецЕсли;
		
		Серия = бг_Номенклатура.СерияВыпущеннойПродукции(
											ЭтапПроизводстваОбъект.Ссылка,
											СтрокаВыходноеИзделие.СтатусУказанияСерий,
											СтрокаВыходноеИзделие.Номенклатура,
											СтрокаВыходноеИзделие.ДатаПроизводства,
											ЭтапПроизводстваОбъект.бг_СтранаНазначения);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДокументВыпускаВСерияхТаблицы(Товары, ДокументВыпуска) Экспорт

	Серии = Товары.ВыгрузитьКолонку("Серия");
	СерииБезДокументаВыпуска = СерииБезДокументаВыпуска(Серии, ДокументВыпуска);
	
	Для Каждого Серия Из СерииБезДокументаВыпуска Цикл 
		ЗаполнитьДокументВыпускаВСерии(Серия, ДокументВыпуска);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСертификатыНоменклатуры(Товары) Экспорт 

	СертификатыКЗаписи = ТребуемыеКЗаписиСертификатыНоменклатуры(Товары);
	
	Для Каждого СтрокаСертификат Из СертификатыКЗаписи Цикл 		
		Если СтрокаСертификат.ТребуетсяИзменитьСертификатВСерии 
			И ЗначениеЗаполнено(СтрокаСертификат.Серия) И ЗначениеЗаполнено(СтрокаСертификат.Сертификат) Тогда
			
			ЗаписатьСертификатНоменклатурыВСерии(СтрокаСертификат.Серия, СтрокаСертификат.Сертификат);
		КонецЕсли;
		
		Если СтрокаСертификат.ТребуетсяЗаписатьСериюВСертификате 
			И ЗначениеЗаполнено(СтрокаСертификат.Серия) И ЗначениеЗаполнено(СтрокаСертификат.Сертификат) Тогда
			
			ЗаписатьСериюВСертификатНоменклатуры(СтрокаСертификат.Сертификат, СтрокаСертификат.Номенклатура, 
				СтрокаСертификат.ВидНоменклатуры, СтрокаСертификат.Серия);	
		КонецЕсли;
			
		Если СтрокаСертификат.ТребуетсяОчисткаПустойСерииВСертификате И ЗначениеЗаполнено(СтрокаСертификат.Сертификат) Тогда
			ОчиститьСертификатНоменклатурыСПустойСерией(СтрокаСертификат.Сертификат, 
				СтрокаСертификат.Номенклатура, СтрокаСертификат.ВидНоменклатуры);	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает условное оформление даты произоводства в табличной части документа.
//
// Параметры:
// 		Форма - ФормаКлиентскогоПриложения.
// 		ИмяЭлемента - Строка - Имя элемента формы даты производства.
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту, определяющему необходимость вести дату производства для товара.
//
Процедура УстановитьУсловноеОформлениеДатыПроизводстваСерии(Форма, ИмяЭлемента, ПутьКПолюОтбора) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	// Текст "Не используется" и только просмотр для строк товаров, в которых
	// в виде номенклатуры не задано использование даты производства для серии.
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеФормы    = ЭлементыФормы[ИмяЭлемента];
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеФормы.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Не используется>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СерииСНевернойНоменклатурой(СерииНоменклатуры)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Серия КАК Серия,
	|	СерииНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_СерииНоменклатуры
	|ИЗ
	|	&СерииНоменклатуры КАК СерииНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СерииНоменклатуры.Серия КАК Серия,
	|	ВТ_СерииНоменклатуры.Номенклатура КАК Номенклатура
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СерииНоменклатуры КАК ВТ_СерииНоменклатуры
	|		ПО (ВТ_СерииНоменклатуры.Серия = СерииНоменклатуры.Ссылка)
	|ГДЕ
	|	СерииНоменклатуры.бг_Номенклатура <> ВТ_СерииНоменклатуры.Номенклатура
	|	И ВТ_СерииНоменклатуры.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("СерииНоменклатуры", СерииНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции

Функция СерииБезДокументаВыпуска(Серии, ДокументВыпуска) 
	
	ВидНоменклатурыАлкогольнаяПродукция = бг_КонстантыПовтИсп.ЗначениеКонстанты("ВидНоменклатурыАлкогольнаяПродукция");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	СерииНоменклатуры.бг_ДокументВыпуска КАК ДокументВыпуска
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Ссылка В(&Серии)
		|	И СерииНоменклатуры.бг_ДокументВыпуска <> &ДокументВыпуска
		|	И СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатурыАлкогольнаяПродукция";	
	Запрос.УстановитьПараметр("Серии", Серии);
	Запрос.УстановитьПараметр("ДокументВыпуска", ДокументВыпуска);
	Запрос.УстановитьПараметр("ВидНоменклатурыАлкогольнаяПродукция", ВидНоменклатурыАлкогольнаяПродукция);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Серия");
	
КонецФункции

Процедура ЗаполнитьДокументВыпускаВСерии(Серия, ДокументВыпуска)

	СерияОбъект = Серия.ПолучитьОбъект();
	СерияОбъект.бг_ДокументВыпуска = ДокументВыпуска;
	СерияОбъект.Записать();

КонецПроцедуры

#Область СертификатыНоменклатуры

Функция ТребуемыеКЗаписиСертификатыНоменклатуры(Товары) 
		
	СерииСертификатыТоваров = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
		Товары,
		, // Строки
		"Номенклатура, Серия, бг_Сертификат");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Серия КАК Серия,
		|	Таблица.бг_Сертификат КАК Сертификат
		|ПОМЕСТИТЬ втТаблицаСерииСертификаты
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаСерииСертификаты.Номенклатура КАК Номенклатура,
		|	НоменклатураСправочник.ВидНоменклатуры КАК ВидНоменклатуры,
		|	втТаблицаСерииСертификаты.Сертификат КАК Сертификат,
		|	втТаблицаСерииСертификаты.Серия КАК Серия,
		|	СерииНоменклатуры.бг_Сертификат ЕСТЬ NULL КАК ТребуетсяИзменитьСертификатВСерии,
		|	ОбластиДействияСертификатовНоменклатуры.Серия ЕСТЬ NULL КАК ТребуетсяЗаписатьСериюВСертификате,
		|	НЕ ОбластиДействияСертификатовНоменклатурыПустаяСерия.Серия ЕСТЬ NULL КАК ТребуетсяОчисткаПустойСерииВСертификате
		|ИЗ
		|	втТаблицаСерииСертификаты КАК втТаблицаСерииСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ПО втТаблицаСерииСертификаты.Серия = СерииНоменклатуры.Ссылка
		|			И втТаблицаСерииСертификаты.Сертификат = СерииНоменклатуры.бг_Сертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
		|		ПО втТаблицаСерииСертификаты.Номенклатура = ОбластиДействияСертификатовНоменклатуры.Номенклатура
		|			И втТаблицаСерииСертификаты.Сертификат = ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры
		|			И втТаблицаСерииСертификаты.Серия = ОбластиДействияСертификатовНоменклатуры.Серия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		|		ПО втТаблицаСерииСертификаты.Номенклатура = НоменклатураСправочник.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатурыПустаяСерия
		|		ПО втТаблицаСерииСертификаты.Номенклатура = ОбластиДействияСертификатовНоменклатурыПустаяСерия.Номенклатура
		|			И втТаблицаСерииСертификаты.Сертификат = ОбластиДействияСертификатовНоменклатурыПустаяСерия.СертификатНоменклатуры
		|			И (ОбластиДействияСертификатовНоменклатурыПустаяСерия.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|ГДЕ
		|	(СерииНоменклатуры.бг_Сертификат ЕСТЬ NULL
		|			ИЛИ ОбластиДействияСертификатовНоменклатуры.Серия ЕСТЬ NULL)";	
	Запрос.УстановитьПараметр("Таблица", СерииСертификатыТоваров);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаписатьСертификатНоменклатурыВСерии(Серия, Сертификат)

	СерияОбъект = Серия.ПолучитьОбъект();
	СерияОбъект.бг_Сертификат = Сертификат;
	СерияОбъект.Записать();	

КонецПроцедуры

Процедура ЗаписатьСериюВСертификатНоменклатуры(Сертификат, Номенклатура, ВидНоменклатуры, Серия)

	Набор = РегистрыСведений.ОбластиДействияСертификатовНоменклатуры.СоздатьНаборЗаписей();
	Набор.Отбор.ВидНоменклатуры.Установить(ВидНоменклатуры);
	Набор.Отбор.Номенклатура.Установить(Номенклатура);
	Набор.Отбор.СертификатНоменклатуры.Установить(Сертификат);
	Набор.Отбор.Серия.Установить(Серия);
	
	Запись = Набор.Добавить();
	Запись.ВидНоменклатуры = ВидНоменклатуры;
	Запись.Номенклатура = Номенклатура;
	Запись.СертификатНоменклатуры = Сертификат;
	Запись.Серия = Серия;
	
	Набор.Записать();
	
КонецПроцедуры

Процедура ОчиститьСертификатНоменклатурыСПустойСерией(Сертификат, Номенклатура, ВидНоменклатуры)
	
	Набор = РегистрыСведений.ОбластиДействияСертификатовНоменклатуры.СоздатьНаборЗаписей();
	Набор.Отбор.ВидНоменклатуры.Установить(ВидНоменклатуры);
	Набор.Отбор.Номенклатура.Установить(Номенклатура);
	Набор.Отбор.СертификатНоменклатуры.Установить(Сертификат);
	Набор.Отбор.Серия.Установить(Справочники.СерииНоменклатуры.ПустаяСсылка());
		
	Набор.Записать();

КонецПроцедуры

Функция СерииДляЗаполненияУпаковкиПаллеты(Товары)
	
	УпаковкиПаллетыСерии = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
		Товары,
		, // Строки
		"Серия, бг_УпаковкаПаллета");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.Серия КАК Серия,
	|	Таблица.бг_УпаковкаПаллета КАК бг_УпаковкаПаллета
	|ПОМЕСТИТЬ втТаблицаУпаковкиПаллетыСерии
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТаблицаУпаковкиПаллетыСерии.Серия КАК Серия,
	|	втТаблицаУпаковкиПаллетыСерии.бг_УпаковкаПаллета КАК бг_УпаковкаПаллета
	|ИЗ
	|	втТаблицаУпаковкиПаллетыСерии КАК втТаблицаУпаковкиПаллетыСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО втТаблицаУпаковкиПаллетыСерии.Серия = СерииНоменклатуры.Ссылка
	|ГДЕ
	|	втТаблицаУпаковкиПаллетыСерии.бг_УпаковкаПаллета <> СерииНоменклатуры.бг_УпаковкаПаллета
	|	И втТаблицаУпаковкиПаллетыСерии.бг_УпаковкаПаллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)";
	Запрос.УстановитьПараметр("Таблица", УпаковкиПаллетыСерии);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьУпаковкуПаллетыВСерии(Серия, УпаковкаПаллета)

	СерияОбъект = Серия.ПолучитьОбъект();
	СерияОбъект.бг_УпаковкаПаллета = УпаковкаПаллета;
	СерияОбъект.Записать();

КонецПроцедуры

#КонецОбласти

#КонецОбласти
