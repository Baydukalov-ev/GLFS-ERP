#Область ПрограммныйИнтерфейс

#Область Паллетизация

// Возвращает структуру базовых единиц измерения, которые относятся к паллетизации.
//
// Возвращаемое значение:
//  Структура:
//   ЕдиницыПервогоУровня - СписокЗначений.
//   ЕдиницаКоробки - СправочникСсылка.УпаковкиЕдиницыИзмерения.
//   ЕдиницаПаллеты - СправочникСсылка.УпаковкиЕдиницыИзмерения.
//
Функция ДанныеБазовыхЕдиницИзмеренияПаллетизации() Экспорт
	
	ДанныеЕдиницИзмеренияПаллетизации = Новый Структура;
	ДанныеЕдиницИзмеренияПаллетизации.Вставить("ЕдиницыПервогоУровня", Новый СписокЗначений);
	ДанныеЕдиницИзмеренияПаллетизации.Вставить("ЕдиницаКоробки", Неопределено);
	ДанныеЕдиницИзмеренияПаллетизации.Вставить("ЕдиницаПаллеты", Неопределено);
	
	БазовыеЕдиницыИзмеренияПаллетизации = БазовыеЕдиницыИзмеренияПаллетизации();
	
	Для каждого ДанныеБазовойЕдиницы Из БазовыеЕдиницыИзмеренияПаллетизации Цикл
		
		Если ДанныеБазовойЕдиницы.ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Бутылка Тогда
			ДанныеЕдиницИзмеренияПаллетизации.ЕдиницыПервогоУровня.Добавить(ДанныеБазовойЕдиницы.Упаковка);
		ИначеЕсли ДанныеБазовойЕдиницы.ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Коробка Тогда
			ДанныеЕдиницИзмеренияПаллетизации.ЕдиницаКоробки = ДанныеБазовойЕдиницы.Упаковка;
		ИначеЕсли ДанныеБазовойЕдиницы.ТипЕдиницыИзмерения = Перечисления.бг_ТипыЕдиницИзмерения.Паллета Тогда
			ДанныеЕдиницИзмеренияПаллетизации.ЕдиницаПаллеты = ДанныеБазовойЕдиницы.Упаковка;
		Иначе
			// NOP
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеЕдиницИзмеренияПаллетизации;

КонецФункции

// Возвращает список базовых единиц измерения, которые относятся к паллетизации.
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//   Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения.
//   ТипЕдиницыИзмерения - ПеречисленияСсылка.бг_ТипЕдиницыИзмерения.
//
Функция БазовыеЕдиницыИзмеренияПаллетизации() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Упаковка,
	|	УпаковкиЕдиницыИзмерения.бг_ТипЕдиницыИзмерения КАК ТипЕдиницыИзмерения
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &БазовыеЕдиницыИзмерения
	|	И НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("БазовыеЕдиницыИзмерения", Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Возвращает тип единицы измерения упаковки.
//
// Возвращаемое значение:
//   ПеречисленияСсылка.бг_ТипЕдиницыИзмерения.
//
Функция ТипЕдиницыИзмеренияУпаковки(Упаковка) Экспорт
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Упаковка, "ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает типы единиц измерения упаковок.
//
// Параметры:
//  СписокУпаковок - Массив
//
// Возвращаемое значение:
//  Соответствие
//
Функция ТипыЕдиницИзмеренияУпаковок(СписокУпаковок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Упаковка,
	|	УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения КАК ТипЕдиницыИзмерения
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Ссылка В(&СписокУпаковок)";
	
	Запрос.УстановитьПараметр("СписокУпаковок", СписокУпаковок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТипыЕдиницИзмеренияУпаковок = Новый Соответствие;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТипыЕдиницИзмеренияУпаковок.Вставить(Выборка.Упаковка, Выборка.ТипЕдиницыИзмерения);
	КонецЦикла;
	
	Возврат ТипыЕдиницИзмеренияУпаковок;
	
КонецФункции

// Возвращает таблицу с описанием всех реквизитов паллетизации
// которые добавляются динамически в табличную часть на форме документа
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//   Имя - Строка(100) - имя добавляемого реквизита
//   Тип - ОписаниеТипов - описание типа добавляемого реквизита
//
Функция ВсеРеквизитыПаллетизации() Экспорт
	
	РеквизитыПаллетизацииТоваров = РеквизитыПаллетизацииТоваров();
	РасчетныеРеквизитыПаллетизацииТоваров = РасчетныеРеквизитыПаллетизацииТоваров();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
		РасчетныеРеквизитыПаллетизацииТоваров, РеквизитыПаллетизацииТоваров);
	
	Возврат РеквизитыПаллетизацииТоваров;
	
КонецФункции

#Область РаботаСДокументами_Заполнение

// Заполняет служебные реквизиты формы, необходимые для минимизации серверных вызовов
// в процессе работы паллетизации на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ЗаполнитьСлужебныеЕдиницыУпаковокПаллетизации(Форма) Экспорт
	
	Форма.бг_ТипЕдиницыИзмеренияБутылка = Перечисления.бг_ТипыЕдиницИзмерения.Бутылка;
	Форма.бг_ТипЕдиницыИзмеренияКоробка = Перечисления.бг_ТипыЕдиницИзмерения.Коробка;
	Форма.бг_ТипЕдиницыИзмеренияПаллета = Перечисления.бг_ТипыЕдиницИзмерения.Паллета;
	
КонецПроцедуры

// Добавляет реквизиты формы, необходимые для работы паллетизации на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ДобавитьРеквизитыПаллетизацииНаФормуДокумента(Форма) Экспорт

	РеквизитыКДобавлению = Новый Массив;
	
	ДобавитьСлужебныеРеквизитыПаллетизацииНаФормуДокумента(Форма, РеквизитыКДобавлению);
	ДобавитьРеквизитыПаллетизацииТоваровНаФормуДокумента(Форма, РеквизитыКДобавлению);
	ДобавитьРасчетныеРеквизитыПаллетизацииТоваровНаФормуДокумента(Форма, РеквизитыКДобавлению);
	
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьРеквизитыНаФорму(Форма, РеквизитыКДобавлению);
	
КонецПроцедуры

// Добавляет элементы формы, необходимые для работы паллетизации на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ДобавитьЭлементыПаллетизацииНаФормуДокумента(Форма, ЭлементТоварыПодвал) Экспорт
	
	ДобавитьБазовыеЭлементыПаллетизацииНаФормуДокумента(Форма);
	ДобавитьРасчетныеЭлементыПаллетизацииНаФормуДокумента(Форма);
	
	ДобавитьПоказателиЭлементыПаллетизацииНаФормуДокумента(Форма, ЭлементТоварыПодвал);
	
КонецПроцедуры

// Устанавливает отображение элементов формы, необходимое для работы паллетизации на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура УстановитьВидимостьДоступностьЭлементовПаллетизации(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	ОтображатьПаллетизацию = бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОтображатьПаллетизацию(Форма);
	
	Элементы.бг_ТоварыУпаковкаПаллета.Видимость = ОтображатьПаллетизацию;
	Элементы.бг_ТоварыКоличествоКоробок.Видимость = ОтображатьПаллетизацию;
	Элементы.бг_ТоварыКоличествоПаллет.Видимость = ОтображатьПаллетизацию;
	Элементы.ТоварыУпаковкаЕдиницаИзмерения.Видимость = Не ОтображатьПаллетизацию;

КонецПроцедуры

// Устанавливает условное оформление формы, необходимое для работы паллетизации на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура УстановитьУсловноеОформлениеПаллетизации(Форма) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	// Только просмотр для количества коробок, если выбрана паллета в качестве упаковки.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.бг_ТоварыКоличествоКоробок.Имя);
	
	ГруппаОтбораИли = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));;
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.бг_ТипЕдиницыИзмерения");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.бг_ТипыЕдиницИзмерения.Паллета;
	
	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.бг_УпаковкаПаллета");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Только просмотр для количества паллет, если выбрана коробка в качестве упаковки.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.бг_ТоварыКоличествоПаллет.Имя);
	
	ГруппаОтбораИли = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.бг_ТипЕдиницыИзмерения");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.бг_ТипыЕдиницИзмерения.Коробка;
	
	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.бг_УпаковкаПаллета");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбораИли.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

// Заполняет служебные реквизиты таблицы товаров, необходимые для расчета паллетизации.
// Промежуточный адаптер к вызову метода ЗаполнитьДанныеПаллетизацииТоваровОбщая().
//
// Параметры:
//  ТаблицаТовары - ТаблицаЗначений.
//
Процедура ЗаполнитьДанныеПаллетизацииТаблицыТоваров(Товары) Экспорт
	
	КонтекстЗаполнения = Новый Структура;
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияБутылка", Перечисления.бг_ТипыЕдиницИзмерения.Бутылка);
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияКоробка", Перечисления.бг_ТипыЕдиницИзмерения.Коробка);
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияПаллета", Перечисления.бг_ТипыЕдиницИзмерения.Паллета);
	
	ЗаполнитьДанныеПаллетизацииТоваровОбщая(Товары, КонтекстЗаполнения);
	
КонецПроцедуры

// Заполняет служебные реквизиты товаров документа, необходимые для работы паллетизации на форме документа.
// Промежуточный адаптер к вызову метода ЗаполнитьДанныеПаллетизацииТоваровОбщая().
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  ИдентификаторСтрокиТовары - Число - если передан, то заполнение производится только в одной строке товаров.
//
Процедура ЗаполнитьДанныеПаллетизацииТоваровИзФормы(Форма, ИдентификаторСтрокиТовары = Неопределено) Экспорт
	
	СтрокиТоваровКЗаполнениюПаллетизации = Новый Массив;
	
	Если ИдентификаторСтрокиТовары <> Неопределено Тогда
		
		СтрокаТоварыКЗаполнению = Форма.Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтрокиТовары);
		
		СтрокиТоваровКЗаполнениюПаллетизации.Добавить(СтрокаТоварыКЗаполнению);
		
	Иначе
		
		Для каждого СтрокаТовары Из Форма.Объект.Товары Цикл
			СтрокиТоваровКЗаполнениюПаллетизации.Добавить(СтрокаТовары);
		КонецЦикла;
		
	КонецЕсли;
	
	КонтекстЗаполнения = Новый Структура;
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияБутылка", Форма.бг_ТипЕдиницыИзмеренияБутылка);
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияКоробка", Форма.бг_ТипЕдиницыИзмеренияКоробка);
	КонтекстЗаполнения.Вставить("ТипЕдиницыИзмеренияПаллета", Форма.бг_ТипЕдиницыИзмеренияПаллета);
	
	ЗаполнитьДанныеПаллетизацииТоваровОбщая(СтрокиТоваровКЗаполнениюПаллетизации, КонтекстЗаполнения, Форма);
	
КонецПроцедуры

// Заполняет служебные реквизиты товаров, необходимые для работы паллетизации.
// Метод универсальный , чтобы являться единой точкой входа для заполнения паллетизации товаров из разных мест.
//
// Параметры:
//  Товары - ТаблицаЗначений, Массив элементов ДанныеФормыКоллекция
//  КонтекстЗаполнения - структура
//   *Свойства: ТипЕдиницыИзмеренияБутылка, ТипЕдиницыИзмеренияКоробка, ТипЕдиницыИзмеренияПаллета.
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура ЗаполнитьДанныеПаллетизацииТоваровОбщая(Товары, КонтекстЗаполнения, Форма = Неопределено) Экспорт
	
	КлючевыеПоляТоваров = "Номенклатура, бг_УпаковкаПаллета";
	
	ТоварыДокумента = Новый ТаблицаЗначений;
	ТоварыДокумента.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыДокумента.Колонки.Добавить(
		"бг_УпаковкаПаллета",
		Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	Для каждого СтрокаТовары Из Товары Цикл
		ЗаполнитьЗначенияСвойств(ТоварыДокумента.Добавить(), СтрокаТовары);
	КонецЦикла;
	
	ТоварыДокумента.Свернуть(КлючевыеПоляТоваров);
	
	ДанныеУпаковок = ДанныеУпаковокПаллетизацииТоваров(ТоварыДокумента);
	
	ДанныеУпаковок.Индексы.Добавить("Номенклатура, Упаковка");
	ДанныеУпаковок.Индексы.Добавить("Номенклатура, Упаковка, ТипЕдиницыИзмерения");
	ДанныеУпаковок.Индексы.Добавить("Номенклатура, УпаковкаРодитель, ТипЕдиницыИзмерения");
	
	Для каждого СтрокаТовары Из Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
			Или Не ЗначениеЗаполнено(СтрокаТовары.бг_УпаковкаПаллета) Тогда
			
			Если Форма <> Неопределено Тогда
				бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОчиститьПоказателиПаллетизацииВСтрокеТовары(Форма, СтрокаТовары);
			КонецЕсли;
			
			Продолжить;
		КонецЕсли;
		
		ДанныеКонечнойУпаковки = НайтиДанныеУпаковкиПаллетизацииТоваров(
			ДанныеУпаковок,
			СтрокаТовары.Номенклатура,,,
			КонтекстЗаполнения.ТипЕдиницыИзмеренияБутылка);
			
		Если ДанныеКонечнойУпаковки = Неопределено Тогда
			
			Если Форма <> Неопределено Тогда
				бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОчиститьПоказателиПаллетизацииВСтрокеТовары(Форма, СтрокаТовары);
			КонецЕсли;
			
			Продолжить;
		КонецЕсли;
		
		СтрокаТовары.бг_ВесУпаковки = ДанныеКонечнойУпаковки.ВесУпаковки;
		СтрокаТовары.бг_ОбъемУпаковки = ДанныеКонечнойУпаковки.ОбъемУпаковки;
		СтрокаТовары.бг_ОбъемДАЛЕд = ДанныеКонечнойУпаковки.ОбъемДАЛ;
		СтрокаТовары.бг_ОбъемДАЛ = СтрокаТовары.бг_ОбъемДАЛЕд * СтрокаТовары.Количество;
		
		ДанныеУпаковкиПаллеты = НайтиДанныеУпаковкиПаллетизацииТоваров(
			ДанныеУпаковок,
			СтрокаТовары.Номенклатура,
			СтрокаТовары.бг_УпаковкаПаллета,
			"Упаковка");
			
		Если ДанныеУпаковкиПаллеты = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовары.бг_ТипЕдиницыИзмерения = ДанныеУпаковкиПаллеты.ТипЕдиницыИзмерения;
		
		СтрокаТовары.бг_ВесУпаковкиБрутто = ДанныеУпаковкиПаллеты.ВесУпаковкиБрутто;
		СтрокаТовары.бг_ОбъемУпаковкиБрутто = ДанныеУпаковкиПаллеты.ОбъемУпаковкиБрутто;
		
		Если ДанныеУпаковкиПаллеты.ТипЕдиницыИзмерения = КонтекстЗаполнения.ТипЕдиницыИзмеренияКоробка Тогда
			
			СтрокаТовары.бг_КоэффициентКоробки = ДанныеУпаковкиПаллеты.Коэффициент;
			
			ДанныеПаллеты = НайтиДанныеУпаковкиПаллетизацииТоваров(
				ДанныеУпаковок,
				СтрокаТовары.Номенклатура,
				ДанныеУпаковкиПаллеты.Упаковка,
				"УпаковкаРодитель",
				КонтекстЗаполнения.ТипЕдиницыИзмеренияПаллета);
				
			Если ДанныеПаллеты <> Неопределено Тогда
				СтрокаТовары.бг_КоэффициентПаллеты = ДанныеПаллеты.Коэффициент;
			Иначе
				СтрокаТовары.бг_КоэффициентПаллеты = 0;
			КонецЕсли;
			
		ИначеЕсли ДанныеУпаковкиПаллеты.ТипЕдиницыИзмерения = КонтекстЗаполнения.ТипЕдиницыИзмеренияПаллета Тогда
			
			СтрокаТовары.бг_КоэффициентПаллеты = ДанныеУпаковкиПаллеты.Коэффициент;
			
			ДанныеКоробки = НайтиДанныеУпаковкиПаллетизацииТоваров(
				ДанныеУпаковок,
				СтрокаТовары.Номенклатура,
				ДанныеУпаковкиПаллеты.УпаковкаРодитель,
				"Упаковка",
				КонтекстЗаполнения.ТипЕдиницыИзмеренияКоробка);
				
			Если ДанныеКоробки <> Неопределено Тогда
				СтрокаТовары.бг_КоэффициентКоробки = ДанныеКоробки.Коэффициент;
			Иначе
				СтрокаТовары.бг_КоэффициентКоробки = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Рассчитывает количество коробок и паллет в товарах документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//
Процедура РассчитатьПоказателиПаллетизацииВТоварах(Форма) Экспорт
	
	ЗаполнитьДанныеПаллетизацииТоваровИзФормы(Форма);
	
	Для Каждого СтрокаТовары Из Форма.Объект.Товары Цикл
		бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьПоказателиПаллетизацииВСтрокеТовары(СтрокаТовары);
	КонецЦикла;
	
КонецПроцедуры

// Рассчитывает итоговые рекизиты паллетизации в документе.
Процедура РассчитатьИтоговыеПоказателиПаллетизации(ДокументОбъект) Экспорт
	
	ТоварыПаллетизация = НовыйТоварыПаллетизация();
	
	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
		ЗаполнитьЗначенияСвойств(ТоварыПаллетизация.Добавить(), СтрокаТовары);
	КонецЦикла;
	
	бг_УпаковкиЕдиницыИзмерения.ЗаполнитьДанныеПаллетизацииТаблицыТоваров(ТоварыПаллетизация);
	
	КонтекстРасчета = Новый Структура;
	КонтекстРасчета.Вставить("Объект", ДокументОбъект);
	КонтекстРасчета.Вставить("бг_ТипЕдиницыИзмеренияКоробка", Перечисления.бг_ТипыЕдиницИзмерения.Коробка);
	КонтекстРасчета.Вставить("бг_ТипЕдиницыИзмеренияПаллета", Перечисления.бг_ТипыЕдиницИзмерения.Паллета);
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(КонтекстРасчета, ТоварыПаллетизация);
	
КонецПроцедуры

#КонецОбласти // Конец РаботаСДокументами_Заполнение

#Область РаботаСДокументами_События

// Обработчик выбора упаковки (паллеты или коробки) на форме документа.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  ВыбраннаяУпаковкаПаллета - СправочникСсылка.УпаковкиЕдиницыИзмерения - выбранная пользователем упаковка.
//  ИдентификаторСтрокиТовары - Число - идентификатор строки товары, в которой выбрана упаковка.
//
Процедура ТоварыУпаковкаПаллетаОбработкаВыбора(Форма, ВыбраннаяУпаковкаПаллета, ИдентификаторСтрокиТовары) Экспорт
	
	СтрокаТовары = Форма.Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтрокиТовары);

	Если ЗначениеЗаполнено(ВыбраннаяУпаковкаПаллета) Тогда
		
		ТипЕдиницыИзмерения = ТипЕдиницыИзмеренияУпаковки(ВыбраннаяУпаковкаПаллета);
		
		ДопустимыеТипыЕдиницИзмерения = Новый Массив;
		ДопустимыеТипыЕдиницИзмерения.Добавить(Форма.бг_ТипЕдиницыИзмеренияКоробка);
		ДопустимыеТипыЕдиницИзмерения.Добавить(Форма.бг_ТипЕдиницыИзмеренияПаллета);
		
		Если ДопустимыеТипыЕдиницИзмерения.Найти(ТипЕдиницыИзмерения) = Неопределено Тогда
			бг_УпаковкиЕдиницыИзмеренияКлиентСервер.СообщитьОНеверноВыбраннойУпаковкеПаллете();
		КонецЕсли;
		
		СтрокаТовары.бг_УпаковкаПаллета = ВыбраннаяУпаковкаПаллета;
		
		ЗаполнитьДанныеПаллетизацииТоваровИзФормы(Форма, ИдентификаторСтрокиТовары);
		бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьПоказателиПаллетизацииВСтрокеТовары(СтрокаТовары);
		
	Иначе
		бг_УпаковкиЕдиницыИзмеренияКлиентСервер.ОчиститьПоказателиПаллетизацииВСтрокеТовары(Форма, СтрокаТовары);
	КонецЕсли;
	
	бг_УпаковкиЕдиницыИзмеренияКлиентСервер.РассчитатьИтоговыеПоказателиПаллетизации(Форма);

КонецПроцедуры

#КонецОбласти // Конец РаботаСДокументами_События

#КонецОбласти // Конец Паллетизация

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#Область Паллетизация_РаботаСДокументами

Функция НовыйТоварыПаллетизация()
	
	// Здесь может быть любой документ, где в товарах есть паллетизация.
	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Товары.Колонки.Добавить("бг_УпаковкаПаллета", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	Товары.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	Товары.Колонки.Добавить("КоличествоУпаковок", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	Товары.Колонки.Добавить("бг_КоличествоКоробок", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	Товары.Колонки.Добавить("бг_КоличествоПаллет", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	Товары.Колонки.Добавить("Отменено", Новый ОписаниеТипов("Булево"));
	
	РеквизитыПаллетизацииТоваров = РеквизитыПаллетизацииТоваров();
	
	Для каждого ДанныеРеквизита Из РеквизитыПаллетизацииТоваров Цикл
		Товары.Колонки.Добавить(ДанныеРеквизита.Имя, ДанныеРеквизита.Тип);
	КонецЦикла;
	
	РасчетныеРеквизитыПаллетизацииТоваров = РасчетныеРеквизитыПаллетизацииТоваров();
	
	Для Каждого ДанныеРеквизита Из РасчетныеРеквизитыПаллетизацииТоваров Цикл
		Товары.Колонки.Добавить(ДанныеРеквизита.Имя, ДанныеРеквизита.Тип);
	КонецЦикла;
	
	Возврат Товары;
	
КонецФункции

Процедура ДобавитьСлужебныеРеквизитыПаллетизацииНаФормуДокумента(Форма, РеквизитыКДобавлению)
	
	ОписаниеТиповЕдиницыИзмерения = Новый ОписаниеТипов("ПеречислениеСсылка.бг_ТипыЕдиницИзмерения");
	
	РеквизитыКДобавлению.Добавить(
		Новый РеквизитФормы(
			"бг_ТипЕдиницыИзмеренияБутылка",
			ОписаниеТиповЕдиницыИзмерения));

	РеквизитыКДобавлению.Добавить(
		Новый РеквизитФормы(
			"бг_ТипЕдиницыИзмеренияКоробка",
			ОписаниеТиповЕдиницыИзмерения));
			
	РеквизитыКДобавлению.Добавить(
		Новый РеквизитФормы(
			"бг_ТипЕдиницыИзмеренияПаллета",
			ОписаниеТиповЕдиницыИзмерения));
	
КонецПроцедуры

Процедура ДобавитьРеквизитыПаллетизацииТоваровНаФормуДокумента(Форма, РеквизитыКДобавлению)

	РеквизитыПаллетизацииТоваров = РеквизитыПаллетизацииТоваров();
	
	ПутьКТаблицеТовары = "Объект.Товары";
	
	Для каждого ДанныеРеквизита Из РеквизитыПаллетизацииТоваров Цикл
	
		РеквизитыКДобавлению.Добавить(
			Новый РеквизитФормы(
				ДанныеРеквизита.Имя,
				ДанныеРеквизита.Тип,
				ПутьКТаблицеТовары));
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьРасчетныеРеквизитыПаллетизацииТоваровНаФормуДокумента(Форма, РеквизитыКДобавлению)
	
	РасчетныеРеквизитыПаллетизацииТоваров = РасчетныеРеквизитыПаллетизацииТоваров();
	
	ПутьКТаблицеТовары = "Объект.Товары";
	
	Для Каждого ДанныеРеквизита Из РасчетныеРеквизитыПаллетизацииТоваров Цикл
	
		РеквизитыКДобавлению.Добавить(
			Новый РеквизитФормы(
				ДанныеРеквизита.Имя,
				ДанныеРеквизита.Тип,
				ПутьКТаблицеТовары));
	
	КонецЦикла;
	
КонецПроцедуры

Функция РеквизитыПаллетизацииТоваров()
	
	РеквизитыПаллетизацииТоваров = Новый ТаблицаЗначений;
	РеквизитыПаллетизацииТоваров.Колонки.Добавить("Имя", ОбщегоНазначения.ОписаниеТипаСтрока("100"));
	РеквизитыПаллетизацииТоваров.Колонки.Добавить("Тип", Новый ОписаниеТипов("ОписаниеТипов"));
	
	ОписаниеТиповЧисло17_7 = ОбщегоНазначения.ОписаниеТипаЧисло(17, 7);
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ТипЕдиницыИзмерения";
	НоваяСтрока.Тип = Новый ОписаниеТипов("ПеречислениеСсылка.бг_ТипыЕдиницИзмерения");
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_КоэффициентКоробки";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_КоэффициентПаллеты";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ВесУпаковки";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ВесУпаковкиБрутто";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ОбъемУпаковки";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ОбъемУпаковкиБрутто";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ОбъемДАЛЕд";
	НоваяСтрока.Тип = ОбщегоНазначения.ОписаниеТипаЧисло(12, 3);
	
	Возврат РеквизитыПаллетизацииТоваров;
	
КонецФункции

Функция РасчетныеРеквизитыПаллетизацииТоваров()
	
	РеквизитыПаллетизацииТоваров = Новый ТаблицаЗначений;
	РеквизитыПаллетизацииТоваров.Колонки.Добавить("Имя", ОбщегоНазначения.ОписаниеТипаСтрока("100"));
	РеквизитыПаллетизацииТоваров.Колонки.Добавить("Тип", Новый ОписаниеТипов("ОписаниеТипов"));
	
	ДлинаЧисла = 17;
	ДлинаДробнойЧасти = 7;
	ОписаниеТиповЧисло17_7 = ОбщегоНазначения.ОписаниеТипаЧисло(ДлинаЧисла, ДлинаДробнойЧасти);
	
	НоваяСтрока = РеквизитыПаллетизацииТоваров.Добавить();
	НоваяСтрока.Имя = "бг_ОбъемДАЛ";
	НоваяСтрока.Тип = ОписаниеТиповЧисло17_7;
	
	Возврат РеквизитыПаллетизацииТоваров;
	
КонецФункции

Процедура ДобавитьБазовыеЭлементыПаллетизацииНаФормуДокумента(Форма)
	
	Элементы = Форма.Элементы;
	
	ТоварыКоличествоКоробок = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ТоварыКоличествоКоробок",
		Элементы.Товары,
		"Объект.Товары.бг_КоличествоКоробок",,
		Элементы.ТоварыКоличествоУпаковок);
	ТоварыКоличествоКоробок.УстановитьДействие("ПриИзменении", "бг_ТоварыКоличествоКоробокПриИзменении");
	
	ТоварыКоличествоПаллет = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ТоварыКоличествоПаллет",
		Элементы.Товары,
		"Объект.Товары.бг_КоличествоПаллет",,
		Элементы.бг_ТоварыКоличествоКоробок);
	ТоварыКоличествоПаллет.УстановитьДействие("ПриИзменении", "бг_ТоварыКоличествоПаллетПриИзменении");
		
	ТоварыУпаковкаПаллета = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ТоварыУпаковкаПаллета",
		Элементы.Товары,
		"Объект.Товары.бг_УпаковкаПаллета",,
		Элементы.бг_ТоварыКоличествоПаллет);
	ШиринаПоляУпаковкаПаллета = 15;
	ТоварыУпаковкаПаллета.Ширина = ШиринаПоляУпаковкаПаллета;
	ТоварыУпаковкаПаллета.УстановитьДействие("ПриИзменении",    "бг_ТоварыУпаковкаПаллетаПриИзменении");
	ТоварыУпаковкаПаллета.УстановитьДействие("ОбработкаВыбора", "бг_ТоварыУпаковкаПаллетаОбработкаВыбора");
	ТоварыУпаковкаПаллета.УстановитьДействие("Очистка",	        "бг_ТоварыУпаковкаПаллетаОчистка");

КонецПроцедуры

Процедура ДобавитьРасчетныеЭлементыПаллетизацииНаФормуДокумента(Форма)
	
	Элементы = Форма.Элементы;
	
	ТоварыОбъемДАЛ = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ТоварыОбъемДАЛ",
		Элементы.Товары,
		"Объект.Товары.бг_ОбъемДАЛ");
	ТоварыОбъемДАЛ.Заголовок = НСтр("ru = 'Объем (дал)'");
	ТоварыОбъемДАЛ.ТолькоПросмотр = Истина;
	ШиринаПоляОбъемДАЛ = 12;
	ТоварыОбъемДАЛ.Ширина = ШиринаПоляОбъемДАЛ;
	ТоварыОбъемДАЛ.Формат = "ЧЦ=15; ЧДЦ=3";
	
КонецПроцедуры

Процедура ДобавитьПоказателиЭлементыПаллетизацииНаФормуДокумента(Форма, ЭлементТоварыПодвал)

	Элементы = Форма.Элементы;

#Область Показатели_Группы
	ТоварыГруппаПоказателиИтогиОбщая = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		Форма,
		"бг_ТоварыГруппаПоказателиИтогиОбщая",
		Элементы.ГруппаТовары,
		ВидГруппыФормы.ОбычнаяГруппа,
		ЭлементТоварыПодвал);
	ТоварыГруппаПоказателиИтогиОбщая.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ТоварыГруппаПоказателиИтогиОбщая.ОтображатьЗаголовок = Ложь;
	
	ТоварыГруппаНеттоИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		Форма,
		"бг_ТоварыГруппаНеттоИтог",
		ТоварыГруппаПоказателиИтогиОбщая,
		ВидГруппыФормы.ОбычнаяГруппа);
	ТоварыГруппаНеттоИтог.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТоварыГруппаНеттоИтог.ОтображатьЗаголовок = Ложь;
	
	ТоварыГруппаБруттоИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		Форма,
		"бг_ТоварыГруппаБруттоИтог",
		ТоварыГруппаПоказателиИтогиОбщая,
		ВидГруппыФормы.ОбычнаяГруппа);
	ТоварыГруппаБруттоИтог.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТоварыГруппаБруттоИтог.ОтображатьЗаголовок = Ложь;
	
	ТоварыГруппаКоличествоИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьГруппуНаФорму(
		Форма,
		"бг_ТоварыГруппаКоличествоИтог",
		ТоварыГруппаПоказателиИтогиОбщая,
		ВидГруппыФормы.ОбычнаяГруппа);
	ТоварыГруппаКоличествоИтог.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТоварыГруппаКоличествоИтог.ОтображатьЗаголовок = Ложь;
#КонецОбласти // Конец Показатели_Группы

#Область Показатели_Элементы
	ТоварыОбъемИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_Объем",
		ТоварыГруппаНеттоИтог,
		"Объект.бг_Объем");
	ТоварыОбъемИтог.ТолькоПросмотр = Истина;

	ТоварыОбъемБруттоИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ОбъемБрутто",
		ТоварыГруппаБруттоИтог,
		"Объект.бг_ОбъемБрутто");
	ТоварыОбъемБруттоИтог.ТолькоПросмотр = Истина;
	
	ТоварыОбъемДАЛ = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ОбъемДАЛ",
		ТоварыГруппаПоказателиИтогиОбщая,
		"Объект.бг_ОбъемДАЛ");
	ТоварыОбъемДАЛ.Заголовок = НСтр("ru = 'Объем (дал)'");
	ТоварыОбъемДАЛ.ТолькоПросмотр = Истина;
	
	ТоварыВесИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_Вес",
		ТоварыГруппаНеттоИтог,
		"Объект.бг_Вес");
	ТоварыВесИтог.ТолькоПросмотр = Истина;
	
	ТоварыВесБруттоИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_ВесБрутто",
		ТоварыГруппаБруттоИтог,
		"Объект.бг_ВесБрутто");
	ТоварыВесБруттоИтог.ТолькоПросмотр = Истина;
	
	ТоварыКоличествоБутылокИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_КоличествоБутылок",
		ТоварыГруппаКоличествоИтог,
		"Объект.бг_КоличествоБутылок");
	ТоварыКоличествоБутылокИтог.Заголовок = НСтр("ru = 'Количество (бут)'");
	ТоварыКоличествоБутылокИтог.ТолькоПросмотр = Истина;
	
	ТоварыКоличествоКоробокИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_КоличествоКоробок",
		ТоварыГруппаКоличествоИтог,
		"Объект.бг_КоличествоКоробок");
	ТоварыКоличествоКоробокИтог.Заголовок = НСтр("ru = 'Количество (кор)'");
	ТоварыКоличествоКоробокИтог.ТолькоПросмотр = Истина;
	
	ТоварыКоличествоПаллетИтог = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		Форма,
		"бг_КоличествоПаллет",
		ТоварыГруппаКоличествоИтог,
		"Объект.бг_КоличествоПаллет");
	ТоварыКоличествоПаллетИтог.Заголовок = НСтр("ru = 'Количество (пал)'");
	ТоварыКоличествоПаллетИтог.ТолькоПросмотр = Истина;
#КонецОбласти // Показатели_Элементы

КонецПроцедуры

Функция ДанныеУпаковокПаллетизацииТоваров(ТоварыДокумента)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Номенклатура КАК Номенклатура,
	|	ДанныеДокумента.бг_УпаковкаПаллета КАК УпаковкаПаллета
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	&ТоварыДокумента КАК ДанныеДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникУпаковок.Владелец КАК Номенклатура,
	|	СправочникНоменклатура.ОбъемДАЛ КАК ОбъемДАЛ,
	|	ТоварыДокумента.УпаковкаПаллета КАК УпаковкаПаллета,
	|	СправочникУпаковок.Ссылка КАК Упаковка,
	|	СправочникУпаковок.Родитель КАК УпаковкаРодитель,
	|	СправочникУпаковок.ТипУпаковки КАК ТипУпаковки,
	|	СправочникУпаковок.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения КАК ТипЕдиницыИзмерения,
	|	&ТекстЗапросаКоэффициентаУпаковки КАК Коэффициент,
	|	&ТекстЗапросаВесУпаковки КАК ВесУпаковки,
	|	&ТекстЗапросаВесУпаковкиБрутто КАК ВесУпаковкиБрутто,
	|	&ТекстЗапросаОбъемУпаковки КАК ОбъемУпаковки,
	|	&ТекстЗапросаОбъемУпаковкиБрутто КАК ОбъемУпаковкиБрутто
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК СправочникУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыДокумента КАК ТоварыДокумента
	|		ПО СправочникУпаковок.Владелец = ТоварыДокумента.Номенклатура
	|			И (НЕ СправочникУпаковок.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ТоварыДокумента.Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Коэффициент";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаВесУпаковкиБрутто",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"СправочникУпаковок",
			"СправочникНоменклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаОбъемУпаковкиБрутто",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
			"СправочникУпаковок",
			"СправочникНоменклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКоэффициентаУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"СправочникУпаковок",
			"СправочникНоменклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"СправочникУпаковок",
			"СправочникНоменклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаОбъемУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
			"СправочникУпаковок",
			"СправочникНоменклатура"));
		
	Запрос.УстановитьПараметр("ТоварыДокумента", ТоварыДокумента);
		
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция НайтиДанныеУпаковкиПаллетизацииТоваров(ДанныеУпаковок, Номенклатура,
	Упаковка = Неопределено, ИмяПоляПоискаУпаковки = Неопределено, ТипЕдиницыИзмерения = Неопределено)

	ПараметрыПоискаУпаковокТовара = Новый Структура;
	ПараметрыПоискаУпаковокТовара.Вставить("Номенклатура", Номенклатура);
	
	Если Упаковка <> Неопределено Тогда
		ПараметрыПоискаУпаковокТовара.Вставить(ИмяПоляПоискаУпаковки, Упаковка);
	КонецЕсли;
	
	Если ТипЕдиницыИзмерения <> Неопределено Тогда
		ПараметрыПоискаУпаковокТовара.Вставить("ТипЕдиницыИзмерения", ТипЕдиницыИзмерения);
	КонецЕсли;
	
	НайденныеСтроки = ДанныеУпаковок.НайтиСтроки(ПараметрыПоискаУпаковокТовара);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0];
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции




//	Проверяет полноту заполнения упаковок и наличие штрихкодов.
//	И если есть неполные данные, возвращает ТЗ с данными
//
// Параметры:
//  ТоварыДокумента - Товары - ТаблицаЗначений
// 
// Возвращаемое значение:
//	ДанныеДляПроверки
//		Штрихкод - ТаблицаЗначений
//		ВесогабаритныеХарактеристики - ТаблицаЗначений
//
Функция ДанныеДляПроверкиПолнотыЗаполненияУпаковокИШтрихкодов(ТоварыДокумента) Экспорт
	
	КодыЕдиницыИзмеренияБутылкаНабор = "868,704";
	
	БазовыеЕдиницыИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(
		КодыЕдиницыИзмеренияБутылкаНабор);
		
	БазоваяЕдиницаИзмеренияБутылка = БазовыеЕдиницыИзмерения.Получить("868");
	БазоваяЕдиницаИзмеренияНабор = БазовыеЕдиницыИзмерения.Получить("704");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТоварыДокумента", ТоварыДокумента);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияБутылка", БазоваяЕдиницаИзмеренияБутылка);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияНабор", БазоваяЕдиницаИзмеренияНабор);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Серия КАК Серия
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	&ТоварыДокумента КАК ТоварыДокумента
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИспользоватьСерии,
	|	ТоварыДокумента.Номенклатура.ВидНоменклатуры.бг_ВариантСинхронизацииWMS КАК ВариантСинхронизацииWMS
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|ГДЕ
	|	ТоварыДокумента.Номенклатура.ВидНоменклатуры.бг_ВариантСинхронизацииWMS <> ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Владелец КАК Владелец,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК УпаковкаПаллета,
	|	ВЫБОР
	|		КОГДА УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|			ТОГДА УпаковкиЕдиницыИзмерения.Родитель.Родитель
	|		КОГДА УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|			ТОГДА УпаковкиЕдиницыИзмерения.Родитель
	|		КОГДА УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Бутылка)
	|			ТОГДА УпаковкиЕдиницыИзмерения.Ссылка
	|	КОНЕЦ КАК УпаковкаПервогоУровня,
	|	ВЫБОР
	|		КОГДА УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|			ТОГДА УпаковкиЕдиницыИзмерения.Родитель
	|		ИНАЧЕ УпаковкиЕдиницыИзмерения.Ссылка
	|	КОНЕЦ КАК УпаковкаВторогоУровня
	|ПОМЕСТИТЬ КодыЕКНоменклатурыБезИспользованияСерий
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (УпаковкиЕдиницыИзмерения.Владелец = ТаблицаТоваров.Номенклатура)
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета))
	|			И (ТаблицаТоваров.ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_Номенклатуры))
	|			И (НЕ ТаблицаТоваров.ИспользоватьСерии)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец,
	|	УпаковкаПаллета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Владелец КАК Владелец,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.ИспользоватьСерии КАК ИспользоватьСерии
	|ПОМЕСТИТЬ КодыЕКПосмТараБезИспользованияСерий
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (УпаковкиЕдиницыИзмерения.Владелец = ТаблицаТоваров.Номенклатура)
	|			И (ТаблицаТоваров.ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_ПОСМ)
	|				ИЛИ ТаблицаТоваров.ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.ГУИД))
	|			И (НЕ ТаблицаТоваров.ИспользоватьСерии)
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаТоваров.ИспользоватьСерии
	|				ТОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета
	|			ИНАЧЕ КодыЕКНоменклатурыБезИспользованияСерий.УпаковкаПаллета
	|		КОНЕЦ, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкаПалета,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаТоваров.ИспользоватьСерии
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|							ТОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.Родитель.Родитель
	|						КОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|							ТОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.Родитель
	|						КОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Бутылка)
	|							ТОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета
	|					КОНЕЦ
	|			ИНАЧЕ КодыЕКНоменклатурыБезИспользованияСерий.УпаковкаПервогоУровня
	|		КОНЕЦ, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкаПервогоУровня,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаТоваров.ИспользоватьСерии
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|							ТОГДА ТаблицаТоваров.Серия.бг_УпаковкаПаллета.Родитель
	|						ИНАЧЕ ТаблицаТоваров.Серия.бг_УпаковкаПаллета
	|					КОНЕЦ
	|			ИНАЧЕ КодыЕКНоменклатурыБезИспользованияСерий.УпаковкаВторогоУровня
	|		КОНЕЦ, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкаВторогоУровня,
	|	ТаблицаТоваров.ИспользоватьСерии КАК ИспользоватьСерии
	|ПОМЕСТИТЬ УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыЕКНоменклатурыБезИспользованияСерий КАК КодыЕКНоменклатурыБезИспользованияСерий
	|		ПО ТаблицаТоваров.Номенклатура = КодыЕКНоменклатурыБезИспользованияСерий.Владелец
	|ГДЕ
	|	ТаблицаТоваров.ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_Номенклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕстьШтрихкод,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.Номенклатура КАК Номенклатура,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.ИспользоватьСерии КАК ИспользоватьСерии
	|ПОМЕСТИТЬ ШтрихкодыПредварительныеДанные
	|ИЗ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры КАК УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК бг_Штрихкоды_ЕК_Номенклатуры
	|		ПО (бг_Штрихкоды_ЕК_Номенклатуры.Владелец = УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня)
	|			И (НЕ бг_Штрихкоды_ЕК_Номенклатуры.ПометкаУдаления)
	|			И (бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения = УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.ЕдиницаИзмерения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.Номенклатура,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня,
	|	&ЕдиницаИзмеренияБутылка,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.ИспользоватьСерии
	|ИЗ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры КАК УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бг_Штрихкоды_ЕК_Номенклатуры КАК бг_Штрихкоды_ЕК_Номенклатуры
	|		ПО (бг_Штрихкоды_ЕК_Номенклатуры.Владелец = УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня)
	|			И (бг_Штрихкоды_ЕК_Номенклатуры.ЕдиницаИзмерения = &ЕдиницаИзмеренияБутылка)
	|			И (НЕ бг_Штрихкоды_ЕК_Номенклатуры.ПометкаУдаления)
	|			И (УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.ИспользоватьСерии)
	|ГДЕ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПалета = &ЕдиницаИзмеренияНабор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	КодыЕКПосмТараБезИспользованияСерий.Владелец,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.ЕдиницаИзмерения,
	|	КодыЕКПосмТараБезИспользованияСерий.ИспользоватьСерии
	|ИЗ
	|	КодыЕКПосмТараБезИспользованияСерий КАК КодыЕКПосмТараБезИспользованияСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО (ШтрихкодыНоменклатуры.Номенклатура = КодыЕКПосмТараБезИспользованияСерий.Владелец)
	|ГДЕ
	|	НЕ КодыЕКПосмТараБезИспользованияСерий.Владелец ЕСТЬ NULL
	|	И КодыЕКПосмТараБезИспользованияСерий.Ссылка.Родитель = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.Номенклатура КАК Номенклатура,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.Вес, 0) КАК Вес,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.Высота, 0) КАК Высота,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.Глубина, 0) КАК Глубина,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.Ширина, 0) КАК Ширина,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.бг_КоличествоМестВСлое, 0) КАК КоличествоМестВСлое,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.бг_КоличествоСлоевВПаллете, 0) КАК КоличествоСлоевВПаллете,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаПервогоУровня.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения, ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.ПустаяСсылка)) КАК ТипЕдиницыИзмерения
	|ПОМЕСТИТЬ ВесогабаритныеХарактеристикиУпаковок
	|ИЗ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры КАК УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.Номенклатура,
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня,
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.Вес, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.Высота, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.Глубина, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.Ширина, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.бг_КоличествоМестВСлое, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.бг_КоличествоСлоевВПаллете, 0),
	|	ЕСТЬNULL(УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры.УпаковкаВторогоУровня.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения, ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.ПустаяСсылка))
	|ИЗ
	|	УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры КАК УпаковкиЕдиницыИзмеренияКодыЕКНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КодыЕКПосмТараБезИспользованияСерий.Владелец,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.Вес,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.Высота,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.Глубина,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.Ширина,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.бг_КоличествоМестВСлое,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.бг_КоличествоСлоевВПаллете,
	|	КодыЕКПосмТараБезИспользованияСерий.Ссылка.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения
	|ИЗ
	|	КодыЕКПосмТараБезИспользованияСерий КАК КодыЕКПосмТараБезИспользованияСерий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтрихкодыПредварительныеДанные.Номенклатура КАК Номенклатура,
	|	ШтрихкодыПредварительныеДанные.Упаковка КАК Упаковка,
	|	ШтрихкодыПредварительныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ШтрихкодыПредварительныеДанные КАК ШтрихкодыПредварительныеДанные
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ ШтрихкодыПредварительныеДанные.ИспользоватьСерии
	|				ТОГДА ШтрихкодыПредварительныеДанные.ЕдиницаИзмерения = ШтрихкодыПредварительныеДанные.Номенклатура.ЕдиницаИзмерения
	|						И НЕ ШтрихкодыПредварительныеДанные.ЕстьШтрихкод
	|			ИНАЧЕ НЕ ШтрихкодыПредварительныеДанные.ЕстьШтрихкод
	|		КОНЕЦ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВесогабаритныеХарактеристикиУпаковок.Номенклатура КАК Номенклатура,
	|	ВесогабаритныеХарактеристикиУпаковок.Упаковка КАК Упаковка,
	|	ВесогабаритныеХарактеристикиУпаковок.Вес КАК Вес,
	|	ВесогабаритныеХарактеристикиУпаковок.Высота КАК Высота,
	|	ВесогабаритныеХарактеристикиУпаковок.Глубина КАК Глубина,
	|	ВесогабаритныеХарактеристикиУпаковок.Ширина КАК Ширина,
	|	ВесогабаритныеХарактеристикиУпаковок.КоличествоМестВСлое КАК КоличествоМестВСлое,
	|	ВесогабаритныеХарактеристикиУпаковок.КоличествоСлоевВПаллете КАК КоличествоСлоевВПаллете,
	|	ВесогабаритныеХарактеристикиУпаковок.ТипЕдиницыИзмерения КАК ТипЕдиницыИзмерения
	|ИЗ
	|	ВесогабаритныеХарактеристикиУпаковок КАК ВесогабаритныеХарактеристикиУпаковок
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВесогабаритныеХарактеристикиУпаковок.ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|				ТОГДА ВесогабаритныеХарактеристикиУпаковок.КоличествоСлоевВПаллете = 0
	|						ИЛИ ВесогабаритныеХарактеристикиУпаковок.КоличествоМестВСлое = 0
	|			КОГДА ВесогабаритныеХарактеристикиУпаковок.ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|					ИЛИ ВесогабаритныеХарактеристикиУпаковок.ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Бутылка)
	|				ТОГДА ВесогабаритныеХарактеристикиУпаковок.Вес = 0
	|						ИЛИ ВесогабаритныеХарактеристикиУпаковок.Высота = 0
	|						ИЛИ ВесогабаритныеХарактеристикиУпаковок.Глубина = 0
	|						ИЛИ ВесогабаритныеХарактеристикиУпаковок.Ширина = 0
	|		КОНЕЦ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ДанныеДляПроверки = Новый Структура;
	
	ДанныеДляПроверки.Вставить("Штрихкоды", РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить());
	ДанныеДляПроверки.Вставить("ВесогабаритныеХарактеристики", РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить());
	
	Возврат ДанныеДляПроверки;

КонецФункции

#КонецОбласти // Конец Паллетизация_РаботаСДокументами

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
