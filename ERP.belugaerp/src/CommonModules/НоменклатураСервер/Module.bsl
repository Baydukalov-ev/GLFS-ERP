#Область ПрограммныйИнтерфейс

&Перед("ПроверитьЗаполнениеХарактеристик")
Процедура бг_ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки = Неопределено) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		
		Если ПараметрыПроверки = Неопределено Тогда
			ПараметрыПроверки = ПараметрыПроверкиЗаполненияХарактеристик();
		КонецЕсли;
		
		ИмяТЧ                 = ПараметрыПроверки.ИмяТЧ;
		ИменаПолейССуффиксом  = ПараметрыПроверки.ИменаПолейССуффиксом;
		
		МассивНепроверяемыхРеквизитов.Добавить(ИмяТЧ + ".Характеристика");
		
		Если ИменаПолейССуффиксом.Свойство("Характеристика") Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ИмяТЧ + "." + ИменаПолейССуффиксом.Характеристика);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&Перед("ХарактеристикиНоменклатурыОбработкаПолученияДанныхВыбора")
Процедура бг_ХарактеристикиНоменклатурыОбработкаПолученияДанныхВыбораПеред(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт

	// При вводе служебных характеристик (упаковок паллет) используем режим Быстрый выбор.
	// В этом режиме строка поиска в параметрах может быть Неопределено.
	// В этом случае возникает ошибка выполнения запроса, так как в запрос не устанавливается параметр "СтрокаПоиска".
	// Переопределим параметр на пустую строку. 
	Если Параметры.СтрокаПоиска = Неопределено Тогда
		Параметры.СтрокаПоиска = "";	
	КонецЕсли;	
		
КонецПроцедуры	
	
&После("ХарактеристикиНоменклатурыОбработкаПолученияДанныхВыбора")
Процедура бг_ХарактеристикиНоменклатурыОбработкаПолученияДанныхВыбораПосле(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт

	Перем Номенклатура;
	
	Если Не Параметры.Свойство("Номенклатура", Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;	
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
	|	бг_ХарактеристикиУпаковокПаллет.Характеристика КАК Характеристика,
	|	СпрХарактеристики.ПометкаУдаления КАК ПометкаУдаления,
	|	СпрХарактеристики.Наименование КАК ХарактеристикаПредставление
	|ИЗ
	|	РегистрСведений.бг_ХарактеристикиУпаковокПаллет КАК бг_ХарактеристикиУпаковокПаллет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|		ПО бг_ХарактеристикиУпаковокПаллет.Характеристика = СпрХарактеристики.Ссылка
	|ГДЕ
	|	бг_ХарактеристикиУпаковокПаллет.Номенклатура = &Номенклатура
	|	И ЕСТЬNULL(ВЫРАЗИТЬ(бг_ХарактеристикиУпаковокПаллет.Номенклатура КАК Справочник.Номенклатура).бг_УчетОстатковИРезервовВРазрезеУпаковокПаллет, ЛОЖЬ)
	|	И ВЫБОР
	|			КОГДА &СтрокаПоискаЗаполнена = ИСТИНА
	|				ТОГДА СпрХарактеристики.Наименование ПОДОБНО &СтрокаПоиска
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХарактеристикаПредставление";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СтрокаПоискаЗаполнена", ЗначениеЗаполнено(СтрокаПоиска));	
	
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗначениеСписка = Новый Структура;
		ЗначениеСписка.Вставить("Значение", Выборка.Характеристика);
		ЗначениеСписка.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
	
		ДанныеВыбора.Добавить(ЗначениеСписка, Выборка.ХарактеристикаПредставление);
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти
