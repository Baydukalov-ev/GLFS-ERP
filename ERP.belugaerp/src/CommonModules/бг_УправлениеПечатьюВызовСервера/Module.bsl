
#Область ПрограммныйИнтерфейс

// Формирует коллекцию печатных форм для переданных объектов.
// Параметры:
//	Объекты - Массив из ДокументСсылка - документы для которых надо сформировать печатные формы.
//	ПереданныеНастройкиПечати - Соответствие Из КлючИЗНачение - настройки печатных формы:
//		* Ключ - Строка - тип объекта печати. Пример Документ.СчетНаОплату.
//		* Значение - Строка - адрес настроек печатных форм во временном хранилище.
// Возвращаемое значение:
//	Соответствие Из КлючИЗначение:
//		* Ключ - ДокументСсылка - объект с печатными формами.
//		* Значение - Массив Из ТабличныйДокумент, Строка - печатные формы или путь к присоединенному файлу.
//
Функция КоллекцияПечатныхФормПоОбъектам(Объекты, ПереданныеНастройкиПечати = Неопределено) Экспорт
	
	КоллекцияПечатныхФорм = Новый Соответствие;
	
	СоответствиеТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(Объекты);
	Для Каждого ОбъектыПоТипу Из СоответствиеТипов Цикл
		ДополнитьКоллекциюПечатныхФорм(КоллекцияПечатныхФорм, ОбъектыПоТипу, ПереданныеНастройкиПечати);
	КонецЦикла;
	
	Возврат КоллекцияПечатныхФорм;
	
КонецФункции

// Дополняет коллекцию печатных форм путями к файлам, которые требуется напечатать.
// Параметры:
//	КоллекцияПечатныхФорм - ТаблицаЗначений - коллекция печатных форм формируемая типовым алгоритмом печати.
//	ОбъектыПечати - СписокЗначений Из ДокументСсылка - документы печати.
//	ИмяМакета - Строка
//	ПутиКПечатнымФормам - Массив Из Структура:
//		* Ссылка - ДокументСсылка - документ печати.
//		* АдресФайла - Строка
//
Процедура ДополнитьКоллекциюФайлами(КоллекцияПечатныхФорм, ОбъектыПечати, ИмяМакета, ПутиКПечатнымФормам) Экспорт
	
	ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег(ИмяМакета), "ИмяВРЕГ");
	
	Если ОписаниеПечатнойФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ОписаниеПечатнойФормы.ОфисныеДокументы = Новый Соответствие;
	Для Каждого ПутьКПечатнойФорме Из ПутиКПечатнымФормам Цикл
		
		Если ОбъектыПечати.НайтиПоЗначению(ПутьКПечатнойФорме.Ссылка) = Неопределено Тогда
			ОбъектыПечати.Добавить(ПутьКПечатнойФорме.Ссылка);
		КонецЕсли;
		
		КоллекцияПоОбъекту = ОписаниеПечатнойФормы.ОфисныеДокументы.Получить(ПутьКПечатнойФорме.Ссылка);
		Если КоллекцияПоОбъекту = Неопределено Тогда
			
			ОписаниеПечатнойФормы.ОфисныеДокументы.Вставить(ПутьКПечатнойФорме.Ссылка, Новый Массив);
			КоллекцияПоОбъекту = ОписаниеПечатнойФормы.ОфисныеДокументы.Получить(ПутьКПечатнойФорме.Ссылка);
			
		КонецЕсли;
		
		КоллекцияПоОбъекту.Добавить(ПутьКПечатнойФорме.АдресФайла);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеПечатнойФормы()
	
	Описание = Новый Структура();
	Описание.Вставить("ИмяМакета", "");
	Описание.Вставить("ТабличныйДокумент", Неопределено);
	Описание.Вставить("ПутьКФайлу", "");
	Описание.Вставить("ИдентификаторМакета", "");
	Описание.Вставить("ДвусторонняяПечать", Ложь);

	Возврат Описание;
	
КонецФункции

Процедура ДополнитьКоллекциюПечатныхФорм(КоллекцияПечатныхФорм, ОбъектыПоТипу, ПереданныеНастройкиПечати)
	
	Если ПереданныеНастройкиПечати = Неопределено Тогда
		АдресаНастроекГруппыОбъектов = РегистрыСведений.бг_НастройкиПечатиКомплектов.НастройкиПечатныхФорм(
			ОбъектыПоТипу.Ключ, ОбъектыПоТипу.Значение);
	Иначе
		
		ТипОбъекта = СтрЗаменить(ОбъектыПоТипу.Ключ, "Документ.", "");
		АдресаНастроекГруппыОбъектов = ПереданныеНастройкиПечати.Получить(ТипОбъекта);
		
	КонецЕсли;

	Для Каждого Настройка Из АдресаНастроекГруппыОбъектов Цикл
		
		НастройкиПечатныхФорм = ПолучитьИзВременногоХранилища(Настройка.Ключ);
		Если НастройкиПечатныхФорм = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СформироватьПечатныеФормыПоНастройкам(КоллекцияПечатныхФорм, ОбъектыПоТипу, НастройкиПечатныхФорм);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьПечатныеФормыПоНастройкам(КоллекцияПечатныхФорм, Настройка, НастройкиПечатныхФорм)
	
	Для Каждого ОписаниеНастроек Из НастройкиПечатныхФорм Цикл
		
		ИмяМенеджераПечати = ОписаниеНастроек.МенеджерПечати;
		Если Не ЗначениеЗаполнено(ИмяМенеджераПечати) Тогда
			ИмяМенеджераПечати = Настройка.Ключ;
		КонецЕсли;
		
		ПечатныеФормы = УправлениеПечатьюВызовСервера.СформироватьПечатныеФормыДляБыстройПечати(ИмяМенеджераПечати,
			ОписаниеНастроек.Идентификатор, Настройка.Значение, ОписаниеНастроек.ДополнительныеПараметры);
		Если ПечатныеФормы.Отказ Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Нет прав для вывода печатной формы на принтер, обратитесь к администратору.';
					|en = 'Insufficient rights to print out the form. Please contact the administrator.'"));
			Продолжить;
			
		КонецЕсли;
		
		Для Каждого ЭлементПечати Из ПечатныеФормы.ОбъектыПечати Цикл
			
			КоллекцияПоОбъекту = КоллекцияПечатныхФормПоОбъекту(КоллекцияПечатныхФорм, Настройка.Значение,
				ЭлементПечати.Значение);
			ДополнитьКоллекциюПоОбъектуСформированнымиПечатнымиФормами(ЭлементПечати, КоллекцияПоОбъекту,
				ПечатныеФормы, ОписаниеНастроек);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьКоллекциюПоОбъектуСформированнымиПечатнымиФормами(ЭлементПечати, Коллекция, ПечатныеФормы,
	ПараметрыПечати)

	ОписаниеПечатнойФормы = ОписаниеПечатнойФормы();
	ОписаниеПечатнойФормы.ИмяМакета = ПараметрыПечати.Представление;
	
	Если Не ПечатныеФормы.ОфисныеДокументы = Неопределено Тогда
		
		ВнешниеФайлы = ПечатныеФормы.ОфисныеДокументы.Получить(ЭлементПечати.Значение);
		Для Каждого ВнешнийФайл Из ВнешниеФайлы Цикл
			
			КоличествоВыведено = 0;
			Пока КоличествоВыведено < ПараметрыПечати.Количество Цикл
				
				ОписаниеПечатнойФормы.ПутьКФайлу = ВнешнийФайл;
				ОписаниеПечатнойФормы.ДвусторонняяПечать = ПараметрыПечати.ДвусторонняяПечать;
				
				Коллекция.Добавить(ОписаниеПечатнойФормы);
				КоличествоВыведено = КоличествоВыведено + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Если Не ПечатныеФормы.ТабличныеДокументы.Количество() Тогда
			
			ШаблонОшибки = НСтр("ru = 'Не удалось сформировать печатную форму %1.'");
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонОшибки, ПараметрыПечати.Представление));
			Возврат;
			
		КонецЕсли;
		
		ПечатнаяФормаОбъекта = ПечатныеФормы.ТабличныеДокументы[0].Значение.ПолучитьОбласть(
			ЭлементПечати.Представление);
		ЗаполнитьЗначенияСвойств(ПечатнаяФормаОбъекта,
			ПечатныеФормы.ТабличныеДокументы[0].Значение,
			УправлениеПечатью.КопируемыеСвойстваТабличногоДокумента());
		ЗаполнитьПараметрыПечатиПечатнойФормы(ПечатнаяФормаОбъекта, ПараметрыПечати);
		
		ОписаниеПечатнойФормы.ТабличныйДокумент = ПечатнаяФормаОбъекта;
		ОписаниеПечатнойФормы.ИдентификаторМакета = ПараметрыПечати.Идентификатор;
		
		Коллекция.Добавить(ОписаниеПечатнойФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыПечатиПечатнойФормы(ПечатнаяФормаОбъекта, ПараметрыПечати)
	
	ПечатнаяФормаОбъекта.ИмяПринтера = "";
	ПечатнаяФормаОбъекта.КоличествоЭкземпляров = ПараметрыПечати.Количество;
	ПечатнаяФормаОбъекта.РазборПоКопиям = ПараметрыПечати.РазбиратьПоКопиям;
	Если ПараметрыПечати.ДвусторонняяПечать Тогда
		Если ПечатнаяФормаОбъекта.ОриентацияСтраницы = ОриентацияСтраницы.Портрет Тогда
			ПечатнаяФормаОбъекта.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
		Иначе
			ПечатнаяФормаОбъекта.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВверх;
		КонецЕсли;
	Иначе
		ПечатнаяФормаОбъекта.ДвусторонняяПечать = ТипДвустороннейПечати.Нет;
	КонецЕсли;

КонецПроцедуры

Функция КоллекцияПечатныхФормПоОбъекту(КоллекцияПечатныхФорм, ОбъектыПечати, Знач НапечатанныйОбъект)
	
	Если ОбъектыПечати.Найти(НапечатанныйОбъект) = Неопределено Тогда
		НапечатанныйОбъект = ИсходныйОбъектПечати(ОбъектыПечати, НапечатанныйОбъект);
	КонецЕсли;
	
	КоллекцияПоОбъекту = КоллекцияПечатныхФорм.Получить(НапечатанныйОбъект);
	Если КоллекцияПоОбъекту = Неопределено Тогда
		
		КоллекцияПечатныхФорм.Вставить(НапечатанныйОбъект, Новый Массив);
		КоллекцияПоОбъекту = КоллекцияПечатныхФорм.Получить(НапечатанныйОбъект);
		
	КонецЕсли;
	
	Возврат КоллекцияПоОбъекту;
	
КонецФункции

Функция ИсходныйОбъектПечати(ОбъектыПечати, НапечатанныйОбъект)
	
	ИсходныйОбъект = НапечатанныйОбъект;
	Если ТипЗнч(НапечатанныйОбъект) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		
		СчетФактурыВыданные = УчетНДСУП.СчетаФактурыВыданныеПоДокументамОснованиям(ОбъектыПечати);
		ОснованияПоНапечатанномуОбъекту = СчетФактурыВыданные.НайтиСтроки(
			Новый Структура("Ссылка", НапечатанныйОбъект));
			
		КоличествоОснований = ОснованияПоНапечатанномуОбъекту.Количество();
		Если КоличествоОснований > 1 Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Групповые счета-фактуры %1 не поддерживаются при комплектной печати.'"),
					НапечатанныйОбъект));
		КонецЕсли;
		
		Если КоличествоОснований > 0 Тогда
			ИсходныйОбъект = ОснованияПоНапечатанномуОбъекту[0].ДокументОснование;
		КонецЕсли;
		
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Порядок печатных форм при печати может быть нарушен. Обратитесь к разработчикам.'"));
	КонецЕсли;
	
	Возврат ИсходныйОбъект;
	
КонецФункции

#КонецОбласти