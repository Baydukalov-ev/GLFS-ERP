#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьЗагружаемыйОбъект(ЗагружаемыйОбъект, СтруктураОбъекта, СписокСвойств, ИсключаяСвойства, СтандартнаяОбработка) Экспорт
	
	Если бг_ОбщегоНазначенияСервер.ОтменитьЗагрузкуОбъекта(ЗагружаемыйОбъект, СтруктураОбъекта, Неопределено, Неопределено, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗагружаемыйОбъект.ЭтоНовый() Тогда
		ЗагружаемыйОбъект.Заполнить(Неопределено);
	КонецЕсли;
	
	Если ЗагружаемыйОбъект.ЭтоГруппа Тогда
		ИсключаяСвойства = "Подразделение";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьМассивПроверяемыхРеквизитовБлокировки(МетаданныеОбъекта, МассивПроверяемыхРеквизитов, СтандартнаяОбработка) Экспорт
	
	МассивПроверяемыхРеквизитов.Добавить("Предопределенный");
	МассивПроверяемыхРеквизитов.Добавить("ПометкаУдаления");
	МассивПроверяемыхРеквизитов.Добавить("Родитель");
	МассивПроверяемыхРеквизитов.Добавить("ЭтоГруппа");
	МассивПроверяемыхРеквизитов.Добавить("Наименование");
	МассивПроверяемыхРеквизитов.Добавить("Подразделение");
	
КонецПроцедуры

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт

	ТекстЗапроса = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапроса);
	ТекстЗапросаТаблицаКлючей = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапросаТаблицаКлючей);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_обработчикиСобытийСтандартный;
	адаптер_обработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_обработчикиСобытийСтандартный");
	
	ДанныеОбъекта = адаптер_обработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	
	ДанныеОбъекта.Реквизиты[0].Вставить("ОрганизацияЕГАИС", ДанныеОрганизацииЕГАИС(Объект));
	
	ДанныеСообщения.RoutingKey = КлючМаршрутизации(Объект, ДанныеСообщения.RoutingKey);
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта) Экспорт
	
	Перем адаптер_НастройкиОбмена, адаптер_РаботаСДаннымиИБ;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Если СтруктураОбъекта = Неопределено Тогда
		Возврат Справочники.Склады.ПустаяСсылка();
	КонецЕсли; 
	
	Склад = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта);	
	Если ОбщегоНазначения.СсылкаСуществует(Склад) Тогда
		Возврат Склад;
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("Организация") И ЗначениеЗаполнено(СтруктураОбъекта.Организация)
		И СтруктураОбъекта.Свойство("ПунктРазгрузки") И ЗначениеЗаполнено(СтруктураОбъекта.ПунктРазгрузки) 
		И СтруктураОбъекта.Свойство("КодКатегорииСкладаSolvo") И ЗначениеЗаполнено(СтруктураОбъекта.КодКатегорииСкладаSolvo) Тогда
		
		Склад = СкладПоДаннымSolvo(СтруктураОбъекта);
		Если Склад <> Неопределено Тогда
			Возврат Склад;	
		КонецЕсли;
	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	ВыгружаемыеРеквизиты.Добавить("ЭтоГруппа");
	ВыгружаемыеРеквизиты.Добавить("Родитель"); 
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("Подразделение");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("СкладОтветственногоХранения");
	ВыгружаемыеРеквизиты.Добавить("ТекущийОтветственный");
	ВыгружаемыеРеквизиты.Добавить("ТипСклада");
	ВыгружаемыеРеквизиты.Добавить("ЦеховаяКладовая");
	ВыгружаемыеРеквизиты.Добавить("ИспользоватьОрдернуюСхемуПриОтгрузке");
	ВыгружаемыеРеквизиты.Добавить("ИспользоватьОрдернуюСхемуПриПоступлении");
	ВыгружаемыеРеквизиты.Добавить("бг_Организация");
	ВыгружаемыеРеквизиты.Добавить("бг_ТипВнешнейСкладскойСистемы");

	ВыгружаемыеРеквизиты = СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ОрганизацияЕГАИС",
		Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));	

КонецПроцедуры
	
Функция ДанныеОрганизацииЕГАИС(Склад)

	ДанныеОрганизацииЕГАИС = Новый Структура;
	ДанныеОрганизацииЕГАИС.Вставить("Идентификатор", "");
	ДанныеОрганизацииЕГАИС.Вставить("Код", "");
	
	// Полагаем, что складу соответствует лишь одна организация ЕГАИС.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС,
	|	КлассификаторОрганизацийЕГАИС.Код КАК ОрганизацияЕГАИСКод
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.Контрагент В
	|			(ВЫБРАТЬ
	|				Склады.бг_Организация КАК бг_Организация
	|			ИЗ
	|				Справочник.Склады КАК Склады
	|			ГДЕ
	|				Склады.Ссылка = &Склад)";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеОрганизацииЕГАИС.Идентификатор = Строка(Выборка.ОрганизацияЕГАИС.УникальныйИдентификатор());
		ДанныеОрганизацииЕГАИС.Код = Выборка.ОрганизацияЕГАИСКод;
	КонецЕсли;
	
	Возврат ДанныеОрганизацииЕГАИС;

КонецФункции	

Функция КлючМаршрутизации(Склад, СтандартныйКлючМаршрутизации)

	// Типовое событие адаптера ПолучитьКлючМаршрутизацииИсходящегоСообщения() не используется целенаправленно, потому что
	// в данной задаче для определения ключа маршрутизации требуются рассчитанные для выгрузки данные. Типовое событие же
	// событие адаптера выполняется в транзакции записи объекта, и лишние запросы для
	// определения ключа маршрутизации в этот момент выполнять нецелесообразно.
	ПрефиксОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "бг_Организация.Префикс");
	Если Не ЗначениеЗаполнено(ПрефиксОрганизации) Тогда
		Возврат СтандартныйКлючМаршрутизации;
	КонецЕсли;
	
	ПрефиксОрганизации = СокрЛП(ПрефиксОрганизации);
	
	Если Не ПустаяСтрока(ПрефиксОрганизации) Тогда 
		Возврат "xml.Справочник.Склады." + ПрефиксОрганизации;
	Иначе
		Возврат СтандартныйКлючМаршрутизации;	
	КонецЕсли;

КонецФункции

Функция СкладПоДаннымSolvo(СтруктураОбъекта)
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Организация = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта.Организация);
	ПунктРазгрузки = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта.ПунктРазгрузки);
	КодКатегорииСкладаSolvo = СтруктураОбъекта.КодКатегорииСкладаSolvo;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	НЕ Склады.ПометкаУдаления
		|	И Склады.бг_Организация = &Организация
		|	И Склады.бг_ПунктРазгрузки = &ПунктРазгрузки
		|	И Склады.бг_КодКатегорииСкладаSolvo = &КодКатегорииСкладаSolvo";	
	Запрос.УстановитьПараметр("КодКатегорииСкладаSolvo", КодКатегорииСкладаSolvo);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПунктРазгрузки);	
	РезультатЗапроса = Запрос.Выполнить();

	Склад = Неопределено;
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Склад = ВыборкаДетальныеЗаписи.Склад;
	КонецЕсли;
	
	Возврат Склад;
	
КонецФункции

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
