#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты();
	
	ДобавитьСвязанныеРеквизитыКВыгрузке(Реквизиты);
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства, 
		РеквизитыИСвойства.МетаданныеОбъекта, 
		Реквизиты);
	
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
		
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_обработчикиСобытийСтандартный;    
	адаптер_обработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_обработчикиСобытийСтандартный");
	
	ДанныеОбъекта = адаптер_обработчикиСобытийСтандартный.ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения);
	
	Если ДанныеОбъекта.Отбор.Количество() > 0 Тогда	
		Отбор = ДанныеОбъекта.Отбор[0];
		Если Отбор.Запись.Количество() > 0 Тогда
			ЗаполнитьНомераСвязанныхСчетовФактур(Отбор.Запись[0], Объект, ДанныеСообщения);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДанныеОбъекта;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	ВыгружаемыеРеквизиты.Добавить("Документ");
	ВыгружаемыеРеквизиты.Добавить("ПечатнаяФорма");
	ВыгружаемыеРеквизиты.Добавить("КоличествоСтраниц");
	
	Возврат ВыгружаемыеРеквизиты;
	
КонецФункции

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
	
	// Реквизиты Документ
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"Номер",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(11));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"Дата",
		,
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"Организация",
		,
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"Контрагент",
		,
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.РеализацияТоваровУслуг,
		"СуммаДокумента",
		,
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
	// Реквизиты ПечатнаяФорма
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.бг_ФиксируемыеПечатныеФормы,
		"КодТипаДокумента",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.бг_ФиксируемыеПечатныеФормы,
		"ПервичноеСканирование",
		,
		ОписаниеТипаБулево);
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.бг_ФиксируемыеПечатныеФормы,
		"ПовторноеСканирование",
		,
		ОписаниеТипаБулево);
		
	// Реквизиты ДокументКорректировки
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.КорректировкаРеализации,
		"Номер",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(11));
		
	// Реквизиты СчетФактураВыданный		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.СчетФактураВыданный,
		"НомерИсправления",
		,
		Метаданные.Документы.СчетФактураВыданный.Реквизиты.НомерИсправления.Тип);
	
КонецПроцедуры

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(Реквизиты)

	Перем адаптер_НастройкиОбмена;    
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Водитель", 
			Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), 
			"Водитель"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"ДокументКорректировки", 
			Новый ОписаниеТипов("ДокументСсылка.КорректировкаРеализации"), 
			"ДокументКорректировки"));
			
	ТипыПеревозчика = Новый Массив;
	ТипыПеревозчика.Добавить(Тип("СправочникСсылка.Организации"));
	ТипыПеревозчика.Добавить(Тип("СправочникСсылка.Контрагенты"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Перевозчик", 
			Новый ОписаниеТипов(ТипыПеревозчика), 
			"Перевозчик"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"РаспечатанныйНомер", 
			ОбщегоНазначения.ОписаниеТипаСтрока(12), 
			"РаспечатанныйНомер"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"СчетФактураВыданный", 
			Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"), 
			"СчетФактураВыданный"));
						
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"Транспорт", 
			Новый ОписаниеТипов("СправочникСсылка.ТранспортныеСредства"), 
			"Транспорт"));
			
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"СвязанныеСчетаФактуры.НомерПредыдущегоСчетаФактуры", 
			ОбщегоНазначения.ОписаниеТипаСтрока(12)));
	
КонецПроцедуры	

Процедура ЗаполнитьНомераСвязанныхСчетовФактур(РеквизитыОбъекта, Объект, ДанныеСообщения)
	
	СчетФактураВыданныйСсылка = Неопределено;
	
	Если РеквизитыОбъекта.Свойство("СчетФактураВыданный") 
		И РеквизитыОбъекта.СчетФактураВыданный <> Неопределено Тогда
		
		СчетФактураВыданныйСсылка = адаптер_РаботаСДаннымиИБ.ПолучитьСсылку(
			"Документ.СчетФактураВыданный", 
			РеквизитыОбъекта.СчетФактураВыданный.Идентификатор);
		
	КонецЕсли;
		
	Если СчетФактураВыданныйСсылка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетФактураВыданный", СчетФактураВыданныйСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПредыдущиеСчетаФактуры.ПредставлениеНомера КАК НомерПредыдущегоСчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ПредыдущиеСчетаФактуры
	|		ПО (СчетФактураВыданныйТовары.ПредыдущийСчетФактура = ПредыдущиеСчетаФактуры.Ссылка)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка = &СчетФактураВыданный";
	
	ПоместитьРезультатЗапросаВРеквизитыОбъекта(
		Запрос, 
		РеквизитыОбъекта, 
		Объект, 
		ДанныеСообщения, 
		"СвязанныеСчетаФактуры");
	
КонецПроцедуры
	
Процедура ПоместитьРезультатЗапросаВРеквизитыОбъекта(Запрос, РеквизитыОбъекта, Объект, ДанныеСообщения, ИмяРеквизита)
	
	Перем адаптер_РаботаСДаннымиИБ;    
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(
				Объект,
				ДанныеСообщения);	
	
		Реквизиты = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
			РезультатЗапроса,
			ПараметрыВыполненияЗапросов.ТаблицаКлючей,
			ДанныеСообщения); 
			
		РеквизитыОбъекта.Вставить(ИмяРеквизита, Реквизиты);
		
	Иначе
		РеквизитыОбъекта.Вставить(ИмяРеквизита, Неопределено);
	КонецЕсли;
	
КонецПроцедуры
		
#КонецОбласти