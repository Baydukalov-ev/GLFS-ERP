
#Область ПрограммныйИнтерфейс

Функция НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	Если СтруктураОбъекта = Неопределено Тогда
		Возврат Справочники.ЛицензииПоставщиковАлкогольнойПродукции.ПустаяСсылка();
	КонецЕсли;
	
	Лицензия = адаптер_РаботаСДаннымиИБ.НайтиСсылкуПоЗагружаемымДанным(СтруктураОбъекта);
	
	Если ОбщегоНазначения.СсылкаСуществует(Лицензия) Тогда
		Возврат Лицензия;
	КонецЕсли;
	
	Если СтруктураОбъекта.Свойство("Владелец") 
		И СтруктураОбъекта.Свойство("НомерПоРееструРАР") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЛицензииПоставщиковАлкогольнойПродукции.Ссылка КАК Лицензия
		|ИЗ
		|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
		|ГДЕ
		|	ЛицензииПоставщиковАлкогольнойПродукции.бг_НомерРАР = &НомерРАР
		|	И ЛицензииПоставщиковАлкогольнойПродукции.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("НомерРАР", СтруктураОбъекта.НомерПоРееструРАР);
		Запрос.УстановитьПараметр("Владелец", СтруктураОбъекта.Владелец);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Лицензия;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты = ВыгружаемыеРеквизиты();
	
	ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты);
	
	адаптер_НастройкиОбмена.УстановитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		Реквизиты);
		
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры

Функция ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения, ИсточникОбъект = Неопределено) Экспорт
	
	Перем адаптер_ОбработчикиСобытийСтандартный;
	адаптер_ОбработчикиСобытийСтандартный = ОбщегоНазначения.ОбщийМодуль("адаптер_ОбработчикиСобытийСтандартный");
	
	КлючМаршрутизации = 
		адаптер_ОбработчикиСобытийСтандартный.ПолучитьКлючМаршрутизацииИсходящегоСообщения(ДанныеСообщения);
	
	ПостфиксКлючаМаршрутизации = ПостфиксКлючаМаршрутизации(ДанныеСообщения, ИсточникОбъект);

	Если Не ПустаяСтрока(ПостфиксКлючаМаршрутизации) Тогда
		КлючМаршрутизации = КлючМаршрутизации + ПостфиксКлючаМаршрутизации;
	КонецЕсли;

	Возврат КлючМаршрутизации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	ВыгружаемыеРеквизиты.Добавить("бг_ВидЛицензируемойДеятельности");
	ВыгружаемыеРеквизиты.Добавить("бг_ДатаВыдачи");
	ВыгружаемыеРеквизиты.Добавить("бг_ДатаПрекращенияДействия");
	ВыгружаемыеРеквизиты.Добавить("бг_ДополнительнаяИнформация");
	ВыгружаемыеРеквизиты.Добавить("бг_ЗаменяемаяЛицензия");
	ВыгружаемыеРеквизиты.Добавить("бг_Номер");
	ВыгружаемыеРеквизиты.Добавить("бг_НомерРАР");
	ВыгружаемыеРеквизиты.Добавить("бг_Регион");
	ВыгружаемыеРеквизиты.Добавить("бг_Серия");
	ВыгружаемыеРеквизиты.Добавить("бг_СлабоалкогольнаяПродукция");
	ВыгружаемыеРеквизиты.Добавить("бг_ТипЛицензии");
	ВыгружаемыеРеквизиты.Добавить("Владелец");
	ВыгружаемыеРеквизиты.Добавить("ДатаНачала");
	ВыгружаемыеРеквизиты.Добавить("ДатаОкончания");
	ВыгружаемыеРеквизиты.Добавить("КемВыдана");
	ВыгружаемыеРеквизиты.Добавить("Код");
	ВыгружаемыеРеквизиты.Добавить("Наименование");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Предопределенный");
	
	// ТЧ ВидыАлкогольнойПродукции
	ВыгружаемыеРеквизиты.Добавить("бг_ВидыАлкогольнойПродукции.ВидАлкогольнойПродукции");
	
	// ТЧ ПунктыНазначения
	ВыгружаемыеРеквизиты.Добавить("бг_ПунктыНазначения.ПунктНазначения");
	ВыгружаемыеРеквизиты.Добавить("бг_ПунктыНазначения.СлабоалкогольнаяПродукция");
	
	Возврат ВыгружаемыеРеквизиты;
	
КонецФункции

Процедура ДобавитьРеквизитыЧерезТочкуКВыгрузке(Реквизиты)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	Реквизиты.Добавить(
		адаптер_НастройкиОбмена.ОписаниеРеквизита(
			"бг_ВидЛицензируемойДеятельности_Код",
			ОбщегоНазначения.ОписаниеТипаСтрока(2),
			"бг_ВидЛицензируемойДеятельности.Код"));
	
КонецПроцедуры

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.битПунктыНазначения,
		"КодТТSY",
		, // МетаданныеОбъекта
		ОбщегоНазначения.ОписаниеТипаСтрока(9));

КонецПроцедуры

Функция ПостфиксКлючаМаршрутизации(ДанныеСообщения, ИсточникОбъект = Неопределено)
	
	ПостфиксКлючаМаршрутизации = "";
	
	Если ДанныеСообщения.Свойство("Объект") Тогда
		ОбъектСсылка = ДанныеСообщения.Объект;
	Иначе
		ОбъектСсылка = Неопределено;
	КонецЕсли;
	
	#Область ДляСвязанныхОбъектовКаналаПродажОпт
	Контрагент = Справочники.Контрагенты.бг_КонтрагентСвязанногоОбъекта(ИсточникОбъект, ОбъектСсылка);
	КаналПродаж = Справочники.битКаналыПродаж.КаналПродаж(Контрагент);
	КлючКаналаПродажОпт = Справочники.битКаналыПродаж.КлючКаналаПродаж(КаналПродаж);
	
	Если Не ПустаяСтрока(КлючКаналаПродажОпт) Тогда
		ПостфиксКлючаМаршрутизации = "." + КлючКаналаПродажОпт;
	КонецЕсли;
	#КонецОбласти
	
	Возврат ПостфиксКлючаМаршрутизации;
	
КонецФункции

#КонецОбласти
