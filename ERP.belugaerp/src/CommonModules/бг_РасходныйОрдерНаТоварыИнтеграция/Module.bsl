#Область ПрограммныИнтерфейс

Процедура ЗаполнитьСоставВыгружаемыхОбъектов(РеквизитыИСвойства, ФорматСообщения, СтандартнаяОбработка) Экспорт
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ОставитьРеквизиты(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		ВыгружаемыеРеквизиты());
		
	ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства);
	ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства);
	
КонецПроцедуры

Процедура ЗаполнитьТекстыЗапросовУсловиями(ТекстЗапроса, ТекстЗапросаТаблицаКлючей, ПараметрыЗапроса, НастройкаВыгрузки, Объект, СтандартнаяОбработка) Экспорт
	
	ТекстЗапросаТаблицаКлючей = бг_ОбщегоНазначенияСервер.ТекстЗапросаБезОбращенияЧерезТочкуКNull(ТекстЗапросаТаблицаКлючей);
	
КонецПроцедуры

Функция ПолучитьДанныеВыгружаемогоОбъекта(Объект, ДанныеСообщения) Экспорт
	
	Перем адаптер_РаботаСДаннымиИБ;
	адаптер_РаботаСДаннымиИБ = ОбщегоНазначения.ОбщийМодуль("адаптер_РаботаСДаннымиИБ");
	
	ПараметрыВыполненияЗапросов = адаптер_РаботаСДаннымиИБ.ПолучитьПараметрыВыполненияЗапросов(Объект, ДанныеСообщения);

	ДанныеВыгружаемогоОбъекта = Новый Структура;
	ДанныеВыгружаемогоОбъекта.Вставить("ПолноеИмя", ПараметрыВыполненияЗапросов.ПолноеИмя);
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Новый Массив);

	ВыгружаемыеДанные = ВыгружаемыеДанные(Объект);
	
	Реквизиты = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
		ВыгружаемыеДанные.РезультатПоШапке,
		ПараметрыВыполненияЗапросов.ТаблицаКлючей,
		ДанныеСообщения);
		
	Если Реквизиты.Количество() > 0 Тогда

		ТоварыПоРаспоряжениям = адаптер_РаботаСДаннымиИБ.РезультатЗапросаВСтруктуруРеквизитов(
			ВыгружаемыеДанные.РезультатПоТоварам,
			ПараметрыВыполненияЗапросов.ТаблицаКлючей,
			ДанныеСообщения);
			
		Реквизиты[0].Вставить("ТоварыПоРаспоряжениям", ТоварыПоРаспоряжениям);	
	КонецЕсли;
		
	ДанныеВыгружаемогоОбъекта.Вставить("Реквизиты", Реквизиты);
	
	ДанныеСообщения.RoutingKey = КлючМаршрутизации(ВыгружаемыеДанные, ДанныеСообщения.RoutingKey);
	
	Возврат ДанныеВыгружаемогоОбъекта;
	
КонецФункции

Функция ВыполненыУсловияВыгрузкиОбъекта(ДанныеСообщения) Экспорт
	
	Результат = Истина;

	ЕстьЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS = ЕстьЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS(
		ДанныеСообщения.Объект);
	
	Если ЕстьЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS
		И Не ЕстьМаршрутныйЛистОтгружаемыйИзERP(ДанныеСообщения.Объект) Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ВыгрузитьСвязанныеОбъекты(Объект) Экспорт

	Если Не Объект.ДополнительныеСвойства.РежимЗаписи
		= РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ДополнительныеСвойства.Свойство("бг_ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы")
		И Объект.ДополнительныеСвойства.бг_ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы = Истина
		И Объект.ДополнительныеСвойства.Свойство("бг_Организация")
		И бг_КонстантыПовтИсп.ЗначениеКонстанты("ВыгружатьРасходныеОрдераВRMQ", Объект.ДополнительныеСвойства.бг_Организация) = Истина Тогда
		
		Справочники.адаптер_ИсходящиеСообщения.ЗарегистрироватьИсходящееСообщениеПриЗаписи(
			Объект.ДополнительныеСвойства.бг_СвязанныйМаршрутныйЛист);
			
	КонецЕсли;
		
	ЗарегистрироватьОтгруженныеПеремещенияТоваров(Объект);
	
КонецПроцедуры

#КонецОбласти // Конец ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ВыгружаемыеРеквизиты()

	ВыгружаемыеРеквизиты = Новый Массив;
	
	// Реквизиты шапки
	ВыгружаемыеРеквизиты.Добавить("Дата");
	ВыгружаемыеРеквизиты.Добавить("Номер");
	ВыгружаемыеРеквизиты.Добавить("Комментарий");
	ВыгружаемыеРеквизиты.Добавить("Ответственный");
	ВыгружаемыеРеквизиты.Добавить("Склад");
	ВыгружаемыеРеквизиты.Добавить("СкладскаяОперация");
	ВыгружаемыеРеквизиты.Добавить("Проведен");
	ВыгружаемыеРеквизиты.Добавить("ПометкаУдаления");
	ВыгружаемыеРеквизиты.Добавить("Приоритет");	
	ВыгружаемыеРеквизиты.Добавить("Статус");
	ВыгружаемыеРеквизиты.Добавить("бг_Исполнитель");
	ВыгружаемыеРеквизиты.Добавить("бг_КонтролироватьСерии");
	ВыгружаемыеРеквизиты.Добавить("бг_ОбязательнаяАгрегация");
	ВыгружаемыеРеквизиты.Добавить("бг_РазрешитьПараллельнуюСборку");
	ВыгружаемыеРеквизиты.Добавить("бг_ЕстьАлкогольнаяПродукция");
	ВыгружаемыеРеквизиты.Добавить("бг_ЕстьМаркируемаяАлкогольнаяПродукция");
	ВыгружаемыеРеквизиты.Добавить("бг_ТипОтгрузкиWMS");
	
	// Реквизиты ТЧ "ТоварыПоРаспоряжениям"
	ВыгружаемыеРеквизиты.Добавить("ТоварыПоРаспоряжениям.Номенклатура");
	ВыгружаемыеРеквизиты.Добавить("ТоварыПоРаспоряжениям.Серия");
	ВыгружаемыеРеквизиты.Добавить("ТоварыПоРаспоряжениям.Количество");
	
	ВыгружаемыеРеквизиты = СтрСоединить(ВыгружаемыеРеквизиты, ",");
	
	Возврат ВыгружаемыеРеквизиты;

КонецФункции

Процедура ДобавитьСвязанныеРеквизитыКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	// Реквизиты шапки
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Представление",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Штрихкод",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(50)));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ПунктРазгрузки",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"КодКатегорииСкладаSolvo",
		ОбщегоНазначения.ОписаниеТипаСтрока(2));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ОрганизацияСклада",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"АдресДоставки",
		ОбщегоНазначения.ОписаниеТипаСтрока(500));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"СпособДоставки",
		Новый ОписаниеТипов("ПеречислениеСсылка.СпособыДоставки"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"КаналПродаж",
		Новый ОписаниеТипов("СправочникСсылка.битКаналыПродаж"));
		
	СписокТиповЗаказ = Новый Массив;
	СписокТиповЗаказ.Добавить(Тип("ДокументСсылка.ЗаказКлиента"));
	СписокТиповЗаказ.Добавить(Тип("ДокументСсылка.ЗаказНаПеремещение"));
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"Заказ",
		Новый ОписаниеТипов(СписокТиповЗаказ));
		
	// Реквизиты ТЧ "ТоварыПоРаспоряжениям"
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ТоварыПоРаспоряжениям.Упаковка",
		Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ТоварыПоРаспоряжениям.НомерСтроки",
		ОбщегоНазначения.ОписаниеТипаЧисло(15));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ТоварыПоРаспоряжениям.ЗаказНазначенияПредставление",
		ОбщегоНазначения.ОписаниеТипаСтрока(200));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ТоварыПоРаспоряжениям.ТребуемыйВидМаркиКод",
		ОбщегоНазначения.ОписаниеТипаСтрока(20));

	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		РеквизитыИСвойства.МетаданныеОбъекта,
		, // ИмяРеквизита
		"ТоварыПоРаспоряжениям.СерияОбязательнаКОтбору",
		ОбщегоНазначения.ОписаниеТипаСтрока(20));
		
КонецПроцедуры

Процедура ДобавитьКлючевыеПоляКВыгрузке(РеквизитыИСвойства)
	
	Перем адаптер_НастройкиОбмена;
	адаптер_НастройкиОбмена = ОбщегоНазначения.ОбщийМодуль("адаптер_НастройкиОбмена");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.СерииНоменклатуры,
		"Наименование");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"КодЕК_Номенклатуры");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"КодЕК_ПОСМ",
		,
		ОбщегоНазначения.ОписаниеТипаСтрока(бг_НоменклатураИнтеграция.ДлинаКодаЕК_ПОСМ()));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Номенклатура,
		"Код");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"Дата");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"Номер");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"Комментарий");
	
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"НомерПоДаннымКлиента");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"ДатаПоДаннымКлиента");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"бг_ИсточникЗаказа",
		,
		Новый ОписаниеТипов("ПеречислениеСсылка.бг_ИсточникиЗагрузкиЗаказовКлиентов"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"ДатаОтгрузки");
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Документы.ЗаказКлиента,
		"Грузополучатель",
		,
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	адаптер_НастройкиОбмена.ДобавитьРеквизит(
		РеквизитыИСвойства,
		Метаданные.Справочники.Контрагенты,
		"бг_КодSAP");
		
КонецПроцедуры

Функция ВыгружаемыеДанные(Ссылка)

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаВыгружаемыхДанных();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Штрихкод", ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(Ссылка));
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	МаксимальныйИндексЗапроса = РезультатыЗапросов.ВГраница();
	
	ВыгружаемыеДанные = Новый Структура;
	ВыгружаемыеДанные.Вставить("РезультатПоШапке", РезультатыЗапросов[МаксимальныйИндексЗапроса - 1]);
	ВыгружаемыеДанные.Вставить("РезультатПоТоварам", РезультатыЗапросов[МаксимальныйИндексЗапроса]);
	
	Возврат ВыгружаемыеДанные;

КонецФункции

Функция ТекстЗапросаВыгружаемыхДанных()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Склад.бг_ТипВнешнейСкладскойСистемы КАК ТипВнешнейСкладскойСистемы,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.НомерСтроки КАК НомерСтроки,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура.ВидНоменклатуры.бг_ВариантСинхронизацииWMS КАК ВариантСинхронизацииWMS,
	|	ЕСТЬNULL(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура.ВидНоменклатуры.ИспользоватьСерии, ЛОЖЬ) КАК ИспользоватьСерии,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Серия КАК Серия,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.бг_ТребуемыйВидМарки КАК бг_ТребуемыйВидМарки,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.бг_СерияОбязательнаКОтбору КАК бг_СерияОбязательнаКОтбору,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.бг_УпаковкаПаллета КАК бг_УпаковкаПаллета,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Владелец КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.бг_КодЕК_Номенклатуры) КАК КодЕК_Номенклатуры
	|ПОМЕСТИТЬ КодыЕКНоменклатурыБезИспользованияСерий
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ТоварыДокумента.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (ТоварыДокумента.ИспользоватьСерии = ЛОЖЬ)
	|			И (ТоварыДокумента.ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_Номенклатуры))
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка))
	|
	|СГРУППИРОВАТЬ ПО
	|	УпаковкиЕдиницыИзмерения.Владелец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК БазоваяУпаковка
	|ПОМЕСТИТЬ ВТ_БазовыеУпаковки
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО (ТоварыДокумента.Ссылка = &Ссылка)
	|			И ТоварыДокумента.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И ТоварыДокумента.Номенклатура.ЕдиницаИзмерения = УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|			И (УпаковкиЕдиницыИзмерения.Числитель = 1)
	|			И (УпаковкиЕдиницыИзмерения.Знаменатель = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ЗаказКлиента.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)) КАК ЗаказКлиента,
	|	ЕСТЬNULL(ЗаказНаПеремещение.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)) КАК ЗаказНаПеремещение,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Контрагент
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
	|			ТОГДА ЗаказНаПеремещение.СкладОтправитель.бг_ПунктРазгрузки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.АдресДоставки
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
	|			ТОГДА ЗаказНаПеремещение.АдресДоставки
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.СпособДоставки
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
	|			ТОГДА ЗаказНаПеремещение.СпособДоставки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПустаяСсылка)
	|	КОНЕЦ КАК СпособДоставки,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.Ссылка ЕСТЬ НЕ NULL 
	|			ТОГДА ТИПЗНАЧЕНИЯ(ЗаказКлиента.Ссылка)
	|		КОГДА ЗаказНаПеремещение.Ссылка ЕСТЬ НЕ NULL 
	|			ТОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПеремещение.Ссылка)
	|		ИНАЧЕ ТИПЗНАЧЕНИЯ(ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка))
	|	КОНЕЦ КАК ЗаказТипЗначения,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.бг_ПунктНазначения.КаналПродаж
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.битКаналыПродаж.ПустаяСсылка)
	|	КОНЕЦ КАК КаналПродаж,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Дата
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДатаЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Комментарий
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КомментарийЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.НомерПоДаннымКлиента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерПоДаннымКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.ДатаПоДаннымКлиента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДатаПоДаннымКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.бг_ИсточникЗаказа
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК бг_ИсточникЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.ДатаОтгрузки
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДатаОтгрузкиЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Грузополучатель
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ГрузополучательЗаказаКлиента,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Распоряжение ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ЗаказКлиента.Грузополучатель.бг_КодSAP
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК бг_КодSAPГрузополучателяЗаказаКлиента
	|ПОМЕСТИТЬ ВТ_ДанныеРаспоряжения
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО ТоварыДокумента.Распоряжение = ЗаказКлиента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|		ПО ТоварыДокумента.Распоряжение = ЗаказНаПеремещение.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТоварыДокумента.ИспользоватьСерии = ИСТИНА
	|				ТОГДА ЕСТЬNULL(ТоварыДокумента.Серия.бг_УпаковкаПаллета.бг_КодЕК_Номенклатуры, ТоварыДокумента.бг_УпаковкаПаллета.бг_КодЕК_Номенклатуры)
	|			ИНАЧЕ КодыЕКНоменклатурыБезИспользованияСерий.КодЕК_Номенклатуры
	|		КОНЕЦ, """") КАК КодЕК_Номенклатуры
	|ПОМЕСТИТЬ ВТ_КодыЕКНоменклатуры
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыЕКНоменклатурыБезИспользованияСерий КАК КодыЕКНоменклатурыБезИспользованияСерий
	|		ПО ТоварыДокумента.Номенклатура = КодыЕКНоменклатурыБезИспользованияСерий.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Идентификатор,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	РасходныйОрдерНаТовары.Представление КАК Представление,
	|	РасходныйОрдерНаТовары.Проведен КАК Проведен,
	|	РасходныйОрдерНаТовары.ПометкаУдаления КАК ПометкаУдаления,
	|	РасходныйОрдерНаТовары.бг_РазрешитьПараллельнуюСборку КАК бг_РазрешитьПараллельнуюСборку,
	|	РасходныйОрдерНаТовары.бг_КонтролироватьСерии КАК бг_КонтролироватьСерии,
	|	РасходныйОрдерНаТовары.бг_ОбязательнаяАгрегация КАК бг_ОбязательнаяАгрегация,
	|	ВЫРАЗИТЬ(РасходныйОрдерНаТовары.бг_Исполнитель КАК Справочник.Пользователи) КАК бг_Исполнитель_ЗначениеРеквизитаИдентификатор_Сч1,
	|	ВЫРАЗИТЬ(РасходныйОрдерНаТовары.бг_Исполнитель КАК Справочник.ГруппыПользователей) КАК бг_Исполнитель_ЗначениеРеквизитаИдентификатор_Сч2,
	|	ТИПЗНАЧЕНИЯ(РасходныйОрдерНаТовары.бг_Исполнитель) КАК бг_Исполнитель_ЗначениеРеквизитаТипЗначения,
	|	РасходныйОрдерНаТовары.Склад КАК Склад_ЗначениеРеквизитаИдентификатор,
	|	РасходныйОрдерНаТовары.Статус КАК Статус_ЗначениеРеквизитаЗначениеПеречисления,
	|	&Штрихкод КАК Штрихкод,
	|	РасходныйОрдерНаТовары.Склад.бг_Организация.Префикс КАК ПрефиксОрганизации,
	|	РасходныйОрдерНаТовары.Склад.бг_ПунктРазгрузки КАК ПунктРазгрузки_ЗначениеРеквизитаИдентификатор,
	|	РасходныйОрдерНаТовары.Склад.бг_ПунктРазгрузки КАК ПунктРазгрузки_ЗначениеРеквизитаТаблицаКлючей,
	|	РасходныйОрдерНаТовары.Склад.бг_Организация КАК ОрганизацияСклада_ЗначениеРеквизитаИдентификатор,
	|	РасходныйОрдерНаТовары.Склад.бг_Организация КАК ОрганизацияСклада_ЗначениеРеквизитаТаблицаКлючей,
	|	РасходныйОрдерНаТовары.Склад.бг_КодКатегорииСкладаSolvo КАК КодКатегорииСкладаSolvo,
	|	РасходныйОрдерНаТовары.Приоритет КАК Приоритет_ЗначениеРеквизитаИдентификатор,
	|	РасходныйОрдерНаТовары.Приоритет КАК Приоритет_ЗначениеРеквизитаТаблицаКлючей,
	|	РасходныйОрдерНаТовары.Приоритет.Наименование КАК Приоритет_ЗначениеРеквизитаНаименование,
	|	РасходныйОрдерНаТовары.Комментарий КАК Комментарий,
	|	РасходныйОрдерНаТовары.СкладскаяОперация КАК СкладскаяОперация_ЗначениеРеквизитаЗначениеПеречисления,
	|	РасходныйОрдерНаТовары.Ответственный КАК Ответственный_ЗначениеРеквизитаИдентификатор,
	|	РасходныйОрдерНаТовары.Ответственный КАК Ответственный_ЗначениеРеквизитаТаблицаКлючей,
	|	РасходныйОрдерНаТовары.Ответственный.Наименование КАК Ответственный_ЗначениеРеквизитаНаименование,
	|	ВТ_ДанныеРаспоряжения.Контрагент КАК Контрагент_ЗначениеРеквизитаИдентификатор,
	|	ВТ_ДанныеРаспоряжения.Контрагент КАК Контрагент_ЗначениеРеквизитаТаблицаКлючей,
	|	ВТ_ДанныеРаспоряжения.АдресДоставки КАК АдресДоставки,
	|	ВТ_ДанныеРаспоряжения.СпособДоставки КАК СпособДоставки_ЗначениеРеквизитаЗначениеПеречисления,
	|	ВЫРАЗИТЬ(ВТ_ДанныеРаспоряжения.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК Заказ_ЗначениеРеквизитаИдентификатор_Сч1,
	|	ВЫРАЗИТЬ(ВТ_ДанныеРаспоряжения.ЗаказКлиента КАК Документ.ЗаказКлиента).Ссылка КАК Заказ_ЗначениеРеквизитаТаблицаКлючей,
	|	ВЫРАЗИТЬ(ВТ_ДанныеРаспоряжения.ЗаказНаПеремещение КАК Документ.ЗаказНаПеремещение) КАК Заказ_ЗначениеРеквизитаИдентификатор_Сч2,
	|	ВЫРАЗИТЬ(ВТ_ДанныеРаспоряжения.ЗаказНаПеремещение КАК Документ.ЗаказНаПеремещение).Ссылка КАК Заказ_ЗначениеРеквизитаТаблицаКлючей_Сч2,
	|	ВТ_ДанныеРаспоряжения.ДатаЗаказаКлиента КАК Заказ_ЗначениеРеквизитаДата,
	|	ВТ_ДанныеРаспоряжения.НомерЗаказаКлиента КАК Заказ_ЗначениеРеквизитаНомер,
	|	ВТ_ДанныеРаспоряжения.КомментарийЗаказаКлиента КАК Заказ_ЗначениеРеквизитаКомментарий,
	|	ВТ_ДанныеРаспоряжения.НомерПоДаннымКлиента КАК Заказ_ЗначениеРеквизитаНомерПоДаннымКлиента,
	|	ВТ_ДанныеРаспоряжения.ДатаПоДаннымКлиента КАК Заказ_ЗначениеРеквизитаДатаПоДаннымКлиента,
	|	ВТ_ДанныеРаспоряжения.бг_ИсточникЗаказаКлиента КАК Заказ_ЗначениеРеквизитабг_ИсточникЗаказа_ЗначениеРеквизитаЗначениеПеречисления,
	|	ВТ_ДанныеРаспоряжения.ДатаОтгрузкиЗаказаКлиента КАК Заказ_ЗначениеРеквизитаДатаОтгрузки,
	|	ВТ_ДанныеРаспоряжения.ГрузополучательЗаказаКлиента КАК Заказ_ЗначениеРеквизитаГрузополучатель_ЗначениеРеквизитаИдентификатор,
	|	ВТ_ДанныеРаспоряжения.бг_КодSAPГрузополучателяЗаказаКлиента КАК Заказ_ЗначениеРеквизитаГрузополучатель_ЗначениеРеквизитабг_КодSAP,
	|	ВТ_ДанныеРаспоряжения.ЗаказТипЗначения КАК Заказ_ЗначениеРеквизитаТипЗначения,
	|	ВТ_ДанныеРаспоряжения.КаналПродаж КАК КаналПродаж_ЗначениеРеквизитаИдентификатор,
	|	ВТ_ДанныеРаспоряжения.КаналПродаж КАК КаналПродаж_ЗначениеРеквизитаТаблицаКлючей,
	|	РасходныйОрдерНаТовары.бг_ЕстьАлкогольнаяПродукция КАК бг_ЕстьАлкогольнаяПродукция,
	|	РасходныйОрдерНаТовары.бг_ЕстьМаркируемаяАлкогольнаяПродукция КАК бг_ЕстьМаркируемаяАлкогольнаяПродукция,
	|	РасходныйОрдерНаТовары.бг_ТипОтгрузкиWMS КАК бг_ТипОтгрузкиWMS_ЗначениеРеквизитаЗначениеПеречисления
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеРаспоряжения КАК ВТ_ДанныеРаспоряжения
	|		ПО (ИСТИНА)
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Номенклатура КАК Номенклатура_ЗначениеРеквизитаИдентификатор,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура_ЗначениеРеквизитаТаблицаКлючей,
	|	ВТ_КодыЕКНоменклатуры.КодЕК_Номенклатуры КАК Номенклатура_ЗначениеРеквизитаКодЕК_Номенклатуры,
	|	ВЫБОР
	|		КОГДА ТоварыДокумента.Номенклатура.ВидНоменклатуры.бг_ВариантСинхронизацииWMS = ЗНАЧЕНИЕ(Перечисление.бг_ВариантыСинхронизацииНоменклатурыWMS.КодЕК_ПОСМ)
	|			ТОГДА ВЫРАЗИТЬ(ТоварыДокумента.Номенклатура.Код КАК СТРОКА(999))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Номенклатура_ЗначениеРеквизитаКодЕК_ПОСМ,
	|	ТоварыДокумента.Номенклатура.Код КАК Номенклатура_ЗначениеРеквизитаКод,
	|	ТоварыДокумента.Серия.Наименование КАК Серия_ЗначениеРеквизитаНаименование,
	|	ТоварыДокумента.Серия КАК Серия_ЗначениеРеквизитаИдентификатор,
	|	ТоварыДокумента.Серия КАК Серия_ЗначениеРеквизитаТаблицаКлючей,
	|	ЕСТЬNULL(ВТ_БазовыеУпаковки.БазоваяУпаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка_ЗначениеРеквизитаИдентификатор,
	|	ЕСТЬNULL(ВТ_БазовыеУпаковки.БазоваяУпаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка_ЗначениеРеквизитаТаблицаКлючей,
	|	ТоварыДокумента.Количество КАК Количество,
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Назначения.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(Назначения.Заказ КАК Документ.ЗаказКлиента).Представление
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЗаказНазначенияПредставление,
	|	ТоварыДокумента.бг_ТребуемыйВидМарки.Код КАК ТребуемыйВидМаркиКод,
	|	ТоварыДокумента.бг_СерияОбязательнаКОтбору КАК СерияОбязательнаКОтбору
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеУпаковки КАК ВТ_БазовыеУпаковки
	|		ПО ТоварыДокумента.Номенклатура = ВТ_БазовыеУпаковки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ТоварыДокумента.Назначение = Назначения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыЕКНоменклатуры КАК ВТ_КодыЕКНоменклатуры
	|		ПО ТоварыДокумента.НомерСтроки = ВТ_КодыЕКНоменклатуры.НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"Номенклатура.Код КАК СТРОКА(999)",
		СтрШаблон(
			"Номенклатура.Код КАК СТРОКА(%1)",
			Формат(бг_НоменклатураИнтеграция.ДлинаКодаЕК_ПОСМ(), "ЧГ=0")));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция КлючМаршрутизации(ВыгружаемыеДанные, СтандартныйКлючМаршрутизации)

	// Типовое событие адаптера ПолучитьКлючМаршрутизацииИсходящегоСообщения() не используется целенаправленно, потому что
	// в данной задаче для определения ключа маршрутизации требуются рассчитанные для выгрузки данные. Типовое событие же
	// событие адаптера выполняется в транзакции записи объекта, и лишние запросы для
	// определения ключа маршрутизации в этот момент выполнять нецелесообразно.
	ТаблицаПоШапке = ВыгружаемыеДанные.РезультатПоШапке.Выгрузить();
	Если Не (ТаблицаПоШапке.Количество() > 0 И ЗначениеЗаполнено(ТаблицаПоШапке[0].ПрефиксОрганизации)) Тогда
		Возврат СтандартныйКлючМаршрутизации;
	КонецЕсли;
	
	ПрефиксОрганизации = СокрЛП(ТаблицаПоШапке[0].ПрефиксОрганизации);
	
	Если Не ПустаяСтрока(ПрефиксОрганизации) Тогда 
		Возврат "xml.Документ.РасходныйОрдерНаТовары." + ПрефиксОрганизации;
	Иначе
		Возврат СтандартныйКлючМаршрутизации;	
	КонецЕсли;

КонецФункции

Функция ЕстьЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS(Объект)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерНаТовары.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	РасходныйОрдерНаТовары.Ссылка.Склад КАК Склад
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS КАК бг_ЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS
		|		ПО РасходныйОрдерНаТовары.Ссылка.Склад = бг_ЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS.Склад
		|			И РасходныйОрдерНаТовары.Номенклатура.ВидНоменклатуры = бг_ЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS.ВидНоменклатуры
		|			И (бг_ЗапрещенныеВидыНоменклатурыДляИнтеграцииWMS.ИмяМетаданныхДокумента = &ИмяМетаданныхДокумента)
		|ГДЕ
		|	РасходныйОрдерНаТовары.Ссылка = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Объект);
	Запрос.УстановитьПараметр("ИмяМетаданныхДокумента", Объект.Метаданные().Имя);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();

КонецФункции

Функция ЕстьМаршрутныйЛистОтгружаемыйИзERP(Объект)

	ДанныеПоМаршрутномуЛисту= Документы.РасходныйОрдерНаТовары.бг_ДанныеМаршрутногоЛиста(Объект);
	
	Если ЗначениеЗаполнено(ДанныеПоМаршрутномуЛисту.МаршрутныйЛист) Тогда
		Возврат Истина;
	КонецЕсли;
		
	Возврат Ложь;

КонецФункции

Процедура ЗарегистрироватьОтгруженныеПеремещенияТоваров(Объект)

	СвязанныеПеремещения = Новый Массив;
	
	Для Каждого СтрокаТовары Из Объект.ТоварыПоРаспоряжениям Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.Распоряжение) 
			И ТипЗнч(СтрокаТовары.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") 
			И СвязанныеПеремещения.Найти(СтрокаТовары.Распоряжение) = Неопределено Тогда
			
			СвязанныеПеремещения.Добавить(СтрокаТовары.Распоряжение);
			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ПеремещениеТоваров Из СвязанныеПеремещения Цикл
		
		ДанныеТТНИсходящей = Документы.ТТНИсходящаяЕГАИС.бг_ДанныеТТНИсходящейПоСвязанномуДокументу(
			ПеремещениеТоваров,
			Истина);
			
		ОтраженРасходныйОрдер = Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен
			И ДанныеТТНИсходящей <> Неопределено
			И Не ПустаяСтрока(ДанныеТТНИсходящей.НомерФиксацииЕГАИС);
			
		Если ОтраженРасходныйОрдер Тогда
			бг_ОбщегоНазначенияСервер.ЗарегистрироватьИсходящееСообщениеПриЗаписи(ПеремещениеТоваров);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // Конец СлужебныеПроцедурыИФункции

