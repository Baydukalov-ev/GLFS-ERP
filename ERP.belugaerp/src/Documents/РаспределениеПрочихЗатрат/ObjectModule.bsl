#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("бг_ЗаполнитьОтборПоПродукции")
		И ДанныеЗаполнения.бг_ЗаполнитьОтборПоПродукции Тогда
		бг_ЗаполнитьОтборПоПродукции();
	КонецЕсли;
КонецПроцедуры

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ДополнительныеСвойства.Свойство("бг_ОшибкаФормированияДокумента") Тогда
		ОбщегоНазначения.СообщитьПользователю(ДополнительныеСвойства.бг_ОшибкаФормированияДокумента, , , , Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ЗаполнитьОтборПоПродукции()
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	СтатьяСписанияТехнологическихПотерь = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "бг_СтатьяСписанияТехнологическихПотерь");
	Если СтатьяРасходов <> СтатьяСписанияТехнологическихПотерь Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АналитикаРасходов)
		Или ТипЗнч(АналитикаРасходов) <> Тип("СправочникСсылка.Номенклатура") Тогда
		
		ДополнительныеСвойства.Вставить("бг_ОшибкаФормированияДокумента", НСтр("ru='Не заполнена аналитика расходов'"));
		Возврат;
	КонецЕсли;
	
	ПродукцияДляРаспредления = бг_ПродукцияДляРаспредленияМатериалов();
	Если ПродукцияДляРаспредления.Количество() = 0 Тогда
		
		ДополнительныеСвойства.Вставить("бг_ОшибкаФормированияДокумента", НСтр("ru='Не найдено документов выпуска'"));
		Возврат;
	КонецЕсли;
	
	НастройкиБазыРаспределения = бг_НастройкиБазыРаспределения(ПродукцияДляРаспредления);
	Если НастройкиБазыРаспределения <> Неопределено Тогда
		НастройкиБазыРаспределенияПоПартиям = Новый ХранилищеЗначения(НастройкиБазыРаспределения);
		НастройкиБазыРаспределенияПоПартиямИзменены = Истина;
	КонецЕсли;
КонецПроцедуры

Функция бг_ПродукцияДляРаспредленияМатериалов()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход КАК КОтгрузкеПриход
	|ПОМЕСТИТЬ ДокументыОтгрузки
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты(&НачалоПериода, &КонецПериода, , Номенклатура = &Номенклатура) КАК ТоварыКОтгрузкеОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И Распоряжение В
	|					(ВЫБРАТЬ
	|						ДокументыОтгрузки.ДокументОтгрузки КАК ДокументОтгрузки
	|					ИЗ
	|						ДокументыОтгрузки КАК ДокументыОтгрузки)) КАК ВыпускПродукцииОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура) КАК ВыпускПродукцииОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпускПродукции.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВыпускПродукции.АналитикаУчетаНоменклатуры.Номенклатура.Наименование КАК НоменклатураНаименование
	|ИЗ
	|	ВыпускПродукции КАК ВыпускПродукции
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНаименование";
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Номенклатура",  АналитикаРасходов);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Дата));
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Номенклатура");
КонецФункции

Функция бг_НастройкиБазыРаспределения(Продукция)
	ИмяСхемы = Перечисления.ТипыБазыРаспределенияРасходов.ИмяСхемыБазыРаспределения(БазаРаспределенияПоПартиям);
	Если ИмяСхемы <> "Продукция" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СхемаКомпоновки = Перечисления.ТипыБазыРаспределенияРасходов.ПолучитьМакет(ИмяСхемы);
	Настройки = СхемаКомпоновки.НастройкиПоУмолчанию;
	
	ЭлементыОтбор = Настройки.Отбор.Элементы;
	ЭлементыОтбор.Очистить();
	
	ЭлементОтборПродукция = ЭлементыОтбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтборПродукция.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Продукция");
	ЭлементОтборПродукция.Использование  = Истина;
	ЭлементОтборПродукция.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтборПродукция.ПравоеЗначение = Новый СписокЗначений;
	ЭлементОтборПродукция.ПравоеЗначение.ЗагрузитьЗначения(Продукция);
	
	Возврат Настройки;
КонецФункции

#КонецОбласти

#КонецЕсли
