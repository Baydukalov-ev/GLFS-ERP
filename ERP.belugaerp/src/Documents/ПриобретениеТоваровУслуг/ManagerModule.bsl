#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает признак наличия маркируемой алкогольной продукции в ПТУ (необходимы движения по маркам).
//
// Параметры:
//  ПриобретениеТоваровУслуг - ДокументСсылка.ПриобретениеТоваровУслуг - Ссылка на документ ПриобретениеТоваровУслуг.
//
// Возвращаемое значение:
//   Булево - признак наличия маркируемой алкогольной продукции.
//
Функция бг_ЕстьМаркируемаяАлкогольнаяПродукция(ПриобретениеТоваровУслуг) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПриобретениеТоваровУслугТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.АлкогольнаяПродукция)
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ВидНоменклатуры.АлкогольнаяПродукция";
	
	Запрос.УстановитьПараметр("Ссылка", ПриобретениеТоваровУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Возвращает список связанных приходных ордеров.
//
// Параметры:
//  ПриобретениеТоваровУслуг - ДокументСсылка.ПриобретениеТоваровУслуг - Ссылка на документ ПриобретениеТоваровУслуг.
//
// Возвращаемое значение:
//   Массив
//
Функция бг_ПриходныеОрдера(ПриобретениеТоваровУслуг) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ссылка КАК ПриходныйОрдерНаТовары
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
	|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение";
	
	Запрос.УстановитьПараметр("Распоряжение", ПриобретениеТоваровУслуг);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПриходныйОрдерНаТовары");
	
КонецФункции

// Интерфейс для отложенной обработки
//
// Параметры:
//   Документ - ДокументСсылка.ПриобретениеТоваровУслуг
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//   Отказ - Булево - отказ от обработки
//
Процедура бг_ОтложеннаяОбработкаОбъекта(Документ, ВариантОбработки, Отказ,
	ДополнительныеСведения = Неопределено) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантОбработки = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СоздатьИзменитьПодчиненнуюРеализацию Тогда
		Документы.РеализацияТоваровУслуг.бг_СоздатьИзменитьРеализациюПоПоступлению(Документ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

&После("ДобавитьКомандыПечати")
Процедура бг_ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Этикетки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПриобретениеТоваровУслуг";
	КомандаПечати.Идентификатор  = "бг_ПФ_MXL_Этикетки";
	КомандаПечати.Представление  = НСтр("ru = 'Этикетки ЕК СУМ серии номенклатуры'");
	ПорядокОтображенияКомандыПечати = 40;
	КомандаПечати.Порядок 		 = ПорядокОтображенияКомандыПечати;
	
КонецПроцедуры

&Перед("Печать")
Процедура бг_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_ПФ_MXL_Этикетки") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_ПФ_MXL_Этикетки",
			НСтр("ru = 'Этикетки ЕК СУМ серии номенклатуры'"),
			бг_СформироватьПечатнуюФормуЭтикеток(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			"Документ.ПриобретениеТоваровУслуг.бг_ПФ_MXL_Этикетки");
	КонецЕсли;
			
КонецПроцедуры

#Область Этикетки

Функция бг_СформироватьПечатнуюФормуЭтикеток(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Этикетки";
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		ТабличныйДокументОбъекта = бг_ПечатьЭтикеток(Ссылка);
		Если ТабличныйДокумент.ВысотаТаблицы > 0 И ТабличныйДокументОбъекта.ВысотаТаблицы > 0 Тогда 
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(ТабличныйДокументОбъекта);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			Ссылка);
		
	КонецЦикла; 
	
	Возврат ТабличныйДокумент; 
	
КонецФункции

Функция бг_ПечатьЭтикеток(Ссылка) Экспорт

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Этикетки";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриобретениеТоваровУслуг.бг_ПФ_MXL_Этикетки");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСерий.Серия Как Серия,
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	ТаблицаСерий.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ТаблицаСерий.Ссылка.Грузоотправитель КАК Грузоотправитель
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ТаблицаСерий Где ТаблицаСерий.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	ТаблицаСерий.Номенклатура.Наименование КАК НоменклатураПредставление,
	|	ТаблицаСерий.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ТаблицаСерий.Номенклатура.Код КАК НоменклатураКод,
	|	ТаблицаСерий.Грузоотправитель.Наименование КАК Грузоотправитель,
	|	ТаблицаСерий.Серия КАК СерияНоменклатуры,
	|	ТаблицаСерий.Серия.Наименование КАК СерияНоменклатурыНаименование,
	|	"""" КАК СерияНоменклатурыКод,
	|	Выбор Когда ТаблицаСерий.Серия.ДатаПроизводства <> ДатаВремя(1,1,1,0,0,0) 
	|		Тогда ТаблицаСерий.Серия.ДатаПроизводства 
	|	Иначе ТаблицаСерий.ДатаВходящегоДокумента Конец КАК ДатаПроизводства,
	|	ТаблицаСерий.Серия.бг_НомерГТД КАК ГТД,
	|	1 КАК Количество
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСерий";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[1].Выбрать();
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	Пока Выборка.Следующий() Цикл
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		СтруктураШапки = Новый Структура;
		Если Не ЗначениеЗаполнено(Выборка.НоменклатураПредставление) Тогда
			СтруктураШапки.Вставить("НоменклатураПредставление", Выборка.НоменклатураНаименование);
		КонецЕсли; 

		ОбластьШапка.Параметры.Заполнить(СтруктураШапки);
	
		ТабДок.Вывести(ОбластьШапка);
			
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	КонецЦикла; 
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;

КонецФункции // ПечатьЭтикеток()

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
