
#Область ОбработчикиСобытий

&ИзменениеИКонтроль("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
#Удаление
	АкцизныеМаркиЕГАИС.ПроверитьЗаполнениеАкцизныхМарок(ЭтотОбъект, Отказ);
#КонецУдаления
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПричинаПостановкиНаБаланс");
	КонецЕсли;
	
	Если ПричинаПостановкиНаБаланс <> Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица Тогда
		МассивНепроверяемыхРеквизитов.Добавить("АктСписанияЕГАИС");
	КонецЕсли;
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2
		Или ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоПоСправке1");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.НомерТТН");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ДатаТТН");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ДатаРозлива");
	КонецЕсли;
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1
		Или ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Справка2");
	КонецЕсли;
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	бг_ИнициализироватьДополнительныеСвойства();
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.АктПостановкиНаБалансЕГАИС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
#Вставка
	// Снимаем флаги автоматической записи, чтобы вызываемый ниже метод ИнтеграцияИС.ЗаписатьНаборыЗаписей()
	// не вызывал дополнительную запись пустых наборов регистра марок, которые лишний раз будут выгружаться в WMS.
	Движения.бг_ДвижениеМарок.Записывать = Ложь;
#КонецВставки
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ЭтотОбъект.ДополнительныеСвойства);
	
#Вставка
	МенеджерДокумента = Документы.АктПостановкиНаБалансЕГАИС;
	Если МенеджерДокумента.бг_СтатусЯвляетсяПодтвержденным(ДополнительныеСвойства.бг_ТекущийСтатус) Тогда
		МенеджерДокумента.бг_АктуализироватьСерииСправки(Ссылка);
	КонецЕсли;
	бг_СформироватьДвиженияПоМаркам(Отказ);
#КонецВставки
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ИнициализироватьДополнительныеСвойства()
	
	// бг_ТекущийСтатус
	ТекущийСтатус = РегистрыСведений.СтатусыДокументовЕГАИС.ТекущееСостояние(Ссылка).Статус;
	ДополнительныеСвойства.Вставить("бг_ТекущийСтатус", ТекущийСтатус);
	
	// бг_ФормироватьДвиженияПоМаркам
	ФормироватьДвиженияПоМаркам = бг_ИнтеграцияЕГАИСПовтИсп.ИспользоватьМеханизмДвиженийМарок(Ссылка);
	ДополнительныеСвойства.Вставить("бг_ФормироватьДвиженияПоМаркам", ФормироватьДвиженияПоМаркам);
	
	// бг_ЭтоКонтролерЕГАИС
	ДополнительныеСвойства.Вставить("бг_ЭтоКонтролерЕГАИС", Пользователи.РолиДоступны("бг_КонтролерЕГАИС"));
	
КонецПроцедуры

#Область ДвиженияПоМаркам

Процедура бг_СформироватьДвиженияПоМаркам(Отказ)
	
	Если Отказ Или Не ДополнительныеСвойства.бг_ФормироватьДвиженияПоМаркам Тогда
		Возврат;
	КонецЕсли;
	
	Если Документы.АктПостановкиНаБалансЕГАИС.бг_СтатусЯвляетсяПодтвержденным(ДополнительныеСвойства.бг_ТекущийСтатус) Тогда
		
		ДанныеПриходуемыхШтрихкодов = Документы.АктПостановкиНаБалансЕГАИС.бг_ДанныеПриходуемыхШтрихкодов(
			Ссылка,
			Ложь);
			
		бг_ПроверитьСоответствиеМарокТоварам(Отказ, ДанныеПриходуемыхШтрихкодов);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		бг_ОтразитьДвиженияМарок(ДанныеПриходуемыхШтрихкодов.Марки);
		
	Иначе
		
		Движения.бг_ДвижениеМарок.Очистить();
		Движения.бг_ДвижениеМарок.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ПроверитьСоответствиеМарокТоварам(Отказ, ДанныеПриходуемыхШтрихкодов)
	
	Если ДанныеПриходуемыхШтрихкодов = Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Не найдены данные списываемых марок, проведение невозможно.'"),
			Ссылка,,,
			Отказ);
			
		Возврат;
	КонецЕсли;
	
	Документы.АктПостановкиНаБалансЕГАИС.бг_МаркиСоответствуютАлкогольнойПродукцииАкта(
		ДанныеПриходуемыхШтрихкодов.Марки,
		Ссылка,
		Отказ);
		
КонецПроцедуры

Процедура бг_ОтразитьДвиженияМарок(Марки)
	
	СтатусыМарокПоОперации = Перечисления.бг_СтатусыАкцизныхМарок.СтатусыПоОперации(Метаданные().Имя);
	СтатусМаркиСтатусНаБалансе = СтатусыМарокПоОперации.СтатусНаБалансе;
	
	ДатаДвиженияМарок = Документы.АктПостановкиНаБалансЕГАИС.бг_ДатаДвиженияМарок(
		Ссылка,
		Дата,
		ДатаРегистрацииДвижений);
	
	Для каждого СтрокаМарки Из Марки Цикл
		Запись = Движения.бг_ДвижениеМарок.Добавить();
		Запись.Период = ДатаДвиженияМарок;
		ЗаполнитьЗначенияСвойств(Запись, СтрокаМарки);
		Запись.СтатусМарки = СтатусМаркиСтатусНаБалансе;
	КонецЦикла;
	
	Движения.бг_ДвижениеМарок.Записать();
	
КонецПроцедуры

#КонецОбласти // Конец ДвиженияПоМаркам

#КонецОбласти
