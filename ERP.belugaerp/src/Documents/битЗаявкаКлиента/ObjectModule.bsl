#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ИсточникЗаказа <> Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КодНСИ");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ТоварнаяКатегория");
	КонецЕсли;
	
	Если ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент Тогда
		
		ВыборкаДляПроверки = ВыборкаТоварныхКатегорийДляПроверки();
		
		Пока ВыборкаДляПроверки.Следующий() Цикл
			Если ВыборкаДляПроверки.ЕстьПовторяющиесяСтроки Тогда
				ШаблонСообщения = 
					НСтр("ru = 'Стр. %1 списка ""Товары"". Товарная категория ""%2"" была введена в документе ранее, см. стр. %3.'"); 
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					ВыборкаДляПроверки.НомерСтроки,
					ВыборкаДляПроверки.ТоварнаяКатегория,
					ВыборкаДляПроверки.НомерСтрокиДубль);
				
				ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Объект.Товары",
					ВыборкаДляПроверки.НомерСтроки,
					"ТоварнаяКатегория");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, ПутьКДанным, ,Отказ);   
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	бг_УстановитьГУИДПредзаказаСобственногоКонтрагента();
	бг_УстановитьКодПозицииЗаказаВСтрокахТабличнойЧасти();
	бг_УстановитьПлановуюДатуДоставки();
	
	Если РегистрыСведений.бг_ОчередьЗаявокКлиентовКОтправкеOrderSP.ПоЗаявкеТребуетсяОтправкаOrderSP(ЭтотОбъект) Тогда
		ДанныеДоИзменения = бг_ДанныеДоИзменения();
		РегистрыСведений.бг_ОчередьЗаявокКлиентовКОтправкеOrderSP.ЗарегистрироватьЗаявкуКлиентаВОчередьКОтправкеOrderSP(
				ДанныеДоИзменения, ЭтотОбъект);
	КонецЕсли;
	
	СтатусЗаявкиКлиентаСобственногоКонтрагента = 
		Документы.битЗаявкаКлиента.бг_СтатусЗаявкиКлиентаСобственногоКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Документы.битЗаявкаКлиента.СинхронизироватьЗависимыеДокументы(ЭтотОбъект, Отказ);
	
	Если ДополнительныеСвойства.Свойство("бг_ДобавитьЗаявкуКлиентаВОчередьКОтправкеOrderSP") Тогда
		РегистрыСведений.бг_ОчередьЗаявокКлиентовКОтправкеOrderSP.ДобавитьЗаявкуКлиентаВОчередьКОтправкеOrderSP(
			ДополнительныеСвойства.бг_ДобавитьЗаявкуКлиентаВОчередьКОтправкеOrderSP.ЗаявкаКлиента);
	КонецЕсли;

КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	КодSAP = "";
	НомерПоДаннымКлиента = "";
	ДатаПоДаннымКлиента = '00010101';
	ДатаОтправкиOrderSP = '00010101';
	ПлановаяДатаДоставки = '00010101';
	ГУИДЗаказаСПортала = "";
	ПрисоединенныйФайлВходящегоПисьма = Неопределено; 
	ВиртуальныйЗаказ = Ложь;
	Исходный = Ложь;
	Ответственный = Неопределено;
	СтатусЗаявкиКлиентаСобственногоКонтрагента = Неопределено;
	ДатаОтмены = '00010101';
	ДатаПодтверждения = '00010101';
	ГУИДПредзаказаСобственногоКонтрагента = "";
	ПротоколЗагрузки = "";
	
	Если ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент Тогда
		Для Каждого СтрокаТЧ Из Товары Цикл
			СтрокаТЧ.Количество = 0;
			СтрокаТЧ.Примечание = "";
		КонецЦикла;
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Если ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент Тогда
		Если ЗначениеЗаполнено(Организация) Тогда
			КодОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "бг_Тикер");
		КонецЕсли;
		Если ЗначениеЗаполнено(Контрагент) Тогда
			КодКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "бг_Тикер");
		КонецЕсли;
		Если ДатаДоставки < ТекущаяДата Тогда
			ДатаДоставки = КонецДня(ТекущаяДата) + 1;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Операция) Тогда
		Операция = Перечисления.бг_ОперацииЗаявокКлиентов.Резервирование;
	КонецЕсли;
	
	Если ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент 
		И Не ЗначениеЗаполнено(СтатусЗаявкиКлиентаСобственногоКонтрагента) Тогда
		СтатусЗаявкиКлиентаСобственногоКонтрагента = 
			Перечисления.бг_СтатусыЗаявокКлиентовСобственныхКонтрагентов.КОбработке;
	КонецЕсли;
	
КонецПроцедуры

Функция бг_ДанныеДоИзменения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&СоставРеквизитов
		|ИЗ
		|	Документ.битЗаявкаКлиента КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";
	
	СоставРеквизитов = 
		"ПлановаяДатаДоставки, 
		|Проведен";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СоставРеквизитов", СоставРеквизитов);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Реквизиты = Новый Структура(СоставРеквизитов);
		ЗаполнитьЗначенияСвойств(Реквизиты, ЭтотОбъект);
	Иначе
		Выборка = РезультатЗапроса[0].Выбрать();
		Выборка.Следующий();
		
		Реквизиты = Новый Структура(СоставРеквизитов);
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	
	ДанныеДоИзменения = Новый Структура;
	
	ДанныеДоИзменения.Вставить("Реквизиты", Реквизиты);
	
	Возврат ДанныеДоИзменения;
	
КонецФункции

Процедура бг_УстановитьГУИДПредзаказаСобственногоКонтрагента()
	
	Если ЭтоНовый()
		И ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.СобственныйКонтрагент 
		И Не ЗначениеЗаполнено(ГУИДПредзаказаСобственногоКонтрагента) Тогда
		// Интерактивное добавление.
		Если ПолучитьСсылкуНового().Пустая() Тогда
			УстановитьСсылкуНового(Документы.битЗаявкаКлиента.ПолучитьСсылку());
		КонецЕсли;
		ГУИДПредзаказаСобственногоКонтрагента = Строка(ПолучитьСсылкуНового().УникальныйИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_УстановитьКодПозицииЗаказаВСтрокахТабличнойЧасти()
	
	СтрокиБезКодаПозиции = Товары.НайтиСтроки(Новый Структура("КодПозицииЗаказа", ""));
	
	ТекущийКод = МаксимальныйКодПозицииЗаказа();
	ДлинаКодаПозиции = 5;
	
	Если СтрокиБезКодаПозиции.Количество() > 0 Тогда
		
		ТекущийКод = МаксимальныйКодПозицииЗаказа();
		
		Для Каждого СтрокаТовары Из СтрокиБезКодаПозиции Цикл
			ТекущийКод = ТекущийКод + 1;
			СтрокаТовары.КодПозицииЗаказа = Прав("00000" + Формат(ТекущийКод, "ЧГ=0"), ДлинаКодаПозиции);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_УстановитьПлановуюДатуДоставки()

	Если Не ЗначениеЗаполнено(ПлановаяДатаДоставки)
		И (ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.WINELAB_SAP 
			Или ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.WINELAB_SAP_СONSOLIDATED) Тогда 
			
		Если Товары.Количество() > 0 
			И ЗначениеЗаполнено(Товары[0].ДатаОтгрузки) Тогда
			ПлановаяДатаДоставки = Товары[0].ДатаОтгрузки;
		ИначеЕсли ЗначениеЗаполнено(ДатаДоставки) Тогда
			ПлановаяДатаДоставки = ДатаДоставки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция МаксимальныйКодПозицииЗаказа()
	
	МаксимальныйКод = 0;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		ТекущийКодСтрокой = СтрокаТЧ.КодПозицииЗаказа;
		ТекущийКодЧислом = 0;
		ПрисвоитьЧисловоеЗначениеПриЗаполненииТЧ(ТекущийКодЧислом, ТекущийКодСтрокой);
		
		Если ТекущийКодЧислом > МаксимальныйКод Тогда
			МаксимальныйКод = ТекущийКодЧислом;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МаксимальныйКод;
	
КонецФункции

Процедура ПрисвоитьЧисловоеЗначениеПриЗаполненииТЧ(Приемник, ИсточникЧисловогоЗначения)
	
	ЗначениеДляПриведения = СтрЗаменить(ИсточникЧисловогоЗначения, " ", "");
	Если ЗначениеЗаполнено(ЗначениеДляПриведения) Тогда
		ДопустимыеТипы = Новый Массив;
		ДопустимыеТипы.Добавить(Тип("Число"));
		ДопустимыеТипы.Добавить(Тип("ОписаниеТипов"));
		ОписаниеТиповЧисло = Новый ОписаниеТипов(ДопустимыеТипы);
		ПриведенноеЗначение = ОписаниеТиповЧисло.ПривестиЗначение(ЗначениеДляПриведения);
		Если Не ПриведенноеЗначение = Неопределено Тогда
			Приемник = ПриведенноеЗначение;
		КонецЕсли;
	Иначе
		Приемник = 0;
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборкаТоварныхКатегорийДляПроверки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ТоварнаяКатегория КАК ТоварнаяКатегория
	|ПОМЕСТИТЬ ТоварныеКатегории
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныеКатегории.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	МИНИМУМ(ТоварныеКатегории.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ДублиСтрок
	|ИЗ
	|	ТоварныеКатегории КАК ТоварныеКатегории
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварныеКатегории.ТоварнаяКатегория
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТоварныеКатегории.НомерСтроки) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныеКатегории.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	ТоварныеКатегории.НомерСтроки КАК НомерСтроки,
	|	ДублиСтрок.НомерСтроки КАК НомерСтрокиДубль,
	|	ВЫБОР
	|		КОГДА ДублиСтрок.НомерСтроки ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяСтроки
	|ИЗ
	|	ТоварныеКатегории КАК ТоварныеКатегории
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДублиСтрок КАК ДублиСтрок
	|		ПО ТоварныеКатегории.ТоварнаяКатегория = ДублиСтрок.ТоварнаяКатегория
	|			И ТоварныеКатегории.НомерСтроки > ДублиСтрок.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#КонецЕсли
