#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	бг_ДобавитьЭлементыАкциза();
КонецПроцедуры

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьКнопкуКорректировкиСкидок();
	 бг_ДобавитьКомандуСоздатьОрдерНаОтражениеИзлишковТоваров();
	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_ТоварыНоменклатураПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыКоличествоУпаковокПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыУпаковкаПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_КорректировкаСкидок(Команда)

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресВоВременномХранилище", бг_АдресДанныхДляКорректировкиСкидок());
	ПараметрыОткрытия.Вставить("ДокументОснование", Объект.ДокументОснование);
	ПараметрыОткрытия.Вставить("КодыСтрокБюджета", Объект.бг_КодыСтрокБюджета);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("бг_КорректировкаСкидокЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.КорректировкаРеализации.Форма.бг_ФормаКорректировкаСкидок", 
		ПараметрыОткрытия, , , , ,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция бг_АдресДанныхДляКорректировкиСкидок()

	Данные = Новый Структура;
	Данные.Вставить("Товары", Объект.Товары.Выгрузить());
	Данные.Вставить("бг_СкидкиНаценки", Объект.бг_СкидкиНаценки.Выгрузить());

	Возврат ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);

КонецФункции

&НаСервере
Процедура бг_КорректировкаСкидокЗавершение(ВозвращенноеЗначение, ДополнительныеПараметры) Экспорт

	Если ВозвращенноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(ВозвращенноеЗначение);
	ДеревоСкидок = СтруктураДанных.ДеревоСкидок;
	Объект.бг_КодыСтрокБюджета = СтруктураДанных.КодыСтрокБюджета;
	
	Объект.бг_СкидкиНаценки.Очистить();
	Для Каждого СтрокаДерева Из ДеревоСкидок.Строки Цикл
		
		Если СтрокаДерева.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиТоваров = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", СтрокаДерева.Номенклатура));
		Для Каждого СтрокаТовара Из СтрокиТоваров Цикл
			СтрокаТовара.Цена = СтрокаДерева.Цена - СтрокаДерева.СуммаСкидкиНаценки / СтрокаДерева.Количество;
			
			СтрокаТовара.Сумма = СтрокаТовара.Цена * СтрокаТовара.Количество;
			
			СтруктураДействий = Новый Структура;
	
			СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(Объект);
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			
			СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
			СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
			
			ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(
				Объект.Товары, 
				СтруктураДействий, 
				КэшированныеЗначения);
		КонецЦикла; 
		
		Для Каждого Подстрока Из СтрокаДерева.Строки Цикл
			НоваяСтрока = Объект.бг_СкидкиНаценки.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Подстрока, , "Номенклатура");
			НоваяСтрока.Сумма = Подстрока.СуммаСкидкиНаценки;
			НоваяСтрока.ЦенаБазовая = СтрокаДерева.Цена;
			
		КонецЦикла; 
	КонецЦикла; 
	
        
КонецПроцедуры

&НаКлиенте
Процедура бг_СоздатьОрдерНаОтражениеИзлишковТоваров(Команда)

	Если Не Объект.Проведен Или Модифицированность Тогда
		
		Кнопки = Новый СписокЗначений;
		
		ТекстВопроса = бг_ОбщегоНазначенияСервер.СтрокаБезЛишнихСимволов(
			НСтр("ru = 'Для выполнения команды ""Ордер на отражение излишков товаров ""
				|документ будет проведен. Продолжить?'"));
		
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Провести и продолжить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		Обработчик = Новый ОписаниеОповещения(
			"бг_бг_ОткрытьОрдерНаОтражениеИзлишковТоваровЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки);
	Иначе
		бг_ОткрытьОрдерНаОтражениеИзлишковТоваров();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура бг_бг_ОткрытьОрдерНаОтражениеИзлишковТоваровЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	Иначе
		бг_ОткрытьОрдерНаОтражениеИзлишковТоваров();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОткрытьОрдерНаОтражениеИзлишковТоваров()

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Основание", Объект.Ссылка);
	
	ОткрытьФорму("Документ.ОрдерНаОтражениеИзлишковТоваров.Форма.ФормаДокумента", 
		ПараметрыОткрытия,,,,,,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаСервере
&После("ДатаПриИзмененииСервер")
Процедура бг_ДатаПриИзмененииСервер()
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
&После("ОрганизацияПриИзмененииСервер")
Процедура бг_ОрганизацияПриИзмененииСервер()
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
&После("ОбработкаВыбораПодборНаСервере")
Процедура бг_ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
&После("НалогообложениеНДСПриИзмененииСервер")
Процедура бг_НалогообложениеНДСПриИзмененииСервер()
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура бг_ДобавитьЭлементыАкциза()

	бг_ТоварыСуммаАкциза = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
	  ЭтотОбъект,
	  "бг_ТоварыСуммаАкциза", 
	  Элементы.Товары, 
	  "Объект.Товары.бг_СуммаАкциза", 
	  , 
	  Элементы.ТоварыСуммаНДС);

	бг_РасхожденияСуммаАкциза = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
	  ЭтотОбъект,
	  "бг_РасхожденияСуммаАкциза", 
	  Элементы.Расхождения, 
	  "Объект.Расхождения.бг_СуммаАкциза", 
	  , 
	  Элементы.РасхожденияСуммаНДС);

	бг_РасхожденияСуммаАкциза.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьСуммуАкцизаПоСтроке()
	ВыделенныеСтроки = Новый Массив;
	ВыделенныеСтроки.Добавить(Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока));
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары, ВыделенныеСтроки);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКнопкуКорректировкиСкидок()

	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(
		ЭтотОбъект,
		"бг_КорректировкаСкидок",
		Элементы.ТоварыКоманднаяПанель,
		НСтр("ru = 'Корректировка скидок'"),
		"бг_КорректировкаСкидок",
		"бг_КорректировкаСкидок",
		,
		ВидКнопкиФормы.КнопкаКоманднойПанели);

КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуСоздатьОрдерНаОтражениеИзлишковТоваров()
	
	ИмяКоманды = "бг_СоздатьОрдерНаОтражениеИзлишковТоваров";
	ЗаголовокКоманды = НСтр("ru = 'Ордер на отражение излишков товаров';
							|en = 'Ордер на отражение излишков товаров'");
	
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(
		ЭтотОбъект,
		ИмяКоманды,
		Элементы.ПодменюСоздатьНаОсновании,
		ЗаголовокКоманды,
		ИмяКоманды,
		ИмяКоманды,,
		ВидКнопкиФормы.КнопкаКоманднойПанели);
		
КонецПроцедуры

#КонецОбласти
