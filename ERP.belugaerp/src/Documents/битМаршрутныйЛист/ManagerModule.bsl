#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает наличие проведенных маршрутных листов или рейсов по переданному документу в соответствии с отбором
//  
// Параметры:
//  Документ - ДокументСсылка - Документ, который может быть включен в маршрутный лист или рейс
//  ВидОтбора - Строка - "", "Все" - все документы; "ТолькоПоследняяМиля" документы с типом рейса "по регионам последняя миля";
//  					  "БезПоследнейМили" не включая документы с типом рейса "по регионам последняя миля"
//
// Возвращаемое значение:
//  Булево - наличие документов
//
Функция ЕстьМашрутныеЛистыПоДокументу(Документ, ВидОтбора = "") Экспорт  
	УстановитьПривилегированныйРежим(Истина);
	Возврат МаршрутныйЛистПоДокументу(Документ, ВидОтбора).Количество() > 0;
КонецФункции

// Возвращает проведенные маршрутные листы и рейсы по переданному документу в соответствии с отбором
//  
// Параметры:
//  Документ - ДокументСсылка - Документ, который может быть включен в маршрутный лист или рейс
//  ВидОтбора - Строка - "", "Все" - все документы; "ТолькоПоследняяМиля" документы с типом рейса "по регионам последняя миля";
//  					  "БезПоследнейМили" не включая документы с типом рейса "по регионам последняя миля"
//
// Возвращаемое значение:
//  Массив - ДокументСсылка.битМаршрутныйЛист - маршрутные листы и рейсы, в которые включен документ
//
Функция МаршрутныйЛистПоДокументу(Документ, ВидОтбора = "") Экспорт  
	ТипыПеревозок = Новый Массив;
	Если ВидОтбора = "Все" Или ВидОтбора = "" Тогда
		ОтборПоТипуПеревозок = 1;
	ИначеЕсли ВидОтбора = "ТолькоПоследняяМиля" Тогда
		ТипыПеревозок.Добавить(Перечисления.бг_ТипыРейсов.ПоРегионамПоследняяМиля);
		ОтборПоТипуПеревозок = 2;
	ИначеЕсли ВидОтбора = "БезПоследнейМили" Тогда
		ТипыПеревозок.Добавить(Перечисления.бг_ТипыРейсов.ПоРегионамПоследняяМиля);
		ОтборПоТипуПеревозок = 3;
	Иначе
		ОтборПоТипуПеревозок = 0;
	КонецЕсли;
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ТипыПеревозок", ТипыПеревозок);
	Запрос.УстановитьПараметр("ОтборПоТипуПеревозок", ОтборПоТипуПеревозок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		битМаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|	ГДЕ
	|		битМаршрутныйЛистЗаказы.Заказ = &Документ
	|		И ВЫБОР
	|				КОГДА &ОтборПоТипуПеревозок = 1
	|					ТОГДА ИСТИНА
	|				КОГДА &ОтборПоТипуПеревозок = 2
	|					ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ТипРейса В (&ТипыПеревозок)
	|				КОГДА &ОтборПоТипуПеревозок = 3
	|					ТОГДА НЕ битМаршрутныйЛистЗаказы.Ссылка.ТипРейса В (&ТипыПеревозок)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		битМаршрутныйЛистЗаказы.Ссылка
	|	ИЗ
	|		Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|	ГДЕ
	|		битМаршрутныйЛистЗаказы.ДокументОтгрузки = &Документ
	|		И ВЫБОР
	|				КОГДА &ОтборПоТипуПеревозок = 1
	|					ТОГДА ИСТИНА
	|				КОГДА &ОтборПоТипуПеревозок = 2
	|					ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ТипРейса В (&ТипыПеревозок)
	|				КОГДА &ОтборПоТипуПеревозок = 3
	|					ТОГДА НЕ битМаршрутныйЛистЗаказы.Ссылка.ТипРейса В (&ТипыПеревозок)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка";
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат Результат;
КонецФункции

// Возвращает дату, после которой запрещено редактировать документ с учетом установленной константы
// ДопустимаяГлубинаРедактированияРейсов
//  
// Параметры:
//  МаршрутныйЛист - ДокументСсылка.битМаршрутныйЛист - рейс, маршрутный лист
//  
// Возвращаемое значение:
//  Дата, Неопределено - Момент, начиная с которого нельзя редактировать документ без соответствующих прав, 
//		если не удалось определить вернет Неопределено
//
Функция ДатаЗапретаРедактированияДокумента(МаршуртныйЛист) Экспорт 
	Результат = Неопределено;
	КоличествоДнейДоЗапрета = РегистрыСведений.бг_ЗначенияДополнительныхКонстант.ЗначениеКонстанты("ДопустимаяГлубинаРедактированияРейсов");
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("Ссылка", МаршуртныйЛист);
	Запрос.УстановитьПараметр("КоличествоДнейДоЗапрета", КоличествоДнейДоЗапрета);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДОБАВИТЬКДАТЕ(бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиПо, ДЕНЬ, &КоличествоДнейДоЗапрета) КАК ПлановаяДатаДоставкиПо
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК бг_ТранспортнаяИнформация
	|		ПО битМаршрутныйЛистЗаказы.Заказ = бг_ТранспортнаяИнформация.Объект
	|			И (НЕ бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиПо = ДАТАВРЕМЯ(1, 1, 1))
	|			И (битМаршрутныйЛистЗаказы.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлановаяДатаДоставкиПо";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.ПлановаяДатаДоставкиПо;
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Возвращает ссылку на сформированный на основании маршрутного листа рейс
//
// Параметры:
//  МаршрутныйЛистПлан - ДокументСсылка.битМаршрутныйЛист - маршрутный лист
//  
// Возвращаемое значение:
//  ДокументСсылка.битМаршрутныйЛист - рейс
//
Функция МаршрутныйЛистРейс(МаршрутныйЛистПлан) Экспорт
	Если Не ЗначениеЗаполнено(МаршрутныйЛистПлан) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	МаршрутныйЛист.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК МаршрутныйЛист
	|ГДЕ
	|	МаршрутныйЛист.ДокументОснование = &ДокументОснование
	|	И МаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)";
	Запрос.УстановитьПараметр("ДокументОснование", МаршрутныйЛистПлан);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает обобщенные данные заказов, подобранных в маршрутный лист
//
// Параметры:
//  Заказы - Массив - Содержит ссылки на заказы, подобранные в маршрутный лист
//  
// Возвращаемое значение:
//  Структура - обобщенные данные по заказам
//
Функция ДанныеЗаказов(Заказы) Экспорт
	ДанныеЗаказов = Новый Структура;
	ДанныеЗаказов.Вставить("Сумма", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказКлиента.СуммаДокумента КАК Сумма
	|ПОМЕСТИТЬ ДанныеЗаказов
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&Заказы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщику.СуммаДокумента
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка В(&Заказы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ДанныеЗаказов.Сумма), 0) КАК Сумма
	|ИЗ
	|	ДанныеЗаказов КАК ДанныеЗаказов";
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЗаказов, Выборка);
	КонецЕсли;
	
	Возврат ДанныеЗаказов;
КонецФункции

// Возвращает обобщенные данные документов отгрузки, подобранных в маршрутный лист
//
// Параметры:
//  ДокументыОтгрузки - Массив - Содержит ссылки на документы отгрузки, подобранные в маршрутный лист
//  
// Возвращаемое значение:
//  Структура - обобщенные данные по документам отгрузки, содержит поля
//		*Сумма - Число - итоговая сумма документов
//
Функция ДанныеДокументовОтгрузки(ДокументыОтгрузки) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Сумма", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ДанныеДокументов.Сумма), 0) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.СуммаДокумента КАК Сумма
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка В(&ДокументыОтгрузки)
	|			
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПередачаТоваровХранителю.СуммаДокумента
	|	ИЗ
	|		Документ.ПередачаТоваровХранителю КАК ПередачаТоваровХранителю
	|	ГДЕ
	|		ПередачаТоваровХранителю.Ссылка В(&ДокументыОтгрузки)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриобретениеТоваровУслуг.СуммаДокумента
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|	ГДЕ
	|		ПриобретениеТоваровУслуг.Ссылка В(&ДокументыОтгрузки)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтКлиента.СуммаДокумента
	|	ИЗ
	|		Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|	ГДЕ
	|		ВозвратТоваровОтКлиента.Ссылка В(&ДокументыОтгрузки)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровПоставщику.СуммаДокумента
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|	ГДЕ
	|		ВозвратТоваровПоставщику.Ссылка В(&ДокументыОтгрузки)) КАК ДанныеДокументов";
	Запрос.УстановитьПараметр("ДокументыОтгрузки", ДокументыОтгрузки);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает актуальный статус рейса
//
// Параметры:
//  Рейс - ДокументСсылка.битМаршрутныйЛист - Рейс
//  
// Возвращаемое значение:
//  СтатусРейса - ПеречислениеСсылка.бг_СтатусыРейсов - актуальный статус
//
Функция АктуальныйСтатусРейса(Рейс) Экспорт
	Если Не ЗначениеЗаполнено(Рейс) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыРейсовСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.бг_СтатусыРейсов.СрезПоследних(, Документ = &Документ) КАК СтатусыРейсовСрезПоследних";
	Запрос.УстановитьПараметр("Документ", Рейс);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Статус;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает дату установки статуса рейса
//
// Параметры:
//  Рейс - ДокументСсылка.битМаршрутныйЛист - Рейс
//  Статус - ПеречислениеСсылка.бг_СтатусыРейсов - Статус пейса
//  
// Возвращаемое значение:
//  ДатаУстановкиСтатуса - ДатаВремя - дата установки статуса
//
Функция ДатаУстановкиСтатусаРейса(Рейс, Статус) Экспорт
	Если Не ЗначениеЗаполнено(Рейс)
		Или Не ЗначениеЗаполнено(Статус) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатусыРейсов.Период КАК Период
	|ИЗ
	|	РегистрСведений.бг_СтатусыРейсов КАК СтатусыРейсов
	|ГДЕ
	|	СтатусыРейсов.Документ = &Документ
	|	И СтатусыРейсов.Статус = &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Запрос.УстановитьПараметр("Документ", Рейс);
	Запрос.УстановитьПараметр("Статус", Статус);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Период;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Устанавливает статус рейса
//
// Параметры:
//  Рейс - ДокументСсылка.битМаршрутныйЛист - Рейс
//  Статус - ПеречислениеСсылка.бг_СтатусыРейсов - Текущий статус
//
Процедура УстановитьСтатусРейса(Рейс, Статус) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Статус) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеАктуальныйСтатус = АктуальныйСтатусРейса(Рейс);
	Если ДанныеАктуальныйСтатус = Статус Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийПериод = ТекущаяДатаСеанса();
	
	НаборЗаписей = РегистрыСведений.бг_СтатусыРейсов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Рейс);
	НаборЗаписей.Отбор.Период.Установить(ТекущийПериод);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ТекущийПериод;
	НоваяЗапись.Документ = Рейс;
	НоваяЗапись.Статус = Статус;
	НоваяЗапись.Ответственный = Пользователи.ТекущийПользователь();
	
	НаборЗаписей.Записать();
КонецПроцедуры

// Добавляет в очередь отложенной обработки маршрутные листы для формирования / обновления связанных рейсов
//
// Параметры:
//  Ссылка - ДокументСсылка - Документ, после проведении которого требуется переформировать рейсы
//
Процедура ДобавитьДокументыДляОтложеннойОбработки(Ссылка) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстыЗапроса = ТекстыЗапросаМаршрутныеЛистыДляОтложеннойОбработки();
	
	ТекстЗапроса  = ТекстыЗапроса.Получить(ТипЗнч(Ссылка));
	Если ТекстЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.ДобавитьОбъект(Выборка.Ссылка,
			Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СформироватьРейсы);
	КонецЦикла;
КонецПроцедуры

// Интерфейс для отложенной обработки этапов производства
//
// Параметры:
//   Объект - ДокументСсылка.ЭтапПроизводства2_2
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//   Отказ - Булево - отказ от обработки
//
Процедура бг_ОтложеннаяОбработкаОбъекта(Объект, ВариантОбработки, Отказ,
	ДополнительныеСведения = Неопределено) Экспорт
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантОбработки = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СформироватьРейсы Тогда
		СформироватьОбновитьРейс(Объект);
	КонецЕсли;
КонецПроцедуры

// Определяет уехал автомобиль по рейсу или нет
//
// Параметры:
//  Рейс - ДокументОбъект.битМаршрутныйЛист, ДанныеФормыСтруктура 
//
// Возвращаемое значение:
//  Булево - признак отгрузки рейса
//
Функция РейсОтгружен(Рейс) Экспорт
	Если Рейс = Неопределено Тогда
		ЗагрузкаДатаУбытия = Дата(1, 1, 1);
	ИначеЕсли ТипЗнч(Рейс) = Тип("ДокументСсылка.битМаршрутныйЛист") Тогда
		ЗагрузкаДатаУбытия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Рейс, "ЗагрузкаДатаУбытия");
	Иначе
		ЗагрузкаДатаУбытия = Рейс.ЗагрузкаДатаУбытия;
	КонецЕсли;
	
	Возврат Не ЗагрузкаДатаУбытия = Дата(1, 1, 1);
КонецФункции

// Рассчитывает транспортные расходы, если необходимо
//
// Параметры:
//  МаршрутныйЛист - ДокументОбъект.битМаршрутныйЛист - Маршрутный лист
//
Процедура РассчитатьТранспортныеРасходы(МаршрутныйЛист, ВыводитьСообщения = Истина) Экспорт
	// Страхование невозмещаемое рассчитывается даже если стои флаг РучнаяКорректировкаТранспортныхРасходов
	Если МаршрутныйЛист.ВидДокумента = Перечисления.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист Тогда
		ДанныеДокументов = ДанныеЗаказов(МаршрутныйЛист.Заказы.Выгрузить().ВыгрузитьКолонку("Заказ"));
	ИначеЕсли Не РейсОтгружен(МаршрутныйЛист) Тогда 
		Возврат;
	Иначе 
		ДанныеДокументов = ДанныеДокументовОтгрузки(МаршрутныйЛист.Заказы.Выгрузить().ВыгрузитьКолонку("ДокументОтгрузки"));
	КонецЕсли;
	Ставка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МаршрутныйЛист.СтраховаяСтавка, "Ставка");
	СтраховаяПремия = ?(ЗначениеЗаполнено(Ставка), ДанныеДокументов.Сумма * Ставка / 100, 0);
	МаршрутныйЛист.ЗаполнитьСуммуТранспортныхРасходов(Перечисления.бг_ВидыТранспортныхРасходов.СтрахованиеНевозмещаемое, СтраховаяПремия);
	
	// Транспортные расходы
	Если МаршрутныйЛист.РучнаяКорректировкаТранспортныхРасходов Тогда
		Возврат;
	КонецЕсли;
	
	ТарифТК = ТарифТранспортнойКомпании(МаршрутныйЛист, ВыводитьСообщения);
	Если МаршрутныйЛист.ТранспортныеРасходыВозмещаются Тогда
		МаршрутныйЛист.ЗаполнитьСуммуТранспортныхРасходов(Перечисления.бг_ВидыТранспортныхРасходов.ТранспортныеРасходыВозмещаемые, ТарифТК);
		МаршрутныйЛист.ЗаполнитьСуммуТранспортныхРасходов(Перечисления.бг_ВидыТранспортныхРасходов.ТранспортныеРасходыНевозмещаемые, 0);
	Иначе
		МаршрутныйЛист.ЗаполнитьСуммуТранспортныхРасходов(Перечисления.бг_ВидыТранспортныхРасходов.ТранспортныеРасходыНевозмещаемые, ТарифТК);
		МаршрутныйЛист.ЗаполнитьСуммуТранспортныхРасходов(Перечисления.бг_ВидыТранспортныхРасходов.ТранспортныеРасходыВозмещаемые, 0);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиЗаказы(МаршрутныйЛист) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидДокумента", МаршрутныйЛист.ВидДокумента);
	Запрос.УстановитьПараметр("Склад", МаршрутныйЛист.Склад);
	Запрос.УстановитьПараметр("Заказы", МаршрутныйЛист.Заказы.Выгрузить(, "Заказ, ДокументОтгрузки, ПунктНазначения"));
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПаллета", бг_КонстантыПовтИсп.ЗначениеКонстанты("ЕдиницаПоКлассификаторуДляПаллеты"));
	
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗапросаЗаказы());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаРасчетРасстоянийДоПунктовРазгрузки());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаРасчетСлужебныхРеквизитовТабличнойЧастиЗаказы());
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Результат = Запрос.Выполнить();
	Выборка   = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если МаршрутныйЛист.ВидДокумента = Перечисления.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист Тогда
			ОтборСтроки  = Новый Структура("Заказ", Выборка.Заказ);
		Иначе
			ОтборСтроки  = Новый Структура("ДокументОтгрузки", Выборка.ДокументОтгрузки);
		КонецЕсли;
		
		СтрокиЗаказы = МаршрутныйЛист.Заказы.НайтиСтроки(ОтборСтроки);
		
		Для Каждого СтрокаЗаказ Из СтрокиЗаказы Цикл
			ЗаполнитьЗначенияСвойств(СтрокаЗаказ, Выборка);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

// Заполняет транспортную информацию заказов / документов отгрузки по данным документа
//
// Параметры:
//  МаршрутныйЛист - ДокументОбъект.битМаршрутныйЛист - Маршрутный лист
//
Процедура ЗаполнитьТранспортнуюИнформацию(МаршрутныйЛист) Экспорт
	Если МаршрутныйЛист.ТипРейса = Перечисления.бг_ТипыРейсов.ПоРегионамПоследняяМиля Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|			ТОГДА МаршрутныйЛистЗаказы.Заказ
	|		ИНАЧЕ МаршрутныйЛистЗаказы.ДокументОтгрузки
	|	КОНЕЦ КАК Объект,
	|	&Автомобиль КАК Автомобиль,
	|	&ДоговорНаВладение КАК ДоговорНаВладение,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК Перевозчик,
	|	&МыГрузимТовар КАК МыГрузимТовар,
	|	&ТипВладенияТС КАК ТипВладенияТС,
	|	&Прицеп КАК Прицеп,
	|	&ДоговорНаПеревозку КАК ДоговорНаПеревозку,
	|	&ДоговорСубподряда КАК ДоговорСубподряда,
	|	&ДоговорНаПрицеп КАК ДоговорНаВладениеПрицеп
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	&МаршрутныйЛистЗаказы КАК МаршрутныйЛистЗаказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Объект КАК Объект,
	|	Заказы.Автомобиль КАК ТранспортноеСредство,
	|	Заказы.ДоговорНаВладение КАК ДоговорНаВладение,
	|	Заказы.Перевозчик КАК Перевозчик,
	|	Заказы.Водитель КАК Водитель,
	|	ВЫБОР
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|				И НЕ Заказы.МыГрузимТовар
	|				И ЕСТЬNULL(ТранспортнаяИнформация.ВидПеревозки.Самовывоз, ЛОЖЬ)
	|				И ТИПЗНАЧЕНИЯ(Заказы.Объект) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Объект КАК Документ.РеализацияТоваровУслуг).Контрагент
	|		ИНАЧЕ ЕСТЬNULL(ТранспортнаяИнформация.Заказчик, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Заказчик,
	|	Заказы.Прицеп КАК Прицеп,
	|	Заказы.ДоговорНаВладениеПрицеп КАК ДоговорНаВладениеПрицеп,
	|	Заказы.ТипВладенияТС КАК ТипВладенияТС,
	|	Заказы.МыГрузимТовар КАК МыГрузимТовар,
	|	НЕ ТранспортнаяИнформация.Объект ЕСТЬ NULL КАК ЕстьТранспортнаяИнформация,
	|	ТранспортнаяИнформация.ТранспортноеСредство КАК ТранспортноеСредствоТекущее,
	|	ТранспортнаяИнформация.Представление КАК Представление,
	|	ТранспортнаяИнформация.ПунктНазначения КАК ПунктНазначения,
	|	ТранспортнаяИнформация.ЗначениеПоУмолчанию КАК ЗначениеПоУмолчанию,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ДоговорНаПеревозку, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорНаПеревозку,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ДоговорСубподряда, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорСубподряда,
	|	ТранспортнаяИнформация.Комментарий КАК Комментарий,
	|	ТранспортнаяИнформация.ВидПеревозки КАК ВидПеревозки,
	|	ТранспортнаяИнформация.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ТранспортнаяИнформация.ДоверенностьДата КАК ДоверенностьДата,
	|	ТранспортнаяИнформация.ДоверенностьЧерез КАК ДоверенностьЧерез,
	|	ТранспортнаяИнформация.НомерЗаказа КАК НомерЗаказа,
	|	ТранспортнаяИнформация.НомераПломб КАК НомераПломб,
	|	ТранспортнаяИнформация.ХранилищеДополнительныхСведений КАК ХранилищеДополнительныхСведений,
	|	ТранспортнаяИнформация.ХранилищеСведенийТНиСВ КАК ХранилищеСведенийТНиСВ,
	|	ТранспортнаяИнформация.ДатаТН КАК ДатаТН,
	|	ТранспортнаяИнформация.НомерТН КАК НомерТН,
	|	ТранспортнаяИнформация.ПорядковыйНомерТС КАК ПорядковыйНомерТС,
	|	ТранспортнаяИнформация.ОрганизаторПеревозки КАК ОрганизаторПеревозки,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиПо КАК ПлановаяДатаДоставкиПо
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО Заказы.Объект = ТранспортнаяИнформация.Объект
	|ГДЕ
	|	(Заказы.Автомобиль <> ЕСТЬNULL(ТранспортнаяИнформация.ТранспортноеСредство, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.ДоговорНаВладение <> ЕСТЬNULL(ТранспортнаяИнформация.ДоговорНаВладение, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.Водитель <> ЕСТЬNULL(ТранспортнаяИнформация.Водитель, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.Прицеп <> ЕСТЬNULL(ТранспортнаяИнформация.Прицеп, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.ДоговорНаВладениеПрицеп <> ЕСТЬNULL(ТранспортнаяИнформация.ДоговорНаВладениеПрицеп, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.ТипВладенияТС <> ЕСТЬNULL(ТранспортнаяИнформация.ТипВладенияТС, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.МыГрузимТовар <> ЕСТЬNULL(ТранспортнаяИнформация.МыГрузимТовар, НЕОПРЕДЕЛЕНО)
	|			ИЛИ Заказы.Перевозчик <> ЕСТЬNULL(ТранспортнаяИнформация.Перевозчик, НЕОПРЕДЕЛЕНО)
	|			ИЛИ (Заказы.ДоговорНаПеревозку <> ЕСТЬNULL(ТранспортнаяИнформация.ДоговорНаПеревозку, НЕОПРЕДЕЛЕНО) 
	|				И ЕСТЬNULL(ТранспортнаяИнформация.ДоговорНаПеревозку, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			ИЛИ (Заказы.ДоговорСубподряда <> ЕСТЬNULL(ТранспортнаяИнформация.ДоговорСубподряда, НЕОПРЕДЕЛЕНО) 
	|				И ЕСТЬNULL(ТранспортнаяИнформация.ДоговорСубподряда, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			ИЛИ &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|				И НЕ Заказы.МыГрузимТовар
	|				И ЕСТЬNULL(ТранспортнаяИнформация.ВидПеревозки.Самовывоз, ЛОЖЬ)
	|				И ТИПЗНАЧЕНИЯ(Заказы.Объект) = ТИП(Документ.РеализацияТоваровУслуг)
	|				И ВЫРАЗИТЬ(Заказы.Объект КАК Документ.РеализацияТоваровУслуг).Контрагент <> ТранспортнаяИнформация.Заказчик)";
	
	Запрос.УстановитьПараметр("МаршрутныйЛистЗаказы", МаршрутныйЛист.Заказы.Выгрузить(, "Заказ, ДокументОтгрузки"));
	Запрос.УстановитьПараметр("ВидДокумента",         МаршрутныйЛист.ВидДокумента);
	Запрос.УстановитьПараметр("Автомобиль",           МаршрутныйЛист.Автомобиль);
	Запрос.УстановитьПараметр("ДоговорНаПеревозку",   МаршрутныйЛист.ДоговорНаПеревозку);
	Запрос.УстановитьПараметр("ДоговорСубподряда",    МаршрутныйЛист.ДоговорСубподряда);
	Запрос.УстановитьПараметр("ДоговорНаВладение",    МаршрутныйЛист.ДоговорНаВладение);
	Запрос.УстановитьПараметр("Водитель",             МаршрутныйЛист.Водитель);
	Запрос.УстановитьПараметр("ТипВладенияТС",        МаршрутныйЛист.ТипВладенияТС);
	Запрос.УстановитьПараметр("Прицеп",               МаршрутныйЛист.Прицеп);
	Запрос.УстановитьПараметр("ДоговорНаПрицеп",      МаршрутныйЛист.ДоговорНаВладениеПрицеп);
	Запрос.УстановитьПараметр("МыГрузимТовар",        МаршрутныйЛист.МыГрузимТовар);
	Запрос.УстановитьПараметр("Перевозчик",           ?(ЗначениеЗаполнено(МаршрутныйЛист.Субподрядчик),
															МаршрутныйЛист.Субподрядчик, МаршрутныйЛист.Перевозчик));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		// Адаптер не умеет выгружать данные РС в случае если не установлен отбор по всем измерениям
		// Для корректной выгрузки если изменилось значение в измерении ТранспортноеСредство необходимо выполнить два действия:
		//  1. Очистить набор с исходным транспортным средством
		//  2. Сформировать новую запись
		
		Если Выборка.ЕстьТранспортнаяИнформация
			И Выборка.ТранспортноеСредство <> Выборка.ТранспортноеСредствоТекущее Тогда
			
			НаборЗаписей = РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
			НаборЗаписей.Отбор.ТранспортноеСредство.Установить(Выборка.ТранспортноеСредствоТекущее);
			НаборЗаписей.Записать();
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.бг_ТранспортнаяИнформация.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		НаборЗаписей.Отбор.ТранспортноеСредство.Установить(Выборка.ТранспортноеСредство);
		
		НоваяСтрокаНабор = НаборЗаписей.Добавить();
		НоваяСтрокаНабор.Объект = Выборка.Объект;
		НоваяСтрокаНабор.ТранспортноеСредство = Выборка.ТранспортноеСредство;
		
		Если Выборка.ЕстьТранспортнаяИнформация Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНабор, Выборка);
		ИначеЕсли МаршрутныйЛист.ВидДокумента = Перечисления.бг_ВидыМаршрутныхЛистов.Рейс Тогда
			ЗаполнитьТранспортнуюИнформациюПоЗаказу(НоваяСтрокаНабор, Выборка.Объект);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНабор, Выборка, "ТранспортноеСредство, Перевозчик, Водитель, Прицеп, ТипВладенияТС, МыГрузимТовар");
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНабор, Выборка, "ДоговорНаВладение, ДоговорНаВладениеПрицеп");
		
		Если ЗначениеЗаполнено(Выборка.Заказчик) Тогда
			НоваяСтрокаНабор.Заказчик = Выборка.Заказчик;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(МаршрутныйЛист.Субподрядчик) Тогда
			НоваяСтрокаНабор.ОрганизаторПеревозки = МаршрутныйЛист.Перевозчик;
			НоваяСтрокаНабор.Заказчик = МаршрутныйЛист.Перевозчик;
			НоваяСтрокаНабор.Перевозчик = МаршрутныйЛист.Субподрядчик;
		Иначе
			НоваяСтрокаНабор.ОрганизаторПеревозки = Неопределено;
			НоваяСтрокаНабор.Заказчик = МаршрутныйЛист.Организация;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.ДоговорНаПеревозку) Тогда
			НоваяСтрокаНабор.ДоговорНаПеревозку = МаршрутныйЛист.ДоговорНаПеревозку;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.ДоговорСубподряда) Тогда
			НоваяСтрокаНабор.ДоговорСубподряда = МаршрутныйЛист.ДоговорСубподряда;		
		КонецЕсли;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("бг_ПерезаполнятьРейсы", Ложь);
		НаборЗаписей.Записать();
	КонецЦикла;
КонецПроцедуры

// Возвращает базу распределения транспортных расходов между документами отгрузки
//
// Параметры:
//  Рейсы - Массив - Рейсы, для которых требуется выполнить распределение транспортных расходов
//  ДетализацияДоНоменклатуры - Булево - Признак детализации до отгружаемой номенклатуры
//  
// Возвращаемое значение:
//  БазаРаспределения - ТаблицаЗначений - База распределения транспортных расходов
//
Функция БазаРаспределенияТранспортныхРасходов(Рейсы, ДетализацияДоНоменклатуры = Ложь) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейсы", Рейсы);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияКороб", бг_КонстантыПовтИсп.ЗначениеКонстанты("ЕдиницаПоКлассификаторуДляКоробки"));
	Запрос.УстановитьПараметр("ВидДокумента", Перечисления.бг_ВидыМаршрутныхЛистов.Рейс);
	
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗапросаДокументыОтгрузки());
	МассивТекстовЗапроса.Добавить(ТекстЗапросаРасчетБазыРаспределенияТранспортныхРасходов(ДетализацияДоНоменклатуры));
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Результат = Запрос.Выполнить();
	БазаРаспределения = Результат.Выгрузить();
	
	Если БазаРаспределения.Количество() = 1
		И БазаРаспределения[0].Коэффициент = 0 Тогда
		БазаРаспределения[0].Коэффициент = 1;
	КонецЕсли;
	
	Возврат БазаРаспределения;
КонецФункции

Функция ДоговорНаПеревозкуПоУмолчанию(Организация, Перевозчик, ПеревозчикПартнер, ДоговорНаПеревозку) Экспорт
	
	СписокПартнеров = Новый СписокЗначений;
	ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(ПеревозчикПартнер, СписокПартнеров);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|
	|ГДЕ
	|	(НЕ ДоговорыКонтрагентов.ПометкаУдаления)
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ДоговорыКонтрагентов.Партнер В (&СписокПартнеров)
	|	И ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.Ссылка = &ТекущийДоговор
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|
	|ГДЕ
	|	(НЕ ДоговорыКонтрагентов.ПометкаУдаления)
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ДоговорыКонтрагентов.Партнер В (&СписокПартнеров)
	|	И ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|");
	Запрос.УстановитьПараметр("ТекущийДоговор",					ДоговорНаПеревозку);
	Запрос.УстановитьПараметр("СписокПартнеров",				СписокПартнеров);
	Запрос.УстановитьПараметр("Контрагент",						Перевозчик);
	Запрос.УстановитьПараметр("Организация",					Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если Не МассивРезультатов[0].Пустой() Тогда
		
		Выборка = МассивРезультатов[0].Выбрать();
		Выборка.Следующий();
		
		ДоговорПоУмолчанию = Выборка.Ссылка;
		
	Иначе
		Выборка = МассивРезультатов[1].Выбрать();
	
		Если Не Выборка.Следующий() Тогда
			ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ИначеЕсли Выборка.Количество() = 1 Тогда
			ДоговорПоУмолчанию = Выборка.Ссылка;
		Иначе
			ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДоговорПоУмолчанию;
	
КонецФункции

// Возвращает заказы, включенные в маршрутные листы, в которых все строки отменены
//
// Параметры:
//  МаршрутныеЛисты - Массив
//  НачалоПериода - Дата
//  КонецПериода - Дата
//
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция ОтмененныеЗаказыМаршрутныхЛистов(МаршрутныеЛисты = Неопределено,
					НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаршрутныйЛист.Ссылка КАК МаршрутныйЛист
	|ПОМЕСТИТЬ МаршрутныеЛисты
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК МаршрутныйЛист
	|ГДЕ
	|	МаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|	И ВЫБОР
	|			КОГДА НЕ &ЗаданСписокМаршрутныхЛистов
	|				ТОГДА НЕ МаршрутныйЛист.ПометкаУдаления
	|			ИНАЧЕ МаршрутныйЛист.Ссылка В (&МаршрутныеЛисты)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &НачалоПериода <> НЕОПРЕДЕЛЕНО
	|				ТОГДА МаршрутныйЛист.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &КонецПериода <> НЕОПРЕДЕЛЕНО
	|				ТОГДА МаршрутныйЛист.Дата <= &КонецПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаршрутныеЛисты.МаршрутныйЛист КАК МаршрутныйЛист,
	|	МаршрутныйЛистЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ЗаказыМаршрутизация
	|ИЗ
	|	МаршрутныеЛисты КАК МаршрутныеЛисты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО МаршрутныеЛисты.МаршрутныйЛист = МаршрутныйЛистЗаказы.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыМаршрутизация.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ЗаказыМаршрутизация.Заказ КАК Заказ
	|ИЗ
	|	ЗаказыМаршрутизация КАК ЗаказыМаршрутизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ЗаказыМаршрутизация.Заказ = ЗаказКлиентаТовары.Ссылка
	|			И (НЕ ЗаказКлиентаТовары.Отменено)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыМаршрутизация.Заказ) = ТИП(Документ.ЗаказКлиента)
	|	И ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыМаршрутизация.МаршрутныйЛист,
	|	ЗаказыМаршрутизация.Заказ
	|ИЗ
	|	ЗаказыМаршрутизация КАК ЗаказыМаршрутизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО ЗаказыМаршрутизация.Заказ = ЗаказПоставщикуТовары.Ссылка
	|			И (НЕ ЗаказПоставщикуТовары.Отменено)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыМаршрутизация.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|	И ЗаказПоставщикуТовары.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыМаршрутизация.МаршрутныйЛист,
	|	ЗаказыМаршрутизация.Заказ
	|ИЗ
	|	ЗаказыМаршрутизация КАК ЗаказыМаршрутизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
	|		ПО ЗаказыМаршрутизация.Заказ = ЗаказНаПеремещениеТовары.Ссылка
	|			И (НЕ ЗаказНаПеремещениеТовары.Отменено)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыМаршрутизация.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|	И ЗаказНаПеремещениеТовары.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("МаршрутныеЛисты", МаршрутныеЛисты);
	Запрос.УстановитьПараметр("ЗаданСписокМаршрутныхЛистов", МаршрутныеЛисты <> Неопределено);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
КонецФункции

#Область Команды

Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	Документы.битМаршрутныйЛист.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
КонецПроцедуры

// Добавляет команду создания документа "Маршрутный лист".
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - таблица команд
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - добавленная команда.
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.битМаршрутныйЛист) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.битМаршрутныйЛист.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.битМаршрутныйЛист);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Печать

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлановыйРеестрОтгрузок") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПлановыйРеестрОтгрузок",
			НСтр("ru = 'Плановый реестр отгрузок'"),
			СформироватьПлановыйРеестрОтгрузок(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаПеревозчику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаявкаПеревозчику",
			НСтр("ru = 'Заявка перевозчику'"),
			СформироватьЗаявкуПеревозчику(МассивОбъектов, ОбъектыПечати));
		УточнитьПараметрыОтправки(МассивОбъектов, ПараметрыВывода.ПараметрыОтправки, "ЗаявкаПеревозчику");
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнформационныйЛистВодителя") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИнформационныйЛистВодителя",
			НСтр("ru = 'Информационный лист водителя-экспедитора'"),
			СформироватьИнформационныйЛистВодителя(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаНаМаршрутизацию") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаявкаНаМаршрутизацию",
			НСтр("ru = 'Заявка на маршрутизацию'"),
			СформироватьПечатнуюФормуЗаявкаНаМаршрутизацию(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МаршрутныйЛист") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МаршрутныйЛист",
			НСтр("ru = 'Маршрутный лист'"),
			СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;	

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РейсСоШтрихкодамиТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РейсСоШтрихкодамиТТН",
			НСтр("ru = 'Рейс с QR-кодами ТТН'"),
			СформироватьПечатнуюФормуРейсСоШтрихкодамиТТН (МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПропускНаВывоз") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПропускНаВывоз",
			НСтр("ru = 'Пропуск на вывоз'"),
			СформироватьПропускНаВывоз(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПриемаПередачиТМЦ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктПриемаПередачиТМЦ",
			НСтр("ru = 'Акт приема передачи ТМЦ'"),
			СформироватьАктПриемаПередачиТМЦ(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МаршрутныйЛистВодителя") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МаршрутныйЛистВодителя",
			НСтр("ru = 'Маршрутный лист водителя'"),
			СформироватьМаршрутныйЛистВодителя(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_НарядЗадание") Тогда
		
		Заказы = ЗаказыКлиентов(МассивОбъектов);
		Обработки.бг_ПечатьНарядЗаданий.Печать(Заказы, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	КонецЕсли;

	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Если ПравоДоступа("Чтение", Метаданные.Документы.битМаршрутныйЛист) Тогда
		УсловиеВидимостиДляРейсов = Новый Структура;
		УсловиеВидимостиДляРейсов.Вставить(
			"Реквизит", 
			Метаданные.Документы.битМаршрутныйЛист.Реквизиты.ВидДокумента.Имя);
		УсловиеВидимостиДляРейсов.Вставить("ВидСравнения", ВидСравнения.Равно);
		УсловиеВидимостиДляРейсов.Вставить("Значение", Перечисления.бг_ВидыМаршрутныхЛистов.Рейс);
		
		// Комплект для маршрутного листа
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПлановыйРеестрОтгрузок,ЗаявкаПеревозчику,ИнформационныйЛистВодителя,ЗаявкаНаМаршрутизацию,МаршрутныйЛист";
		КомандаПечати.Представление = НСтр("ru = 'Комплект (маршрутный лист)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 10;
		
		// Комплект для рейса
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "РейсСоШтрихкодамиТТН,ПропускНаВывоз,АктПриемаПередачиТМЦ,МаршрутныйЛистВодителя";
		КомандаПечати.Представление = НСтр("ru = 'Комплект (рейс)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 20;
		
		// Плановый реестр отгрузок
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПлановыйРеестрОтгрузок";
		КомандаПечати.Представление = НСтр("ru = 'Плановый реестр отгрузок'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 30;

		// Заявка перевозчику
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ЗаявкаПеревозчику";
		КомандаПечати.Представление = НСтр("ru = 'Заявка перевозчику'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 40;

		// Информационный лист водителя
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ИнформационныйЛистВодителя";
		КомандаПечати.Представление = НСтр("ru = 'Информационный лист водителя-экспедитора'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 50;
		
		// Заявка на маршрутизацию
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ЗаявкаНаМаршрутизацию";
		КомандаПечати.Представление = НСтр("ru = 'Заявка на маршрутизацию'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 60;
		
		// Маршрутный лист
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "МаршрутныйЛист";
		КомандаПечати.Представление = НСтр("ru = 'Маршрутный лист'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 70;
		КомандаПечати.УсловияВидимости.Добавить(УсловиеВидимостиДляРейсов);
		
		// Рейс с QR-кодами ТТН
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "РейсСоШтрихкодамиТТН";
		КомандаПечати.Представление = НСтр("ru = 'Рейс с QR-кодами ТТН'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 80;
		
		// Пропуск на вывоз
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПропускНаВывоз";
		КомандаПечати.Представление = НСтр("ru = 'Пропуск на вывоз'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 90;
		
		// Акт приема передачи ТМЦ
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "АктПриемаПередачиТМЦ";
		КомандаПечати.Представление = НСтр("ru = 'Акт приема передачи ТМЦ'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 100;
		
		// Маршрутный лист водителя
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "МаршрутныйЛистВодителя";
		КомандаПечати.Представление = НСтр("ru = 'Маршрутный лист водителя'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 110;
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента) Тогда
		// Печать наряд-заданий
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "бг_НарядЗадание";
		КомандаПечати.Представление = НСтр("ru = 'Наряд задание на сборку'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 120;
	КонецЕсли;
КонецПроцедуры

// Заполняет структуру данными о получателях печатных форм.
// Параметры:
// 	СтруктураДанныхОбъектаПечати - см. ФормированиеПечатныхФорм.ЗаполнитьДанныеСтруктурыПолучателяПоТипуОбъекта.СтруктураДанныхОбъектаПечати
// 
Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "ПеревозчикПартнер";
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("ПеревозчикПартнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Перевозчик");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

&Вместо("ОбработкаПолученияПолейПредставления")
Процедура бг_ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ВидДокумента");
КонецПроцедуры

&Вместо("ОбработкаПолученияПредставления")
Процедура бг_ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Данные.ВидДокумента) Тогда
		СтандартнаяОбработка = Ложь;
		
		Представление = СтрШаблон(
				НСтр("ru = '%1 %2 от %3'"),
				Данные.ВидДокумента,
				Данные.Номер,
				Данные.Дата);
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеПечатныхФорм

Функция СформироватьПлановыйРеестрОтгрузок(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлановыйРеестрОтгрузок";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_ПлановыйРеестрОтгрузок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказКлиента.Контрагент КАК Грузополучатель,
	|	ЗаказКлиента.СуммаДокумента КАК Сумма,
	|	битМаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(битМаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(битМаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказНаПеремещение).СкладПолучатель.бг_ПунктНазначения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПунктРазгрузки,
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	ЗаказКлиента.Номер КАК НомерЗаказа
	|ПОМЕСТИТЬ втЗаказыПокупателей
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО битМаршрутныйЛистЗаказы.Заказ = ЗаказКлиента.Ссылка
	|			И (битМаршрутныйЛистЗаказы.Ссылка В (&МассивОбъектов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Ссылка КАК Заказ,
	|	СУММА(ЗаказКлиентаТовары.Номенклатура.Крепость * ЗаказКлиентаТовары.Номенклатура.ОбъемДАЛ * ЗаказКлиентаТовары.Количество) КАК ОбъемСпиртаДал
	|ПОМЕСТИТЬ втЗаказыОбъем
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				втЗаказыПокупателей.Заказ
	|			ИЗ
	|				втЗаказыПокупателей)
	|	И ЗаказКлиентаТовары.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗаказыПокупателей.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ЗаказыПокупателей.Заказ КАК Заказ,
	|	ЗаказыПокупателей.Грузополучатель КАК Грузополучатель,
	|	ЕСТЬNULL(втЗаказыОбъем.ОбъемСпиртаДал, 0) КАК Количество,
	|	ЕСТЬNULL(битПунктыНазначения.Адрес, """") КАК АдресДоставки,
	|	ЗаказыПокупателей.Сумма КАК Сумма,
	|	ЗаказыПокупателей.ПунктРазгрузки КАК ПунктРазгрузки,
	|	ЗаказыПокупателей.НомерЗаказа КАК НомерЗаказа,
	|	РеализацияТоваровУслугТовары.Ссылка.Номер КАК НомерРеализации
	|ИЗ
	|	втЗаказыПокупателей КАК ЗаказыПокупателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ПО ЗаказыПокупателей.ПунктРазгрузки = битПунктыНазначения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыОбъем КАК втЗаказыОбъем
	|		ПО ЗаказыПокупателей.Заказ = втЗаказыОбъем.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО ЗаказыПокупателей.Заказ = РеализацияТоваровУслугТовары.ЗаказКлиента
	|			И (НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПокупателей.НомерЗаказа
	|ИТОГИ
	|	МАКСИМУМ(Грузополучатель),
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(Сумма),
	|	МАКСИМУМ(ПунктРазгрузки),
	|	МАКСИМУМ(НомерЗаказа)
	|ПО
	|	МаршрутныйЛист,
	|	Заказ";
	РезультатЗапроса = Запрос.Выполнить();
	
	ПервыйДокумент = Истина;
	ВыборкаПоМаршрутнымЛистам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоМаршрутнымЛистам.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		ТабДокумент.Вывести(ОбластьШапка);

		Номер = 1;
		ВыборкаПоЗаказам = ВыборкаПоМаршрутнымЛистам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоЗаказам.Следующий() Цикл   
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоЗаказам);
			ОбластьСтрока.Параметры.Ном = Номер;
			Номер = Номер + 1;
			НомерРеализации = "";
			Выборка = ВыборкаПоЗаказам.Выбрать();
			Пока Выборка.Следующий() Цикл
				НомерРеализации = НомерРеализации + Выборка.НомерРеализации + Символы.ПС;
			КонецЦикла; 
			ОбластьСтрока.Параметры.НомерРеализации = НомерРеализации;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
	КонецЦикла;
	ТабДокумент.АвтоМасштаб = Истина;
	Возврат ТабДокумент;
КонецФункции

Функция СформироватьЗаявкуПеревозчику(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявкаПеревозчику";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_ЗаявкаПеревозчику");
	ОбластьДокумент = Макет.ПолучитьОбласть("Шапка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	битМаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	МАКСИМУМ(ТранспортнаяИнформация.ПлановаяДатаДоставкиС) КАК ПлановаяДатаДоставкиС
	|ПОМЕСТИТЬ втЗаказы
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО битМаршрутныйЛистЗаказы.Заказ = ТранспортнаяИнформация.Объект
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)
	|	И битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|
	|СГРУППИРОВАТЬ ПО
	|	битМаршрутныйЛистЗаказы.Заказ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛист.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛист.Номер КАК Номер,
	|	битМаршрутныйЛист.Организация КАК Заказчик,
	|	битМаршрутныйЛист.Организация.НаименованиеСокращенное КАК ЗаказчикНаименованиеСокращенное,
	|	битМаршрутныйЛист.Организация.ИНН КАК ЗаказчикИНН,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ОрганизацииКонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК Телефон,
	|	битМаршрутныйЛист.Дата КАК ДатаПодачиЗаявки,
	|	битМаршрутныйЛист.КлассГрузоподъемности КАК ТоннажАМ,
	|	0 КАК Объем,
	|	битМаршрутныйЛист.ТипКузова КАК ТипКузова,
	|	битМаршрутныйЛист.ТипКузова.ТемпературныйРежим КАК ТемпературныйРежим,
	|	битМаршрутныйЛист.ДатаПрибытия КАК ДатаПрибытия,
	|	ВЫРАЗИТЬ(битМаршрутныйЛист.Склад.бг_ПунктНазначения.Адрес КАК СТРОКА(200)) КАК АдресПодачи,
	|	"""" КАК КонтактноеЛицо,
	|	битМаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	битМаршрутныйЛист.Водитель КАК ФИОВодителя,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ФизическиеЛицаКонтактнаяИнформация.Представление КАК СТРОКА(25))) КАК ТелефонВодителя,
	|	битМаршрутныйЛист.Автомобиль.бг_Марка КАК МаркаТС,
	|	битМаршрутныйЛист.Автомобиль.Код КАК НомерТС,
	|	битМаршрутныйЛист.ДоговорНаВладение КАК ДоговорНаВладение
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|		ПО битМаршрутныйЛист.Организация = ОрганизацииКонтактнаяИнформация.Ссылка
	|			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации))
	|			И (ОрганизацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО битМаршрутныйЛист.Водитель = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|			И (ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица))
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	битМаршрутныйЛист.Ссылка,
	|	битМаршрутныйЛист.Номер,
	|	битМаршрутныйЛист.Организация,
	|	битМаршрутныйЛист.Организация.НаименованиеСокращенное,
	|	битМаршрутныйЛист.Организация.ИНН,
	|	битМаршрутныйЛист.Дата,
	|	битМаршрутныйЛист.КлассГрузоподъемности,
	|	битМаршрутныйЛист.ТипКузова,
	|	битМаршрутныйЛист.ТипКузова.ТемпературныйРежим,
	|	битМаршрутныйЛист.ДатаПрибытия,
	|	битМаршрутныйЛист.МаршрутДоставки,
	|	битМаршрутныйЛист.Водитель,
	|	битМаршрутныйЛист.Автомобиль.бг_Марка,
	|	битМаршрутныйЛист.Автомобиль.Код,
	|	битМаршрутныйЛист.ДоговорНаВладение,
	|	ВЫРАЗИТЬ(битМаршрутныйЛист.Склад.бг_ПунктНазначения.Адрес КАК СТРОКА(200))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения
	|		ИНАЧЕ ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения
	|	КОНЕЦ КАК ПунктНазначения,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		ИНАЧЕ ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.Адрес
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.КаналПродаж.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.КаналПродаж.Наименование
	|	КОНЕЦ КАК КаналПродажНаименование,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.КаналПродаж
	|		ИНАЧЕ ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.КаналПродаж
	|	КОНЕЦ КАК КаналПродаж,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента) КАК Заказ,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).Номер КАК НомерЗаказа,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).СуммаДокумента КАК Сумма,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ОбъемБрутто КАК Объем,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ВесБрутто КАК Вес,
	|	втЗаказы.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗаказы КАК втЗаказы
	|		ПО битМаршрутныйЛистЗаказы.Заказ = втЗаказы.Заказ
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)";
	#КонецОбласти	

	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	ДанныеЗаказов = РезультатЗапросаПакет[РезультатЗапросаПакет.ВГраница()].Выгрузить();
	ВыборкаПоМаршрутнымЛистам = РезультатЗапросаПакет[РезультатЗапросаПакет.ВГраница() - 1].Выбрать();
	ПервыйДокумент = Истина;
	Пока ВыборкаПоМаршрутнымЛистам.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;                                                           
		КоэффициентПереводаВТонны = 0.001;
		ОбластьДокумент.Параметры.Заполнить(ВыборкаПоМаршрутнымЛистам);
		ДанныеЗаказовМаршрутногоЛиста = ДанныеЗаказов.Скопировать(Новый Структура("МаршрутныйЛист", ВыборкаПоМаршрутнымЛистам.МаршрутныйЛист));
		ОбластьДокумент.Параметры.ВесГруза = ДанныеЗаказовМаршрутногоЛиста.Итог("Вес") * КоэффициентПереводаВТонны;
		ОбластьДокумент.Параметры.ОбъемГруза = ДанныеЗаказовМаршрутногоЛиста.Итог("Объем");
		ОбластьДокумент.Параметры.СтоимостьГруза = ДанныеЗаказовМаршрутногоЛиста.Итог("Сумма");
		ДатаДоставки = Дата(1, 1, 1);
		ПунктыДоставки = Новый Массив;
		Заказы = Новый Массив;
		КаналыПродаж = Новый Массив;
		Для Каждого СтрокаЗаказ Из ДанныеЗаказовМаршрутногоЛиста Цикл
			ПунктыДоставки.Добавить("// " + СтрокаЗаказ.АдресДоставки);
			Заказы.Добавить(СтрокаЗаказ.НомерЗаказа);
			КаналыПродаж.Добавить(СтрокаЗаказ.КаналПродажНаименование);
			ДатаДоставки = Макс(ДатаДоставки, СтрокаЗаказ.ПлановаяДатаДоставкиС);
		КонецЦикла;
		ОбластьДокумент.Параметры.Заказы = СтрСоединить(Заказы, Символы.ПС);
		ОбластьДокумент.Параметры.КаналСбыта = СтрСоединить(КаналыПродаж, Символы.ПС);
		ОбластьДокумент.Параметры.ДатаДоставки = ДатаДоставки;
		ОбластьДокумент.Параметры.ПунктДоставки = СтрСоединить(ПунктыДоставки, Символы.ПС);
		ДанныеФизическогоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Пользователи.ТекущийПользователь(), 
		"ФизическоеЛицо.Фамилия,ФизическоеЛицо.Инициалы");
		
		ОбластьДокумент.Параметры.ЗаявкуПодал = Строка(ДанныеФизическогоЛица.ФизическоеЛицоФамилия)
			+ " " + Строка(ДанныеФизическогоЛица.ФизическоеЛицоИнициалы);
		ТабДокумент.Вывести(ОбластьДокумент);
    КонецЦикла;
	ТабДокумент.АвтоМасштаб = Истина;
	Возврат ТабДокумент;
КонецФункции

Функция СформироватьИнформационныйЛистВодителя(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнформационныйЛистВодителя";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_ИнформационныйЛистВодителя");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	битМаршрутныйЛист.Ссылка КАК Ссылка,
	|	битМаршрутныйЛист.Организация.НаименованиеПолное КАК Заказчик,
	|	битМаршрутныйЛист.Перевозчик.НаименованиеПолное КАК Перевозчик,
	|	битМаршрутныйЛист.Автомобиль.бг_Модель КАК Модель,
	|	битМаршрутныйЛист.Автомобиль.Код КАК ГосударственныйНомер,
	|	битМаршрутныйЛист.Номер КАК Номер,
	|	битМаршрутныйЛист.Дата КАК Дата,
	|	битМаршрутныйЛист.Водитель КАК Водитель,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК СерияВУ,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерВУ
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|		ПО битМаршрутныйЛист.Водитель = ДокументыФизическихЛицСрезПоследних.Физлицо
	|			И (ДокументыФизическихЛицСрезПоследних.ВидДокумента = ЗНАЧЕНИЕ(СПравочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение))
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	РеализацияТоваровУслуг.Номер КАК НомерНакладной,
	|	РеализацияТоваровУслуг.Дата КАК ДатаНакладной,
	|	битМаршрутныйЛистЗаказы.НомерСтроки КАК НомерПП,
	|	битМаршрутныйЛистЗаказы.Заказ.Номер КАК НомерЗаявки,
	|	битМаршрутныйЛистЗаказы.Заказ.Контрагент КАК Клиент,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|	КОНЕЦ КАК ПунктНазначения,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		КОГДА битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.Адрес
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.КонтактноеЛицо
	|		КОГДА битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.КонтактноеЛицо
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КонтактноеЛицо,
	|	ВЫБОР
	|		КОГДА НЕ битМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА битМаршрутныйЛистЗаказы.ПунктНазначения.ДополнительнаяИнформация
	|		КОГДА битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.ДополнительнаяИнформация
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Примечание,
	|	бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС,
	|	бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиПо КАК ПлановаяДатаДоставкиПо
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО битМаршрутныйЛистЗаказы.Заказ = РеализацияТоваровУслуг.ЗаказКлиента
	|			И (НЕ РеализацияТоваровУслуг.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК бг_ТранспортнаяИнформация
	|		ПО битМаршрутныйЛистЗаказы.Заказ = бг_ТранспортнаяИнформация.Объект
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)";
	
	#КонецОбласти	

	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	ДанныеЗаказов = РезультатЗапросаПакет[РезультатЗапросаПакет.ВГраница()].Выгрузить();
	ВыборкаПоМаршрутнымЛистам = РезультатЗапросаПакет[0].Выбрать();
	ПервыйДокумент = Истина;
	Пока ВыборкаПоМаршрутнымЛистам.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;                                                           

		ОбластьШапка.Параметры.Заполнить(ВыборкаПоМаршрутнымЛистам);
		ТабДокумент.Вывести(ОбластьШапка);
		ДанныеЗаказовМаршрутногоЛиста = ДанныеЗаказов.Скопировать(Новый Структура("МаршрутныйЛист", ВыборкаПоМаршрутнымЛистам.Ссылка));
		Для Каждого СтрокаЗаказ Из ДанныеЗаказовМаршрутногоЛиста Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаЗаказ);
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
    КонецЦикла;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабДокумент;
КонецФункции

#Область ЗаявкаНаМаршрутизацию 

Функция СформироватьПечатнуюФормуЗаявкаНаМаршрутизацию(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявкаНаМаршрутизацию";

	ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыЗаявкаНаМаршрутизацию(МассивОбъектов, ПараметрыПечати);
	
	ЗаполнитьТабличныйДокументЗаявкаНаМаршрутизацию(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыЗаявкаНаМаршрутизацию(МассивОбъектов, ПараметрыПечати) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛист.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛист.Организация КАК Заказчик
	|ПОМЕСТИТЬ втМаршрутныеЛистыРеквизиты
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛистЗаказы.Ссылка.Автомобиль КАК ТранспортноеСредство,
	|	ВЫРАЗИТЬ(битМаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента) КАК Заказ
	|ПОМЕСТИТЬ втМаршрутныйЛистЗаказы
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&Ссылка)
	|	И битМаршрутныйЛистЗаказы.Заказ ССЫЛКА Документ.ЗаказКлиента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист,
	|	ТранспортноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(втМаршрутныйЛистЗаказы.Заказ.СуммаДокумента) КАК СтоимостьГруза,
	|	СУММА(втМаршрутныйЛистЗаказы.Заказ.бг_КоличествоПаллет) КАК КоличествоМест,
	|	СУММА(втМаршрутныйЛистЗаказы.Заказ.бг_ВесБрутто) КАК ВесБрутто
	|ПОМЕСТИТЬ втМаршрутныеЛистыПоказатели
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втМаршрутныеЛистыРеквизиты.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныеЛистыРеквизиты.Заказчик КАК Заказчик,
	|	втМаршрутныеЛистыПоказатели.СтоимостьГруза КАК СтоимостьГруза,
	|	втМаршрутныеЛистыПоказатели.КоличествоМест КАК КоличествоМест,
	|	втМаршрутныеЛистыПоказатели.ВесБрутто КАК ВесБрутто
	|ПОМЕСТИТЬ втМаршрутныеЛисты
	|ИЗ
	|	втМаршрутныеЛистыРеквизиты КАК втМаршрутныеЛистыРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМаршрутныеЛистыПоказатели КАК втМаршрутныеЛистыПоказатели
	|		ПО втМаршрутныеЛистыРеквизиты.МаршрутныйЛист = втМаршрутныеЛистыПоказатели.МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.Грузополучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузополучатель,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.Грузополучатель.Представление, """") КАК ГрузополучательПредставление,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.Контрагент.ИНН, """") КАК КонтрагентИНН,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.Код, """") КАК ПунктНазначенияКод,
	|	втМаршрутныйЛистЗаказы.Заказ.бг_ВесБрутто КАК ВесБрутто,
	|	втМаршрутныйЛистЗаказы.Заказ.бг_КоличествоПаллет КАК КоличествоМест,
	|	втМаршрутныйЛистЗаказы.Заказ.СуммаДокумента КАК СтоимостьГруза,
	|	втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения КАК ПунктНазначения,
	|	ЕСТЬNULL(бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиС, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановаяДатаДоставкиС,
	|	ЕСТЬNULL(бг_ТранспортнаяИнформация.ПлановаяДатаДоставкиПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановаяДатаДоставкиПо,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.Адрес, """") КАК ПунктНазначенияАдрес,
	|	ЕСТЬNULL(втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.АдресЗначение, """") КАК ПунктНазначенияАдресЗначение,
	|	втМаршрутныйЛистЗаказы.Заказ.Номер КАК ЗаказНомер,
	|	ВЫБОР
	|		КОГДА НЕ втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения ЕСТЬ NULL
	|				И НЕ втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.КПП ЕСТЬ NULL
	|				И НЕ втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.КПП = """"
	|			ТОГДА втМаршрутныйЛистЗаказы.Заказ.бг_ПунктНазначения.КПП
	|		КОГДА НЕ втМаршрутныйЛистЗаказы.Заказ.Контрагент ЕСТЬ NULL
	|				И НЕ втМаршрутныйЛистЗаказы.Заказ.Контрагент.КПП ЕСТЬ NULL
	|				И НЕ втМаршрутныйЛистЗаказы.Заказ.Контрагент.КПП = """"
	|			ТОГДА втМаршрутныйЛистЗаказы.Заказ.Контрагент.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КонтрагентКПП
	|ПОМЕСТИТЬ втМаршрутныйЛистЗаказыРасшифровка
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК бг_ТранспортнаяИнформация
	|		ПО втМаршрутныйЛистЗаказы.Заказ = бг_ТранспортнаяИнформация.Объект
	|			И втМаршрутныйЛистЗаказы.ТранспортноеСредство = бг_ТранспортнаяИнформация.ТранспортноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныеЛисты.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныеЛисты.Заказчик КАК Заказчик,
	|	втМаршрутныеЛисты.СтоимостьГруза КАК СтоимостьГруза,
	|	втМаршрутныеЛисты.КоличествоМест КАК КоличествоМест,
	|	втМаршрутныеЛисты.ВесБрутто КАК ВесБрутто
	|ИЗ
	|	втМаршрутныеЛисты КАК втМаршрутныеЛисты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказыРасшифровка.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказыРасшифровка.Заказ КАК Заказ,
	|	втМаршрутныйЛистЗаказыРасшифровка.Грузополучатель КАК Грузополучатель,
	|	втМаршрутныйЛистЗаказыРасшифровка.ГрузополучательПредставление КАК ГрузополучательПредставление,
	|	втМаршрутныйЛистЗаказыРасшифровка.КонтрагентИНН КАК КонтрагентИНН,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПунктНазначенияКод КАК ПунктНазначенияКод,
	|	втМаршрутныйЛистЗаказыРасшифровка.ВесБрутто КАК ВесБрутто,
	|	втМаршрутныйЛистЗаказыРасшифровка.КоличествоМест КАК КоличествоМест,
	|	втМаршрутныйЛистЗаказыРасшифровка.СтоимостьГруза КАК СтоимостьГруза,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПунктНазначения КАК ПунктНазначения,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПлановаяДатаДоставкиПо КАК ПлановаяДатаДоставкиПо,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПунктНазначенияАдрес КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистЗаказыРасшифровка.ПунктНазначенияАдресЗначение КАК ПунктНазначенияАдресЗначение,
	|	втМаршрутныйЛистЗаказыРасшифровка.ЗаказНомер КАК ЗаказНомер,
	|	втМаршрутныйЛистЗаказыРасшифровка.КонтрагентКПП КАК КонтрагентКПП
	|ИЗ
	|	втМаршрутныйЛистЗаказыРасшифровка КАК втМаршрутныйЛистЗаказыРасшифровка
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМаршрутныйЛистЗаказыРасшифровка.ПунктНазначенияКод";
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоЗаказам", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ЗаполнитьТабличныйДокументЗаявкаНаМаршрутизацию(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_ЗаявкаНаМаршрутизацию");

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	Заказы = ДанныеДляПечати.РезультатПоЗаказам.Выгрузить();
		
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ШАПКА
				
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("Заказчик", ДанныеПечати.Заказчик);
		
		ОбластьШапка.Параметры.Заполнить(СтруктураДанныхШапки);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
				
		// СПИСОК
		СтруктураПоиска = Новый Структура("МаршрутныйЛист", ДанныеПечати.МаршрутныйЛист);
		
		ТаблицаЗаказы = Заказы.НайтиСтроки(СтруктураПоиска);
		
		НомерСтроки = 0;
		
		Для каждого СтрокаТаблицаЗаказы Из ТаблицаЗаказы Цикл
						
			НомерСтроки = НомерСтроки + 1;

			КодыАдреса = АдресныйКлассификатор.КодыАдреса(СтрокаТаблицаЗаказы.ПунктНазначенияАдресЗначение);
			
			ДанныеСтроки = Новый Структура;
			
			ДанныеСтроки.Вставить("НПП", НомерСтроки);	
			ДанныеСтроки.Вставить("ЗаказНомер", СтрокаТаблицаЗаказы.ЗаказНомер); 	
			ДанныеСтроки.Вставить("Грузополучатель", СтрокаТаблицаЗаказы.ГрузополучательПредставление);	
			ДанныеСтроки.Вставить("КонтрагентИНН", СтрокаТаблицаЗаказы.КонтрагентИНН);	
			ДанныеСтроки.Вставить("КонтрагентКПП", СтрокаТаблицаЗаказы.КонтрагентКПП);	
			ДанныеСтроки.Вставить("АдресДоставки", СтрокаТаблицаЗаказы.ПунктНазначенияАдрес);	
			ДанныеСтроки.Вставить("КодКЛАДР", КодыАдреса.КодКЛАДР);	
			ДанныеСтроки.Вставить("ПунктНазначенияКод", СтрокаТаблицаЗаказы.ПунктНазначенияКод);	
			ДанныеСтроки.Вставить("ПлановаяДатаДоставкиС", Формат(СтрокаТаблицаЗаказы.ПлановаяДатаДоставкиС, "ДФ=HH:mm"));	
			ДанныеСтроки.Вставить("ПлановаяДатаДоставкиПо", Формат(СтрокаТаблицаЗаказы.ПлановаяДатаДоставкиПо, "ДФ=HH:mm"));	
			ДанныеСтроки.Вставить("ВесБрутто", СтрокаТаблицаЗаказы.ВесБрутто);	
			ДанныеСтроки.Вставить("КоличествоМест", СтрокаТаблицаЗаказы.КоличествоМест);	
			ДанныеСтроки.Вставить("СтоимостьГруза", СтрокаТаблицаЗаказы.СтоимостьГруза);

			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// ПОДВАЛ
		ДанныеИтого = Новый Структура;
		
		ДанныеИтого.Вставить("ВесБрутто", ДанныеПечати.ВесБрутто);
		ДанныеИтого.Вставить("КоличествоМест", ДанныеПечати.КоличествоМест);
		ДанныеИтого.Вставить("СтоимостьГруза", ДанныеПечати.СтоимостьГруза);
		
		ОбластьИтого.Параметры.Заполнить(ДанныеИтого);
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область МаршрутныйЛист

Функция СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МаршрутныйЛист";
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	
	ИнициализироватьПараметрыПечатиМаршрутногоЛиста(ПараметрыПечати);
	
	ДанныеДляПечати = ДанныеДляПечатнойФормыМаршрутныйЛист(МассивОбъектов, ПараметрыПечати);
	
	ЗаполнитьТабличныйДокументМаршрутныйЛист(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ИнициализироватьПараметрыПечатиМаршрутногоЛиста(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати = Неопределено Тогда
		ПараметрыПечати = Новый Структура;
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ТипКИ_Адрес", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	ПараметрыПечати.Вставить("ТипКИ_Телефон", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));	
	ПараметрыПечати.Вставить("ВидКИ_ФактАдресКонтрагента", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента"));	
	ПараметрыПечати.Вставить("ВидКИ_ТелефонКонтрагента", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"));
	ПараметрыПечати.Вставить("ВидКИ_ТелефонСлужебный", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица"));	
	ПараметрыПечати.Вставить("ВидДокументовФЛ_ВодительскоеУдостоверение", ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение"));
	
КонецПроцедуры

Функция ДанныеДляПечатнойФормыМаршрутныйЛист(МассивОбъектов, ПараметрыПечати) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);	
	Запрос.УстановитьПараметр("ТипКИ_Телефон", ПараметрыПечати.ТипКИ_Телефон);
	Запрос.УстановитьПараметр("ТипКИ_Адрес", ПараметрыПечати.ТипКИ_Адрес);	
	Запрос.УстановитьПараметр("ВидКИ_ФактАдресКонтрагента", ПараметрыПечати.ВидКИ_ФактАдресКонтрагента);	
	Запрос.УстановитьПараметр("ВидКИ_ТелефонКонтрагента", ПараметрыПечати.ВидКИ_ТелефонКонтрагента);
	Запрос.УстановитьПараметр("ВидКИ_ТелефонСлужебный", ПараметрыПечати.ВидКИ_ТелефонСлужебный);	
	Запрос.УстановитьПараметр("ВидДокументовФЛ_ВодительскоеУдостоверение", ПараметрыПечати.ВидДокументовФЛ_ВодительскоеУдостоверение);	
	Запрос.УстановитьПараметр("КоличествоКгВЕдиницеИзмеренияВеса", 1);
	
	Запрос.Текст = ТекстЗапросаДляПечатнойФормыМаршрутныйЛист();	
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоЗаказам", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ТекстЗапросаДляПечатнойФормыМаршрутныйЛист()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛист.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛист.Номер КАК МаршрутныйЛистНомер,
	|	битМаршрутныйЛист.НомерДокументаУПП КАК МаршрутныйЛистНомерДокументаУПП,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(битМаршрутныйЛист.ДокументОснование КАК Документ.битМаршрутныйЛист).ОтгрузкаИзERP, битМаршрутныйЛист.ОтгрузкаИзERP) КАК ОтгрузкаИзERP,
	|	битМаршрутныйЛист.Дата КАК МаршрутныйЛистДата,
	|	битМаршрутныйЛист.Организация КАК Заказчик,
	|	битМаршрутныйЛист.Организация.НаименованиеПолное КАК ЗаказчикНаименованиеПолное,
	|	битМаршрутныйЛист.Перевозчик КАК Перевозчик,
	|	битМаршрутныйЛист.Перевозчик.НаименованиеПолное КАК ПеревозчикНаименованиеПолное,
	|	битМаршрутныйЛист.Автомобиль.бг_Модель КАК АвтомобильМодель,
	|	битМаршрутныйЛист.Автомобиль.Код КАК АвтомобильГосударственныйНомер,
	|	битМаршрутныйЛист.Прицеп.Код КАК ПрицепГосударственныйНомер,
	|	битМаршрутныйЛист.НомерКонтейнера КАК НомерКонтейнера,
	|	битМаршрутныйЛист.Водитель КАК Водитель,
	|	битМаршрутныйЛист.Экспедитор КАК Экспедитор,
	|	битМаршрутныйЛист.НомераПломб КАК НомераПломб,
	|	битМаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	битМаршрутныйЛист.Комментарий КАК Комментарий,
	|	битМаршрутныйЛист.СтоимостьПРР КАК СтоимостьПРР
	|ПОМЕСТИТЬ втМаршрутныйЛист
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втМаршрутныйЛист.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """") КАК ВодительВодительскоеУдостоверениеСерия,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """") КАК ВодительВодительскоеУдостоверениеНомер,
	|	ЕСТЬNULL(ФизическиеЛица_КИ_ТелефонСлужебный.Представление, """") КАК ВодительТелефон,
	|	ЕСТЬNULL(Контрагенты_КИ_ФактАдресКонтрагента.Представление, """") КАК ПеревозчикАдрес,
	|	ЕСТЬNULL(Контрагенты_КИ_ТелефонКонтрагента.Представление, """") КАК ПеревозчикТелефон
	|ПОМЕСТИТЬ втМаршрутныйЛистВодительПеревозчик
	|ИЗ
	|	втМаршрутныйЛист КАК втМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|		ПО втМаршрутныйЛист.Водитель = ДокументыФизическихЛиц.Физлицо
	|			И (ДокументыФизическихЛиц.ВидДокумента = &ВидДокументовФЛ_ВодительскоеУдостоверение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК Контрагенты_КИ_ФактАдресКонтрагента
	|		ПО втМаршрутныйЛист.Перевозчик = Контрагенты_КИ_ФактАдресКонтрагента.Ссылка
	|			И (Контрагенты_КИ_ФактАдресКонтрагента.Тип = &ТипКИ_Адрес)
	|			И (Контрагенты_КИ_ФактАдресКонтрагента.Вид = &ВидКИ_ФактАдресКонтрагента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК Контрагенты_КИ_ТелефонКонтрагента
	|		ПО втМаршрутныйЛист.Перевозчик = Контрагенты_КИ_ТелефонКонтрагента.Ссылка
	|			И (Контрагенты_КИ_ТелефонКонтрагента.Тип = &ТипКИ_Телефон)
	|			И (Контрагенты_КИ_ТелефонКонтрагента.Вид = &ВидКИ_ТелефонКонтрагента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_КИ_ТелефонСлужебный
	|		ПО втМаршрутныйЛист.Водитель = ФизическиеЛица_КИ_ТелефонСлужебный.Ссылка
	|			И (ФизическиеЛица_КИ_ТелефонСлужебный.Тип = &ТипКИ_Телефон)
	|			И (ФизическиеЛица_КИ_ТелефонСлужебный.Вид = &ВидКИ_ТелефонСлужебный)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛистЗаказы.Заказ КАК МаршрутныйЛистЗаказ,
	|	битМаршрутныйЛистЗаказы.ДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	битМаршрутныйЛистЗаказы.ПунктНазначения КАК ПунктНазначения,
	|	битМаршрутныйЛистЗаказы.НомерСтроки КАК НомерСтроки,
	|	битМаршрутныйЛистЗаказы.Ссылка.Автомобиль КАК ТранспортноеСредство,
	|	битМаршрутныйЛистЗаказы.Примечание КАК Примечание
	|ПОМЕСТИТЬ втМаршрутныйЛистЗаказы
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист,
	|	МаршрутныйЛистЗаказ,
	|	МаршрутныйЛистДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.битМаршрутныйЛист.ПустаяСсылка) КАК МаршрутныйЛист,
	|	НЕОПРЕДЕЛЕНО КАК МаршрутныйЛистЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК МаршрутныйЛистДокументОтгрузки,
	|	"""" КАК ДокументОтгрузкиНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДокументОтгрузкиДата,
	|	ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка) КАК ДокументОтгрузкиПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка) КАК ДокументОтгрузкиКонтактноеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ДокументОтгрузкиКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ДокументОтгрузкиГрузополучатель,
	|	ЛОЖЬ КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ втДокументыОтгрузки
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументВозвратТоваровОтКлиента.Номер,
	|	ДокументВозвратТоваровОтКлиента.Дата,
	|	ДокументВозвратТоваровОтКлиента.Склад.бг_ПунктНазначения,
	|	ДокументВозвратТоваровОтКлиента.КонтактноеЛицо,
	|	ДокументВозвратТоваровОтКлиента.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ДокументВозвратТоваровОтКлиента.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ДокументВозвратТоваровОтКлиента
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументВозвратТоваровОтКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументВозвратТоваровПоставщику.Номер,
	|	ДокументВозвратТоваровПоставщику.Дата,
	|	ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка),
	|	ДокументВозвратТоваровПоставщику.КонтактноеЛицо,
	|	ДокументВозвратТоваровПоставщику.Контрагент,
	|	ДокументВозвратТоваровПоставщику.Грузополучатель,
	|	ДокументВозвратТоваровПоставщику.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ДокументВозвратТоваровПоставщику
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументВозвратТоваровПоставщику.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПеремещениеТоваров.Номер,
	|	ДокументПеремещениеТоваров.Дата,
	|	ДокументПеремещениеТоваров.СкладПолучатель.бг_ПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДокументПеремещениеТоваров
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПеремещениеТоваров.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПриобретениеТоваровУслуг.Номер,
	|	ДокументПриобретениеТоваровУслуг.Дата,
	|	ДокументПриобретениеТоваровУслуг.Склад.бг_ПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка),
	|	ДокументПриобретениеТоваровУслуг.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ДокументПриобретениеТоваровУслуг.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДокументПриобретениеТоваровУслуг
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПриобретениеТоваровУслуг)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПриобретениеТоваровУслуг.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументРеализацияТоваровУслуг.Номер,
	|	ДокументРеализацияТоваровУслуг.Дата,
	|	ДокументРеализацияТоваровУслуг.бг_ПунктНазначения,
	|	ДокументРеализацияТоваровУслуг.КонтактноеЛицо,
	|	ДокументРеализацияТоваровУслуг.Контрагент,
	|	ДокументРеализацияТоваровУслуг.Грузополучатель,
	|	ДокументРеализацияТоваровУслуг.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДокументРеализацияТоваровУслуг
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументРеализацияТоваровУслуг.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПередачаТоваровХранителю.Номер,
	|	ДокументПередачаТоваровХранителю.Дата,
	|	ЕСТьNULL(
	|		ВЫРАЗИТЬ(ДокументПередачаТоваровХранителю.ЗаказКлиента КАК Документ.ЗаказКлиента).бг_ПунктНазначения,
	|	НЕОПРЕДЕЛЕНО),	
	|	ДокументПередачаТоваровХранителю.КонтактноеЛицо,
	|	ДокументПередачаТоваровХранителю.Контрагент,
	|	ДокументПередачаТоваровХранителю.Грузополучатель,
	|	ЛОЖЬ
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю КАК ДокументПередачаТоваровХранителю
	|		ПО МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПередачаТоваровХранителю.Ссылка
	|			И (МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА НЕ втМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|		ИНАЧЕ втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения
	|	КОНЕЦ КАК ПунктНазначения,
	|	ВЫБОР
	|		КОГДА НЕ втМаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения, """")
	|	КОНЕЦ КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистЗаказы.НомерСтроки КАК НомерСтроки,
	|	втМаршрутныйЛистЗаказы.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутныйЛистЗаказы.Примечание КАК Примечание,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиНомер, """") КАК ДокументОтгрузкиНомер,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиДата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДокументОтгрузкиДата,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения, ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)) КАК ДокументОтгрузкиПунктНазначения,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК ДокументОтгрузкиКонтактноеЛицо,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиКонтрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ДокументОтгрузкиКонтрагент,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиГрузополучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ДокументОтгрузкиГрузополучатель,
	|	ЕСТЬNULL(втДокументыОтгрузки.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ втМаршрутныйЛистДокументыОтгрузки
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыОтгрузки КАК втДокументыОтгрузки
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛист = втДокументыОтгрузки.МаршрутныйЛист
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ = втДокументыОтгрузки.МаршрутныйЛистЗаказ
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = втДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаршрутныйЛист,
	|	МаршрутныйЛистЗаказ,
	|	МаршрутныйЛистДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.битМаршрутныйЛист.ПустаяСсылка) КАК МаршрутныйЛист,
	|	ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка) КАК МаршрутныйЛистЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК МаршрутныйЛистДокументОтгрузки,
	|	ЛОЖЬ КАК ЦенаВключаетНДС,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК УпаковкаПаллета,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 3)) КАК Количество,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 3)) КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(10, 3)) КАК бг_КоличествоПаллет,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(10, 3)) КАК бг_КоличествоКоробок,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	|ПОМЕСТИТЬ втДокументыОтгрузкиТовары
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ВозвратТоваровОтКлиентаТовары.Ссылка.ЦенаВключаетНДС,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ВозвратТоваровОтКлиентаТовары.Количество,
	|	ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	ВозвратТоваровОтКлиентаТовары.Сумма,
	|	ВозвратТоваровОтКлиентаТовары.СуммаНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ВозвратТоваровОтКлиентаТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ВозвратТоваровПоставщикуТовары.Ссылка.ЦенаВключаетНДС,
	|	ВозвратТоваровПоставщикуТовары.Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ВозвратТоваровПоставщикуТовары.Количество,
	|	ВозвратТоваровПоставщикуТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	ВозвратТоваровПоставщикуТовары.Сумма,
	|	ВозвратТоваровПоставщикуТовары.СуммаНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ВозвратТоваровПоставщикуТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ЛОЖЬ,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПеремещениеТоваровТовары.Количество,
	|	ПеремещениеТоваровТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ПеремещениеТоваровТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ПриобретениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		КОГДА НЕ ЕстьNull(ЗаказПоставщикуТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|									= ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕстьNull(ЗаказПоставщикуТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПриобретениеТоваровУслугТовары.Количество,
	|	ПриобретениеТоваровУслугТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	ПриобретениеТоваровУслугТовары.Сумма,
	|	ПриобретениеТоваровУслугТовары.СуммаНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПриобретениеТоваровУслуг)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ПриобретениеТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО (ПриобретениеТоваровУслугТовары.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка)
	|			И (ПриобретениеТоваровУслугТовары.Номенклатура = ЗаказПоставщикуТовары.Номенклатура)
	|			И (ПриобретениеТоваровУслугТовары.Характеристика = ЗаказПоставщикуТовары.Характеристика)
	|			И (ПриобретениеТоваровУслугТовары.Упаковка = ЗаказПоставщикуТовары.Упаковка)
	|			И (ПриобретениеТоваровУслугТовары.КодСтроки = ЗаказПоставщикуТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	РеализацияТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ЗаказКлиентаТовары.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		КОГДА НЕ ЗаказКлиентаТовары.бг_УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЗаказКлиентаТовары.бг_УпаковкаПаллета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	РеализацияТоваровУслугТовары.Количество,
	|	РеализацияТоваровУслугТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	РеализацияТоваровУслугТовары.Сумма,
	|	РеализацияТоваровУслугТовары.СуммаНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг)
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (РеализацияТоваровУслугТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (РеализацияТоваровУслугТовары.Номенклатура = ЗаказКлиентаТовары.Номенклатура)
	|			И (РеализацияТоваровУслугТовары.Характеристика = ЗаказКлиентаТовары.Характеристика)
	|			И (РеализацияТоваровУслугТовары.Упаковка = ЗаказКлиентаТовары.Упаковка)
	|			И (РеализацияТоваровУслугТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ЛОЖЬ,
	|	ПередачаТоваровХранителюТовары.Номенклатура,
	|	ПередачаТоваровХранителюТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|				<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА
	|				ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПередачаТоваровХранителюТовары.Количество,
	|	ПередачаТоваровХранителюТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	ПередачаТоваровХранителюТовары.Сумма,
	|	0
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Товары КАК ПередачаТоваровХранителюТовары
	|		ПО (МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю)
	|			И МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ПередачаТоваровХранителюТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (ПередачаТоваровХранителюТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (ПередачаТоваровХранителюТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК УпаковкаПаллета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) КАК Количество
	|ПОМЕСТИТЬ втУпаковкиПаллетовНоменклатуры
	|ИЗ
	|	втДокументыОтгрузкиТовары КАК втДокументыОтгрузкиТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО втДокументыОтгрузкиТовары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета))
	|
	|СГРУППИРОВАТЬ ПО
	|	втДокументыОтгрузкиТовары.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК КонечнаяУпаковка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) КАК Количество
	|ПОМЕСТИТЬ втКонечныеУпаковки
	|ИЗ
	|	втДокументыОтгрузкиТовары КАК втДокументыОтгрузкиТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО втДокументыОтгрузкиТовары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.Конечная))
	|
	|СГРУППИРОВАТЬ ПО
	|	втДокументыОтгрузкиТовары.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТовары.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втДокументыОтгрузкиТовары.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втДокументыОтгрузкиТовары.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втДокументыОтгрузкиТовары.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	втДокументыОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	втДокументыОтгрузкиТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втДокументыОтгрузкиТовары.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТовары.УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				И НЕ втУпаковкиПаллетовНоменклатуры.УпаковкаПаллета ЕСТЬ NULL
	|			ТОГДА втУпаковкиПаллетовНоменклатуры.УпаковкаПаллета
	|		ИНАЧЕ втДокументыОтгрузкиТовары.УпаковкаПаллета
	|	КОНЕЦ КАК УпаковкаПаллета,
	|	ЕСТЬNULL(втКонечныеУпаковки.КонечнаяУпаковка, втДокументыОтгрузкиТовары.Упаковка) КАК КонечнаяУпаковка,
	|	втДокументыОтгрузкиТовары.Количество КАК Количество,
	|	втДокументыОтгрузкиТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	втДокументыОтгрузкиТовары.бг_КоличествоПаллет КАК бг_КоличествоПаллет,
	|	втДокументыОтгрузкиТовары.бг_КоличествоКоробок КАК бг_КоличествоКоробок,
	|	втДокументыОтгрузкиТовары.Сумма КАК Сумма,
	|	втДокументыОтгрузкиТовары.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ втДокументыОтгрузкиТоварыДанныеУпаковок
	|ИЗ
	|	втДокументыОтгрузкиТовары КАК втДокументыОтгрузкиТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУпаковкиПаллетовНоменклатуры КАК втУпаковкиПаллетовНоменклатуры
	|		ПО втДокументыОтгрузкиТовары.Номенклатура = втУпаковкиПаллетовНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКонечныеУпаковки КАК втКонечныеУпаковки
	|		ПО втДокументыОтгрузкиТовары.Номенклатура = втКонечныеУпаковки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура КАК Номенклатура,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.Упаковка КАК Упаковка,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета КАК УпаковкаПаллета,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка КАК КонечнаяУпаковка,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.Количество КАК Количество,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.КоличествоУпаковок КАК КоличествоУпаковок,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.бг_КоличествоПаллет КАК бг_КоличествоПаллет,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.бг_КоличествоКоробок КАК бг_КоличествоКоробок,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.Сумма КАК Сумма,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.СуммаНДС КАК СуммаНДС,
	|	втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ОбъемДАЛ КАК бг_ОбъемДал,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|			ТОГДА ВЫБОР
	|					КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|							И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Знаменатель, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Знаменатель КАК ЧИСЛО(17, 7))
	|					КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|						ТОГДА 1
	|					ИНАЧЕ NULL
	|				КОНЕЦ
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|			ТОГДА ЕСТЬNULL(СоставныеУпаковки.КоличествоЕдиниц, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК бг_КоэффициентКоробки,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|			ТОГДА ВЫБОР
	|					КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|							И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Знаменатель, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Знаменатель КАК ЧИСЛО(17, 7))
	|					КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|						ТОГДА 1
	|					ИНАЧЕ NULL
	|				КОНЕЦ
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|			ТОГДА ЕСТЬNULL(СоставныеУпаковки.КоличествоЕдиниц, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК бг_КоэффициентПаллеты,
	|	ВЫБОР
	|		КОГДА НЕ втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				И втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК бг_ЭтоКоробка,
	|	ВЫБОР
	|		КОГДА НЕ втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				И втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК бг_ЭтоПаллета,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
	|				ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Вес * втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ВесЕдиницаИзмерения.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(15, 7))
	|			КОГДА (втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|					ИЛИ втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
	|					ИЛИ ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|					И втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесИспользовать
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЗнаменатель, 0) <> 0
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
	|				ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЧислитель / втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЗнаменатель * (втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Знаменатель) КАК ЧИСЛО(15, 7))
	|			ИНАЧЕ 0
	|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоКгВЕдиницеИзмеренияВеса КАК ЧИСЛО(15, 7))) КАК ЧИСЛО(15, 7)) КАК УпаковкаПаллетаВесБрутто,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
	|				ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.Вес * втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ВесЕдиницаИзмерения.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ВесЕдиницаИзмерения.Знаменатель КАК ЧИСЛО(15, 7))
	|			КОГДА (втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|					ИЛИ втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
	|					ИЛИ ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.КонечнаяУпаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|					И втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесИспользовать
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЗнаменатель, 0) <> 0
	|					И ЕСТЬNULL(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Знаменатель, 0) <> 0
	|				ТОГДА ВЫРАЗИТЬ(втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЧислитель / втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЗнаменатель * (втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Числитель / втДокументыОтгрузкиТоварыДанныеУпаковок.Номенклатура.ВесЕдиницаИзмерения.Знаменатель) КАК ЧИСЛО(15, 7))
	|			ИНАЧЕ 0
	|		КОНЕЦ / (ВЫРАЗИТЬ(&КоличествоКгВЕдиницеИзмеренияВеса КАК ЧИСЛО(15, 7))) КАК ЧИСЛО(15, 7)) КАК КонечнаяУпаковкаВесБрутто,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Бутылка)
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.КоличествоУпаковок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК бг_КоличествоБутылок
	|ПОМЕСТИТЬ втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты
	|ИЗ
	|	втДокументыОтгрузкиТоварыДанныеУпаковок КАК втДокументыОтгрузкиТоварыДанныеУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			УпаковкиЕдиницыИзмерения.Ссылка КАК Упаковка,
	|			УпаковкиЕдиницыИзмерения.Числитель КАК КоличествоЕдиниц
	|		ИЗ
	|			Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ГДЕ
	|			УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.Составная)) КАК СоставныеУпаковки
	|		ПО (ВЫБОР
	|				КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Коробка)
	|					ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета = СоставныеУпаковки.Упаковка.Родитель
	|				КОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.ЕдиницаИзмерения.бг_ТипЕдиницыИзмерения = ЗНАЧЕНИЕ(Перечисление.бг_ТипыЕдиницИзмерения.Паллета)
	|					ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковок.УпаковкаПаллета.Родитель = СоставныеУпаковки.Упаковка
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Номенклатура КАК Номенклатура,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Упаковка КАК Упаковка,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.УпаковкаПаллета КАК УпаковкаПаллета,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.КонечнаяУпаковка КАК КонечнаяУпаковка,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Количество КАК Количество,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.КоличествоУпаковок КАК КоличествоУпаковок,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Сумма КАК Сумма,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.СуммаНДС КАК СуммаНДС,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ОбъемДал КАК бг_ОбъемДал,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ОбъемДал * втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Количество КАК бг_КоличествоДкл,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки КАК бг_КоэффициентКоробки,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты КАК бг_КоэффициентПаллеты,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ЭтоКоробка КАК бг_ЭтоКоробка,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ЭтоПаллета КАК бг_ЭтоПаллета,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.УпаковкаПаллетаВесБрутто КАК УпаковкаПаллетаВесБрутто,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.КонечнаяУпаковкаВесБрутто КАК КонечнаяУпаковкаВесБрутто,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоКоробок > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоКоробок
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ЭтоПаллета
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоПаллет > 0
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты > 0
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоПаллет * втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты / втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки
	|		КОГДА ИСТИНА
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Количество / втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК бг_КоличествоКоробок,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоПаллет > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоПаллет
	|		КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_ЭтоКоробка
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоКоробок > 0
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки > 0
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоКоробок * втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентКоробки / втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты
	|		КОГДА ИСТИНА
	|				И втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты > 0
	|			ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.Количество / втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоэффициентПаллеты
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК бг_КоличествоПаллет,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты.бг_КоличествоБутылок КАК бг_КоличествоБутылок
	|ПОМЕСТИТЬ втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели
	|ИЗ
	|	втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты КАК втДокументыОтгрузкиТоварыДанныеУпаковокКоэффициенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	СУММА(ВЫБОР
	|			КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.ЦенаВключаетНДС
	|				ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.Сумма
	|			ИНАЧЕ втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.Сумма + втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.СуммаНДС
	|		КОНЕЦ) КАК СУММА,
	|	СУММА(втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоДкл) КАК бг_КоличествоДкл,
	|	СУММА(втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоКоробок) КАК бг_КоличествоКоробок,
	|	СУММА(втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоПаллет) КАК бг_КоличествоПаллет,
	|	СУММА(втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоБутылок) КАК бг_КоличествоБутылок,
	|	СУММА(ВЫБОР
	|			КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_ЭтоПаллета
	|				ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.УпаковкаПаллетаВесБрутто * втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоПаллет
	|			КОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_ЭтоКоробка
	|				ТОГДА втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.УпаковкаПаллетаВесБрутто * втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.бг_КоличествоКоробок
	|			ИНАЧЕ втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.КонечнаяУпаковкаВесБрутто * втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.КоличествоУпаковок
	|		КОНЕЦ) КАК бг_ВесБрутто
	|ПОМЕСТИТЬ втДокументыОтгрузкиИтоги
	|ИЗ
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели КАК втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели
	|
	|СГРУППИРОВАТЬ ПО
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛист,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛистЗаказ,
	|	втДокументыОтгрузкиТоварыДанныеУпаковокПоказатели.МаршрутныйЛистДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументыОтгрузкиИтоги.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(втДокументыОтгрузкиИтоги.СУММА) КАК Сумма,
	|	СУММА(втДокументыОтгрузкиИтоги.бг_КоличествоДкл) КАК бг_КоличествоДкл,
	|	СУММА(втДокументыОтгрузкиИтоги.бг_КоличествоКоробок) КАК бг_КоличествоКоробок,
	|	СУММА(втДокументыОтгрузкиИтоги.бг_КоличествоПаллет) КАК бг_КоличествоПаллет,
	|	СУММА(втДокументыОтгрузкиИтоги.бг_КоличествоБутылок) КАК бг_КоличествоБутылок,
	|	СУММА(втДокументыОтгрузкиИтоги.бг_ВесБрутто) КАК бг_ВесБрутто
	|ПОМЕСТИТЬ втМаршрутныйЛистИтоги
	|ИЗ
	|	втДокументыОтгрузкиИтоги КАК втДокументыОтгрузкиИтоги
	|
	|СГРУППИРОВАТЬ ПО
	|	втДокументыОтгрузкиИтоги.МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МенеджерыПунктовНазначения.ПунктНазначения КАК ПунктНазначения,
	|	МенеджерыПунктовНазначения.Менеджер КАК Менеджер
	|ПОМЕСТИТЬ втМенеджерыПунктовНазначения
	|ИЗ
	|	РегистрСведений.бг_МенеджерыПунктовНазначения.СрезПоследних(
	|			,
	|			ПунктНазначения В
	|				(ВЫБРАТЬ
	|					МаршрутныйЛистДокументыОтгрузки.ПунктНазначения
	|				ИЗ
	|					втМаршрутныйЛистДокументыОтгрузки КАК МаршрутныйЛистДокументыОтгрузки)) КАК МенеджерыПунктовНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втМаршрутныйЛист.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛист.МаршрутныйЛистНомер КАК МаршрутныйЛистНомер,
	|	втМаршрутныйЛист.МаршрутныйЛистНомерДокументаУПП КАК МаршрутныйЛистНомерДокументаУПП, 
	|	втМаршрутныйЛист.ОтгрузкаИзERP КАК ОтгрузкаИзERP,
	|	втМаршрутныйЛист.МаршрутныйЛистДата КАК МаршрутныйЛистДата,
	|	втМаршрутныйЛист.Заказчик КАК Заказчик,
	|	втМаршрутныйЛист.ЗаказчикНаименованиеПолное КАК ЗаказчикНаименованиеПолное,
	|	втМаршрутныйЛист.Перевозчик КАК Перевозчик,
	|	втМаршрутныйЛист.ПеревозчикНаименованиеПолное КАК ПеревозчикНаименованиеПолное,
	|	втМаршрутныйЛист.АвтомобильМодель КАК АвтомобильМодель,
	|	втМаршрутныйЛист.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
	|	втМаршрутныйЛист.ПрицепГосударственныйНомер КАК ПрицепГосударственныйНомер,
	|	втМаршрутныйЛист.НомерКонтейнера КАК НомерКонтейнера,
	|	втМаршрутныйЛист.Водитель КАК Водитель,
	|	ЕСТЬNULL(втМаршрутныйЛист.Водитель.Представление, """") КАК ВодительПредставление,
	|	ЕСТЬNULL(втМаршрутныйЛист.Экспедитор.Представление, """") КАК ЭкспедиторПредставление,
	|	втМаршрутныйЛист.НомераПломб КАК НомераПломб,
	|	втМаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	втМаршрутныйЛист.Комментарий КАК Комментарий,
	|	втМаршрутныйЛист.СтоимостьПРР КАК СтоимостьПРР,
	|	втМаршрутныйЛистВодительПеревозчик.ВодительВодительскоеУдостоверениеСерия КАК ВодительВодительскоеУдостоверениеСерия,
	|	втМаршрутныйЛистВодительПеревозчик.ВодительВодительскоеУдостоверениеНомер КАК ВодительВодительскоеУдостоверениеНомер,
	|	втМаршрутныйЛистВодительПеревозчик.ВодительТелефон КАК ВодительТелефон,
	|	втМаршрутныйЛистВодительПеревозчик.ПеревозчикАдрес КАК ПеревозчикАдрес,
	|	втМаршрутныйЛистВодительПеревозчик.ПеревозчикТелефон КАК ПеревозчикТелефон,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.бг_КоличествоДкл, 0) КАК бг_КоличествоДкл,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.бг_КоличествоКоробок, 0) КАК бг_КоличествоКоробок,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.бг_КоличествоПаллет, 0) КАК бг_КоличествоПаллет,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.бг_КоличествоБутылок, 0) КАК бг_КоличествоБутылок,
	|	ЕСТЬNULL(втМаршрутныйЛистИтоги.бг_ВесБрутто, 0) КАК бг_ВесБрутто
	|ИЗ
	|	втМаршрутныйЛист КАК втМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМаршрутныйЛистВодительПеревозчик КАК втМаршрутныйЛистВодительПеревозчик
	|		ПО втМаршрутныйЛист.МаршрутныйЛист = втМаршрутныйЛистВодительПеревозчик.МаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМаршрутныйЛистИтоги КАК втМаршрутныйЛистИтоги
	|		ПО втМаршрутныйЛист.МаршрутныйЛист = втМаршрутныйЛистИтоги.МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ.Номер, """") КАК МаршрутныйЛистЗаказНомер,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ.бг_НомерДокументаУПП, """") КАК МаршрутныйЛистЗаказНомерДокументаУПП,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ.Комментарий, """") КАК МаршрутныйЛистЗаказКомментарий,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения КАК ПунктНазначения,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначенияАдрес КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистДокументыОтгрузки.НомерСтроки КАК НомерСтроки,
	|	втМаршрутныйЛистДокументыОтгрузки.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутныйЛистДокументыОтгрузки.Примечание КАК Примечание,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиНомер КАК ДокументОтгрузкиНомер,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиДата КАК ДокументОтгрузкиДата,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо КАК ДокументОтгрузкиКонтактноеЛицо,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо.Представление, """") КАК ДокументОтгрузкиКонтактноеЛицоПредставление,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтрагент КАК ДокументОтгрузкиКонтрагент,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтрагент.НаименованиеПолное, """") КАК ДокументОтгрузкиКонтрагентПредставление,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиГрузополучатель КАК ДокументОтгрузкиГрузополучатель,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиГрузополучатель.НаименованиеПолное, """") КАК ДокументОтгрузкиГрузополучательПредставление,
	|	втМаршрутныйЛистДокументыОтгрузки.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Менеджер,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер.Представление, """") КАК МенеджерПредставление,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ФизическиеЛица_КИ.Представление, """") КАК СТРОКА(100)) КАК МенеджерТелефон,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ПлановаяДатаДоставкиС, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановаяДатаДоставкиС,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ПлановаяДатаДоставкиПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановаяДатаДоставкиПо,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.бг_КоличествоДкл, 0) КАК бг_КоличествоДкл,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.бг_КоличествоКоробок, 0) КАК бг_КоличествоКоробок,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.бг_КоличествоПаллет, 0) КАК бг_КоличествоПаллет,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.бг_КоличествоБутылок, 0) КАК бг_КоличествоБутылок,
	|	ЕСТЬNULL(втДокументыОтгрузкиИтоги.бг_ВесБрутто, 0) КАК бг_ВесБрутто
	|ИЗ
	|	втМаршрутныйЛистДокументыОтгрузки КАК втМаршрутныйЛистДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМенеджерыПунктовНазначения КАК МенеджерыПунктовНазначения
	|		ПО втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения = МенеджерыПунктовНазначения.ПунктНазначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ = ТранспортнаяИнформация.Объект
	|			И втМаршрутныйЛистДокументыОтгрузки.ТранспортноеСредство = ТранспортнаяИнформация.ТранспортноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_КИ
	|		ПО (МенеджерыПунктовНазначения.Менеджер = ФизическиеЛица_КИ.Ссылка)
	|			И (ФизическиеЛица_КИ.Тип = &ТипКИ_Телефон)
	|			И (ФизическиеЛица_КИ.Вид = &ВидКИ_ТелефонСлужебный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыОтгрузкиИтоги КАК втДокументыОтгрузкиИтоги
	|		ПО втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист = втДокументыОтгрузкиИтоги.МаршрутныйЛист
	|			И втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ = втДокументыОтгрузкиИтоги.МаршрутныйЛистЗаказ
	|			И втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки = втДокументыОтгрузкиИтоги.МаршрутныйЛистДокументОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист,
	|	втМаршрутныйЛистДокументыОтгрузки.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗаполнитьТабличныйДокументМаршрутныйЛист(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_МаршрутныйЛист");
	
	Если (ПараметрыПечати.Свойство("ДопСвойство_ПорядокОтгрузки") 
		И ЗначениеЗаполнено(ПараметрыПечати.ДопСвойство_ПорядокОтгрузки))
		или (ПараметрыПечати.Свойство("ДопСвойство_ПорядокОтгрузкиВЗаказе")
		И ЗначениеЗаполнено(ПараметрыПечати.ДопСвойство_ПорядокОтгрузкиВЗаказе)) Тогда
		ИмяОбластиПостфикс = "";
	Иначе
		ИмяОбластиПостфикс = "|Общий";
	КонецЕсли;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка" + ИмяОбластиПостфикс);
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок" + ИмяОбластиПостфикс);
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка" + ИмяОбластиПостфикс);
	ОбластьИтого1 = Макет.ПолучитьОбласть("Итого1" + ИмяОбластиПостфикс);
	ОбластьИтого2 = Макет.ПолучитьОбласть("Итого2");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	НомерКолонки_ЗаказНомер = 4;
	НомерКолонки_Клиент  = 5;
	НомерКолонки_Адрес  = 6;
	НомерКолонки_ТорговыйПредставитель = 7;
	НомерКолонки_Примечание = 8;
	НомерКолонки_Комментарий = 18;
	
	МаршрутныйЛистДанные = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	МаршрутныйЛистДанныеРасшифровка = ДанныеДляПечати.РезультатПоЗаказам.Выгрузить();
	
	ПервыйДокумент = Истина;
	
	Пока МаршрутныйЛистДанные.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПечатьСНомерамиУПП =
			бг_КонстантыПовтИсп.ЗначениеКонстанты(
				"ПечатьМаршрутныхЛистовСНомерамиУПП",
				МаршрутныйЛистДанные.Заказчик)
			И Не МаршрутныйЛистДанные.ОтгрузкаИзERP;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ШАПКА
		
		ДанныеШапки = Новый Структура;
		Если ПечатьСНомерамиУПП Тогда
			ДанныеШапки.Вставить("Номер", СокрЛП(МаршрутныйЛистДанные.МаршрутныйЛистНомерДокументаУПП));
		Иначе
			ДанныеШапки.Вставить("Номер", МаршрутныйЛистДанные.МаршрутныйЛистНомер);
		КонецЕсли;
		ДанныеШапки.Вставить("Дата", Формат(МаршрутныйЛистДанные.МаршрутныйЛистДата, "ДФ = 'd MMMM yyyy ''г.'"));
		ДанныеШапки.Вставить("Комментарий", МаршрутныйЛистДанные.Комментарий);
		ДанныеШапки.Вставить("Заказчик", МаршрутныйЛистДанные.ЗаказчикНаименованиеПолное);
		ДанныеШапки.Вставить("Перевозчик", МаршрутныйЛистДанные.ПеревозчикНаименованиеПолное);
		ДанныеШапки.Вставить("АдресПеревозчика", МаршрутныйЛистДанные.ПеревозчикАдрес);
		ДанныеШапки.Вставить("ТелефонПеревозчика", МаршрутныйЛистДанные.ПеревозчикТелефон);
		ДанныеШапки.Вставить("ПолеМаршруты", МаршрутныйЛистДанные.МаршрутДоставки);
		
		ДанныеШапки.Вставить("АвтомобильМодель", МаршрутныйЛистДанные.АвтомобильМодель);
		ДанныеШапки.Вставить("АвтомобильГосударственныйНомер", МаршрутныйЛистДанные.АвтомобильГосударственныйНомер);
		ДанныеШапки.Вставить("ГосНомерПрицепа", МаршрутныйЛистДанные.ПрицепГосударственныйНомер);
		ДанныеШапки.Вставить("НомерКонтейнера", МаршрутныйЛистДанные.НомерКонтейнера);
		
		ДанныеШапки.Вставить("Водитель", МаршрутныйЛистДанные.ВодительПредставление);
		ДанныеШапки.Вставить("Экспедитор", МаршрутныйЛистДанные.ЭкспедиторПредставление);
		
		ДанныеШапки.Вставить("НомераПломб", МаршрутныйЛистДанные.НомераПломб);
		ДанныеШапки.Вставить("НомерВодительскогоУдостоверения", МаршрутныйЛистДанные.ВодительВодительскоеУдостоверениеНомер);
		ДанныеШапки.Вставить("ТелефонВодителя", МаршрутныйЛистДанные.ВодительТелефон);
		
		ОбластьШапка.Параметры.Заполнить(ДанныеШапки);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		// ИТОГО
		
		ВесБруттоТонныИтого = Окр(МаршрутныйЛистДанные.бг_ВесБрутто / 1000, 3, РежимОкругления.Окр15как20);
		
		ДанныеОбластьИтого1 = Новый Структура;
		ДанныеОбластьИтого1.Вставить("Сумма", МаршрутныйЛистДанные.Сумма);
		ДанныеОбластьИтого1.Вставить("КоличествоБутылок", МаршрутныйЛистДанные.бг_КоличествоБутылок);
		ДанныеОбластьИтого1.Вставить("КоличествоКоробок", МаршрутныйЛистДанные.бг_КоличествоКоробок);
		ДанныеОбластьИтого1.Вставить("КоличествоДкл", МаршрутныйЛистДанные.бг_КоличествоДкл);
		ДанныеОбластьИтого1.Вставить("ВесБруттоТонны", ВесБруттоТонныИтого);
		ДанныеОбластьИтого1.Вставить("КоличествоПаллет", МаршрутныйЛистДанные.бг_КоличествоПаллет);
		ДанныеОбластьИтого1.Вставить("СуммаДоставки", "");
		ДанныеОбластьИтого1.Вставить("итСкидка", "");
		
		ОбластьИтого1.Параметры.Заполнить(ДанныеОбластьИтого1);
		
		ДанныеОбластьИтого2 = Новый Структура;
		ДанныеОбластьИтого2.Вставить("итСуммаГрузчика", МаршрутныйЛистДанные.СтоимостьПРР);
		
		ОбластьИтого2.Параметры.Заполнить(ДанныеОбластьИтого2);
		
		// СОСТАВ
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		СтруктураОтбор = Новый Структура("МаршрутныйЛист", МаршрутныйЛистДанные.МаршрутныйЛист);
		
		МаршрутныйЛистРасшифровка = МаршрутныйЛистДанныеРасшифровка.НайтиСтроки(СтруктураОтбор);
		
		КоличествоСтрок = МаршрутныйЛистРасшифровка.Количество();
		
		НомерПервойСтроки = ТабличныйДокумент.ВысотаТаблицы + 1;
		НомерТекущейСтроки = НомерПервойСтроки;
		ТекущийЗаказНомер = "";			
		НомерПоПорядку = 0;			
		НомерСтроки = 0;
		
		Для каждого СтрокаМаршрутныйЛистРасшифровка Из МаршрутныйЛистРасшифровка Цикл
			
			НомерПоПорядку = НомерПоПорядку + 1;
			
			Примечание = СтрокаМаршрутныйЛистРасшифровка.Примечание;
			
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиС) 
				Или ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиПо) Тогда
				Примечание = Примечание + " Окно доставки";
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиС) Тогда			
				Примечание = Примечание + " с " + Формат(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиС, "ДФ=HH:mm; ДЛФ=");			
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиПо) Тогда			
				Примечание = Примечание + " до " + Формат(СтрокаМаршрутныйЛистРасшифровка.ПлановаяДатаДоставкиПо, "ДФ=HH:mm; ДЛФ=");			
			КонецЕсли;
			
			АдресДоставки = СтрокаМаршрутныйЛистРасшифровка.ПунктНазначенияАдрес;
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтактноеЛицоПредставление) Тогда
				
				АдресДоставки = АдресДоставки 
				+ Символы.ПС
				+ СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтактноеЛицоПредставление;
				
			КонецЕсли;
			
			ТорговыйПредставитель = СокрЛП(СтрокаМаршрутныйЛистРасшифровка.МенеджерПредставление);
			Если НЕ ПустаяСтрока(ТорговыйПредставитель)
				И ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.МенеджерТелефон) Тогда
				
				ТорговыйПредставитель = ТорговыйПредставитель
				+ Символы.ПС + "тел." + СокрЛП(СтрокаМаршрутныйЛистРасшифровка.МенеджерТелефон);	
				
			КонецЕсли;
			
			Если ПечатьСНомерамиУПП Тогда
				ЗаказНомер = СокрЛП(СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистЗаказНомерДокументаУПП);
			Иначе
				ЗаказНомер = СокрЛП(СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистЗаказНомер);
			КонецЕсли;
			
			Клиент = СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиГрузополучательПредставление;
			Если ПустаяСтрока(Клиент) Тогда
				Клиент = СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтрагентПредставление;				
			КонецЕсли;
			
			ВесБруттоТонны = Окр(СтрокаМаршрутныйЛистРасшифровка.бг_ВесБрутто / 1000, 3, РежимОкругления.Окр15как20);
			
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("НПП", НомерПоПорядку);
			ДанныеСтроки.Вставить("ДокументОтгрузкиНомер", СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиНомер);
			ДанныеСтроки.Вставить("ДокументОтгрузкиДата", СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиДата);
			ДанныеСтроки.Вставить("ЗаказНомер", ЗаказНомер);
			ДанныеСтроки.Вставить("Клиент", Клиент);
			ДанныеСтроки.Вставить("АдресДоставки", АдресДоставки);				
			ДанныеСтроки.Вставить("ТорговыйПредставитель", ТорговыйПредставитель);
			ДанныеСтроки.Вставить("Примечание", Примечание);				
			ДанныеСтроки.Вставить("Сумма", СтрокаМаршрутныйЛистРасшифровка.Сумма);
			ДанныеСтроки.Вставить("КоличествоБутылок", СтрокаМаршрутныйЛистРасшифровка.бг_КоличествоБутылок);
			ДанныеСтроки.Вставить("КоличествоКоробок", СтрокаМаршрутныйЛистРасшифровка.бг_КоличествоКоробок);
			ДанныеСтроки.Вставить("КоличествоДкл", СтрокаМаршрутныйЛистРасшифровка.бг_КоличествоДкл);
			ДанныеСтроки.Вставить("ВесБруттоТонны", ВесБруттоТонны);
			ДанныеСтроки.Вставить("КоличествоПаллет", СтрокаМаршрутныйЛистРасшифровка.бг_КоличествоПаллет);
			ДанныеСтроки.Вставить("ЗаказКомментарий", СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистЗаказКомментарий);				
			ДанныеСтроки.Вставить("ПорядокОтгрузки", СтрокаМаршрутныйЛистРасшифровка.НомерСтроки);	
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			Если ТекущийЗаказНомер = "" Тогда
				
				ТекущийЗаказНомер = ЗаказНомер;
				
			Иначе
				
				Если ТекущийЗаказНомер = ЗаказНомер Тогда
					
					НомерТекущейСтроки = НомерТекущейСтроки + 1;	
					
				Иначе
					
					ТекущийЗаказНомер = ЗаказНомер;
					
					// перешли на другой заказ, нужно объединить ячейки
					
					ОбластьСтрокКолонкаЗаказНомер = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_ЗаказНомер, НомерТекущейСтроки, НомерКолонки_ЗаказНомер);
					ОбластьСтрокКолонкаЗаказНомер.Объединить();
					
					ОбластьСтрокКолонкаКлиент = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_Клиент, НомерТекущейСтроки, НомерКолонки_Клиент);
					ОбластьСтрокКолонкаКлиент.Объединить();
					
					ОбластьСтрокКолонкаАдрес = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_Адрес, НомерТекущейСтроки, НомерКолонки_Адрес);
					ОбластьСтрокКолонкаАдрес.Объединить();
					
					ОбластьСтрокКолонкаТорговыйПредставитель = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_ТорговыйПредставитель, НомерТекущейСтроки, НомерКолонки_ТорговыйПредставитель);
					ОбластьСтрокКолонкаТорговыйПредставитель.Объединить();
					
					ОбластьСтрокКолонкаПримечание = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_Примечание, НомерТекущейСтроки, НомерКолонки_Примечание);
					ОбластьСтрокКолонкаПримечание.Объединить();
					
					ОбластьСтрокКолонкаКомментарий = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_Комментарий, НомерТекущейСтроки, НомерКолонки_Комментарий);
					ОбластьСтрокКолонкаКомментарий.Объединить();
					
					НомерПервойСтроки = НомерТекущейСтроки + 1;
					НомерТекущейСтроки = НомерПервойСтроки;
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Проверим возможность вывода табличного документа
			
			ОбластиДляПроверкиВывода = Новый Массив;
			ОбластиДляПроверкиВывода.Добавить(ОбластьСтрока);
			
			Если НомерПоПорядку = КоличествоСтрок Тогда
				
				// Если последняя строка, то должен поместится итог и подвал
				
				ОбластиДляПроверкиВывода.Добавить(ОбластьИтого1);
				
				Если МаршрутныйЛистДанные.СтоимостьПРР > 0 Тогда
					
					ОбластиДляПроверкиВывода.Добавить(ОбластьИтого2);
					
				КонецЕсли;
				
				ОбластиДляПроверкиВывода.Добавить(ОбластьПодвал);
				
			КонецЕсли;
			
			Если Не ТабличныйДокумент.ПроверитьВывод(ОбластиДляПроверкиВывода) Тогда
				
				Если КоличествоСтрок > 0 Тогда
					
					// Вывод разделителя и заголовка таблицы на новой странице
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ТабличныйДокумент.Вывести(ОбластьЗаголовок);
					
					НомерПервойСтроки = НомерТекущейСтроки + 1;
					НомерТекущейСтроки = НомерПервойСтроки;
					
				КонецЕсли;
				
			КонецЕсли; 
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ОбластьСтрокКолонкаЗаказНомер = ТабличныйДокумент.Область(НомерПервойСтроки, НомерКолонки_ЗаказНомер, НомерТекущейСтроки, НомерКолонки_ЗаказНомер);
		ОбластьСтрокКолонкаЗаказНомер.Объединить();	
		
		// ИТОГО 1
		ТабличныйДокумент.Вывести(ОбластьИтого1);
		
		// ИТОГО 2
		Если МаршрутныйЛистДанные.СтоимостьПРР > 0 Тогда
			
			ТабличныйДокумент.Вывести(ОбластьИтого2);
			
		КонецЕсли;
		
		// ПОДВАЛ
		
		ДанныеОбластьПодвал = Новый Структура;
		ДанныеОбластьПодвал.Вставить("Всего", МаршрутныйЛистДанные.Сумма + МаршрутныйЛистДанные.СтоимостьПРР);
		ДанныеОбластьПодвал.Вставить("ВыданоДокументов", МаршрутныйЛистРасшифровка.Количество());
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеОбластьПодвал);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область РейсСоШтрихкодамиТТН 

Функция СформироватьПечатнуюФормуРейсСоШтрихкодамиТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РейсСоШтрихкодамиТТН";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	
	ИнициализироватьПараметрыПечатиДляРейсаСоШтрихкодамиТТН(ПараметрыПечати);
		
	ДанныеДляПечати = ДанныеДляПечатнойФормыРейсСоШтрихкодамиТТН (МассивОбъектов, ПараметрыПечати);
	
	ЗаполнитьТабличныйДокументРейсСоШтрихкодамиТТН (ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ИнициализироватьПараметрыПечатиДляРейсаСоШтрихкодамиТТН (ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати = Неопределено Тогда
		ПараметрыПечати = Новый Структура;
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ТипКИ_Адрес", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	ПараметрыПечати.Вставить("ТипКИ_Телефон", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));	
	ПараметрыПечати.Вставить("ВидКИ_ФактАдресКонтрагента", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента"));	
	ПараметрыПечати.Вставить("ВидКИ_ТелефонКонтрагента", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"));
	ПараметрыПечати.Вставить("ВидКИ_ТелефонСлужебный", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица"));	
	ПараметрыПечати.Вставить("ВидДокументовФЛ_ВодительскоеУдостоверение", ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение"));
	
КонецПроцедуры

Функция ДанныеДляПечатнойФормыРейсСоШтрихкодамиТТН(МассивОбъектов, ПараметрыПечати) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);	
	Запрос.УстановитьПараметр("ТипКИ_Телефон", ПараметрыПечати.ТипКИ_Телефон);
	Запрос.УстановитьПараметр("ТипКИ_Адрес", ПараметрыПечати.ТипКИ_Адрес);	
	Запрос.УстановитьПараметр("ВидКИ_ФактАдресКонтрагента", ПараметрыПечати.ВидКИ_ФактАдресКонтрагента);	
	Запрос.УстановитьПараметр("ВидКИ_ТелефонКонтрагента", ПараметрыПечати.ВидКИ_ТелефонКонтрагента);
	Запрос.УстановитьПараметр("ВидКИ_ТелефонСлужебный", ПараметрыПечати.ВидКИ_ТелефонСлужебный);	
	Запрос.УстановитьПараметр("ВидДокументовФЛ_ВодительскоеУдостоверение", ПараметрыПечати.ВидДокументовФЛ_ВодительскоеУдостоверение);	
	Запрос.УстановитьПараметр("КоличествоКгВЕдиницеИзмеренияВеса", 1);
	
	Запрос.Текст = ТекстЗапросаДляПечатнойФормыРейсСоШтрихкодамиТТН(); 
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатРеквизиты", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 2]);
	СтруктураДанныхДляПечати.Вставить("РезультатТаблица", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ТекстЗапросаДляПечатнойФормыРейсСоШтрихкодамиТТН()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛист.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛист.Номер КАК МаршрутныйЛистНомер,
	|	битМаршрутныйЛист.Дата КАК МаршрутныйЛистДата,
	|	битМаршрутныйЛист.Организация КАК Заказчик,
	|	битМаршрутныйЛист.Организация.НаименованиеПолное КАК ЗаказчикНаименованиеПолное,
	|	битМаршрутныйЛист.Перевозчик КАК Перевозчик,
	|	битМаршрутныйЛист.Перевозчик.НаименованиеПолное КАК ПеревозчикНаименованиеПолное,
	|	битМаршрутныйЛист.Автомобиль.бг_Модель КАК АвтомобильМодель,
	|	битМаршрутныйЛист.Автомобиль.Код КАК АвтомобильГосударственныйНомер,
	|	битМаршрутныйЛист.Прицеп.Код КАК ПрицепГосударственныйНомер,
	|	битМаршрутныйЛист.НомерКонтейнера КАК НомерКонтейнера,
	|	битМаршрутныйЛист.Водитель КАК Водитель,
	|	битМаршрутныйЛист.Экспедитор КАК Экспедитор,
	|	битМаршрутныйЛист.НомераПломб КАК НомераПломб,
	|	битМаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	битМаршрутныйЛист.Комментарий КАК Комментарий,
	|	битМаршрутныйЛист.СтоимостьПРР КАК СтоимостьПРР
	|ПОМЕСТИТЬ втМаршрутныйЛист
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист,
	|	битМаршрутныйЛистЗаказы.Заказ КАК МаршрутныйЛистЗаказ,
	|	битМаршрутныйЛистЗаказы.ДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	битМаршрутныйЛистЗаказы.ПунктНазначения КАК ПунктНазначения,
	|	битМаршрутныйЛистЗаказы.НомерСтроки КАК НомерСтроки,
	|	битМаршрутныйЛистЗаказы.Ссылка.Автомобиль КАК ТранспортноеСредство,
	|	битМаршрутныйЛистЗаказы.Примечание КАК Примечание
	|ПОМЕСТИТЬ втМаршрутныйЛистЗаказы
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.битМаршрутныйЛист.ПустаяСсылка) КАК МаршрутныйЛист,
	|	НЕОПРЕДЕЛЕНО КАК МаршрутныйЛистЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК МаршрутныйЛистДокументОтгрузки,
	|	"""" КАК ДокументОтгрузкиНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДокументОтгрузкиДата,
	|	ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка) КАК ДокументОтгрузкиПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка) КАК ДокументОтгрузкиКонтактноеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ДокументОтгрузкиКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ДокументОтгрузкиГрузополучатель,
	|	ЛОЖЬ КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ втДокументыОтгрузки
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументВозвратТоваровОтКлиента.Номер,
	|	ДокументВозвратТоваровОтКлиента.Дата,
	|	ДокументВозвратТоваровОтКлиента.Склад.бг_ПунктНазначения,
	|	ДокументВозвратТоваровОтКлиента.КонтактноеЛицо,
	|	ДокументВозвратТоваровОтКлиента.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ДокументВозвратТоваровОтКлиента.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ДокументВозвратТоваровОтКлиента
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументВозвратТоваровОтКлиента.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументВозвратТоваровПоставщику.Номер,
	|	ДокументВозвратТоваровПоставщику.Дата,
	|	ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка),
	|	ДокументВозвратТоваровПоставщику.КонтактноеЛицо,
	|	ДокументВозвратТоваровПоставщику.Контрагент,
	|	ДокументВозвратТоваровПоставщику.Грузополучатель,
	|	ДокументВозвратТоваровПоставщику.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ДокументВозвратТоваровПоставщику
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументВозвратТоваровПоставщику.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПеремещениеТоваров.Номер,
	|	ДокументПеремещениеТоваров.Дата,
	|	ДокументПеремещениеТоваров.СкладПолучатель.бг_ПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДокументПеремещениеТоваров
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПеремещениеТоваров.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПриобретениеТоваровУслуг.Номер,
	|	ДокументПриобретениеТоваровУслуг.Дата,
	|	ДокументПриобретениеТоваровУслуг.Склад.бг_ПунктНазначения,
	|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка),
	|	ДокументПриобретениеТоваровУслуг.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	ДокументПриобретениеТоваровУслуг.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДокументПриобретениеТоваровУслуг
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПриобретениеТоваровУслуг.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПриобретениеТоваровУслуг)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументРеализацияТоваровУслуг.Номер,
	|	ДокументРеализацияТоваровУслуг.Дата,
	|	ДокументРеализацияТоваровУслуг.бг_ПунктНазначения,
	|	ДокументРеализацияТоваровУслуг.КонтактноеЛицо,
	|	ДокументРеализацияТоваровУслуг.Контрагент,
	|	ДокументРеализацияТоваровУслуг.Грузополучатель,
	|	ДокументРеализацияТоваровУслуг.ЦенаВключаетНДС
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДокументРеализацияТоваровУслуг
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументРеализацияТоваровУслуг.Ссылка
	|			И (втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.МаршрутныйЛист,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ,
	|	МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки,
	|	ДокументПередачаТоваровХранителю.Номер,
	|	ДокументПередачаТоваровХранителю.Дата,
	|	ЕСТьNULL(
	|		ВЫРАЗИТЬ(ДокументПередачаТоваровХранителю.ЗаказКлиента КАК Документ.ЗаказКлиента).бг_ПунктНазначения,
	|	НЕОПРЕДЕЛЕНО),
	|	ДокументПередачаТоваровХранителю.КонтактноеЛицо,
	|	ДокументПередачаТоваровХранителю.Контрагент,
	|	ДокументПередачаТоваровХранителю.Грузополучатель,
	|	ЛОЖЬ
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю КАК ДокументПередачаТоваровХранителю
	|		ПО МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = ДокументПередачаТоваровХранителю.Ссылка
	|			И (МаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения ЕСТЬ NULL
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения
	|		ИНАЧЕ втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения
	|	КОНЕЦ КАК ПунктНазначения,
	|	ВЫБОР
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения ЕСТЬ NULL
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		КОГДА втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА втМаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		ИНАЧЕ ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения.Адрес, """")
	|	КОНЕЦ КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистЗаказы.НомерСтроки КАК НомерСтроки,
	|	втМаршрутныйЛистЗаказы.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутныйЛистЗаказы.Примечание КАК Примечание,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиНомер, """") КАК ДокументОтгрузкиНомер,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиДата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДокументОтгрузкиДата,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиПунктНазначения, ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)) КАК ДокументОтгрузкиПунктНазначения,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК ДокументОтгрузкиКонтактноеЛицо,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиКонтрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ДокументОтгрузкиКонтрагент,
	|	ЕСТЬNULL(втДокументыОтгрузки.ДокументОтгрузкиГрузополучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ДокументОтгрузкиГрузополучатель,
	|	ЕСТЬNULL(втДокументыОтгрузки.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ втМаршрутныйЛистДокументыОтгрузки
	|ИЗ
	|	втМаршрутныйЛистЗаказы КАК втМаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыОтгрузки КАК втДокументыОтгрузки
	|		ПО втМаршрутныйЛистЗаказы.МаршрутныйЛист = втДокументыОтгрузки.МаршрутныйЛист
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистЗаказ = втДокументыОтгрузки.МаршрутныйЛистЗаказ
	|			И втМаршрутныйЛистЗаказы.МаршрутныйЛистДокументОтгрузки = втДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения КАК ПунктНазначения,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначенияАдрес КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистДокументыОтгрузки.НомерСтроки КАК НомерСтроки,
	|	втМаршрутныйЛистДокументыОтгрузки.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутныйЛистДокументыОтгрузки.Примечание КАК Примечание,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиНомер КАК ДокументОтгрузкиНомер,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиДата КАК ДокументОтгрузкиДата,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо КАК ДокументОтгрузкиКонтактноеЛицо,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтрагент КАК ДокументОтгрузкиКонтрагент,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиГрузополучатель КАК ДокументОтгрузкиГрузополучатель,
	|	втМаршрутныйЛистДокументыОтгрузки.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Менеджер
	|ПОМЕСТИТЬ втМаршрутныйЛистДокументыОтгрузкиМенеджер
	|ИЗ
	|	втМаршрутныйЛистДокументыОтгрузки КАК втМаршрутныйЛистДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_МенеджерыПунктовНазначения КАК МенеджерыПунктовНазначения
	|		ПО втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения = МенеджерыПунктовНазначения.ПунктНазначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛист.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛист.МаршрутныйЛистНомер КАК МаршрутныйЛистНомер,
	|	втМаршрутныйЛист.МаршрутныйЛистДата КАК МаршрутныйЛистДата,
	|	втМаршрутныйЛист.Заказчик КАК Заказчик,
	|	втМаршрутныйЛист.ЗаказчикНаименованиеПолное КАК ЗаказчикНаименованиеПолное,
	|	втМаршрутныйЛист.Перевозчик КАК Перевозчик,
	|	втМаршрутныйЛист.ПеревозчикНаименованиеПолное КАК ПеревозчикНаименованиеПолное,
	|	втМаршрутныйЛист.АвтомобильМодель КАК АвтомобильМодель,
	|	втМаршрутныйЛист.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
	|	втМаршрутныйЛист.ПрицепГосударственныйНомер КАК ПрицепГосударственныйНомер,
	|	втМаршрутныйЛист.НомерКонтейнера КАК НомерКонтейнера,
	|	втМаршрутныйЛист.Водитель КАК Водитель,
	|	втМаршрутныйЛист.НомераПломб КАК НомераПломб,
	|	втМаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	втМаршрутныйЛист.Комментарий КАК Комментарий,
	|	втМаршрутныйЛист.СтоимостьПРР КАК СтоимостьПРР,
	|	ЕСТЬNULL(втМаршрутныйЛист.Водитель.Представление, """") КАК ВодительПредставление,
	|	ЕСТЬNULL(втМаршрутныйЛист.Экспедитор.Представление, """") КАК ЭкспедиторПредставление,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """") КАК ВодительВодительскоеУдостоверениеСерия,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """") КАК ВодительВодительскоеУдостоверениеНомер,
	|	ЕСТЬNULL(ФизическиеЛица_КИ_ТелефонСлужебный.Представление, """") КАК ВодительТелефон,
	|	ЕСТЬNULL(Контрагенты_КИ_ФактАдресКонтрагента.Представление, """") КАК ПеревозчикАдрес,
	|	ЕСТЬNULL(Контрагенты_КИ_ТелефонКонтрагента.Представление, """") КАК ПеревозчикТелефон
	|ИЗ
	|	втМаршрутныйЛист КАК втМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|		ПО втМаршрутныйЛист.Водитель = ДокументыФизическихЛиц.Физлицо
	|			И (ДокументыФизическихЛиц.ВидДокумента = &ВидДокументовФЛ_ВодительскоеУдостоверение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК Контрагенты_КИ_ФактАдресКонтрагента
	|		ПО втМаршрутныйЛист.Перевозчик = Контрагенты_КИ_ФактАдресКонтрагента.Ссылка
	|			И (Контрагенты_КИ_ФактАдресКонтрагента.Тип = &ТипКИ_Адрес)
	|			И (Контрагенты_КИ_ФактАдресКонтрагента.Вид = &ВидКИ_ФактАдресКонтрагента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК Контрагенты_КИ_ТелефонКонтрагента
	|		ПО втМаршрутныйЛист.Перевозчик = Контрагенты_КИ_ТелефонКонтрагента.Ссылка
	|			И (Контрагенты_КИ_ТелефонКонтрагента.Тип = &ТипКИ_Телефон)
	|			И (Контрагенты_КИ_ТелефонКонтрагента.Вид = &ВидКИ_ТелефонКонтрагента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_КИ_ТелефонСлужебный
	|		ПО втМаршрутныйЛист.Водитель = ФизическиеЛица_КИ_ТелефонСлужебный.Ссылка
	|			И (ФизическиеЛица_КИ_ТелефонСлужебный.Тип = &ТипКИ_Телефон)
	|			И (ФизическиеЛица_КИ_ТелефонСлужебный.Вид = &ВидКИ_ТелефонСлужебный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист КАК МаршрутныйЛист,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ КАК МаршрутныйЛистЗаказ,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ.Номер, """") КАК МаршрутныйЛистЗаказНомер,
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистДокументОтгрузки КАК МаршрутныйЛистДокументОтгрузки,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения КАК ПунктНазначения,
	|	втМаршрутныйЛистДокументыОтгрузки.ПунктНазначенияАдрес КАК ПунктНазначенияАдрес,
	|	втМаршрутныйЛистДокументыОтгрузки.НомерСтроки КАК НомерСтроки,
	|	втМаршрутныйЛистДокументыОтгрузки.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутныйЛистДокументыОтгрузки.Примечание КАК Примечание,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиНомер КАК ДокументОтгрузкиНомер,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиДата КАК ДокументОтгрузкиДата,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо КАК ДокументОтгрузкиКонтактноеЛицо,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтрагент КАК ДокументОтгрузкиКонтрагент,
	|	втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиГрузополучатель КАК ДокументОтгрузкиГрузополучатель,
	|	втМаршрутныйЛистДокументыОтгрузки.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтактноеЛицо.Представление, """") КАК ДокументОтгрузкиКонтактноеЛицоПредставление,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиКонтрагент.НаименованиеПолное, """") КАК ДокументОтгрузкиКонтрагентПредставление,
	|	ЕСТЬNULL(втМаршрутныйЛистДокументыОтгрузки.ДокументОтгрузкиГрузополучатель.НаименованиеПолное, """") КАК ДокументОтгрузкиГрузополучательПредставление,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Менеджер,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер.Представление, """") КАК МенеджерПредставление,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ФизическиеЛица_КИ.Представление, """") КАК СТРОКА(100)) КАК МенеджерТелефон
	|ИЗ
	|	втМаршрутныйЛистДокументыОтгрузки КАК втМаршрутныйЛистДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_МенеджерыПунктовНазначения КАК МенеджерыПунктовНазначения
	|		ПО втМаршрутныйЛистДокументыОтгрузки.ПунктНазначения = МенеджерыПунктовНазначения.ПунктНазначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛистЗаказ = ТранспортнаяИнформация.Объект
	|			И втМаршрутныйЛистДокументыОтгрузки.ТранспортноеСредство = ТранспортнаяИнформация.ТранспортноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_КИ
	|		ПО (МенеджерыПунктовНазначения.Менеджер = ФизическиеЛица_КИ.Ссылка)
	|			И (ФизическиеЛица_КИ.Тип = &ТипКИ_Телефон)
	|			И (ФизическиеЛица_КИ.Вид = &ВидКИ_ТелефонСлужебный)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМаршрутныйЛистДокументыОтгрузки.МаршрутныйЛист,
	|	втМаршрутныйЛистДокументыОтгрузки.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗаполнитьТабличныйДокументРейсСоШтрихкодамиТТН(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_РейсСоШтрихкодамиТТН");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	
	МаршрутныйЛистДанные = ДанныеДляПечати.РезультатРеквизиты.Выбрать();
	МаршрутныйЛистДанныеРасшифровка = ДанныеДляПечати.РезультатТаблица.Выгрузить();
	
	ПервыйДокумент = Истина;
	
	Пока МаршрутныйЛистДанные.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ШАПКА
		ДанныеШапки = Новый Структура;
		ДанныеШапки.Вставить("Номер", МаршрутныйЛистДанные.МаршрутныйЛистНомер);
		ДанныеШапки.Вставить("Дата", Формат(МаршрутныйЛистДанные.МаршрутныйЛистДата, "ДФ = 'd MMMM yyyy ''г.'"));
		ДанныеШапки.Вставить("Заказчик", МаршрутныйЛистДанные.ЗаказчикНаименованиеПолное);
		ДанныеШапки.Вставить("Перевозчик", МаршрутныйЛистДанные.ПеревозчикНаименованиеПолное);
		ДанныеШапки.Вставить("ПеревозчикАдрес", МаршрутныйЛистДанные.ПеревозчикАдрес);
		ДанныеШапки.Вставить("ПеревозчикТелефон", МаршрутныйЛистДанные.ПеревозчикТелефон);
		ДанныеШапки.Вставить("АвтомобильМодель", МаршрутныйЛистДанные.АвтомобильМодель);
		ДанныеШапки.Вставить("АвтомобильГосударственныйНомер", МаршрутныйЛистДанные.АвтомобильГосударственныйНомер);
		ДанныеШапки.Вставить("ПрицепГосударственныйНомер", МаршрутныйЛистДанные.ПрицепГосударственныйНомер);
		ДанныеШапки.Вставить("Водитель", МаршрутныйЛистДанные.ВодительПредставление);
		ДанныеШапки.Вставить("Экспедитор", МаршрутныйЛистДанные.ЭкспедиторПредставление);
		ДанныеШапки.Вставить("НомерВодительскогоУдостоверения", МаршрутныйЛистДанные.ВодительВодительскоеУдостоверениеНомер);
		ДанныеШапки.Вставить("ВодительТелефон", МаршрутныйЛистДанные.ВодительТелефон);
					
		ОбластьШапка.Параметры.Заполнить(ДанныеШапки);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		СтруктураОтбор = Новый Структура("МаршрутныйЛист", МаршрутныйЛистДанные.МаршрутныйЛист);
					
		МаршрутныйЛистРасшифровка = МаршрутныйЛистДанныеРасшифровка.НайтиСтроки(СтруктураОтбор);
		
		НомерПоПорядку = 0;
		Для каждого СтрокаМаршрутныйЛистРасшифровка Из МаршрутныйЛистРасшифровка Цикл
			
			НомерПоПорядку = НомерПоПорядку + 1;
			
			ЗаказНомер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистЗаказНомер, Ложь, Ложь);
			
			Клиент = СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиГрузополучательПредставление;
			Если ПустаяСтрока(Клиент) Тогда
				Клиент = СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтрагентПредставление;				
			КонецЕсли;
			
			АдресДоставки = СтрокаМаршрутныйЛистРасшифровка.ПунктНазначенияАдрес;
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтактноеЛицоПредставление) Тогда
				
				АдресДоставки = АдресДоставки 
				+ Символы.ПС
				+ СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиКонтактноеЛицоПредставление;
				
			КонецЕсли;
			
			ДокументОтгрузкиНомер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиНомер, Истина, Истина);				
			Если ЗначениеЗаполнено(СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистДокументОтгрузки) Тогда
				ШтрихкодДанные = ДокументОтгрузкиНомер + "#" + XMLСтрока(СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистДокументОтгрузки.УникальныйИдентификатор());
				Штрихкод = НомерДокументаТолькоЦифры(ШтрихкодДанные);
			Иначе
				Штрихкод = "";
			КонецЕсли;
			
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("НПП", НомерПоПорядку);
			ДанныеСтроки.Вставить("ДокументОтгрузкиНомер", СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиНомер);
			ДанныеСтроки.Вставить("ДокументОтгрузкиДата", СтрокаМаршрутныйЛистРасшифровка.ДокументОтгрузкиДата);
			ДанныеСтроки.Вставить("ЗаказНомер", ЗаказНомер);
			ДанныеСтроки.Вставить("Клиент", Клиент);
			ДанныеСтроки.Вставить("АдресДоставки", АдресДоставки);				
					
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки); 
			
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(ШтрихКод, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОбластьСтрока.Рисунки.Штрихкод.Картинка = КартинкаQRКода;
			Иначе
				Шаблон = Нстр("ru = 'Не удалось сформировать QR-код для документа %1.
				|Технические подробности см. в журнале регистрации.';
				|en = 'Cannot generate QR code for document %1.
				|For technical details, see the event log.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, СтрокаМаршрутныйЛистРасшифровка.МаршрутныйЛистДокументОтгрузки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;				
			
			ОбластиДляПроверкиВывода = Новый Массив;
			ОбластиДляПроверкиВывода.Добавить(ОбластьСтрока);
			
			Если НомерПоПорядку = МаршрутныйЛистРасшифровка.Количество() Тогда
				
				ОбластиДляПроверкиВывода.Добавить(ОбластьИтоги);
				
			КонецЕсли;
			
			Если Не ТабличныйДокумент.ПроверитьВывод(ОбластиДляПроверкиВывода) Тогда
				
				Если МаршрутныйЛистРасшифровка.Количество() > 0 Тогда
					
					// Вывод разделителя и заголовка таблицы на новой странице
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ТабличныйДокумент.Вывести(ОбластьЗаголовок);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// ПОДВАЛ
		
		ДанныеОбластьИтоги = Новый Структура;
		ДанныеОбластьИтоги.Вставить("КоличествоСтраниц", ТабличныйДокумент.КоличествоСтраниц());
		
		ОбластьИтоги.Параметры.Заполнить(ДанныеОбластьИтоги);
		
		ТабличныйДокумент.Вывести(ОбластьИтоги);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция НомерДокументаТолькоЦифры(ЗНАЧ ДокументНомер)
	
	ДокументНомерРезультат = "";
	
	ДокументНомер = СокрЛП(ДокументНомер);
	ДокументНомерДлина = СтрДлина(ДокументНомер);
	
	Для ПозицияСимволаНомера = 1 По ДокументНомерДлина Цикл
		
		СимволНомера = Сред(ДокументНомер, ПозицияСимволаНомера, 1);
		
		Если СтрНайти("0123456789", СимволНомера) > 0 Тогда
			
			ДокументНомерРезультат = ДокументНомерРезультат + СимволНомера;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументНомерРезультат;

КонецФункции

#КонецОбласти

#Область ПропускНаВывоз

Функция СформироватьПропускНаВывоз(МассивОбъектов, ОбъектыПечати)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПропускНаВывоз";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_ПропускНаВыезд");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого  = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПаллета", бг_КонстантыПовтИсп.ЗначениеКонстанты("ЕдиницаПоКлассификаторуДляПаллеты"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.ДокументОтгрузки КАК ДокументОтгрузки
	|ПОМЕСТИТЬ ДокументыОтгрузки
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ЗаказыКлиентов.Номенклатура КАК Номенклатура,
	|	ЗаказыКлиентов.Заказано КАК Количество,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Паллета,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Коробка
	|ПОМЕСТИТЬ ДанныеДокументовОтгрузкиПредварительно
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ЗаказыКлиентов.Регистратор
	|			И (ЗаказыКлиентов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (ЗаказыКлиентов.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (ЗаказыКлиентов.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументОтгрузки,
	|	ТоварыКОтгрузке.Номенклатура,
	|	ТоварыКОтгрузке.КОтгрузке,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ТоварыКОтгрузке.Регистратор
	|			И (ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовОтгрузкиПредварительно.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Паллета
	|ПОМЕСТИТЬ УпаковкиПаллеты
	|ИЗ
	|	ДанныеДокументовОтгрузкиПредварительно КАК ДанныеДокументовОтгрузкиПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ДанныеДокументовОтгрузкиПредварительно.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмеренияПаллета)
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументовОтгрузкиПредварительно.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовОтгрузкиПредварительно.ДокументОтгрузки КАК ДокументОтгрузки,
	|	СУММА(ДанныеДокументовОтгрузкиПредварительно.Количество * ЕСТЬNULL(ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ОбъемДАЛ, 0)) КАК КоличествоДАЛ,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Коробка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеДокументовОтгрузкиПредварительно.Коробка.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|									ДанныеДокументовОтгрузкиПредварительно.Коробка.Числитель * ДанныеДокументовОтгрузкиПредварительно.Коробка.Знаменатель
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|										<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|										И УпаковкиПаллеты.Паллета.Родитель.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|									УпаковкиПаллеты.Паллета.Родитель.Числитель * УпаковкиПаллеты.Паллета.Родитель.Знаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоКоробок,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|									ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель * ДанныеДокументовОтгрузкиПредварительно.Паллета.Знаменатель
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|										<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|										И УпаковкиПаллеты.Паллета.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество / УпаковкиПаллеты.Паллета.Числитель * УпаковкиПаллеты.Паллета.Знаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПаллет,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель <> 0 И ДанныеДокументовОтгрузкиПредварительно.Паллета.Вес <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|						ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель * ДанныеДокументовОтгрузкиПредварительно.Паллета.Знаменатель
	|									* ДанныеДокументовОтгрузкиПредварительно.Паллета.Вес
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|								<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Числитель, 0) <> 0 И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Вес, 0) <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|					ЕСТЬNULL(УпаковкиПаллеты.Паллета.Числитель, 1)
	|					* ЕСТЬNULL(УпаковкиПаллеты.Паллета.Знаменатель, 0)
	|					* ЕСТЬNULL(УпаковкиПаллеты.Паллета.Вес, 0)
	|			КОГДА ЕСТЬNULL(ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЧислитель, 0) <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество *
	|						ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЧислитель / ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЗнаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Вес
	|ПОМЕСТИТЬ ДанныеДокументовОтгрузки
	|ИЗ
	|	ДанныеДокументовОтгрузкиПредварительно КАК ДанныеДокументовОтгрузкиПредварительно
	|		ЛЕВОЕ СОЕДИНЕНИЕ УпаковкиПаллеты КАК УпаковкиПаллеты
	|		ПО ДанныеДокументовОтгрузкиПредварительно.Номенклатура = УпаковкиПаллеты.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументовОтгрузкиПредварительно.ДокументОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи
	|ПОМЕСТИТЬ ДанныеДокументовФизическихЛиц
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|			,
	|			Физлицо В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						битМаршрутныйЛист.Водитель КАК Водитель
	|					ИЗ
	|						Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|					ГДЕ
	|						битМаршрутныйЛист.Ссылка В (&МассивОбъектов)
	|						И битМаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс))
	|				И ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение)) КАК ДокументыФизическихЛицСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛист.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(битМаршрутныйЛист.Организация.НаименованиеПолное, """") КАК Заказчик,
	|	ЕСТЬNULL(битМаршрутныйЛист.Перевозчик.НаименованиеПолное, """") КАК Перевозчик,
	|	битМаршрутныйЛист.ПеревозчикПартнер КАК ПеревозчикПартнер,
	|	ЕСТЬNULL(битМаршрутныйЛист.Прицеп.Код, """") КАК ГосНомерПрицепа,
	|	ПРЕДСТАВЛЕНИЕ(битМаршрутныйЛист.Автомобиль.бг_Модель) КАК МодельТС,
	|	ЕСТЬNULL(битМаршрутныйЛист.Автомобиль.Код, """") КАК ГосНомер,
	|	ПРЕДСТАВЛЕНИЕ(битМаршрутныйЛист.Водитель) КАК Водитель,
	|	битМаршрутныйЛист.Номер КАК Номер,
	|	битМаршрутныйЛист.Дата КАК Дата,
	|	битМаршрутныйЛист.НомераПломб КАК НомераПломб,
	|	битМаршрутныйЛист.МаршрутДоставки КАК ПолеМаршруты,
	|	битМаршрутныйЛист.Телефон КАК ТелефонВодителя,
	|	ЕСТЬNULL(ДанныеДокументовФизическихЛиц.Номер, """") КАК НомерВодительскогоУдостоверения
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументовФизическихЛиц КАК ДанныеДокументовФизическихЛиц
	|		ПО битМаршрутныйЛист.Водитель = ДанныеДокументовФизическихЛиц.Физлицо
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&МассивОбъектов)
	|	И битМаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка,
	|	МаршрутныйЛистЗаказы.НомерСтроки КАК НПП,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Номер
	|	КОНЕЦ КАК НомДок,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Дата
	|	КОНЕЦ КАК ДатДок,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Контрагент
	|	КОНЕЦ КАК ИмяКлиент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказНаПеремещение).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказПоставщику).Номер
	|	КОНЕЦ КАК НомерЗаказа,
	|	ВЫБОР
	|		КОГДА НЕ МаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА МаршрутныйЛистЗаказы.ПунктНазначения.Адрес
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|				И НЕ ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения
	|															= ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения.Адрес, """")
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения.Адрес, """")
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладПолучатель.бг_ПунктНазначения.Адрес, """")
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СуммаДокумента
	|	КОНЕЦ КАК Сумма,
	|	ЕСТЬNULL(ДанныеДокументовОтгрузки.КоличествоДАЛ, 0) КАК КолДКЛ,
	|	ДанныеДокументовОтгрузки.КоличествоКоробок КАК КолвоМест,
	|	ДанныеДокументовОтгрузки.КоличествоПаллет КАК КоличествоПаллет,
	|	ДанныеДокументовОтгрузки.Вес / 1000 КАК Вес
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументовОтгрузки КАК ДанныеДокументовОтгрузки
	|		ПО МаршрутныйЛистЗаказы.ДокументОтгрузки = ДанныеДокументовОтгрузки.ДокументОтгрузки
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	МаршрутныйЛистЗаказы.НомерСтроки";
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = Результат[Результат.ВГраница() - 1];
	РезультатПоТабличнойЧасти = Результат[Результат.ВГраница()];
	
	ДанныеПечати = РезультатПоШапке.Выбрать();
	ДанныеТабличнаяЧасть = РезультатПоТабличнойЧасти.Выгрузить();
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДФ=dd.MM.yyyy");
		
		Если ЗначениеЗаполнено(ДанныеПечати.Перевозчик) Тогда
			ОбластьШапка.Параметры.АдресПеревозчика = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
												ДанныеПечати.ПеревозчикПартнер, Справочники.ВидыКонтактнойИнформации.АдресПартнера);
			
			ОбластьШапка.Параметры.ТелефонПеревозчика = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
												ДанныеПечати.ПеревозчикПартнер, Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОтборСтроки = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		СтрокиТабличнаяЧасть = ДанныеТабличнаяЧасть.Скопировать(ОтборСтроки);
		
		Для Каждого СтрокаЗаказ Из СтрокиТабличнаяЧасть Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаЗаказ);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьИтого.Параметры.Сумма            = СтрокиТабличнаяЧасть.Итог("Сумма");
		ОбластьИтого.Параметры.КолДКЛ           = СтрокиТабличнаяЧасть.Итог("КолДКЛ");
		ОбластьИтого.Параметры.КолвоМест        = СтрокиТабличнаяЧасть.Итог("КолвоМест");
		ОбластьИтого.Параметры.КоличествоПаллет = СтрокиТабличнаяЧасть.Итог("КоличествоПаллет");
		ОбластьИтого.Параметры.Вес              = СтрокиТабличнаяЧасть.Итог("Вес");
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

#КонецОбласти

#Область АктПриемаПередачиТМЦ

Функция СформироватьАктПриемаПередачиТМЦ(МассивОбъектов, ОбъектыПечати)
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПропускНаВывоз";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_АктПриемаПередачи");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументОтгрузки,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ПОМЕСТИТЬ ДокументыОтгрузки
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (МаршрутныйЛистЗаказы.Ссылка В (&МассивОбъектов))
	|			И МаршрутныйЛистЗаказы.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка,
	|	ПередачаТоваровХранителю.Ссылка,
	|	ПередачаТоваровХранителю.Номер
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю КАК ПередачаТоваровХранителю
	|		ПО (МаршрутныйЛистЗаказы.Ссылка В (&МассивОбъектов))
	|			И МаршрутныйЛистЗаказы.ДокументОтгрузки = ПередачаТоваровХранителю.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.Ссылка КАК Ссылка,
	|	ДокументыОтгрузки.Номер КАК Номер
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛист.Ссылка КАК Ссылка,
	|	битМаршрутныйЛист.Организация КАК Организация,
	|	ЕСТЬNULL(битМаршрутныйЛист.Организация.НаименованиеПолное, """") КАК Заказчик,
	|	ЕСТЬNULL(битМаршрутныйЛист.Перевозчик.НаименованиеПолное, """") КАК Перевозчик,
	|	битМаршрутныйЛист.Перевозчик КАК ПеревозчикКонтрагент,
	|	ЕСТЬNULL(битМаршрутныйЛист.Перевозчик.ИНН, """") КАК ИННПеревозчика,
	|	ЕСТЬNULL(битМаршрутныйЛист.Перевозчик.КПП, """") КАК КПППеревозчика,
	|	битМаршрутныйЛист.Номер КАК Номер,
	|	битМаршрутныйЛист.Дата КАК Дата,
	|	битМаршрутныйЛист.ДоговорНаПеревозку.Номер КАК НомерДоговора,
	|	битМаршрутныйЛист.ДоговорНаПеревозку.Дата КАК ДатаДоговора
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&МассивОбъектов)
	|	И битМаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.Ссылка КАК Ссылка,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура.Код КАК Код,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура.Наименование КАК Наименование,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ВыручкаИСебестоимостьПродаж.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ВыручкаИСебестоимостьПродаж.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручки) / СУММА(ВыручкаИСебестоимостьПродаж.Количество)
	|	КОНЕЦ КАК Цена,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручки) КАК Сумма
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ВыручкаИСебестоимостьПродаж.Регистратор
	|			И (ДокументыОтгрузки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.Ссылка,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.Ссылка,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.Код,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.Наименование,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|	СУММА(ПередачаТоваровХранителюВидыЗапасов.Количество),
	|	ВЫБОР
	|		КОГДА СУММА(ПередачаТоваровХранителюВидыЗапасов.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл)
	|				/ СУММА(ПередачаТоваровХранителюВидыЗапасов.Количество)
	|	КОНЕЦ,
	|	СУММА(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл + СуммыДокументовВВалютахУчета.СуммаНДСРегл)
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.ВидыЗапасов КАК ПередачаТоваровХранителюВидыЗапасов
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ПередачаТоваровХранителюВидыЗапасов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ПередачаТоваровХранителюВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО (ПередачаТоваровХранителюВидыЗапасов.Ссылка = СуммыДокументовВВалютахУчета.Регистратор)
	|			И (ПередачаТоваровХранителюВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.Ссылка,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура";
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатНомераРеализаций  = Результат[Результат.ВГраница() - 2];
	РезультатПоШапке           = Результат[Результат.ВГраница() - 1];
	РезультатПоТабличнойЧасти  = Результат[Результат.ВГраница()];
	
	ДанныеПечати = РезультатПоШапке.Выбрать();
	ДанныеТабличнаяЧасть = РезультатПоТабличнойЧасти.Выгрузить();
	ДанныеНомераРеализация = РезультатНомераРеализаций.Выгрузить();
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ОтборСтроки = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДФ=dd.MM.yyyy");
		
		ДанныеОтветственногоЛица = ДанныеОтветственногоЛицаТекущегоПользователя(ДанныеПечати.Организация, ТекущийПользователь);
		Если ДанныеОтветственногоЛица <> Неопределено Тогда
			ОбластьШапка.Параметры.ДолжностьОтветственного = ДанныеОтветственногоЛица.Должность;
			ОбластьШапка.Параметры.ОтветственноеЛицоЗаказчика = ДанныеОтветственногоЛица.ФизическоеЛицо;
			
			ОбластьШапка.Параметры.НомерДатаДоверенности = СтрШаблон(" %1 от %2",
									ДанныеОтветственногоЛица.НомерДокументаПраваПодписи,
									Формат(ДанныеОтветственногоЛица.ДатаДокументаПраваПодписи,"ДФ=dd.MM.yyyy"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеПечати.ПеревозчикКонтрагент) Тогда
			ОбластьШапка.Параметры.АдресПеревозчика = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
									ДанныеПечати.ПеревозчикКонтрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, , ДанныеПечати.Дата);
		КонецЕсли;
		
		НомераРеализаций = ДанныеНомераРеализация.Скопировать(ОтборСтроки).ВыгрузитьКолонку("Номер");
		ОбластьШапка.Параметры.НомераРеализаций = СтрСоединить(НомераРеализаций, ",");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		СтрокиТабличнаяЧасть = ДанныеТабличнаяЧасть.Скопировать(ОтборСтроки);
		НомерСтроки = 0;
		Для Каждого СтрокаЗаказ Из СтрокиТабличнаяЧасть Цикл
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаЗаказ);
			ОбластьСтрока.Параметры.НПП = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьПодвал.Параметры.НПП = НомерСтроки;
		ОбластьПодвал.Параметры.Количество = СтрокиТабличнаяЧасть.Итог("Количество");
		ОбластьПодвал.Параметры.Сумма = СтрокиТабличнаяЧасть.Итог("Сумма");
		
		Если ДанныеОтветственногоЛица <> Неопределено Тогда
			ОбластьПодвал.Параметры.ДолжностьОтветственного = ДанныеОтветственногоЛица.Должность;
			ОбластьПодвал.Параметры.ОтветственноеЛицоЗаказчика = ДанныеОтветственногоЛица.ФизическоеЛицо;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДФ=dd.MM.yyyy");
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ДанныеОтветственногоЛицаТекущегоПользователя(Организация, Пользователь)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ОтветственныеЛицаОрганизаций.Должность = """"
	|			ТОГДА ОтветственныеЛицаОрганизаций.ОтветственноеЛицо
	|		ИНАЧЕ ОтветственныеЛицаОрганизаций.Должность
	|	КОНЕЦ КАК Должность,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОтветственныеЛицаОрганизаций.НомерДокументаПраваПодписи КАК НомерДокументаПраваПодписи,
	|	ОтветственныеЛицаОрганизаций.ДатаДокументаПраваПодписи КАК ДатаДокументаПраваПодписи
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО (Пользователи.Ссылка = &Пользователь)
	|			И Пользователи.ФизическоеЛицо = ОтветственныеЛицаОрганизаций.ФизическоеЛицо
	|			И (ОтветственныеЛицаОрганизаций.ДатаНачала <= &Дата)
	|			И (ОтветственныеЛицаОрганизаций.ДатаОкончания >= &Дата
	|				ИЛИ ОтветственныеЛицаОрганизаций.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|			И (ОтветственныеЛицаОрганизаций.Владелец = &Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеОтветственногоЛица = Новый Структура("Должность, ФизическоеЛицо, НомерДокументаПраваПодписи, ДатаДокументаПраваПодписи");
		ЗаполнитьЗначенияСвойств(ДанныеОтветственногоЛица, Выборка);
		Возврат ДанныеОтветственногоЛица;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область МаршрутныйЛистВодителя

Функция СформироватьМаршрутныйЛистВодителя(МассивОбъектов, ОбъектыПечати)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПропускНаВывоз";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битМаршрутныйЛист.ПФ_MXL_МаршрутныйЛистВодителя");
	ОбластьЗаголовок            = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка                = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка2               = Макет.ПолучитьОбласть("Шапка2");
	ОбластьШапкаТочки           = Макет.ПолучитьОбласть("ШапкаТочки|Заказы");
	ОбластьИнформацияОДоставке  = Макет.ПолучитьОбласть("Раздел|ИнформацияОДоставке");
	ОбластьСтрокаЗаказ          = Макет.ПолучитьОбласть("СтрокаЗаказ|Заказы");
	ОбластьСуммовойРаздел       = Макет.ПолучитьОбласть("СуммовойРаздел");
	ОбластьПодвал               = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПаллета", бг_КонстантыПовтИсп.ЗначениеКонстанты("ЕдиницаПоКлассификаторуДляПаллеты"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка,
	|	МаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	МаршрутныйЛистЗаказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Ссылка.Склад КАК Справочник.Склады).бг_ПунктНазначения КАК ПунктПогрузки,
	|	ВЫБОР
	|		КОГДА НЕ МаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА МаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|				И НЕ ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения
	|								= ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения,
	|								ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка))
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения,
	|								ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка))
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладПолучатель.бг_ПунктНазначения,
	|								ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|	КОНЕЦ КАК ПунктНазначения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Номер
	|	КОНЕЦ КАК НомерНакладной,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказНаПеремещение).Номер
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказПоставщику).Номер
	|	КОНЕЦ КАК НомерЗаказа,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ВозвратТоваровОтКлиента).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПередачаТоваровХранителю)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СуммаДокумента
	|	КОНЕЦ КАК СуммаДокумента
	|ПОМЕСТИТЬ ДокументыОтгрузки
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ЗаказыКлиентов.Номенклатура КАК Номенклатура,
	|	ЗаказыКлиентов.Заказано КАК Количество,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Паллета,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Коробка
	|ПОМЕСТИТЬ ДанныеДокументовОтгрузкиПредварительно
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ЗаказыКлиентов.Регистратор
	|			И (ЗаказыКлиентов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (ЗаказыКлиентов.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (ЗаказыКлиентов.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументОтгрузки,
	|	ТоварыКОтгрузке.Номенклатура,
	|	ТоварыКОтгрузке.КОтгрузке,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ТоварыКОтгрузке.Регистратор
	|			И (ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовОтгрузкиПредварительно.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Паллета
	|ПОМЕСТИТЬ УпаковкиПаллеты
	|ИЗ
	|	ДанныеДокументовОтгрузкиПредварительно КАК ДанныеДокументовОтгрузкиПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ДанныеДокументовОтгрузкиПредварительно.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмеренияПаллета)
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументовОтгрузкиПредварительно.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовОтгрузкиПредварительно.ДокументОтгрузки КАК ДокументОтгрузки,
	|	СУММА(ДанныеДокументовОтгрузкиПредварительно.Количество) КАК Количество,
	|	СУММА(ДанныеДокументовОтгрузкиПредварительно.Количество * ЕСТЬNULL(ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ОбъемДАЛ, 0)) КАК КоличествоДАЛ,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Коробка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеДокументовОтгрузкиПредварительно.Коробка.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|						ДанныеДокументовОтгрузкиПредварительно.Коробка.Числитель * ДанныеДокументовОтгрузкиПредварительно.Коробка.Знаменатель
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета.Родитель,
	|						ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И УпаковкиПаллеты.Паллета.Родитель.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|						УпаковкиПаллеты.Паллета.Родитель.Числитель * УпаковкиПаллеты.Паллета.Родитель.Знаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоКоробок,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|								ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель * ДанныеДокументовОтгрузкиПредварительно.Паллета.Знаменатель
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|										<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И УпаковкиПаллеты.Паллета.Числитель <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество / УпаковкиПаллеты.Паллета.Числитель * УпаковкиПаллеты.Паллета.Знаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПаллет,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеДокументовОтгрузкиПредварительно.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ЕстьNull(ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель, 0) <> 0
	|						И ЕстьNull(ДанныеДокументовОтгрузкиПредварительно.Паллета.Вес, 0) <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|								ДанныеДокументовОтгрузкиПредварительно.Паллета.Числитель * ДанныеДокументовОтгрузкиПредварительно.Паллета.Знаменатель
	|								* ДанныеДокументовОтгрузкиПредварительно.Паллета.Вес
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|								<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Числитель, 0) <> 0 И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Вес, 0) <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество /
	|					УпаковкиПаллеты.Паллета.Числитель * УпаковкиПаллеты.Паллета.Знаменатель * УпаковкиПаллеты.Паллета.Вес
	|			КОГДА ЕСТЬNULL(ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЗнаменатель, 0) <> 0
	|				ТОГДА ДанныеДокументовОтгрузкиПредварительно.Количество *
	|					ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЧислитель / ДанныеДокументовОтгрузкиПредварительно.Номенклатура.ВесЗнаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Вес
	|ПОМЕСТИТЬ ДанныеДокументовОтгрузки
	|ИЗ
	|	ДанныеДокументовОтгрузкиПредварительно КАК ДанныеДокументовОтгрузкиПредварительно
	|		ЛЕВОЕ СОЕДИНЕНИЕ УпаковкиПаллеты КАК УпаковкиПаллеты
	|		ПО ДанныеДокументовОтгрузкиПредварительно.Номенклатура = УпаковкиПаллеты.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументовОтгрузкиПредварительно.ДокументОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыОтгрузки.ДокументОтгрузки) КАК КоличествоНакладных,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыОтгрузки.ПунктНазначения) КАК КоличествоПунктовНазначения
	|ПОМЕСТИТЬ ИтоговоеКоличествоДокументов
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛист.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(битМаршрутныйЛист.ДокументОснование.Номер, """") КАК НомерМаршрутногоЛиста,
	|	ЕСТЬNULL(битМаршрутныйЛист.ДокументОснование.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаМаршрутногоЛиста,
	|	битМаршрутныйЛист.Номер КАК НомерРейса,
	|	битМаршрутныйЛист.Перевозчик КАК Перевозчик,
	|	ЕСТЬNULL(битМаршрутныйЛист.Автомобиль.Код, """") КАК ГосНомер,
	|	битМаршрутныйЛист.ТипКузова КАК ТипКузова,
	|	битМаршрутныйЛист.КлассГрузоподъемности КАК ТоннажАМ,
	|	ЕСТЬNULL(битМаршрутныйЛист.Прицеп.Код, """") КАК ГосНомерПрицепа,
	|	битМаршрутныйЛист.Водитель КАК Водитель,
	|	битМаршрутныйЛист.Телефон КАК ТелефонВодителя,
	|	ЕСТЬNULL(ИтоговоеКоличествоДокументов.КоличествоНакладных, 0) КАК ИтогоЗаказов,
	|	ЕСТЬNULL(ИтоговоеКоличествоДокументов.КоличествоПунктовНазначения, 0) КАК ИтогоТочек,
	|	битМаршрутныйЛист.ДатаПрибытияФакт КАК ДатаПрибытияФакт,
	|	битМаршрутныйЛист.КоличествоПаллет КАК КоличествоПаллет
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтоговоеКоличествоДокументов КАК ИтоговоеКоличествоДокументов
	|		ПО битМаршрутныйЛист.Ссылка = ИтоговоеКоличествоДокументов.Ссылка
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&МассивОбъектов)
	|	И битМаршрутныйЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.Ссылка КАК Ссылка,
	|	ДокументыОтгрузки.ПунктНазначения КАК ПунктНазначения,
	|	ЕСТЬNULL(ДокументыОтгрузки.ПунктНазначения.Адрес, """") КАК ПунктНазначенияАдрес,
	|	ДокументыОтгрузки.НомерНакладной КАК НомерНакладной,
	|	ДокументыОтгрузки.Контрагент КАК Контрагент,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиПо КАК ПлановаяДатаДоставкиПо,
	|	ЕСТЬNULL(РасстояниеДоПунктовРазгрузки.Расстояние, 0) КАК Расстояние,
	|	ДокументыОтгрузки.НомерЗаказа КАК НомерЗаказа,
	|	ЕСТЬNULL(ДокументыОтгрузки.ПунктНазначения.КаналПродаж, НЕОПРЕДЕЛЕНО) КАК КаналСбыта,
	|	ЕСТЬNULL(ДанныеДокументовОтгрузки.КоличествоДАЛ, 0) КАК КолДкл,
	|	ЕСТЬNULL(ДанныеДокументовОтгрузки.КоличествоКоробок, 0) КАК КолвоМест,
	|	ЕСТЬNULL(ДанныеДокументовОтгрузки.Вес, 0) КАК Вес,
	|	ЕСТЬNULL(ДанныеДокументовОтгрузки.Количество, 0) КАК Количество,
	|	ДокументыОтгрузки.СуммаДокумента КАК Сумма,
	|	ЕСТЬNULL(МенеджерыПунктовНазначения.Менеджер.Представление, """") КАК Менеджер,
	|	ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ФизическиеЛица_ТелефонРабочий.Представление, """") КАК СТРОКА(100)) <> """"
	|		ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ФизическиеЛица_ТелефонРабочий.Представление, """") КАК СТРОКА(100))
	|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ФизическиеЛица_ТелефонМобильный.Представление, """") КАК СТРОКА(100))
	|	КОНЕЦ КАК ТелефонМенеджера,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДокументыОтгрузки.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(ДокументыОтгрузки.Заказ КАК Документ.ЗаказКлиента).Комментарий
	|		КОГДА ТИПЗНАЧЕНИЯ(ДокументыОтгрузки.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(ДокументыОтгрузки.Заказ КАК Документ.ЗаказНаПеремещение).Комментарий
	|		КОГДА ТИПЗНАЧЕНИЯ(ДокументыОтгрузки.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(ДокументыОтгрузки.Заказ КАК Документ.ЗаказПоставщику).Комментарий
	|	КОНЕЦ КАК КомментарийЗаказа
	|ИЗ
	|	ДокументыОтгрузки КАК ДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ТранспортнаяИнформация.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_РасстояниеДоПунктовРазгрузки КАК РасстояниеДоПунктовРазгрузки
	|		ПО ДокументыОтгрузки.ПунктПогрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузкиОрганизации
	|			И ДокументыОтгрузки.ПунктНазначения = РасстояниеДоПунктовРазгрузки.ПунктРазгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументовОтгрузки КАК ДанныеДокументовОтгрузки
	|		ПО ДокументыОтгрузки.ДокументОтгрузки = ДанныеДокументовОтгрузки.ДокументОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_МенеджерыПунктовНазначения.СрезПоследних КАК МенеджерыПунктовНазначения
	|		ПО ДокументыОтгрузки.ПунктНазначения = МенеджерыПунктовНазначения.ПунктНазначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_ТелефонРабочий
	|		ПО (МенеджерыПунктовНазначения.Менеджер = ФизическиеЛица_ТелефонРабочий.Ссылка)
	|			И (ФизическиеЛица_ТелефонРабочий.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (ФизическиеЛица_ТелефонРабочий.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛица_ТелефонМобильный
	|		ПО (МенеджерыПунктовНазначения.Менеджер = ФизическиеЛица_ТелефонМобильный.Ссылка)
	|			И (ФизическиеЛица_ТелефонМобильный.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (ФизическиеЛица_ТелефонМобильный.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица))";
	Результат = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке = Результат[Результат.ВГраница() - 1];
	РезультатДокументыОтгрузки = Результат[Результат.ВГраница()];
	
	ДанныеПечати = РезультатПоШапке.Выбрать();
	ДокументыОтгрузки = РезультатДокументыОтгрузки.Выгрузить();
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.МаршрутныйЛист = СтрШаблон(НСтр("ru = 'Маршр.лист: %1 от %2'"),
													ДанныеПечати.НомерМаршрутногоЛиста,
													Формат(ДанныеПечати.ДатаМаршрутногоЛиста, "ДФ=dd.MM.yyyy"));
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		КлючевыеПоля = "ПунктНазначения, ПунктНазначенияАдрес, Менеджер, ТелефонМенеджера, Контрагент, ПлановаяДатаДоставкиС, ПлановаяДатаДоставкиПо, Расстояние";
		
		ОтборПунктыНазначения = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ПунктыНазначения = ДокументыОтгрузки.Скопировать(ОтборПунктыНазначения);
		
		// Итоговые значения по рейсу
		СуммарныйОбъемДКЛ      = ПунктыНазначения.Итог("КолДкл");
		СуммарныйВес           = ПунктыНазначения.Итог("Вес");
		МаксимальноеРасстояние = 0;
		
		ПунктыНазначения.Свернуть(КлючевыеПоля);
		ПунктыНазначения.Сортировать("Расстояние");
		
		НомерПунктаНазначения = 1;
		Для Каждого СтрокаПунктНазначения Из ПунктыНазначения Цикл
			ОтборДокументыОтгрузки = Новый Структура(КлючевыеПоля);
			ОтборДокументыОтгрузки.Вставить("Ссылка", ДанныеПечати.Ссылка);
			ЗаполнитьЗначенияСвойств(ОтборДокументыОтгрузки, СтрокаПунктНазначения);
			СтрокиДокументыОтгрузки = ДокументыОтгрузки.Скопировать(ОтборДокументыОтгрузки);
			
			ТабличныйДокументНакладные = Новый ТабличныйДокумент;
			
			ОбластьШапкаТочки.Параметры.Сумма      = СтрокиДокументыОтгрузки.Итог("Сумма");
			ОбластьШапкаТочки.Параметры.Вес        = СтрокиДокументыОтгрузки.Итог("Вес");
			ОбластьШапкаТочки.Параметры.КолДкл     = СтрокиДокументыОтгрузки.Итог("КолДкл");
			ОбластьШапкаТочки.Параметры.КолвоМест  = СтрокиДокументыОтгрузки.Итог("КолвоМест");
			ОбластьШапкаТочки.Параметры.Количество = СтрокиДокументыОтгрузки.Итог("Количество");
			ТабличныйДокументНакладные.Вывести(ОбластьШапкаТочки);
			
			КоличествоСтрокВывести = 12;
			Для Каждого СтрокаДокументыОтгрузки Из СтрокиДокументыОтгрузки Цикл
				ОбластьСтрокаЗаказ.Параметры.Заполнить(СтрокаДокументыОтгрузки);
				ОбластьСтрокаЗаказ.Параметры.ДокументОтгрузки = СтрокаДокументыОтгрузки.НомерНакладной;
				ТабличныйДокументНакладные.Вывести(ОбластьСтрокаЗаказ);
				
				КоличествоСтрокВывести = КоличествоСтрокВывести - 1;
			КонецЦикла;
			
			ОбластьСтрокаЗаказ = Макет.ПолучитьОбласть("СтрокаЗаказ|Заказы");
			Пока КоличествоСтрокВывести > 0 Цикл
				ТабличныйДокументНакладные.Вывести(ОбластьСтрокаЗаказ);
				КоличествоСтрокВывести = КоличествоСтрокВывести - 1;
			КонецЦикла;
			
			Если Не ТабличныйДокумент.ПроверитьВывод(ТабличныйДокументНакладные) Тогда
				ТабличныйДокумент.Вывести(ОбластьПодвал);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапка);
			КонецЕсли;
			
			ОбластьШапка2.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьШапка2);
			
			ТабличныйДокумент.Присоединить(ТабличныйДокументНакладные);
			
			ОбластьИнформацияОДоставке.Параметры.Клиент                = СтрокаПунктНазначения.Контрагент;
			ОбластьИнформацияОДоставке.Параметры.АдресДоставки         = СтрокаПунктНазначения.ПунктНазначенияАдрес;
			ОбластьИнформацияОДоставке.Параметры.ИтогоЗаказов          = СтрокиДокументыОтгрузки.Количество();
			ОбластьИнформацияОДоставке.Параметры.Комментарий           = ?(СтрокиДокументыОтгрузки.Количество() = 0, "", СтрокиДокументыОтгрузки[0].КомментарийЗаказа);
			ОбластьИнформацияОДоставке.Параметры.ДатаДоставки          = Формат(СтрокаПунктНазначения.ПлановаяДатаДоставкиС, "ДФ=dd.MM.yyyy");
			ОбластьИнформацияОДоставке.Параметры.ВремяДоставки         = СтрШаблон("%1 - %2",
								Формат(СтрокаПунктНазначения.ПлановаяДатаДоставкиС, "ДФ=HH:mm"),
								Формат(СтрокаПунктНазначения.ПлановаяДатаДоставкиПо, "ДФ=HH:mm"));
			ОбластьИнформацияОДоставке.Параметры.Очередность           = НомерПунктаНазначения;
			ОбластьИнформацияОДоставке.Параметры.ИтогоТочек            = ПунктыНазначения.Количество();
			ОбластьИнформацияОДоставке.Параметры.ДатаПодачиНаПогрузку  = Формат(ДанныеПечати.ДатаПрибытияФакт, "ДФ=dd.MM.yyyy");
			ОбластьИнформацияОДоставке.Параметры.ВремяПодачиНаПогрузку = Формат(ДанныеПечати.ДатаПрибытияФакт, "ДФ=HH:mm");
			ОбластьИнформацияОДоставке.Параметры.Менеджер              = СтрокаПунктНазначения.Менеджер;
			ОбластьИнформацияОДоставке.Параметры.ТелефонМенеджера      = СтрокаПунктНазначения.ТелефонМенеджера;
			
			ТабличныйДокумент.Присоединить(ОбластьИнформацияОДоставке);
			
			НомерПунктаНазначения  = НомерПунктаНазначения + 1;
			МаксимальноеРасстояние = ?(МаксимальноеРасстояние < СтрокаПунктНазначения.Расстояние, СтрокаПунктНазначения.Расстояние, МаксимальноеРасстояние);
		КонецЦикла;
		
		Если Не ТабличныйДокумент.ПроверитьВывод(ОбластьСуммовойРаздел) Тогда
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьШапка);
			ТабличныйДокумент.Вывести(ОбластьШапка2);
		КонецЕсли;
		
		ОбластьСуммовойРаздел.Параметры.ЗагруженоНаСкладе   = ДанныеПечати.КоличествоПаллет;
		ОбластьСуммовойРаздел.Параметры.СуммарныйОбъем      = СуммарныйОбъемДКЛ;
		ОбластьСуммовойРаздел.Параметры.СумарныйВес         = СуммарныйВес;
		ОбластьСуммовойРаздел.Параметры.НаибольшееРастояние = МаксимальноеРасстояние / 1000;
		ТабличныйДокумент.Вывести(ОбластьСуммовойРаздел);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

#КонецОбласти

#КонецОбласти

Процедура УточнитьПараметрыОтправки(МаршрутныеЛисты, ПараметрыОтправки, ИдентификаторПечатнойФормы)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МаршрутныеЛисты);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	битМаршрутныйЛист.Организация КАК Организация
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК битМаршрутныйЛист
	|ГДЕ
	|	битМаршрутныйЛист.Ссылка В(&Ссылка)";            
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
	Иначе
		Организация = Неопределено;
	КонецЕсли;
	ЭлектронныйАдрес = РегистрыСведений.бг_НастройкиОтправкиПечатныхФорм.АдресДляРассылки(
							Метаданные.Документы.битМаршрутныйЛист, ИдентификаторПечатнойФормы, Организация);
	Если ЗначениеЗаполнено(ЭлектронныйАдрес) Тогда 
		ПараметрыОтправки.Вставить("бг_ЭлектронныйАдрес", ЭлектронныйАдрес);
	КонецЕсли;
КонецПроцедуры

Функция ТарифТранспортнойКомпании(МаршрутныйЛист, ВыводитьСообщения = Истина)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидДокумента", МаршрутныйЛист.ВидДокумента);
	Запрос.УстановитьПараметр("Склад", МаршрутныйЛист.Склад);
	Запрос.УстановитьПараметр("Период", МаршрутныйЛист.Дата);
	Запрос.УстановитьПараметр("Перевозчик", МаршрутныйЛист.Перевозчик);
	Запрос.УстановитьПараметр("КлассГрузоподъемности", МаршрутныйЛист.КлассГрузоподъемности);
	Запрос.УстановитьПараметр("ТипКузова", МаршрутныйЛист.ТипКузова);
	Запрос.УстановитьПараметр("Заказы", МаршрутныйЛист.Заказы.Выгрузить(, "Заказ, ДокументОтгрузки, ПунктНазначения"));
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаказы());
	ТекстыЗапроса.Добавить(ТекстЗапросаРасчетРасстоянийДоПунктовРазгрузки());
	ТекстыЗапроса.Добавить(ТекстЗапросаРасчетТарифаТК());
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий()
		И ЗначениеЗаполнено(Выборка.Стоимость) Тогда
		Возврат Выборка.Стоимость;
	ИначеЕсли ВыводитьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Тариф не обнаружен:
										|Перевозчик: %1
										|Тоннаж АМ: %2
										|ТипКузова: %3
										|Пункт погрузки: %4
										|Зона доставки: %5'");
		ТекстСообщения = СтрШаблон(ТекстСообщения,
										МаршрутныйЛист.Перевозчик,
										МаршрутныйЛист.КлассГрузоподъемности,
										МаршрутныйЛист.ТипКузова,
										Выборка.ПунктПогрузки,
										Выборка.ЗонаДоставки);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция ТекстЗапросаЗаказы()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Склад КАК Склад,
	|	Заказы.Заказ КАК Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Заказы.ПунктНазначения КАК ПунктНазначения
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	&Заказы КАК Заказы";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаДокументыОтгрузки()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Рейс,
	|	МаршрутныйЛист.Склад КАК Склад,
	|	МаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	МаршрутныйЛистЗаказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	МаршрутныйЛист.Склад.бг_ПунктНазначения КАК ПунктПогрузки,
	|	ВЫБОР
	|		КОГДА МаршрутныйЛистЗаказы.ПунктНазначения <> ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА МаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|				И ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения
	|																	<> ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказНаПеремещение).СкладПолучатель.бг_ПунктНазначения
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|				И ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).бг_ПунктПогрузки
	|																	<> ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).бг_ПунктПогрузки
	|		КОГДА ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказПоставщику).бг_ПунктПогрузки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|	КОНЕЦ КАК ПунктНазначения
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	Документ.битМаршрутныйЛист КАК МаршрутныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО (МаршрутныйЛист.Ссылка В (&Рейсы))
	|			И МаршрутныйЛист.Ссылка = МаршрутныйЛистЗаказы.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Заказы.ПунктПогрузки КАК ПунктПогрузки,
	|	Заказы.ПунктНазначения КАК ПунктВыгрузки,
	|	ЕСТЬNULL(РасстояниеДоПунктовРазгрузки.Расстояние, 0) КАК Расстояние
	|ПОМЕСТИТЬ РасстоянияДоПунктовРазгрузки
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_РасстояниеДоПунктовРазгрузки КАК РасстояниеДоПунктовРазгрузки
	|		ПО Заказы.ПунктПогрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузкиОрганизации
	|			И Заказы.ПунктНазначения = РасстояниеДоПунктовРазгрузки.ПунктРазгрузки";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетРасстоянийДоПунктовРазгрузки()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МаршрутныйЛистЗаказы.Заказ КАК Заказ,
	|	ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Склад КАК Справочник.Склады).бг_ПунктНазначения КАК ПунктПогрузки,
	|	ВЫБОР
	|		КОГДА НЕ МаршрутныйЛистЗаказы.ПунктНазначения = ЗНАЧЕНИЕ(Справочник.битПунктыНазначения.ПустаяСсылка)
	|			ТОГДА МаршрутныйЛистЗаказы.ПунктНазначения
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказКлиента).бг_ПунктНазначения
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказНаПеремещение).СкладПолучатель.бг_ПунктНазначения
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.Заказ КАК Документ.ЗаказПоставщику).бг_ПунктПогрузки
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).бг_ПунктНазначения
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПеремещениеТоваров)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладПолучатель.бг_ПунктНазначения
	|		КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|				И ТИПЗНАЧЕНИЯ(МаршрутныйЛистЗаказы.ДокументОтгрузки) = ТИП(Документ.ПриобретениеТоваровУслуг)
	|			ТОГДА ВЫРАЗИТЬ(МаршрутныйЛистЗаказы.ДокументОтгрузки КАК Документ.ПриобретениеТоваровУслуг).бг_ПунктПогрузки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПунктВыгрузки
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	Заказы КАК МаршрутныйЛистЗаказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Заказ КАК Заказ,
	|	ДанныеДокументов.ПунктПогрузки КАК ПунктПогрузки,
	|	ДанныеДокументов.ПунктВыгрузки КАК ПунктВыгрузки,
	|	ЕСТЬNULL(РасстояниеДоПунктовРазгрузки.Расстояние, 0) КАК Расстояние
	|ПОМЕСТИТЬ РасстоянияДоПунктовРазгрузки
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_РасстояниеДоПунктовРазгрузки КАК РасстояниеДоПунктовРазгрузки
	|		ПО ДанныеДокументов.ПунктПогрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузкиОрганизации
	|			И ДанныеДокументов.ПунктВыгрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузки";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетТарифаТК()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(РасстоянияДоПунктовРазгрузки.Расстояние), 0) КАК Расстояние
	|ПОМЕСТИТЬ РасстояниеМаршрута
	|ИЗ
	|	РасстоянияДоПунктовРазгрузки КАК РасстоянияДоПунктовРазгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.ПунктПогрузки КАК ПунктПогрузки,
	|	ДанныеДокументов.ПунктВыгрузки КАК ПунктВыгрузки,
	|	ЗоныДоставкиПунктовВыгрузки.ЗонаДоставки КАК ЗонаДоставки
	|ПОМЕСТИТЬ ЗоныДоставки
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_РасстояниеДоПунктовРазгрузки КАК РасстояниеДоПунктовРазгрузки
	|		ПО ДанныеДокументов.ПунктПогрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузкиОрганизации
	|			И ДанныеДокументов.ПунктВыгрузки = РасстояниеДоПунктовРазгрузки.ПунктРазгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасстояниеМаршрута КАК РасстояниеМаршрута
	|		ПО (РасстояниеДоПунктовРазгрузки.Расстояние = РасстояниеМаршрута.Расстояние)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ЗоныДоставкиПунктовВыгрузки КАК ЗоныДоставкиПунктовВыгрузки
	|		ПО ДанныеДокументов.ПунктПогрузки = ЗоныДоставкиПунктовВыгрузки.ПунктПогрузки
	|			И ДанныеДокументов.ПунктВыгрузки = ЗоныДоставкиПунктовВыгрузки.ПунктВыгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТарифыТК.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ Тариф
	|ИЗ
	|	РегистрСведений.бг_ТарифыТК.СрезПоследних(
	|			&Период,
	|			Перевозчик = &Перевозчик
	|				И КлассГрузоподъемности = &КлассГрузоподъемности
	|				И ТипКузова = &ТипКузова
	|				И (ПунктПогрузки, ЗонаДоставки) В
	|					(ВЫБРАТЬ
	|						ЗоныДоставки.ПунктПогрузки КАК ПунктПогрузки,
	|						ЗоныДоставки.ЗонаДоставки КАК ЗонаДоставки
	|					ИЗ
	|						ЗоныДоставки КАК ЗоныДоставки)) КАК ТарифыТК
	|ГДЕ
	|	(ТарифыТК.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ТарифыТК.ДатаОкончания >= &Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗоныДоставки.ПунктПогрузки КАК ПунктПогрузки,
	|	ЗоныДоставки.ЗонаДоставки КАК ЗонаДоставки,
	|	Тариф.Стоимость КАК Стоимость
	|ИЗ
	|	ЗоныДоставки КАК ЗоныДоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Тариф КАК Тариф
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетСлужебныхРеквизитовТабличнойЧастиЗаказы()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Заказы.Заказ КАК Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Паллета,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Коробка,
	|	ЗаказКлиентаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ДанныеЗаказов
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист))
	|			И Заказы.Заказ = ЗаказКлиентаТовары.Ссылка
	|			И НЕ ЗаказКлиентаТовары.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ЗаказНаПеремещениеТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗаказНаПеремещениеТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист))
	|			И Заказы.Заказ = ЗаказНаПеремещениеТовары.Ссылка
	|			И НЕ ЗаказНаПеремещениеТовары.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗаказПоставщикуТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист))
	|			И Заказы.Заказ = ЗаказПоставщикуТовары.Ссылка
	|			И НЕ ЗаказПоставщикуТовары.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)),
	|	РеализацияТоваровУслугТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс))
	|			И Заказы.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (РеализацияТоваровУслугТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (РеализацияТоваровУслугТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|			
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	ПередачаТоваровХранителюТовары.Номенклатура,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)),
	|	ПередачаТоваровХранителюТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Товары КАК ПередачаТоваровХранителюТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс))
	|			И Заказы.ДокументОтгрузки = ПередачаТоваровХранителюТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (ПередачаТоваровХранителюТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (ПередачаТоваровХранителюТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПеремещениеТоваровТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс))
	|			И Заказы.ДокументОтгрузки = ПеремещениеТоваровТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПриобретениеТоваровУслугТовары.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ПО (&ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс))
	|			И Заказы.ДокументОтгрузки = ПриобретениеТоваровУслугТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказов.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Паллета
	|ПОМЕСТИТЬ УпаковкиПаллеты
	|ИЗ
	|	ДанныеЗаказов КАК ДанныеЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ДанныеЗаказов.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмеренияПаллета)
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказов.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкиЕдиницыИзмерения.Ссылка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказов.Заказ КАК Заказ,
	|	ДанныеЗаказов.ДокументОтгрузки КАК ДокументОтгрузки,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеЗаказов.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ДанныеЗаказов.Паллета.Числитель <> 0 И ДанныеЗаказов.Паллета.Вес <> 0
	|				ТОГДА (ДанныеЗаказов.Количество / ДанныеЗаказов.Паллета.Числитель * ДанныеЗаказов.Паллета.Знаменатель)
	|											* ДанныеЗаказов.Паллета.Вес
	|			КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|								<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|								И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Числитель, 0) <> 0 И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Вес, 0) <> 0
	|				ТОГДА (ДанныеЗаказов.Количество / УпаковкиПаллеты.Паллета.Числитель * УпаковкиПаллеты.Паллета.Знаменатель)
	|											* УпаковкиПаллеты.Паллета.Вес
	|			КОГДА ЕСТЬNULL(ДанныеЗаказов.Номенклатура.ВесЗнаменатель, 0) <> 0
	|				ТОГДА ДанныеЗаказов.Количество * ДанныеЗаказов.Номенклатура.ВесЧислитель / ДанныеЗаказов.Номенклатура.ВесЗнаменатель
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Вес,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ДанныеЗаказов.Паллета <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|						И ДанныеЗаказов.Паллета.Числитель <> 0 И ДанныеЗаказов.Паллета.Объем <> 0
	|					ТОГДА (ДанныеЗаказов.Количество / ДанныеЗаказов.Паллета.Числитель * ДанныеЗаказов.Паллета.Знаменатель)
	|											* ДанныеЗаказов.Паллета.Объем
	|				КОГДА ЕСТЬNULL(УпаковкиПаллеты.Паллета, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|								<> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|								И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Числитель, 0) <> 0 И ЕСТЬNULL(УпаковкиПаллеты.Паллета.Объем, 0) <> 0
	|					ТОГДА (ДанныеЗаказов.Количество / УпаковкиПаллеты.Паллета.Числитель * УпаковкиПаллеты.Паллета.Знаменатель)
	|											* УпаковкиПаллеты.Паллета.Объем
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(15, 3))) КАК Объем,
	|	СУММА(ДанныеЗаказов.Количество * ЕСТЬNULL(ДанныеЗаказов.Номенклатура.ОбъемДАЛ, 0)) КАК КоличествоДАЛ
	|ПОМЕСТИТЬ ПоказателиЗаказов
	|ИЗ
	|	ДанныеЗаказов КАК ДанныеЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ УпаковкиПаллеты КАК УпаковкиПаллеты
	|		ПО ДанныеЗаказов.Номенклатура = УпаковкиПаллеты.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказов.Заказ,
	|	ДанныеЗаказов.ДокументОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Заказ КАК Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказКлиента).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказПоставщику).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказНаПеремещение).СкладПолучатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказКлиента).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказПоставщику).Организация
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказНаПеремещение).Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказКлиента).Склад
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказПоставщику).Склад
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказНаПеремещение).СкладОтправитель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Склад,
	|	ЕСТЬNULL(ПоказателиЗаказов.Объем, 0) КАК ОбъемМ3,
	|	ЕСТЬNULL(ПоказателиЗаказов.КоличествоДАЛ, 0) КАК Объем,
	|	ЕСТЬNULL(ПоказателиЗаказов.КоличествоДАЛ, 0) * ЕСТЬNULL(РасстоянияДоПунктовРазгрузки.Расстояние, 0) / 1000 КАК ДалКм,
	|	ЕСТЬNULL(ПоказателиЗаказов.Вес, 0) КАК Вес,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказКлиента).СуммаДокумента
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказПоставщику).СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказКлиента)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказКлиента).Комментарий
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказПоставщику).Комментарий
	|		КОГДА ТИПЗНАЧЕНИЯ(Заказы.Заказ) = ТИП(Документ.ЗаказНаПеремещение)
	|			ТОГДА ВЫРАЗИТЬ(Заказы.Заказ КАК Документ.ЗаказНаПеремещение).Комментарий
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Комментарий,
	|	ЕСТЬNULL(РасстоянияДоПунктовРазгрузки.Расстояние, 0) / 1000 КАК Расстояние,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ПлановаяДатаДоставкиС, НЕОПРЕДЕЛЕНО) КАК ПлановаяДатаДоставкиС,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ПлановаяДатаДоставкиПо, НЕОПРЕДЕЛЕНО) КАК ПлановаяДатаДоставкиПо,
	|	ЕСТЬNULL(ТранспортнаяИнформация.ТипВладенияТС, НЕОПРЕДЕЛЕНО) КАК ТипВладенияАМ
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасстоянияДоПунктовРазгрузки КАК РасстоянияДоПунктовРазгрузки
	|		ПО Заказы.Заказ = РасстоянияДоПунктовРазгрузки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО Заказы.Заказ = ТранспортнаяИнформация.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиЗаказов КАК ПоказателиЗаказов
	|		ПО (ВЫБОР
	|				КОГДА &ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|					ТОГДА Заказы.Заказ = ПоказателиЗаказов.Заказ
	|				ИНАЧЕ Заказы.ДокументОтгрузки = ПоказателиЗаказов.ДокументОтгрузки
	|			КОНЕЦ)";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРасчетБазыРаспределенияТранспортныхРасходов(ДетализацияДоНоменклатуры)
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Заказы.Рейс КАК Рейс,
	|	Заказы.Заказ КАК Заказ,
	|	Заказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Заказы.ПунктНазначения КАК ПунктНазначения,
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Коробка,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Ссылка.Договор КАК Договор,
	|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслугТовары.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ОтгружаемыеТовары
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО Заказы.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (РеализацияТоваровУслугТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (РеализацияТоваровУслугТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Рейс КАК Рейс,
	|	Заказы.Заказ КАК Заказ,
	|	Заказы.ДокументОтгрузки,
	|	Заказы.ПунктНазначения,
	|	ПередачаТоваровХранителюТовары.Номенклатура,
	|	ЕСТЬNULL(ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)),
	|	ПередачаТоваровХранителюТовары.Количество,
	|	ПередачаТоваровХранителюТовары.Ссылка.Договор,
	|	ПередачаТоваровХранителюТовары.Ссылка.Контрагент,
	|	ПередачаТоваровХранителюТовары.Сумма
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Товары КАК ПередачаТоваровХранителюТовары
	|		ПО Заказы.ДокументОтгрузки = ПередачаТоваровХранителюТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО (ПередачаТоваровХранителюТовары.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка)
	|			И (ПередачаТоваровХранителюТовары.КодСтроки = ЗаказКлиентаТовары.КодСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Рейс,
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	Заказы.ПунктНазначения,
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПриобретениеТоваровУслугТовары.Количество,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Договор,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Контрагент,
	|	ПриобретениеТоваровУслугТовары.СуммаСНДС
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ПО Заказы.ДокументОтгрузки = ПриобретениеТоваровУслугТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Рейс,
	|	Заказы.Заказ,
	|	Заказы.ДокументОтгрузки,
	|	Заказы.ПунктНазначения,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПеремещениеТоваровТовары.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	0
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ПО Заказы.ДокументОтгрузки = ПеремещениеТоваровТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Упаковка
	|ПОМЕСТИТЬ Упаковки
	|ИЗ
	|	ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО ОтгружаемыеТовары.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
	|			И (УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмеренияКороб)
	|			И (НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгружаемыеТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.ДокументОтгрузки КАК ДокументОтгрузки,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеЦФОТранспортнымРасходамПриоритет1.ЦФО,
	|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК ЦФОПриоритет1,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеЦФОТранспортнымРасходамПриоритет2.ЦФО,
	|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК ЦФОПриоритет2,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеЦФОТранспортнымРасходамПриоритет3.ЦФО,
	|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК ЦФОПриоритет3
	|ПОМЕСТИТЬ СоответствиеЦФО
	|ИЗ
	|	ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_СоответствиеЦФОТранспортнымРасходам КАК СоответствиеЦФОТранспортнымРасходамПриоритет1
	|		ПО ОтгружаемыеТовары.ПунктНазначения = СоответствиеЦФОТранспортнымРасходамПриоритет1.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_СоответствиеЦФОТранспортнымРасходам КАК СоответствиеЦФОТранспортнымРасходамПриоритет2
	|		ПО ОтгружаемыеТовары.Договор = СоответствиеЦФОТранспортнымРасходамПриоритет2.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бг_СоответствиеЦФОТранспортнымРасходам КАК СоответствиеЦФОТранспортнымРасходамПриоритет3
	|		ПО ОтгружаемыеТовары.Контрагент = СоответствиеЦФОТранспортнымРасходамПриоритет3.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгружаемыеТовары.ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.Рейс КАК Рейс,
	|	ОтгружаемыеТовары.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА СоответствиеЦФО.ЦФОПриоритет1 <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА СоответствиеЦФО.ЦФОПриоритет1
	|		КОГДА СоответствиеЦФО.ЦФОПриоритет2 <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА СоответствиеЦФО.ЦФОПриоритет2
	|		КОГДА СоответствиеЦФО.ЦФОПриоритет3 <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА СоответствиеЦФО.ЦФОПриоритет3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК ЦФО,
	|	ОтгружаемыеТовары.Номенклатура КАК Номенклатура,
	|	ОтгружаемыеТовары.Количество КАК Количество,
	|	ОтгружаемыеТовары.СуммаСНДС КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ОтгружаемыеТовары.Коробка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				И ОтгружаемыеТовары.Коробка.Числитель <> 0
	|				И ОтгружаемыеТовары.Коробка.Вес <> 0
	|			ТОГДА ОтгружаемыеТовары.Количество / ОтгружаемыеТовары.Коробка.Числитель
	|						* ОтгружаемыеТовары.Коробка.Знаменатель * ОтгружаемыеТовары.Коробка.Вес
	|		КОГДА ЕСТЬNULL(Упаковки.Упаковка.Числитель, 0) <> 0
	|				И ЕСТЬNULL(Упаковки.Упаковка.Знаменатель, 0) <> 0
	|				И ЕСТЬNULL(Упаковки.Упаковка.Вес, 0) <> 0
	|			ТОГДА ОтгружаемыеТовары.Количество / Упаковки.Упаковка.Числитель * Упаковки.Упаковка.Знаменатель * Упаковки.Упаковка.Вес
	|		КОГДА ЕСТЬNULL(ОтгружаемыеТовары.Номенклатура.ВесЧислитель, 0) <> 0
	|				И ЕСТЬNULL(ОтгружаемыеТовары.Номенклатура.ВесЗнаменатель, 0) <> 0
	|			ТОГДА ОтгружаемыеТовары.Количество * ОтгружаемыеТовары.Номенклатура.ВесЧислитель / ОтгружаемыеТовары.Номенклатура.ВесЗнаменатель
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Вес,
	|	ЕСТЬNULL(РасстоянияДоПунктовРазгрузки.Расстояние, 0) КАК Расстояние
	|ПОМЕСТИТЬ ДанныеРасчет
	|ИЗ
	|	ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Упаковки КАК Упаковки
	|		ПО ОтгружаемыеТовары.Номенклатура = Упаковки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасстоянияДоПунктовРазгрузки КАК РасстоянияДоПунктовРазгрузки
	|		ПО ОтгружаемыеТовары.ДокументОтгрузки = РасстоянияДоПунктовРазгрузки.ДокументОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеЦФО КАК СоответствиеЦФО
	|		ПО ОтгружаемыеТовары.ДокументОтгрузки = СоответствиеЦФО.ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРасчет.Рейс КАК Рейс
	|ПОМЕСТИТЬ РейсыБезРасстояний
	|ИЗ
	|	ДанныеРасчет КАК ДанныеРасчет
	|ГДЕ
	|	ДанныеРасчет.Расстояние = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРасчет.Рейс КАК Рейс,
	|	ДанныеРасчет.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ДанныеРасчет.ЦФО КАК ЦФО,
	|	%1 КАК Номенклатура,
	|	СУММА(ДанныеРасчет.Количество) КАК Количество,
	|	СУММА(ДанныеРасчет.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ДанныеРасчет.Вес) КАК Вес,
	|	МИНИМУМ(ДанныеРасчет.Расстояние) КАК Расстояние,
	|	СУММА(ВЫБОР
	|			КОГДА РейсыБезРасстояний.Рейс ЕСТЬ NULL
	|				ТОГДА ДанныеРасчет.Вес * ДанныеРасчет.Расстояние
	|			ИНАЧЕ ДанныеРасчет.Вес
	|		КОНЕЦ) КАК Коэффициент
	|ИЗ
	|	ДанныеРасчет КАК ДанныеРасчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РейсыБезРасстояний КАК РейсыБезРасстояний
	|		ПО ДанныеРасчет.Рейс = РейсыБезРасстояний.Рейс
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРасчет.Рейс,
	|	ДанныеРасчет.ДокументОтгрузки,
	|	ДанныеРасчет.ЦФО,
	|	%1"; 
		
	Если ДетализацияДоНоменклатуры Тогда
		ТекстЗапроса = СтрШаблон(ТекстЗапроса, "ДанныеРасчет.Номенклатура");
	Иначе
		ТекстЗапроса = СтрШаблон(ТекстЗапроса, "ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстыЗапросаМаршрутныеЛистыДляОтложеннойОбработки()
	ТекстыЗапроса = Новый Соответствие;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Заказ = &Ссылка
	|	И МаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)
	|	И МаршрутныйЛистЗаказы.Ссылка.Проведен";
	ТекстыЗапроса.Вставить(Тип("ДокументСсылка.битМаршрутныйЛист"), ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО (РеализацияТоваровУслугТовары.Ссылка = &Ссылка)
	|			И РеализацияТоваровУслугТовары.ЗаказКлиента = МаршрутныйЛистЗаказы.Заказ
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И МаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)";
	ТекстыЗапроса.Вставить(Тип("ДокументСсылка.РеализацияТоваровУслуг"), ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО (ПеремещениеТоваровТовары.Ссылка = &Ссылка)
	|			И ПеремещениеТоваровТовары.ЗаказНаПеремещение = МаршрутныйЛистЗаказы.Заказ
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И МаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)";
	ТекстыЗапроса.Вставить(Тип("ДокументСсылка.ПеремещениеТоваров"), ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО (ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка)
	|			И ПриобретениеТоваровУслугТовары.ЗаказПоставщику = МаршрутныйЛистЗаказы.Заказ
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И МаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)";
	ТекстыЗапроса.Вставить(Тип("ДокументСсылка.ПриобретениеТоваровУслуг"), ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛистЗаказы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК ПередачаТоваровХранителюТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ПО (ПередачаТоваровХранителюТовары.Ссылка = &Ссылка)
	|			И ПередачаТоваровХранителюТовары.ЗаказКлиента = МаршрутныйЛистЗаказы.Заказ
	|ГДЕ
	|	МаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И МаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.МаршрутныйЛист)";
	ТекстыЗапроса.Вставить(Тип("ДокументСсылка.ПередачаТоваровХранителю"), ТекстЗапроса);
	
	Возврат ТекстыЗапроса;
КонецФункции

Процедура СформироватьОбновитьРейс(МаршрутныйЛист)
	Рейс = МаршрутныйЛистРейс(МаршрутныйЛист);
	
	Если Рейс = Неопределено Тогда
		РейсОбъект = Документы.битМаршрутныйЛист.СоздатьДокумент();
		РейсОбъект.Дата = ТекущаяДатаСеанса();
	Иначе
		ЗаблокироватьДанныеДляРедактирования(Рейс);
		РейсОбъект = Рейс.ПолучитьОбъект();
	КонецЕсли;
	
	РейсОбъект.Заполнить(МаршрутныйЛист);
	
	Если Рейс = Неопределено
		И Не РейсОбъект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РейсОбъект.Ответственный) Тогда
		РейсОбъект.Ответственный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МаршрутныйЛист, "Ответственный");
	КонецЕсли;
	
	Если РейсОбъект.Проведен Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
	КонецЕсли;
	
	РейсОбъект.Записать(РежимЗаписи);
КонецПроцедуры

Процедура ЗаполнитьТранспортнуюИнформациюПоЗаказу(ТранспортнаяИнформация, ДокументОтгрузки)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.ЗаказКлиента КАК ЗаказКлиента
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.ЗаказПоставщику
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.ЗаказНаПеремещение
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаТоваровХранителюТовары.ЗаказКлиента
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК ПередачаТоваровХранителюТовары
	|ГДЕ
	|	ПередачаТоваровХранителюТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТранспортнаяИнформация.ПунктНазначения КАК ПунктНазначения,
	|	ТранспортнаяИнформация.Заказчик КАК Заказчик,
	|	ТранспортнаяИнформация.ВидПеревозки КАК ВидПеревозки,
	|	ТранспортнаяИнформация.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ТранспортнаяИнформация.ДоверенностьДата КАК ДоверенностьДата,
	|	ТранспортнаяИнформация.ДоверенностьЧерез КАК ДоверенностьЧерез,
	|	ТранспортнаяИнформация.НомерЗаказа КАК НомерЗаказа,
	|	ТранспортнаяИнформация.НомераПломб КАК НомераПломб,
	|	ТранспортнаяИнформация.ДатаТН КАК ДатаТН,
	|	ТранспортнаяИнформация.НомерТН КАК НомерТН,
	|	ТранспортнаяИнформация.Прицеп КАК Прицеп,
	|	ТранспортнаяИнформация.ПорядковыйНомерТС КАК ПорядковыйНомерТС,
	|	ТранспортнаяИнформация.ТипВладенияТС КАК ТипВладенияТС,
	|	ТранспортнаяИнформация.ОрганизаторПеревозки КАК ОрганизаторПеревозки,
	|	ТранспортнаяИнформация.ДоговорНаВладение КАК ДоговорНаВладение,
	|	ТранспортнаяИнформация.МыГрузимТовар КАК МыГрузимТовар,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиС КАК ПлановаяДатаДоставкиС,
	|	ТранспортнаяИнформация.ПлановаяДатаДоставкиПо КАК ПлановаяДатаДоставкиПо
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ТранспортнаяИнформация КАК ТранспортнаяИнформация
	|		ПО Заказы.ЗаказКлиента = ТранспортнаяИнформация.Объект";
	Запрос.УстановитьПараметр("Ссылка", ДокументОтгрузки);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ТранспортнаяИнформация, Выборка);
	КонецЕсли;
КонецПроцедуры

// Функция - Заказы клиентов
//
// Параметры:
//  МаршрутныеЛисты	 - ДокументСсылка.битМаршрутныйЛист	 - битМаршрутныйЛист
// 
// Возвращаемое значение:
//  Массив - список заказов
//
Функция ЗаказыКлиентов(МаршрутныеЛисты) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаршрутныйЛистЗаказы.Заказ КАК Заказ
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО (МаршрутныйЛистЗаказы.Ссылка В (&МаршрутныеЛисты))
	|			И МаршрутныйЛистЗаказы.Заказ = ЗаказКлиента.Ссылка
	|			И (ЗаказКлиента.Проведен)";
	Запрос.УстановитьПараметр("МаршрутныеЛисты", МаршрутныеЛисты);
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Заказ");
КонецФункции

// Функция - Возвращает признак, созданы ли все расходные ордера по заказам маршрутного листа
//
// Параметры:
//	МаршрутныйЛист - ДокументСсылка.битМаршрутныйЛист - ссылка на документ Маршрутный лист.
// 
// Возвращаемое значение:
//	Булево
//
Функция ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы(МаршрутныйЛист) Экспорт
	
	ВсеОрдераСозданы = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МаршрутныйЛист", МаршрутныйЛист);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МаршрутныйЛист.Заказ КАК Заказ,
	|	МаршрутныйЛист.Ссылка КАК Ссылка,
	|	МаршрутныйЛист.Ссылка.ОтгрузкаИзERP КАК ОтгрузкаИзERP
	|ПОМЕСТИТЬ МаршрутныйЛистЗаказы
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК МаршрутныйЛист
	|ГДЕ
	|	МаршрутныйЛист.Ссылка = &МаршрутныйЛист
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутныйЛист.Заказ,
	|	МаршрутныйЛист.Ссылка,
	|	МаршрутныйЛист.Ссылка.ОтгрузкаИзERP
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка) = КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МаршрутныйЛистЗаказы.Заказ) КАК ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы
	|ИЗ
	|	МаршрутныйЛистЗаказы КАК МаршрутныйЛистЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|		ПО МаршрутныйЛистЗаказы.Заказ = РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение
	|			И (НЕ РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ПометкаУдаления)
	|			И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутныйЛистЗаказы.Ссылка,
	|	МаршрутныйЛистЗаказы.ОтгрузкаИзERP";
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ВсеОрдераСозданы = Выборка.ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы;
	КонецЕсли;
	
	Возврат ВсеОрдераСозданы;
	
КонецФункции

#КонецОбласти

#КонецЕсли