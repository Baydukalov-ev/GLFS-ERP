#Область ПрограммныйИнтерфейс

// 	Процедура бг_СоздатьУстановкуЦенНоменклатуры создает документ 
//	Установка цен номенклатуры, для товаров не бг_ОбменB2B и по которым нет действующей цены, 
//	но есть для товарной категории. 
//
Процедура бг_СоздатьУстановкуЦенНоменклатуры() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецДня(ТекущаяДатаСеанса()), ВидГраницы.Включая));
	Запрос.Текст =
    "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Товары,
	|	Номенклатура.ТоварнаяКатегория.бг_СкюМТ КАК SKUMT
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.бг_ОбменB2B
	|	И Номенклатура.ТоварнаяКатегория.бг_СкюМТ В
	|			(ВЫБРАТЬ
	|				бг_ЕК_СКЮ_СкюМТ.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.бг_ЕК_СКЮ_СкюМТ КАК бг_ЕК_СКЮ_СкюМТ
	|			ГДЕ
	|				НЕ бг_ЕК_СКЮ_СкюМТ.ПометкаУдаления)
	|	//И Номенклатура.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Товары КАК Номенклатура,
	|	бг_ЕК_СКЮ_СкюМТ.Ссылка КАК SKUMT
	|ПОМЕСТИТЬ СпрНоменклатура
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бг_ЕК_СКЮ_СкюМТ КАК бг_ЕК_СКЮ_СкюМТ
	|		ПО ВТ_Товары.SKUMT = бг_ЕК_СКЮ_СкюМТ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатуры25СрезПоследних.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВТ_ВидыЦен
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних КАК ЦеныНоменклатуры25СрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпрНоменклатура.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатуры25СрезПоследних.Номенклатура) КАК Номенклатура_РС,
	|	МАКСИМУМ(ЕСТЬNULL(ЦеныНоменклатуры25СрезПоследних.Цена, 0)) КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА СпрНоменклатура.Номенклатура = ЦеныНоменклатуры25СрезПоследних.Номенклатура
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьЦенаПоВидуЦенСкюМТ,
	|	ЦеныНоменклатуры25СрезПоследних.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ЦеныНоменклатуры25СрезПоследних.СерияЦО КАК СерияЦО,
	|	ЦеныНоменклатуры25СрезПоследних.УпаковкаЦО КАК УпаковкаЦО,
	|	ЦеныНоменклатуры25СрезПоследних.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры25СрезПоследних.Упаковка КАК Упаковка,
	|	ЦеныНоменклатуры25СрезПоследних.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_НоменклатураБезЦен
	|ИЗ
	|	СпрНоменклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(&Период, ) КАК ЦеныНоменклатуры25СрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыЦен КАК ВТ_ВидыЦен
	|			ПО (ВТ_ВидыЦен.ВидЦены = ЦеныНоменклатуры25СрезПоследних.ВидЦены)
	|		ПО (СпрНоменклатура.SKUMT = ЦеныНоменклатуры25СрезПоследних.Номенклатура.ТоварнаяКатегория.бг_СкюМТ)
	|			И (НЕ ЦеныНоменклатуры25СрезПоследних.Номенклатура.бг_ОбменB2B)
	|			И (ЦеныНоменклатуры25СрезПоследних.Цена > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпрНоменклатура.Номенклатура,
	|	ЦеныНоменклатуры25СрезПоследних.ХарактеристикаЦО,
	|	ЦеныНоменклатуры25СрезПоследних.СерияЦО,
	|	ЦеныНоменклатуры25СрезПоследних.УпаковкаЦО,
	|	ЦеныНоменклатуры25СрезПоследних.Упаковка,
	|	ЦеныНоменклатуры25СрезПоследних.Валюта,
	|	ЦеныНоменклатуры25СрезПоследних.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураБезЦен.ВидЦены КАК ВидЦены,
	|	ВТ_НоменклатураБезЦен.Номенклатура КАК Номенклатура,
	|	ВТ_НоменклатураБезЦен.Цена КАК Цена,
	|	ВТ_НоменклатураБезЦен.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ВТ_НоменклатураБезЦен.СерияЦО КАК СерияЦО,
	|	ВТ_НоменклатураБезЦен.УпаковкаЦО КАК УпаковкаЦО,
	|	ВТ_НоменклатураБезЦен.Упаковка КАК Упаковка,
	|	ВТ_НоменклатураБезЦен.Валюта КАК Валюта
	|ИЗ
	|	ВТ_НоменклатураБезЦен КАК ВТ_НоменклатураБезЦен
	|ГДЕ
	|	ВТ_НоменклатураБезЦен.ЕстьЦенаПоВидуЦенСкюМТ = 0
	|	И ВТ_НоменклатураБезЦен.Цена > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НоменклатураБезЦен.Номенклатура,
	|	ВТ_НоменклатураБезЦен.ХарактеристикаЦО,
	|	ВТ_НоменклатураБезЦен.СерияЦО,
	|	ВТ_НоменклатураБезЦен.УпаковкаЦО,
	|	ВТ_НоменклатураБезЦен.Упаковка,
	|	ВТ_НоменклатураБезЦен.Валюта,
	|	ВТ_НоменклатураБезЦен.ВидЦены,
	|	ВТ_НоменклатураБезЦен.Цена
	|ИТОГИ ПО
	|	ВидЦены";
		
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	ВыборкаВидЦены = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВидЦены.Следующий() Цикл
		
		НовыйДокумент = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		НовыйДокумент.Комментарий 	= НСтр("ru='Создан регламентым заданием - БЕЛУГА. Создание установки цен номенклатуры'");
		НовыйДокумент.Дата 			= КонецДня(ТекущаяДатаСеанса());
		НовыйДокумент.Согласован	= Истина;
		НовыйДокумент.Статус 		= Перечисления.СтатусыУстановокЦенНоменклатуры.Согласован;
		
		СтрокаВидыЦен = НовыйДокумент.ВидыЦен.Добавить();
		СтрокаВидыЦен.ВидЦены = ВыборкаВидЦены.ВидЦены;
		ВыборкаДетали = ВыборкаВидЦены.Выбрать();
		
		Пока ВыборкаДетали.Следующий() Цикл
			НоваяСтрока = НовыйДокумент.Товары2_5.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);
			
		КонецЦикла;
		
		Если НовыйДокумент.Товары2_5.Количество() > 0 Тогда
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Исключение
				ТекстОшибки = НСтр("ru='Не удалось провести документ установка цен номенклатуры по причине %1'"); 
				ТекстОшибки = СтрШаблон(ТекстОшибки, ОписаниеОшибки());
				ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("бг_СоздатьУстановкуЦенНоменклатуры", 
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстОшибки);	
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
 
КонецПроцедуры

#КонецОбласти
