
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("бг_Факторинг");
		
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаОперацииПоФакторингу(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
		
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

// Возвращает структуру отбора для выборки объектов расчетов в документ.
//
// Возвращаемое значение:
//  Структура - коллекция элементов
//
Функция ПараметрыОтбораДокументов() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Организация");
	Результат.Вставить("НеУчитыватьЧастичноОплаченные", Ложь);
	Результат.Вставить("ДатаНачала");
	Результат.Вставить("ДатаОкончания");
	Результат.Вставить("ОбъектРасчетов");
	Результат.Вставить("ТекущийДокумент");
	
	ОтборКонтрагенты = Новый Массив;
	
	Результат.Вставить("Контрагенты", ОтборКонтрагенты);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СодержаниеПередачаДокументовФактору", НСтр("ru = 'Передача документов фактору'"));
	Запрос.УстановитьПараметр("СодержаниеОтгрузкаПродукции", НСтр("ru = 'Отгрузка продукции'"));
	Запрос.УстановитьПараметр("СодержаниеПолученоФинансирование", НСтр("ru = 'Получено финансирование'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаДебитораНам",
		НСтр("ru = 'Оплата дебитором нам, либо проведение взаимозачета'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаНамиФактору", НСтр("ru = 'Оплата нами фактору'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаРегрессаБанку", НСтр("ru = 'Оплата регресса банку'"));
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеЗадолженностиПередФактором",
		НСтр("ru = 'Закрытие задолженности Организации перед Фактором по сумме финансирования'"));
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеЗадолженностиПокупателяПередНами",
		НСтр("ru = 'Закрытие задолженности покупателя'"));
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеЗадолженностиПокупателяПередБанком",
		НСтр("ru = 'Закрытие задолженности покупателя перед банком'"));
	Запрос.УстановитьПараметр("СодержаниеКомиссияБанкаЗаФакторинг",
		НСтр("ru = 'Комиссия банка за факторинг'"));
	Запрос.УстановитьПараметр("СодержаниеСуммаКомиссии",
		НСтр("ru = 'Сумма комиссии'"));
	Запрос.УстановитьПараметр("СодержаниеПереводОстаткаФактором",
		НСтр("ru = 'Перевод остатка фактором'"));
	
КонецПроцедуры

// Процедура инициализации данных документа для механизма проведения.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Ссылка на документ.
//  ДополнительныеСвойства - Структура - Дополнительные свойства для проведения.
//  Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой
//                                                  - имена регистров Если неопределено - то всегда возвращается ИСТИНА.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаОперацииПоФакторингу(Запрос, ТекстыЗапроса, Регистры);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОперацииПоФакторингу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "бг_ОперацииПоФакторингу";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДД.Дата КАК Период,
	|	ДД.Организация КАК Организация,
	|	ДД.ВидОперации КАК ВидОперации,
	|	ДД.Фактор КАК Фактор,
	|	ДД.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеУступленногоДолга) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеПередачаДокументовФактору КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО ДД.Ссылка = Строки.Ссылка
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И ДД.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование),
	|						ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДД.Дата КАК Период,
	|	ДД.Организация КАК Организация,
	|	ДД.ВидОперации КАК ВидОперации,
	|	ДД.Фактор КАК Фактор,
	|	ДД.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеПередачаДокументовФактору КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО ДД.Ссылка = Строки.Ссылка
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И ДД.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование),
	|						ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДД.Дата КАК Период,
	|	ДД.Организация КАК Организация,
	|	ДД.ВидОперации КАК ВидОперации,
	|	ДД.Фактор КАК Фактор,
	|	ДД.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СДебитором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеОтгрузкаПродукции КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО ДД.Ссылка = Строки.Ссылка
	|ГДЕ
	|	ДД.Ссылка = &Ссылка
	|	И ДД.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование),
	|						ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.СуммаФинансирования КАК СуммаВзаиморасчетов,
	|	Строки.СуммаФинансирования КАК СуммаРегл,
	|	&СодержаниеПолученоФинансирование КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ФинансированиеФактором)
	|	И Строки.СуммаФинансирования > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеФинансирования) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.СуммаФинансирования КАК СуммаВзаиморасчетов,
	|	Строки.СуммаФинансирования КАК СуммаРегл,
	|	&СодержаниеПолученоФинансирование КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ФинансированиеФактором)
	|	И Строки.СуммаФинансирования > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СДебитором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеОплатаДебитораНам КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам)
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Строки.ПервичныйДокумент КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеОплатаДебитораНам КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам)
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеУступленногоДолга) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеОплатаНамиФактору КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам)
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3
	|		+ Строки.Остаток + Строки.СуммаФинансирования КАК СуммаВзаиморасчетов,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3
	|		+ Строки.Остаток + Строки.СуммаФинансирования КАК СуммаРегл,
	|	&СодержаниеОплатаРегрессаБанку КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам)
	|	И Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3
	|		+ Строки.Остаток + Строки.СуммаФинансирования > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеКомиссии) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаВзаиморасчетов,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаРегл,
	|	&СодержаниеОплатаНамиФактору КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам)
	|	И Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеФинансирования) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.СуммаФинансирования КАК СуммаВзаиморасчетов,
	|	Строки.СуммаФинансирования КАК СуммаРегл,
	|	&СодержаниеЗакрытиеЗадолженностиПередФактором КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам),
	|		ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебиторомФактору))
	|	И Строки.СуммаФинансирования > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СДебитором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеЗакрытиеЗадолженностиПокупателяПередНами КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебиторомФактору)
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеУступленногоДолга) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Сумма КАК СуммаВзаиморасчетов,
	|	Строки.Сумма КАК СуммаРегл,
	|	&СодержаниеЗакрытиеЗадолженностиПокупателяПередБанком КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебиторомФактору)
	|	И Строки.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеКомиссии) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаВзаиморасчетов,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаРегл,
	|	&СодержаниеКомиссияБанкаЗаФакторинг КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебиторомФактору)
	|	И Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаВзаиморасчетов,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаРегл,
	|	&СодержаниеСуммаКомиссии КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ВознаграждениеФактора)
	|	И Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.ПоСуммеКомиссии) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаВзаиморасчетов,
	|	Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 КАК СуммаРегл,
	|	&СодержаниеСуммаКомиссии КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ВознаграждениеФактора)
	|	И Строки.Комиссия1 + Строки.Комиссия2 + Строки.Комиссия3 > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.ВидОперации КАК ВидОперации,
	|	РеквизитыДокумента.Фактор КАК Фактор,
	|	РеквизитыДокумента.ДоговорФактора КАК ДоговорФактора,
	|	ЗНАЧЕНИЕ(Перечисление.бг_ВидРасчетовПоФакторингу.СФактором) КАК ВидРасчетов,
	|	Строки.Контрагент КАК Контрагент,
	|	Строки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Строки.ДокументРеализации КАК ДокументРеализации,
	|	Строки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокумент,
	|	Строки.Остаток КАК СуммаВзаиморасчетов,
	|	Строки.Остаток КАК СуммаРегл,
	|	&СодержаниеПереводОстаткаФактором КАК СодержаниеОперации
	|ИЗ
	|	Документ.битФакторинг КАК РеквизитыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битФакторинг.ДокументыРеализации КАК Строки
	|		ПО РеквизитыДокумента.Ссылка = Строки.Ссылка
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И РеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПереводОстаткаФактором)
	|	И Строки.Остаток > 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.битФакторинг.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.битФакторинг) Тогда
		
		Команда = КомандыСозданияНаОсновании.Добавить();
		Команда.Менеджер = Метаданные.Документы.битФакторинг.ПолноеИмя();
		Команда.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.битФакторинг);
		Команда.РежимЗаписи = "Проводить";
		Возврат Команда;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Реестр на факторинг РКБ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрУступленныхТребований";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг РКБ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Реестр на факторинг АльфаБанк
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингАльфаБанк";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг Альфа-банк'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Реестр на факторинг МКБ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингМКБ";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг МКБ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Реестр на факторинг МКБОбщийРеализация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингМКБ";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг МКБ (общий реализация)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("Вариант", "ОбщийРеализация");
	
	// Реестр на факторинг СБФ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингСБФ";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг СБФ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Реестр на факторинг ГПБ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингГПБ";
	КомандаПечати.Представление = НСтр("ru = 'Реестр на факторинг ГПБ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	//Реестр ПП
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНаФакторингРеестрПП";
	КомандаПечати.Представление = НСтр("ru = 'Реестр ПП'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры	

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ИмяФайловПФФакторинг = ИмяФайловПФФакторинг(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрУступленныхТребований") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрУступленныхТребований", 
			НСтр("ru = 'Реестр на факторинг РКБ'"), 
			СформироватьПечатнуюФормуРеестрУступленныхТребований(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);
			
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНаФакторингАльфаБанк") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрНаФакторингАльфаБанк", 
			НСтр("ru = 'Реестр на факторинг Альфа-банк'"), 
			СформироватьПечатнуюФормуРеестрНаФакторингАльфаБанк(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);

	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНаФакторингМКБ") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрНаФакторингМКБ", 
			НСтр("ru = 'Реестр на факторинг МКБ'"), 
			СформироватьПечатнуюФормуРеестрНаФакторингМКБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);
			
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНаФакторингСБФ") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрНаФакторингСБФ", 
			НСтр("ru = 'Реестр на факторинг СБФ'"), 
			СформироватьПечатнуюФормуРеестрНаФакторингСБФ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);

	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНаФакторингГПБ") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрНаФакторингГПБ", 
			НСтр("ru = 'Реестр на факторинг ГПБ'"), 
			СформироватьПечатнуюФормуРеестрНаФакторингГПБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);

	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНаФакторингРеестрПП") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РеестрНаФакторингРеестрПП", 
			НСтр("ru = 'Реестр на факторинг Реестр ПП'"), 
			СформироватьПечатнуюФормуРеестрНаФакторингРеестрПП(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,, ИмяФайловПФФакторинг);

	КонецЕсли;	
	
КонецПроцедуры

#Область РеестрУступленныхТребований

Функция СформироватьПечатнуюФормуРеестрУступленныхТребований(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрУступленныхТребований";
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестраУступленныхТребований(МассивОбъектов, ОбъектыПечати);
	
	ЗаполнитьТабличныйДокументРеестрУступленныхТребований(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция ДанныеДляПечатиРеестраУступленныхТребований(МассивОбъектов, ОбъектыПечати)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументФакторинга.Ссылка КАК Ссылка,
	|	ДокументФакторинга.Дата КАК Дата,
	|	ДокументФакторинга.НомерРеестра КАК НомерРеестра,
	|	ДокументФакторинга.Организация КАК Организация,
	|	ДокументФакторинга.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	ДокументФакторинга.ДоговорФактора.НаименованиеДляПечати КАК ПредставлениеДоговораФактора
	|ИЗ
	|	Документ.битФакторинг КАК ДокументФакторинга
	|ГДЕ
	|	ДокументФакторинга.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыРеализации.Ссылка КАК Ссылка,
	|	ДокументыРеализации.НомерСтроки КАК НомерСтроки,
	|	ДокументыРеализации.Контрагент.НаименованиеПолное КАК Контрагент,
	|	ДокументыРеализации.ДокументРеализации.Номер КАК ДокументРеализацииНомер,
	|	ДокументыРеализации.ДокументРеализации.Дата КАК ДокументРеализацииДата,
	|	ДокументыРеализации.Сумма КАК СуммаУступки,
	|	ДокументыРеализации.Контрагент.ИНН КАК КонтрагентИНН,
	|	ДокументыРеализации.ПервоначальнаяСуммаСчетФактуры КАК ПервоначальнаяСуммаСчетФактуры,
	|	ДокументыРеализации.ПервоначальнаяСуммаСчетФактуры - ДокументыРеализации.Сумма КАК СуммаКорректировки,
	|	ДокументыРеализации.ДокументРеализации КАК ДокументРеализации,
	|	ДокументыРеализации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументыРеализации.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
	|	ДокументыРеализации.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата
	|ПОМЕСТИТЬ ТабличнаяЧастьФакторинга
	|ИЗ
	|	Документ.битФакторинг.ДокументыРеализации КАК ДокументыРеализации
	|ГДЕ
	|	ДокументыРеализации.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.РеализацияТоваровУслуг)
	|		КОГДА СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ПервичныйДокумент)
	|	КОНЕЦ КАК ДокументОснование,
	|	СФВыданныйДокументыОснования.Ссылка.ПредставлениеНомера КАК Номер,
	|	СФВыданныйДокументыОснования.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыРеализаций
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФВыданныйДокументыОснования
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.РеализацияТоваровУслуг)
	|			КОГДА СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент
	|				ТОГДА ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ПервичныйДокумент)
	|		КОНЕЦ В
	|			(ВЫБРАТЬ
	|				ВТ.ДокументРеализации
	|			ИЗ
	|				ТабличнаяЧастьФакторинга КАК ВТ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьФакторинга.Ссылка КАК Ссылка,
	|	ТабличнаяЧастьФакторинга.Контрагент КАК Контрагент,
	|	ТабличнаяЧастьФакторинга.ДокументРеализацииНомер КАК ДокументРеализацииНомер,
	|	ТабличнаяЧастьФакторинга.ДокументРеализацииДата КАК ДокументРеализацииДата,
	|	ТабличнаяЧастьФакторинга.СуммаУступки КАК СуммаУступки,
	|	ТабличнаяЧастьФакторинга.КонтрагентИНН КАК ИННДебитора,
	|	ТабличнаяЧастьФакторинга.ПервоначальнаяСуммаСчетФактуры КАК ПервоначальнаяСуммаСФ,
	|	ТабличнаяЧастьФакторинга.СуммаКорректировки КАК СуммаКорректировки,
	|	ТабличнаяЧастьФакторинга.ДокументРеализации КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧастьФакторинга.ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ЕСТЬNULL(СчетаФактурыРеализаций.Номер, """")
	|		КОГДА ТабличнаяЧастьФакторинга.ДокументРеализации ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(ТабличнаяЧастьФакторинга.ДокументРеализации КАК Документ.ПервичныйДокумент).Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СчетФактураНомер,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧастьФакторинга.ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ЕСТЬNULL(СчетаФактурыРеализаций.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		КОГДА ТабличнаяЧастьФакторинга.ДокументРеализации ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(ТабличнаяЧастьФакторинга.ДокументРеализации КАК Документ.ПервичныйДокумент).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК СчетФактураДата,
	|	ТабличнаяЧастьФакторинга.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТабличнаяЧастьФакторинга.ДоговорКонтрагентаНомер КАК ДоговорКонтрагентаНомер,
	|	ТабличнаяЧастьФакторинга.ДоговорКонтрагентаДата КАК ДоговорКонтрагентаДата,
	|	ТабличнаяЧастьФакторинга.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТабличнаяЧастьФакторинга КАК ТабличнаяЧастьФакторинга
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактурыРеализаций КАК СчетаФактурыРеализаций
	|		ПО (ТабличнаяЧастьФакторинга.ДокументРеализации = СчетаФактурыРеализаций.ДокументОснование)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыРеализаций.Ссылка КАК Ссылка,
	|	ВТ_ДокументыРеализаций.ДокументРеализации КАК ДокументРеализации,
	|	ПоступлениеБезналичныхДенежныхСредств.Номер КАК Номер,
	|	ПоступлениеБезналичныхДенежныхСредств.Дата КАК Дата
	|ИЗ
	|	ТабличнаяЧастьФакторинга КАК ВТ_ДокументыРеализаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
	|			ПО ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка = ПоступлениеБезналичныхДенежныхСредств.Ссылка
	|				И (НЕ ПоступлениеБезналичныхДенежныхСредств.ПометкаУдаления)
	|				И (ПоступлениеБезналичныхДенежныхСредств.Проведен)
	|		ПО ВТ_ДокументыРеализаций.ДокументРеализации = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОснованиеПлатежа";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("РезультатПоШапке",			МассивРезультатов[0]);
	СтруктураРезультат.Вставить("РезультатПоДокументам", 	МассивРезультатов[3]);
	СтруктураРезультат.Вставить("ДокументыПлатежей",		МассивРезультатов[4]);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументРеестрУступленныхТребований(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битФакторинг.ПФ_MXL_РеестрУступленныхТребований");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДокументыПлатежей 	= ДанныеДляПечати.ДокументыПлатежей.Выгрузить();
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		// Найдем в выборке строки по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		ПредставлениеДатыДокумента = Формат(ВыборкаПоШапке.Дата, "ДФ=dd.MM.yyyy");
		ЛокальноеПредставлениеДатыДокумента = Формат(ВыборкаПоШапке.Дата, "ДЛФ=DD");
		
		РезультатСклонения = ПолучитьСклоненияСтроки(ВыборкаПоШапке.ПредставлениеДоговораФактора,, "ПД=Дательный");
			
		// Выводим шапку реестра
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапке);
		ОбластьМакета.Параметры.ЛокальноеПредставлениеДаты = ЛокальноеПредставлениеДатыДокумента;
		ОбластьМакета.Параметры.ПредставлениеДаты = ПредставлениеДатыДокумента;
		
		Если РезультатСклонения.Количество() <> 0 Тогда
			ОбластьМакета.Параметры.ПредставлениеДоговораФактора = РезультатСклонения[0];
		КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы ДокументыРеализации
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		НомерСтроки = 0;
		СуммаУступаемогоТребованияИтог = 0;
		ПервоначальнаяСуммаСФИтог = 0;
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		
		// Выводим строки таблицы ДокументыРеализации	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			
			ОбластьМакета.Параметры.ДоговорКонтрагентаДата = Формат(
				ВыборкаДетальныеЗаписи.ДоговорКонтрагентаДата, 
				"ДФ=dd.MM.yyyy");
				
			ОбластьМакета.Параметры.ДокументРеализацииДата = Формат(
				ВыборкаДетальныеЗаписи.ДокументРеализацииДата, 
				"ДФ=dd.MM.yyyy");
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетФактураДата) 
				И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетФактураНомер) Тогда
				
				ШаблонПредставленияСФ = НСтр("ru='%1 от %2'");
				
				ОбластьМакета.Параметры.ПредставлениеСчетФактуры = СтрШаблон(
					ШаблонПредставленияСФ, 
					ВыборкаДетальныеЗаписи.СчетФактураНомер, 
					Формат(ВыборкаДетальныеЗаписи.СчетФактураДата, "ДФ=dd.MM.yyyy"));
				
			Иначе
				
				ОбластьМакета.Параметры.ПредставлениеСчетФактуры = "";
				
			КонецЕсли;	
			
			Отбор = Новый Структура("Ссылка, ДокументРеализации");
			ЗаполнитьЗначенияСвойств(Отбор, ВыборкаДетальныеЗаписи);
			Платежи = ДокументыПлатежей.НайтиСтроки(Отбор);
			
			Если Платежи.Количество() > 0 Тогда
				НомераДатыПлатежки = Новый Массив;
				Для каждого Строка Из Платежи Цикл
					НомераДатыПлатежки.Добавить(СтрШаблон(Нстр("ru='%1 от %2'"),
						Строка.Номер,
						Формат(Строка.Дата, "ДФ=dd.MM.yyyy")));
				КонецЦикла;
				ОбластьМакета.Параметры.НомерДатаПлатежки = СтрСоединить(НомераДатыПлатежки, ", ");
			Иначе	
				ОбластьМакета.Параметры.НомерДатаПлатежки = "";
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			СуммаУступаемогоТребованияИтог = СуммаУступаемогоТребованияИтог + ВыборкаДетальныеЗаписи.СуммаУступки;
			ПервоначальнаяСуммаСФИтог = ПервоначальнаяСуммаСФИтог + ВыборкаДетальныеЗаписи.ПервоначальнаяСуммаСФ;
			
		КонецЦикла;
		
		// Выводим подвал
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.СуммаУступаемогоТребованияИтог = СуммаУступаемогоТребованияИтог;
		ОбластьМакета.Параметры.ПервоначальнаяСуммаСФИтог = ПервоначальнаяСуммаСФИтог;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.Ссылка);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РеестрНаФакторинг

Функция ИмяФайловПФФакторинг(МассивОбъектов)
	
	ИменаФайловПечатныхФорм = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	битФакторинг.Ссылка КАК Ссылка,
	|	битФакторинг.Номер КАК Номер,
	|	битФакторинг.НомерРеестра КАК НомерРеестра,
	|	битФакторинг.Дата КАК Дата
	|ИЗ
	|	Документ.битФакторинг КАК битФакторинг
	|ГДЕ
	|	битФакторинг.Ссылка В(&МассивДокументов)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ИменаФайловПечатныхФорм.Вставить(
			Выборка.Ссылка,
			СтрШаблон("Реестр на факторинг №%1 от %2",
				Выборка.НомерРеестра,
				Формат(Выборка.Дата, "ДФ=dd.MM.yyyy")));
	КонецЦикла;	

	Возврат ИменаФайловПечатныхФорм;
	
КонецФункции 

Функция ТекстЗапросаРеестрНаФакторингУниверсальный()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	битФакторингДокументыРеализации.Ссылка КАК Ссылка,
	|	битФакторингДокументыРеализации.ДокументРеализации КАК ДокументРеализации,
	|	битФакторингДокументыРеализации.ДокументРеализации.Номер КАК ДокументРеализацииНомер,
	|	битФакторингДокументыРеализации.ДокументРеализации.Дата КАК ДокументРеализацииДата,
	|	битФакторингДокументыРеализации.ДокументРеализации.бг_КоличествоДнейОтсрочки КАК ОтсрочкаПлатежа,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация КАК Организация,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация.ИНН КАК ОрганизацияИНН,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация.КПП КАК ОрганизацияКПП,
	|	битФакторингДокументыРеализации.Контрагент КАК Контрагент,
	|	битФакторингДокументыРеализации.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
	|	битФакторингДокументыРеализации.Контрагент.ИНН КАК КонтрагентИНН,
	|	битФакторингДокументыРеализации.Контрагент.КПП КАК КонтрагентКПП,
	|	битФакторингДокументыРеализации.ДокументРеализации.Валюта КАК Валюта,
	|	битФакторингДокументыРеализации.ДокументРеализации.Валюта.Код КАК ВалютаКод,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента КАК Договор,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента.Номер КАК ДоговорНомер,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента.Дата КАК ДоговорДата,
	|	битФакторингДокументыРеализации.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ДанныеПоДокументам
	|ИЗ
	|	Документ.битФакторинг.ДокументыРеализации КАК битФакторингДокументыРеализации
	|ГДЕ
	|	битФакторингДокументыРеализации.Ссылка В(&МассивДокументов)
	|	И битФакторингДокументыРеализации.Ссылка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование), ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДанныеПоДокументам.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ ВТ_ДокументыРеализации
	|ИЗ
	|	ВТ_ДанныеПоДокументам КАК ВТ_ДанныеПоДокументам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.Ссылка КАК Ссылка,
	|	ТТНИсходящаяЕГАИС.ДокументОснование КАК ДокументОснование,
	|	ТТНИсходящаяЕГАИС.Номер КАК Номер,
	|	ТТНИсходящаяЕГАИС.ИдентификаторЕГАИС КАК ИдентификаторЕГАИС,
	|	ТТНИсходящаяЕГАИС.Дата КАК Дата
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыРеализации КАК ВТ_ДокументыРеализации
	|		ПО (ВТ_ДокументыРеализации.ДокументРеализации = ТТНИсходящаяЕГАИС.ДокументОснование)
	|			И (НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления)
	|			И (ТТНИсходящаяЕГАИС.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактураДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	СчетФактура.Номер КАК Номер,
	|	СчетФактура.Дата КАК Дата
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|		ПО СчетФактураДокументыОснования.Ссылка = СчетФактура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыРеализации КАК ВТ_ДокументыРеализации
	|		ПО СчетФактураДокументыОснования.ДокументОснование = ВТ_ДокументыРеализации.ДокументРеализации
	|ГДЕ
	|	НЕ СчетФактура.ПометкаУдаления
	|	И СчетФактура.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура.НомерИсправления УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументФакторинга.Ссылка КАК Ссылка,
	|	ДокументФакторинга.Дата КАК Дата,
	|	ДокументФакторинга.НомерРеестра КАК НомерРеестра,
	|	ДокументФакторинга.Организация КАК Организация,
	|	ДокументФакторинга.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	ДокументФакторинга.Фактор КАК Фактор,
	|	ДокументФакторинга.Фактор.НаименованиеПолное КАК ФакторПредставление,
	|	ДокументФакторинга.ДоговорФактора.Номер КАК ДоговорФактораНомер,
	|	ДокументФакторинга.ДоговорФактора.Дата КАК ДоговорФактораДата,
	|	ДокументФакторинга.ДоговорФактора.НаименованиеДляПечати КАК ПредставлениеДоговораФактора
	|ИЗ
	|	Документ.битФакторинг КАК ДокументФакторинга
	|ГДЕ
	|	ДокументФакторинга.Ссылка В(&МассивДокументов)
	|	И ДокументФакторинга.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование), ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПоДокументам.Ссылка КАК Ссылка,
	|	ВТ_ДанныеПоДокументам.ДокументРеализации КАК ДокументРеализации,
	|	ВТ_ДанныеПоДокументам.ДокументРеализацииНомер КАК ДокументРеализацииНомер,
	|	ВТ_ДанныеПоДокументам.ДокументРеализацииДата КАК ДокументРеализацииДата,
	|	ВТ_ДанныеПоДокументам.ОтсрочкаПлатежа КАК ОтсрочкаПлатежа,
	|	ВТ_ДанныеПоДокументам.Организация КАК Организация,
	|	ВТ_ДанныеПоДокументам.ОрганизацияПредставление КАК ОрганизацияПредставление,
	|	ВТ_ДанныеПоДокументам.ОрганизацияИНН КАК ОрганизацияИНН,
	|	ВТ_ДанныеПоДокументам.ОрганизацияКПП КАК ОрганизацияКПП,
	|	ВТ_ДанныеПоДокументам.Контрагент КАК Контрагент,
	|	ВТ_ДанныеПоДокументам.КонтрагентПредставление КАК КонтрагентПредставление,
	|	ВТ_ДанныеПоДокументам.КонтрагентИНН КАК КонтрагентИНН,
	|	ВТ_ДанныеПоДокументам.КонтрагентКПП КАК КонтрагентКПП,
	|	ВТ_ДанныеПоДокументам.Валюта КАК Валюта,
	|	ВТ_ДанныеПоДокументам.ВалютаКод КАК ВалютаКод,
	|	ВТ_ДанныеПоДокументам.Договор КАК Договор,
	|	ВТ_ДанныеПоДокументам.ДоговорНомер КАК ДоговорНомер,
	|	ВТ_ДанныеПоДокументам.ДоговорДата КАК ДоговорДата,
	|	ВТ_ДанныеПоДокументам.Сумма КАК Сумма
	|ИЗ
	|	ВТ_ДанныеПоДокументам КАК ВТ_ДанныеПоДокументам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ДанныеДляПечатиРеестрНаФакторингУниверсальный(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРеестрНаФакторингУниверсальный();
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов 	= Запрос.ВыполнитьПакет();
    ВГраница 			= МассивРезультатов.ВГраница();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ТТНИсходящие",			 МассивРезультатов[ВГраница - 3]);
	СтруктураРезультат.Вставить("СчетФактуры",			 МассивРезультатов[ВГраница - 2]);	
	СтруктураРезультат.Вставить("РезультатПоШапке",		 МассивРезультатов[ВГраница - 1]);
	СтруктураРезультат.Вставить("РезультатПоДокументам", МассивРезультатов[ВГраница]);
	
	Возврат СтруктураРезультат;
	
КонецФункции

#Область АльфаБанк

Функция СформироватьПечатнуюФормуРеестрНаФакторингАльфаБанк(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрНаФакторингАльфаБанк";
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестрНаФакторингАльфаБанк(МассивОбъектов);
	
	ЗаполнитьТабличныйДокументРеестрНаФакторингАльфаБанк(
		ТабличныйДокумент,
		ДанныеДляПечати,
		ОбъектыПечати,
		ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция ДанныеДляПечатиРеестрНаФакторингАльфаБанк(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументФакторинга.Ссылка КАК Ссылка,
	|	ДокументФакторинга.Дата КАК Дата,
	|	ДокументФакторинга.НомерРеестра КАК НомерРеестра
	|ИЗ
	|	Документ.битФакторинг КАК ДокументФакторинга
	|ГДЕ
	|	ДокументФакторинга.Ссылка В(&МассивДокументов)
	|	И ДокументФакторинга.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование), ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битФакторингДокументыРеализации.Ссылка КАК Ссылка,
	|	битФакторингДокументыРеализации.ДокументРеализации КАК ДокументРеализации,
	|	битФакторингДокументыРеализации.ДокументРеализации.Номер КАК ДокументРеализацииНомер,
	|	битФакторингДокументыРеализации.ДокументРеализации.Дата КАК ДокументРеализацииДата,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация КАК Организация,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	битФакторингДокументыРеализации.ДокументРеализации.Организация.ИНН КАК ОрганизацияИНН,
	|	битФакторингДокументыРеализации.Контрагент КАК Контрагент,
	|	битФакторингДокументыРеализации.Контрагент.ИНН КАК КонтрагентИНН,
	|	битФакторингДокументыРеализации.ДокументРеализации.Валюта КАК Валюта,
	|	битФакторингДокументыРеализации.ДокументРеализации.Валюта.Код КАК ВалютаКод,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента КАК Договор,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента.Номер КАК ДоговорНомер,
	|	битФакторингДокументыРеализации.ДоговорКонтрагента.Дата КАК ДоговорДата,
	|	битФакторингДокументыРеализации.Сумма КАК Сумма
	|ИЗ
	|	Документ.битФакторинг.ДокументыРеализации КАК битФакторингДокументыРеализации
	|ГДЕ
	|	битФакторингДокументыРеализации.Ссылка В(&МассивДокументов)
	|	И битФакторингДокументыРеализации.Ссылка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование), ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов 	= Запрос.ВыполнитьПакет();
    ВГраница 			= МассивРезультатов.ВГраница();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("РезультатПоШапке",		 МассивРезультатов[ВГраница - 1]);
	СтруктураРезультат.Вставить("РезультатПоДокументам", МассивРезультатов[ВГраница]);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументРеестрНаФакторингАльфаБанк(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битФакторинг.ПФ_MXL_РеестрНаФакторингАльфаБанк");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
								
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.Ссылка);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область СБФ

Функция СформироватьПечатнуюФормуРеестрНаФакторингСБФ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрНаФакторингСБФ";
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестрНаФакторингУниверсальный(МассивОбъектов);
	
	ЗаполнитьТабличныйДокументРеестрНаФакторингСБФ(
		ТабличныйДокумент,
		ДанныеДляПечати,
		ОбъектыПечати,
		ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьТабличныйДокументРеестрНаФакторингСБФ(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битФакторинг.ПФ_MXL_РеестрНаФакторингСБФ");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеСчетФактур	= ДанныеДляПечати.СчетФактуры.Выгрузить();
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапке);
				
		ОбластьМакета.Параметры.Дата = Формат(
			ВыборкаПоШапке.Дата, 
			"ДФ=dd.MM.yyyy");
			
		ОбластьМакета.Параметры.ДоговорФактораДата = Формат(
			ВыборкаПоШапке.ДоговорФактораДата, 
			"ДФ=dd.MM.yyyy");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		ИтогоСумма = 0;
		НомерПП = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ИтогоСумма = ИтогоСумма + ВыборкаДетальныеЗаписи.Сумма;
			НомерПП = НомерПП + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ОбластьМакета.Параметры.НомерСтроки = НомерПП;
											
			Отбор = Новый Структура("ДокументОснование", ВыборкаДетальныеЗаписи.ДокументРеализации);	
			СчетФактурыРеализации = ДанныеСчетФактур.НайтиСтроки(Отбор);	
			
			Если СчетФактурыРеализации.Количество() > 0 Тогда
				СчетФактура = СчетФактурыРеализации[0];
				ОбластьМакета.Параметры.СФНомер = СчетФактура.Номер;
				ОбластьМакета.Параметры.СФДата = СчетФактура.Дата;
			КонецЕсли;
							
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьМакета.Параметры.ИтогоСумма = ИтогоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.Ссылка);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область ГПБ

Функция СформироватьПечатнуюФормуРеестрНаФакторингГПБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрНаФакторингГПБ";
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестрНаФакторингУниверсальный(МассивОбъектов);
	
	ЗаполнитьТабличныйДокументРеестрНаФакторингГПБ(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьТабличныйДокументРеестрНаФакторингГПБ(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битФакторинг.ПФ_MXL_РеестрНаФакторингГПБ");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеСчетФактур	= ДанныеДляПечати.СчетФактуры.Выгрузить();
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапке);
		
		ОбластьМакета.Параметры.Дата = Формат(
			ВыборкаПоШапке.Дата, 
			"ДФ=dd.MM.yyyy");
			
		ОбластьМакета.Параметры.ДоговорФактораДата = Формат(
			ВыборкаПоШапке.ДоговорФактораДата, 
			"ДФ=dd.MM.yyyy");
			
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		ИтогоСумма = 0;
		НомерПП = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ИтогоСумма = ИтогоСумма + ВыборкаДетальныеЗаписи.Сумма;
			НомерПП = НомерПП + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ОбластьМакета.Параметры.НомерСтроки = НомерПП;
																		
			Отбор = Новый Структура("ДокументОснование", ВыборкаДетальныеЗаписи.ДокументРеализации);	
			СчетФактурыРеализации = ДанныеСчетФактур.НайтиСтроки(Отбор);	
			
			Если СчетФактурыРеализации.Количество() > 0 Тогда
				СчетФактура = СчетФактурыРеализации[0];
				ОбластьМакета.Параметры.СФНомер = СчетФактура.Номер;
				ОбластьМакета.Параметры.СФДата = СчетФактура.Дата;
			КонецЕсли;
							
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьМакета.Параметры.ИтогоСумма = ИтогоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.Ссылка);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область РеестрПП

Функция СформироватьПечатнуюФормуРеестрНаФакторингРеестрПП(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрНаФакторингРеестрПП";
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестрНаФакторингРеестрПП(МассивОбъектов);
	
	ЗаполнитьТабличныйДокументРеестрНаФакторингРеестрПП(
		ТабличныйДокумент,
		ДанныеДляПечати,
		ОбъектыПечати,
		ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция ДанныеДляПечатиРеестрНаФакторингРеестрПП(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	битФакторингДокументыРеализации.Ссылка КАК ДокументФакторинг,
	|	битФакторингДокументыРеализации.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ ВТ_ДокументыРеализаций
	|ИЗ
	|	Документ.битФакторинг.ДокументыРеализации КАК битФакторингДокументыРеализации
	|ГДЕ
	|	битФакторингДокументыРеализации.Ссылка В(&МассивДокументов)
	|	И битФакторингДокументыРеализации.Ссылка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуНаФинансирование),
	|		ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ПередачаДокументовФакторуПодПлатеж), ЗНАЧЕНИЕ(Перечисление.бг_ВидыОперацийФакторинга.ОплатаДебитораНам))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыРеализаций.ДокументФакторинг КАК ДокументФакторинг,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_ДокументыРеализаций.ДокументФакторинг) КАК ДокументФакторингПредставление
	|ИЗ
	|	ВТ_ДокументыРеализаций КАК ВТ_ДокументыРеализаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументФакторинг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДокументыРеализаций.ДокументФакторинг КАК ДокументФакторинг,
	|	ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка КАК ДокументПоступленияПлатежа,
	|	ПоступлениеБезналичныхДенежныхСредств.Номер КАК Номер,
	|	ПоступлениеБезналичныхДенежныхСредств.Дата КАК Дата,
	|	ПоступлениеБезналичныхДенежныхСредств.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ПоступлениеБезналичныхДенежныхСредств.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ПоступлениеБезналичныхДенежныхСредств.ДатаПроведенияБанком КАК ДатаПроведенияБанком,
	|	ПоступлениеБезналичныхДенежныхСредств.Организация КАК Организация,
	|	ПоступлениеБезналичныхДенежныхСредств.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет КАК БанковскийСчет,
	|	ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет.Наименование КАК БанковскийСчетПредставление,
	|	ПоступлениеБезналичныхДенежныхСредств.Контрагент КАК Контрагент,
	|	ПоступлениеБезналичныхДенежныхСредств.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
	|	ПоступлениеБезналичныхДенежныхСредств.СуммаДокумента КАК СуммаДокумента,
	|	ПоступлениеБезналичныхДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа
	|ИЗ
	|	ВТ_ДокументыРеализаций КАК ВТ_ДокументыРеализаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
	|			ПО ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка = ПоступлениеБезналичныхДенежныхСредств.Ссылка
	|				И (НЕ ПоступлениеБезналичныхДенежныхСредств.ПометкаУдаления)
	|				И (ПоступлениеБезналичныхДенежныхСредств.Проведен)
	|		ПО ВТ_ДокументыРеализаций.ДокументРеализации = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОснованиеПлатежа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументФакторинг
	|ИТОГИ ПО
	|	ДокументФакторинг";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов 	= Запрос.ВыполнитьПакет();
    ВГраница 			= МассивРезультатов.ВГраница();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("РезультатПоШапке",		 МассивРезультатов[ВГраница - 1]);
	СтруктураРезультат.Вставить("РезультатПоДокументам", МассивРезультатов[ВГраница]);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументРеестрНаФакторингРеестрПП(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.битФакторинг.ПФ_MXL_РеестрНаФакторингРеестрПП");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("ДокументФакторинг", ВыборкаПоШапке.ДокументФакторинг);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru='По документу %1 нет документов поступления безналичных ДС'"),
					ВыборкаПоШапке.ДокументФакторингПредставление));
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
															
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.ДокументФакторинг);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область МКБ

Функция СформироватьПечатнуюФормуРеестрНаФакторингМКБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Вариант = Неопределено;
	ПараметрыПечати.Свойство("Вариант", Вариант);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати =  СтрШаблон("ПАРАМЕТРЫ_ПЕЧАТИ_битФакторинг_РеестрНаФакторингМКБ%1", Вариант);
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	
	ДанныеДляПечати = ДанныеДляПечатиРеестрНаФакторингУниверсальный(МассивОбъектов);
	
	ЗаполнитьТабличныйДокументРеестрНаФакторингМКБ(
		ТабличныйДокумент,
		ДанныеДляПечати,
		ОбъектыПечати,
		ПараметрыПечати,
		Вариант);
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьТабличныйДокументРеестрНаФакторингМКБ(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, Вариант)
	
	ИмяМакета = СтрШаблон(НСтр("ru='Документ.битФакторинг.ПФ_MXL_РеестрНаФакторингМКБ%1'"), Вариант);
	Макет = УправлениеПечатью.МакетПечатнойФормы(ИмяМакета);
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	ПервыйДокумент = Истина;
	
	ВыборкаПоШапке 		= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеСчетФактур	= ДанныеДляПечати.СчетФактуры.Выгрузить();
	ДанныеТТН			= ДанныеДляПечати.ТТНИсходящие.Выгрузить();
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если Не НайденСледующий Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДетальныеЗаписи = ВыборкаПоДокументам.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);

			Отбор = Новый Структура("ДокументОснование", ВыборкаДетальныеЗаписи.ДокументРеализации);	
			СчетФактурыРеализации 	= ДанныеСчетФактур.НайтиСтроки(Отбор);
			ТТНРеализации 			= ДанныеТТН.НайтиСтроки(Отбор);
			
			Если СчетФактурыРеализации.Количество() > 0 Тогда
				СчетФактура = СчетФактурыРеализации[0];
				ОбластьМакета.Параметры.ПредставлениеСчетФактуры = СтрШаблон(
					НСтр("ru='%1 от %2'"), 
					СчетФактура.Номер, 
					Формат(СчетФактура.Дата, "ДФ=dd.MM.yyyy"));	
			КонецЕсли;
			
			Если Вариант = "ОбщийРеализация"
				И ТТНРеализации.Количество() > 0 Тогда
				ТТН = ТТНРеализации[0];
				ОбластьМакета.Параметры.ИдентификаторЕГАИС = ТТН.ИдентификаторЕГАИС;
				ОбластьМакета.Параметры.НомерТТН = ТТН.Номер;
				ОбластьМакета.Параметры.ДатаТТН = ТТН.Дата;
			КонецЕсли;
							
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ВыборкаПоШапке.Ссылка);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
