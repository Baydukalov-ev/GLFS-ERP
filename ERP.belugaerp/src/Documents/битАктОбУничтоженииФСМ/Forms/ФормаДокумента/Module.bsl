
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		УстановитьОрганизациюЕГАИС();
		ПриПолученииДанныхНаСервере();
	КонецЕсли;	
	
	ТекущийСтатусДокумента = Документы.битАктОбУничтоженииФСМ.ТекущийСтатус(Объект.Ссылка);
	Если ТекущийСтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.бг_Подтвержден И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("ОбъектИзменен")
			И Параметр.ОбъектИзменен Тогда
			Прочитать();
		Иначе
			ОбновитьСтатусЕГАИС();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
			Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВФормахДокументов)) Тогда
		
		Прочитать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)  
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом  
	
	ПриПолученииДанныхНаСервере()  
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_АктОбУничтоженииФСМ", ПараметрыЗаписи, Объект.Ссылка);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтатусЕГАИСПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
			ЭтотОбъект,
			Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
			
		ТекстВопроса = НСтр("ru = '""Акт об уничтожении ФСМ"" не проведен. Провести?';
							|en = '""Акт об уничтожении ФСМ"" не проведен. Провести?'");
		
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
			ЭтотОбъект,
			Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
			
		ТекстВопроса = НСтр("ru = '""Акт об уничтожении ФСМ"" был изменен. Провести?';
							|en = '""Акт об уничтожении ФСМ"" был изменен. Провести?'");
		
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОрганизациюЕГАИС()
КонецПроцедуры

&НаКлиенте
Процедура МаркиНачальныйНомерДиапазонаПриИзменении(Элемент)
	
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14));
	ТекущаяСтрока = Элементы.Марки.ТекущиеДанные; 
	Если Не ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока.КоличествоМарок = ТипЧисло.ПривестиЗначение(ТекущаяСтрока.КонечныйНомерПоддиапазона) 
			- ТипЧисло.ПривестиЗначение(ТекущаяСтрока.НачальныйНомерПоддиапазона) + 1;
	КонецЕсли;
	
	ПересчитатьОбщееКоличество();
	
КонецПроцедуры

&НаКлиенте
Процедура МаркиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.ПричинаУничтожения = "Брак до маркировки. Вина Производителя АП.";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркиПослеУдаления(Элемент)
	ПересчитатьОбщееКоличество();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьМарки(Команда)
	Если Не ЗначениеЗаполнено(Объект.ЗаявлениеОВыдачеФСМ) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено заявление о выдаче ФСМ'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , , "Объект.ЗаявлениеОВыдачеФСМ");
		Возврат;
	КонецЕсли;
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьМаркиЗавершение", ЭтотОбъект);
	Если Объект.Марки.Количество() <> 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет перезаполнена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМаркиЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		ЗаполнитьМаркиНаСервере();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьМаркиНаСервере()
	Объект.Марки.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заявление", Объект.ЗаявлениеОВыдачеФСМ);
	Запрос.Текст = ТекстЗапросаМаркиКУничтожению();
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаСерии = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСерии.Следующий() Цикл
			НачалоДиапазона = -2;
			КонецДиапазона = -2;
			Выборка = ВыборкаСерии.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.НомерМарки = КонецДиапазона + 1 Тогда
					КонецДиапазона = Выборка.НомерМарки;
				Иначе
					ДобавитьДиапазон(ВыборкаНоменклатура.Номенклатура, ВыборкаСерии.Серия,
						НачалоДиапазона, КонецДиапазона);
					НачалоДиапазона = Выборка.НомерМарки;
					КонецДиапазона = Выборка.НомерМарки;
				КонецЕсли;
			КонецЦикла;
			ДобавитьДиапазон(ВыборкаНоменклатура.Номенклатура, ВыборкаСерии.Серия,
					НачалоДиапазона, КонецДиапазона);
		КонецЦикла;
	КонецЦикла;
	ПересчитатьОбщееКоличество();
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаМаркиКУничтожению()
	Возврат
	"ВЫБРАТЬ
	|	СерииНоменклатуры.бг_Номенклатура КАК Номенклатура,
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ПОМЕСТИТЬ втСерии
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.бг_ЗаявлениеОВыдачеФСМ = &Заявление
	|
	|СГРУППИРОВАТЬ ПО
	|	СерииНоменклатуры.бг_Номенклатура,
	|	СерииНоменклатуры.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бг_ИдентификаторыМарок.СерияФСМ КАК Серия,
	|	бг_ИдентификаторыМарок.ГУИДМарки КАК ГУИДМарки,
	|	бг_ИдентификаторыМарок.НомерМарки КАК НомерМарки
	|ПОМЕСТИТЬ втИдентификаторыМарок
	|ИЗ
	|	РегистрСведений.бг_ИдентификаторыМарок КАК бг_ИдентификаторыМарок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
	|		ПО бг_ИдентификаторыМарок.СерияФСМ = втСерии.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия,
	|	ГУИДМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ Различные
	|	втИдентификаторыМарок.НомерМарки КАК НомерМарки,
	|	втСерии.Серия КАК Серия,
	|	втСерии.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.бг_ДвижениеМарок.СрезПоследних(
	|			,
	|			ГУИДМарки В
	|				(ВЫБРАТЬ
	|					втИдентификаторыМарок.ГУИДМарки
	|				ИЗ
	|					втИдентификаторыМарок КАК втИдентификаторыМарок)) КАК бг_ДвижениеМарокСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИдентификаторыМарок КАК втИдентификаторыМарок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
	|			ПО втИдентификаторыМарок.Серия = втСерии.Серия
	|		ПО бг_ДвижениеМарокСрезПоследних.ГУИДМарки = втИдентификаторыМарок.ГУИДМарки
	|ГДЕ
	|	бг_ДвижениеМарокСрезПоследних.СтатусМарки В (ЗНАЧЕНИЕ(Перечисление.бг_СтатусыАкцизныхМарок.ПодготовленаКУничтожению), ЗНАЧЕНИЕ(Перечисление.бг_СтатусыАкцизныхМарок.ВключенаВОтчетОбУничтожении))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерМарки
	|ИТОГИ ПО
	|	Номенклатура,
	|	Серия";
КонецФункции

&НаСервере
Процедура ДобавитьДиапазон(Номенклатура, Серия, НачалоДиапазона, КонецДиапазона) 
	ДлинаДиапазон = 8;
	Если КонецДиапазона > 0 Тогда
		НоваяСтрока = Объект.Марки.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Серия = Серия;
		НачалоДиапазонаСтрока = Формат(НачалоДиапазона, "ЧГ=0");
		КонецДиапазонаСтрока = Формат(КонецДиапазона, "ЧГ=0");
		НоваяСтрока.НачальныйНомерПоддиапазона = Прав(НачалоДиапазонаСтрока, ДлинаДиапазон);
		НоваяСтрока.КонечныйНомерПоддиапазона = Прав(КонецДиапазонаСтрока, ДлинаДиапазон);
		НоваяСтрока.КоличествоМарок = КонецДиапазона - НачалоДиапазона + 1;
		НоваяСтрока.ПричинаУничтожения = НСтр("ru='Брак до маркировки. Вина Производителя АП.'"); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОрганизациюЕГАИС()
	Объект.ОрганизацияЕГАИС = Документы.битАктОбУничтоженииФСМ.ОрганизацияЕГАИС(Объект.Организация)
КонецПроцедуры	

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	ОбновитьСтатусЕГАИС();	
КонецПроцедуры

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусЕГАИС = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияЕГАИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусЕГАИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(
		СтатусЕГАИС,
		ДальнейшееДействие,
		ДопустимыеДействия);
	
	РедактированиеФормыНеДоступно = СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.КПередаче
 		И СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачи;
	
	Элементы.СтраницаОсновное.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	Элементы.СтраницаМарки.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные"),
			ЭтотОбъект.УникальныйИдентификатор);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Документ", Объект.Ссылка);
		ОткрытьФорму("Справочник.ЕГАИСПрисоединенныеФайлы.Форма.ФормаОшибки", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	КонецЕсли;
	
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьОбщееКоличество()

	Объект.ОбщееКоличество = Объект.Марки.Итог("КоличествоМарок");
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти
