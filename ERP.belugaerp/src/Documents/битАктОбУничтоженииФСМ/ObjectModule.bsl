
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияЕГАИСПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ТекущийСтатусДокумента = Документы.битАктОбУничтоженииФСМ.ТекущийСтатус(Ссылка);
	Если ТекущийСтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.бг_Подтвержден
		И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.ЗаписатьСтатусДокументаЕГАИСПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	ИдентификаторЕГАИС = "";
	Марки.Очистить();
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	бг_ОтразитьДвиженияПоМаркам(Отказ);	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ОтразитьДвиженияПоМаркам(Отказ) 
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ТекущийСтатус = Документы.битАктОбУничтоженииФСМ.ТекущийСтатус(Ссылка);
	МаркиДокумента = Документы.битАктОбУничтоженииФСМ.МаркиДокумента(Ссылка);
	МаркиСИдентификаторами = РегистрыСведений.бг_ИдентификаторыМарок.ОпределитьСоздатьИдентификаторыМарок(МаркиДокумента);
	бг_СформироватьДвиженияМарок(МаркиСИдентификаторами, ТекущийСтатус);
КонецПроцедуры

Процедура бг_СформироватьДвиженияМарок(ТаблицаМарок, ТекущийСтатус)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ГУИДМарки КАК ГУИДМарки
	|ПОМЕСТИТЬ втИдентификаторы
	|ИЗ
	|	&ТаблицаМарок КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК Серия,
	|	втИдентификаторы.ГУИДМарки КАК ГУИДМарки,
	|	НЕОПРЕДЕЛЕНО КАК КодУпаковки,
	|	&Статус КАК СтатусМарки
	|ИЗ
	|	втИдентификаторы КАК втИдентификаторы";
	
	СтатусыПоОперации = Перечисления.бг_СтатусыАкцизныхМарок.СтатусыПоОперации(Метаданные().Имя);
 	СтатусМарки = бг_ОпределитьСтатусМарки(ТекущийСтатус);
	Запрос.УстановитьПараметр("Статус", СтатусМарки);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ТаблицаМарок", ТаблицаМарок);
	Результат = Запрос.Выполнить();
	ТаблицаДвижениеМарок = Результат.Выгрузить();
	
	Движения.бг_ДвижениеМарок.Записывать = Истина;
	Движения.бг_ДвижениеМарок.Загрузить(ТаблицаДвижениеМарок);
КонецПроцедуры

Функция бг_ОпределитьСтатусМарки(СтатусДокумента)
	СтатусыПоОперации = Перечисления.бг_СтатусыАкцизныхМарок.СтатусыПоОперации(Метаданные().Имя);
	Если СтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.бг_Подтвержден 
		Или СтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ПроведенЕГАИС Тогда
		Результат = СтатусыПоОперации.АктПодтвержден;
	Иначе
		Результат = СтатусыПоОперации.АктОформлен;
	КонецЕсли;                                    
	Возврат Результат;
КонецФункции

#КонецОбласти 

#КонецЕсли
