
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриПолученииДанныхНаСервере(РеквизитФормыВЗначение("Объект"));
		
		Если ЗначениеЗаполнено(Объект.ОрганизацияЕГАИС) 
			И Не ЗначениеЗаполнено(Объект.Производитель) Тогда
			// При создании нового объекта, организация ЕГАИС может быть заполнена по статистике. 
			Объект.Производитель = Объект.ОрганизацияЕГАИС;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСпискиВыбораПеречисляемыхЗначений();
	УстановитьПараметрыВыбора();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ЭтоОповещениеОЗаписиПрисоединенногоФайла(ИмяСобытия, Параметр) Тогда
			
		ДобавляетсяФайл = Ложь;
		Если ДобавляетсяФайлЭтикетки Тогда
			Элементы.Емкости.ТекущиеДанные.Этикетка = Источник[0];
			ДобавляетсяФайлЭтикетки = Ложь;
			ДобавляетсяФайл = Истина;
		ИначеЕсли ДобавляетсяФайлТехнологическойИнструкции Тогда
			Элементы.ТехнологическиеИнструкции.ТекущиеДанные.Файл = Источник[0];
			ДобавляетсяФайлТехнологическойИнструкции = Ложь;
			ДобавляетсяФайл = Истина;
		Иначе
			ДобавляетсяФайл = Ложь;	
		КонецЕсли;
		
		Если ДобавляетсяФайл Тогда
			Модифицированность = Истина;
		КонецЕсли;	
			
	КонецЕсли;
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	МинимальнаяДатаПервойПоставки = ДатаПервойПоставки(Объект.Дата);
	Если ЗначениеЗаполнено(МинимальнаяДатаПервойПоставки)
		И Объект.ДатаПервойПоставки < МинимальнаяДатаПервойПоставки Тогда
		Объект.ДатаПервойПоставки = МинимальнаяДатаПервойПоставки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЕГАИСПредставлениеОбработкаНавигационнойСсылки(Элемент, 
															НавигационнаяСсылкаФорматированнойСтроки,
															СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Не Объект.Проведен Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
				ЭтотОбъект,
				Новый Структура(
					"НавигационнаяСсылкаФорматированнойСтроки",
					НавигационнаяСсылкаФорматированнойСтроки));
				
		ТекстВопроса = НСтр("ru = 'Документ не проведен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
			ЭтотОбъект,
			Новый Структура(
				"НавигационнаяСсылкаФорматированнойСтроки",
				НавигационнаяСсылкаФорматированнойСтроки));
				
		ТекстВопроса = НСтр("ru = 'Документ был изменен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияЕГАИСПриИзменении(Элемент)
	
	Объект.Производитель = Объект.ОрганизацияЕГАИС;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	
	Если Объект.СтранаПроисхождения = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		Объект.НаименованиеПолноеНаЯзыкеПроизводителя = Объект.НаименованиеПолное;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособОбработкиПиваПометкаПриИзменении(Элемент)
	
	СпособыОбработки = Новый Массив;
	Для каждого Способ Из СпособОбработкиПива Цикл
		Если Способ.Пометка Тогда
			СпособыОбработки.Добавить(Способ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Объект.СпособОбработкиПива = СтрСоединить(СпособыОбработки, ";");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтличительныеХарактеристикиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.бг_ТиповыеАнализыНоменклатуры")
		И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Объект.ОтличительныеХарактеристики = ТиповыеОтличительныеХарактеристикиНоменклатуры(ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ЕмкостиЭтикеткаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЕмкостиЭтикеткаНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьМенюВариантовВыбораФайла(ОписаниеОповещения, Элементы.ЕмкостиЭтикетка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеРегламентыРегламентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТехническиеРегламенты.ТекущиеДанные;
	
	ДанныеСтроки = Новый Структура("Регламент,Номер,НаименованиеПолное");
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущиеДанные);
	ЗаполнитьЗависимыеРеквизитыВСтрокеТехническиеРегламенты(ДанныеСтроки);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ТехнологическиеИнструкцииФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ТехнологическиеИнструкцииФайлНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьМенюВариантовВыбораФайла(ОписаниеОповещения, Элементы.ТехнологическиеИнструкцииФайл);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьОтличительныеХарактеристики(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму(
		"Справочник.бг_ТиповыеАнализыНоменклатуры.ФормаВыбора",
		ПараметрыФормы,
		Элементы.ОтличительныеХарактеристики,
		Элементы.ОтличительныеХарактеристики,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	 РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(
		ЭтотОбъект,
		Элемент,
		ПараметрыПеретаскивания,
		СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(
		ЭтотОбъект,
		Элемент,
		ПараметрыПеретаскивания,
		СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	ОбновитьСтатусЕГАИС();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбораПеречисляемыхЗначений()
	
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораТипаОрганизацииПроизводителя(Элементы.ТипОрганизации.СписокВыбора);
	
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораТипаПива(Элементы.ТипПива.СписокВыбора);
	ЗаполнитьСпособыОбработкиПива();
	
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораРынкаПоставки(Элементы.РынокПоставки.СписокВыбора);
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораВидаТары(Элементы.ЕмкостиВидТары.СписокВыбора);
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораОписанийТары(Элементы.ЕмкостиОписаниеТары.СписокВыбора);
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораНазначенийТары(Элементы.ЕмкостиНазначениеТары.СписокВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпособыОбработкиПива()
	
	бг_ИнтеграцияЕГАИС.ЗаполнитьСписокВыбораСпособовОбработкиПива(СпособОбработкиПива);
	
	Если Не ЗначениеЗаполнено(Объект.СпособОбработкиПива) Тогда
		Возврат;
	КонецЕсли;
	
	СпособыОбработки = СтрРазделить(Объект.СпособОбработкиПива, ";", Ложь);
	Для каждого Способ Из СпособыОбработки Цикл
		ЭлементСписка = СпособОбработкиПива.НайтиПоЗначению(Способ);	
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора()
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора(
		"Отбор.ТипСертификата", 
		НСтр("ru = 'Декларация о соответствии';
			|en = 'Declaration of conformity'")));
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
	Элементы.ДекларацияОСоответствии.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора(
		"Отбор.ТипСертификата", 
		НСтр("ru = 'Сертификат соответствия';
			|en = 'Certificate of conformity'")));
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
	Элементы.СертификатСоответствия.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗависимыеРеквизитыВСтрокеТехническиеРегламенты(ДанныеСтроки)
	
	Регламент = ДанныеСтроки.Регламент;
	
	Если ЗначениеЗаполнено(Регламент) Тогда
		РеквизитыРегламента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Регламент,
			"Номер,НаименованиеПолное");
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, РеквизитыРегламента); 
	Иначе
		ДанныеСтроки.Номер = "";
		ДанныеСтроки.НаименованиеПолное = "";
	КонецЕсли;
	
КонецПроцедуры

// Возвращает строковое представление органолептических показателей номенклатуры по данным типового анализа.
//
//  Параметры:
//   ТиповойАнализ - СправочникСсылка.бг_ТиповыеАнализыНоменклатуры - ссылка на типовой анализ номенклатуры
//
//  Возвращаемое значение:
//   Строка - Органолептические показатели номенклатуры
//
&НаСервере
Функция ТиповыеОтличительныеХарактеристикиНоменклатуры(ТиповойАнализ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Показатели = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ТиповойАнализ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиАнализа.НомерСтроки КАК НомерСтроки,
	|	ПоказателиАнализа.ПоказательАнализа КАК ПоказательАнализа
	|ПОМЕСТИТЬ Показатели
	|ИЗ
	|	Справочник.бг_ТиповыеАнализыНоменклатуры.ПоказателиАнализа КАК ПоказателиАнализа
	|ГДЕ
	|	ПоказателиАнализа.Ссылка = &Ссылка
	|	И ПоказателиАнализа.ПоказательАнализа.ВидРезультата = ЗНАЧЕНИЕ(Перечисление.бг_ВидыРезультатовЛабораторныхАнализов.ЗначениеИзСписка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоказательАнализа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Показатели.НомерСтроки КАК НомерПоказателя,
	|	ПРЕДСТАВЛЕНИЕ(Показатели.ПоказательАнализа) КАК Показатель,
	|	ПРЕДСТАВЛЕНИЕ(ДопустимыеЗначенияПоказателей.ЗначениеПоказателя) КАК ЗначениеПоказателя
	|ИЗ
	|	Справочник.бг_ПоказателиАнализовНоменклатуры.ДопустимыеЗначенияПоказателей КАК ДопустимыеЗначенияПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Показатели КАК Показатели
	|		ПО ДопустимыеЗначенияПоказателей.Ссылка = Показатели.ПоказательАнализа
	|			И (ДопустимыеЗначенияПоказателей.НомерСтроки = 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПоказателя";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ШаблонПоказателя = "%1 - %2.";
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Показатель)
			Или Не ЗначениеЗаполнено(Выборка.ЗначениеПоказателя) Тогда
			Продолжить;
		КонецЕсли;
		ТекстПоказателя = СтрШаблон(ШаблонПоказателя, СокрЛП(Выборка.Показатель), СокрЛП(Выборка.ЗначениеПоказателя));
		Показатели.Добавить(ТекстПоказателя);
	КонецЦикла;
	
	Возврат СтрСоединить(Показатели, " ");
	
КонецФункции

// Возвращает минимальную дату первой поставки.
//
&НаСервереБезКонтекста
Функция ДатаПервойПоставки(Знач ДатаУведомления)
	
	Возврат Документы.битУведомлениеОНачалеОборотаНаТерриторииРФАПЕГАИС.ДатаПервойПоставки(ДатаУведомления);
	
КонецФункции

#Область ВыборФайлаВТаблицахФормы

&НаКлиенте
Процедура ПоказатьМенюВариантовВыбораФайла(ОписаниеОповещения, Элемент)
	
	ПунктыМеню = Новый СписокЗначений;
	ПунктыМеню.Добавить(
		"ВыборИзПрисоединенныхФайлов", 
		НСтр("ru = 'Выбрать из присоединенных файлов ...';
			|en = 'Select from attached files ...'"), ,БиблиотекаКартинок.ВыбратьЗначение);
	ПунктыМеню.Добавить(
		"ДобавлениеФайлаСДиска",
			НСтр("ru = 'Добавить файл с диска ...';
				|en = 'Add file from disk ...'"),, БиблиотекаКартинок.ОткрытьФайл);
	
	ПоказатьВыборИзМеню(ОписаниеОповещения, ПунктыМеню, Элемент);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоказатьПредупреждениеОНевозможностиВыбораФайла(Действие = "")
	
	Если Действие = "ДобавлениеФайлаСДиска" Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Документ не записан. Добавление файла невозможно.';
				|en = 'Document not saved. Cannot add the file.'"));
	ИначеЕсли Действие = "ВыборИзПрисоединенныхФайлов" Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Документ не записан. Выбор файла невозможен.';
				|en = 'Document not saved. Cannot select the file.'"));
	Иначе
		ПоказатьПредупреждениеОНевозможностиВыбораФайла();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоОповещениеОЗаписиПрисоединенногоФайла(ИмяСобытия, Параметр)
	
	Возврат ИмяСобытия = "Запись_Файл"
		И Параметр.Свойство("ВладелецФайла")
		И Параметр.ВладелецФайла = Объект.Ссылка
		И Параметр.ЭтоНовый;
	
КонецФункции

// Обработчик оповещения завершения выбора файла этикетки емкости.
//
// Параметры:
//  Результат               - Структура - результат, переданный из оповещения
//  ДополнительныеПараметры - Структура - дополнительные параметры, переданные из оповещения
//
&НаКлиенте
Процедура ЕмкостиЭтикеткаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ВыборЭтикеткиЗавершение(Результат.Значение);
		Иначе
			ПоказатьПредупреждениеОНевозможностиВыбораФайла(Результат.Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЭтикеткиЗавершение(Действие)
	
	Если Действие = "ДобавлениеФайлаСДиска" Тогда
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		ДобавляетсяФайлЭтикетки = Истина;
		РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
	ИначеЕсли Действие = "ВыборИзПрисоединенныхФайлов" Тогда
		РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Объект.Ссылка, Элементы.ЕмкостиЭтикетка);
	Иначе
		ПоказатьПредупреждениеОНевозможностиВыбораФайла();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения завершения выбора файла Технологической инструкции.
//
// Параметры:
//  Результат               - Структура - результат, переданный из оповещения
//  ДополнительныеПараметры - Структура - дополнительные параметры, переданные из оповещения
//
&НаКлиенте
Процедура ТехнологическиеИнструкцииФайлНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ВыборФайлаТехнологическойИнструкцииЗавершение(Результат.Значение);
		Иначе
			ПоказатьПредупреждениеОНевозможностиВыбораФайла(Результат.Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаТехнологическойИнструкцииЗавершение(Действие)
	
	Если Действие = "ДобавлениеФайлаСДиска" Тогда
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		ДобавляетсяФайлТехнологическойИнструкции = Истина;
		РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
	ИначеЕсли Действие = "ВыборИзПрисоединенныхФайлов" Тогда
		РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Объект.Ссылка, Элементы.ТехнологическиеИнструкцииФайл);
	Иначе
		ПоказатьПредупреждениеОНевозможностиВыбораФайла();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусЕГАИС = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&ДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&ДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&ДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("ДальнейшиеДействия", ИнтеграцияЕГАИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			СтатусЕГАИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(
		СтатусЕГАИС,
		ДальнейшееДействие,
		ДопустимыеДействия);
	
	РедактированиеФормыНедоступно = СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.КПередаче
		И СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачи;
	
	ТолькоПросмотр = РедактированиеФормыНедоступно;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные"),
			ЭтотОбъект.УникальныйИдентификатор);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Документ", Объект.Ссылка);
		ОткрытьФорму("Справочник.ЕГАИСПрисоединенныеФайлы.Форма.ФормаОшибки", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 
