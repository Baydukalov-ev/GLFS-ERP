#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает документ пересортицы товаров на основании ТТН входящей
//
// Параметры:
//  ТТНВходящая	- ДокументСсылка.ТТНВходящаяЕГАИС 
//
Процедура бг_СоздатьДокументПересортицыТоваровНаОснованииТТНВходящей(ТТНВходящая) Экспорт
	
	ПересортицаТоваровОбъект = Документы.ПересортицаТоваров.СоздатьДокумент();
	ПересортицаТоваровОбъект.Заполнить(ТТНВходящая);
	
	ПересортицаТоваровОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
КонецПроцедуры

// Связанный с ТТН входящей документ пересортицы
//
// Параметры:
//  ТТНВходящая	- - ДокументСсылка.ТТНВходящаяЕГАИС
// 
// Возвращаемое значение:
// 	ДокументСсылка.ПересортицаТоваров 
//
Функция бг_ДокументПересортицыТоваровНаОснованииТТНВходящей(ТТНВходящая) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПересортицаТоваров.Ссылка КАК ПересортицаТоваров
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|ГДЕ
	|	ПересортицаТоваров.бг_Основание = &ТТНВходящая
	|	И ПересортицаТоваров.Проведен";
	
	Запрос.УстановитьПараметр("ТТНВходящая", ТТНВходящая);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ПересортицаТоваров;
	
КонецФункции

// Интерфейс для отложенной обработки этапов производства
//
// Параметры:
//   Объект - ДокументСсылка.ЭтапПроизводства2_2
//   ВариантОбработки - ПеречислениеСсылка.бг_ВариантыОтложеннойОбработкиОбъектов, Неопределено - вариант обработки
//   Отказ - Булево - отказ от обработки
//   ДополнительныеСведения - Структура - дополнительные сведения для обработки
//
Процедура бг_ОтложеннаяОбработкаОбъекта(Объект, ВариантОбработки, Отказ,
	ДополнительныеСведения = Неопределено) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантОбработки =
			Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.СформироватьОрдераНаОтражениеПересортицы Тогда
			
		бг_СформироватьОбновитьОрдер(Объект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция бг_ДанныеЗаполненияПересортицыТоваровНаОснованииТТНВходящей(ТТНВходящая) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ОснованиеТТНВходящей
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &ТТНВходящая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.Ссылка КАК бг_Основание,
	|	ТТНВходящаяЕГАИС.Организация КАК Организация,
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ВидДеятельностиНДС,
	|	ИСТИНА КАК ПриходоватьТоварыПоСебестоимостиСписания,
	|	ИСТИНА КАК бг_НеРегистрироватьКОтражениюВРеглУчете
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &ТТНВходящая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК НоменклатураОприходование,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК ХарактеристикаОприходование,
	|	ТТНВходящаяЕГАИСТовары.Серия КАК СерияОприходование,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ТТНВходящая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	ПеремещениеТоваровТовары.Серия КАК Серия,
	|	ПеремещениеТоваровТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ОснованиеТТНВходящей.ДокументОснование
	|			ИЗ
	|				ОснованиеТТНВходящей КАК ОснованиеТТНВходящей)";
	
	Запрос.УстановитьПараметр("ТТНВходящая", ТТНВходящая);
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ДанныеДляСоздания = Новый Структура;
	ДанныеДляСоздания.Вставить("ДанныеДокумента", ПакетРезультатов[1]);
	ДанныеДляСоздания.Вставить("ДанныеТабличнойЧастиТТНВходящей", ПакетРезультатов[2]);
	ДанныеДляСоздания.Вставить("ДанныеТабличнойЧастиПеремещенияТоваров", ПакетРезультатов[3]);
	
	Возврат ДанныеДляСоздания;
		
КонецФункции

Функция ИнициализироватьИтоговуюТаблицуТабличнойЧасти() Экспорт

	ИтоговаяТаблица = Новый ТаблицаЗначений;
	ИтоговаяТаблица.Колонки.Добавить("Номенклатура");
	ИтоговаяТаблица.Колонки.Добавить("Характеристика");
	ИтоговаяТаблица.Колонки.Добавить("Серия");
	ИтоговаяТаблица.Колонки.Добавить("НоменклатураОприходование");
	ИтоговаяТаблица.Колонки.Добавить("ХарактеристикаОприходование");
	ИтоговаяТаблица.Колонки.Добавить("СерияОприходование");
	ИтоговаяТаблица.Колонки.Добавить("Количество");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Процедура бг_СформироватьОбновитьОрдер(Распоряжение)
	ДанныеРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "Проведен, ПометкаУдаления");
	
	ДанныеОрдер = бг_ОрдерНаОтражениеПересортицы(Распоряжение);
	
	Если ДанныеРаспоряжения.Проведен Тогда
		Если ДанныеОрдер = Неопределено Тогда
			ОрдерОбъект = Документы.ОрдерНаОтражениеПересортицыТоваров.СоздатьДокумент();
			ОрдерОбъект.Дата = ТекущаяДатаСеанса();
		Иначе
			ЗаблокироватьДанныеДляРедактирования(ДанныеОрдер.Ссылка);
			ОрдерОбъект = ДанныеОрдер.Ссылка.ПолучитьОбъект();
			ОрдерОбъект.ПометкаУдаления = Ложь;
		КонецЕсли;
		
		ОрдерОбъект.Заполнить(Распоряжение);
		ОрдерОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли ДанныеОрдер <> Неопределено Тогда
		Если ДанныеОрдер.Проведен
			Или ДанныеРаспоряжения.ПометкаУдаления И Не ДанныеОрдер.ПометкаУдаления Тогда
			
			ОрдерСсылка = ДанныеОрдер.Ссылка;
			ЗаблокироватьДанныеДляРедактирования(ОрдерСсылка);
			
			ОрдерОбъект = ОрдерСсылка.ПолучитьОбъект();
			ОрдерОбъект.ПометкаУдаления = ДанныеРаспоряжения.ПометкаУдаления;
			ОрдерОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция бг_ОрдерНаОтражениеПересортицы(Распоряжение)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОрдерНаОтражениеПересортицыТоваров.Ссылка КАК Ссылка,
	|	ОрдерНаОтражениеПересортицыТоваров.ПометкаУдаления КАК ПометкаУдаления,
	|	ОрдерНаОтражениеПересортицыТоваров.Проведен КАК Проведен
	|ИЗ
	|	Документ.ОрдерНаОтражениеПересортицыТоваров КАК ОрдерНаОтражениеПересортицыТоваров
	|ГДЕ
	|	ОрдерНаОтражениеПересортицыТоваров.бг_Распоряжение = &Распоряжение";
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("Ссылка, ПометкаУдаления, Проведен",
			Выборка.Ссылка, Выборка.ПометкаУдаления, Выборка.Проведен);
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции

#КонецОбласти

#КонецЕсли