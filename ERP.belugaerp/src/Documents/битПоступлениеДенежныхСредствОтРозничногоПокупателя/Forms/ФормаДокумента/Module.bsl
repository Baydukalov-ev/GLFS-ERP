
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьТаблицуОплат(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = НСтр("ru='Не заполнено поле ""Организация"".'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияДиалога", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, "Установить отбор по Контрагенту?", РежимДиалогаВопрос.ДаНетОтмена, 10,, "Установка отбора");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалога(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОкончаниеВыбораКонтрагентов", ЭтаФорма);
				
		ДопПараметры = Новый Структура("МножественныйВыбор", Истина);
	
		ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ДопПараметры, 
															ЭтаФорма,,,,ОписаниеОповещения, 
															РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
	Иначе		
		ЗаполнитьОплаты();
	КонецЕсли;		
			
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораКонтрагентов(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОплаты(Результат);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицаОплаты

&НаКлиенте
Процедура ОплатыДокументОтгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	
	ДопПараметры = Новый Структура();
	УстановитьПараметрыФормыПодбораРТиУ(ДопПараметры);
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОплатыДокументОтгрузкиОкончаниеВыбора", ЭтаФорма);
	
	ОткрытьФорму("Документ.битПоступлениеДенежныхСредствОтРозничногоПокупателя.Форма.ФормаПодбораДокументаОтгрузки", 
				ДопПараметры, ЭтаФОрма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ОплатыДокументОтгрузкиОкончаниеВыбора(Результат, ДопПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;				
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.Оплаты.ТекущиеДанные.Контрагент) 
		Или Не ЗначениеЗаполнено(Элементы.Оплаты.ТекущиеДанные.Договор) Тогда
	    ЗаполнитьЗначенияСвойств(Элементы.Оплаты.ТекущиеДанные, Результат.КонтрагентДоговор);					
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(Элементы.Оплаты.ТекущиеДанные, Результат);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыФормыПодбораРТиУ(ДопПараметры)
	
	ДопПараметры.Вставить("РежимВыбора", Истина);
	
	ТекущиеДанные = Элементы.Оплаты.ТекущиеДанные;
		
	ЗначенияОтборов = Новый Структура;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
		 ЗначенияОтборов.Вставить("Контрагент", ТекущиеДанные.Контрагент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Договор) Тогда
		 ЗначенияОтборов.Вставить("Договор", ТекущиеДанные.Договор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		 ЗначенияОтборов.Вставить("Организация", Объект.Организация);
	КонецЕсли;
		
	Если ЗначенияОтборов.Количество() > 0 Тогда
		ДопПараметры.Вставить("ОтборСписка", ЗначенияОтборов);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуДокумента()

	Объект.СуммаПоДокументу = Объект.Оплаты.Итог("СуммаВРозницу");
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатыПриИзменении(Элемент)
	ПересчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОплаты(Контрагенты = Неопределено)

	Объект.Оплаты.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		МоментВремени = Объект.Ссылка.МоментВремени();
	Иначе
		МоментВремени = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыСРозничнымиКлиентамиОстатки.ДокументОтгрузки КАК ДокументОтгрузки,
	|	РасчетыСРозничнымиКлиентамиОстатки.ДокументОтгрузки.СуммаДокумента КАК Сумма,
	|	РасчетыСРозничнымиКлиентамиОстатки.Организация КАК Организация,
	|	РасчетыСРозничнымиКлиентамиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСРозничнымиКлиентамиОстатки.Договор КАК Договор,
	|	РасчетыСРозничнымиКлиентамиОстатки.СуммаВРозницуОстаток КАК СуммаВРозницу
	|ИЗ
	|	РегистрНакопления.бг_РасчетыСРозничнымиКлиентами.Остатки(&Период, Организация = &Организация) КАК РасчетыСРозничнымиКлиентамиОстатки";

	Если Контрагенты <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"Организация = &Организация",  
			"Организация = &Организация И Контрагент В (&Контрагенты)");
	Иначе
		Объект.Оплаты.Очистить();
	КонецЕсли;
	
	Граница = Новый Граница(МоментВремени, ВидГраницы.Исключая);
		
	Запрос.УстановитьПараметр("Контрагенты", Контрагенты);
	Запрос.УстановитьПараметр("Период", Граница);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Оплаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти