#Область ОбработчикиСобытий

&Перед("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Отказ Или ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	ДополнительныеСвойства.Вставить("бг_БылПроведенДоИзменения", Проведен);
	
	бг_УстановитьПризнакКонтроляСерий();
	бг_Номенклатура.ЗаполнитьПризнакиНаличияАлкогольнойПродукцииПоНоменклатуре(ЭтотОбъект, "ОтгружаемыеТовары");
	бг_ЗаполнитьТипОтгрузкиWMS();
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения
		Или ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись
			И ПометкаУдаления Тогда
		
		ОбновитьСостояниеПодчиненныхДокументов(Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Если бг_СталПроведенПослеИзменения() Тогда
		
		бг_ДополнитьДаннымиПоМаршрутномуЛистуОтгружаемогоИзERP();
		
		ДополнительныеСвойства.Вставить(
			"бг_Организация",
			Документы.РасходныйОрдерНаТовары.бг_ОрганизацияОрдера(Ссылка));

	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	бг_ОтразитьДополнительныеСведенияЗаказаКлиента(Отказ);
КонецПроцедуры

&После("ОбработкаУдаленияПроведения")
Процедура бг_ОбработкаУдаленияПроведения(Отказ)
	
	бг_ОтразитьДополнительныеСведенияЗаказаКлиента(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьСостояниеПодчиненныхДокументов(Отказ)

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("бг_НеИзменятьПодчиненные")
		И ДополнительныеСвойства.бг_НеИзменятьПодчиненные Тогда
		
		Возврат;
	КонецЕсли;
	
	ПодчиненныеДокументы = Документы.РасходныйОрдерНаТовары.ПодчиненныеДокументы(Ссылка);
	
	Если ПометкаУдаления Тогда
		
		бг_РаботаСДокументами.ПометитьНаУдалениеПодчиненныйДокумент(
			ПодчиненныеДокументы,
			"битОтражениеФактаПоРасходномуОрдеру");
			
	Иначе
			
		бг_РаботаСДокументами.ОтменитьПроведениеПодчиненногоДокумента(
			ПодчиненныеДокументы,
			"битОтражениеФактаПоРасходномуОрдеру");
	КонецЕсли;

КонецПроцедуры

Процедура бг_УстановитьПризнакКонтроляСерий()

	Если Не ЗначениеЗаполнено(Склад) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Склад, "бг_ТипВнешнейСкладскойСистемы, бг_КонтролироватьСерии");
	
	Если РеквизитыДокумента.бг_ТипВнешнейСкладскойСистемы = Перечисления.бг_ТипыВнешнихСкладскихСистем.Solvo
		Или РеквизитыДокумента.бг_КонтролироватьСерии Тогда
		бг_КонтролироватьСерии = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура бг_ЗаполнитьТипОтгрузкиWMS()
	
	бг_ТипОтгрузкиWMS = Неопределено;
	
	Распоряжения = ТоварыПоРаспоряжениям.Выгрузить(, "Распоряжение");
	Распоряжения.Свернуть("Распоряжение");
	
	Распоряжение = Распоряжения[0].Распоряжение;
	
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ДанныеЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Распоряжение,
			"бг_ИсточникЗаказа, бг_ЗаказРозничногоПокупателя, бг_Магазин");
			
		Если ДанныеЗаказа.бг_ИсточникЗаказа = Перечисления.бг_ИсточникиЗагрузкиЗаказовКлиентов.WINELAB_SAP_СONSOLIDATED Тогда
				
			бг_ТипОтгрузкиWMS = Перечисления.бг_ТипыОтгрузкиWMS.ИнтернетЗаказ;
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеЗаказа.бг_ЗаказРозничногоПокупателя)
			И ЗначениеЗаполнено(ДанныеЗаказа.бг_Магазин) Тогда
			
			бг_ТипОтгрузкиWMS = Перечисления.бг_ТипыОтгрузкиWMS.ПродажаЧерезМагазин;
			
		Иначе
			
			бг_ТипОтгрузкиWMS = Перечисления.бг_ТипыОтгрузкиWMS.ОптовыйЗаказ;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция бг_СталПроведенПослеИзменения()
	
	Возврат Не ДополнительныеСвойства.бг_БылПроведенДоИзменения И Проведен
			И ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение;

КонецФункции

Процедура бг_ДополнитьДаннымиПоМаршрутномуЛистуОтгружаемогоИзERP()
	
	ДанныеПоМаршрутномуЛисту= Документы.РасходныйОрдерНаТовары.бг_ДанныеМаршрутногоЛиста(Ссылка);
	
	ДополнительныеСвойства.Вставить(
		"бг_ВсеОрдераПоЗаказамМаршрутногоЛистаСозданы",
		ДанныеПоМаршрутномуЛисту.СозданыВсеОрдера);
	
	ДополнительныеСвойства.Вставить(
		"бг_СвязанныйМаршрутныйЛист",
		ДанныеПоМаршрутномуЛисту.МаршрутныйЛист);		
	
КонецПроцедуры

Процедура бг_ОтразитьДополнительныеСведенияЗаказаКлиента(Отказ)
	
	Если Отказ
		Или ДополнительныеСвойства.Свойство("бг_НеРегистрироватьПоказателиЗаказаКлиентаКОбновлению")
		И ДополнительныеСвойства.бг_НеРегистрироватьПоказателиЗаказаКлиентаКОбновлению = Истина Тогда
		Возврат;
	КонецЕсли;
	
	РаспоряженияРасходногоОрдера = бг_РаспоряженияРасходногоОрдера();
	
	Для Каждого Распоряжение Из РаспоряженияРасходногоОрдера Цикл
		
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.ДобавитьОбъект(
				Распоряжение,
				Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.ОтразитьДополнительныеСведенияЗаказаКлиента,,
				Новый ХранилищеЗначения(
					РегистрыСведений.бг_ДополнительныеСведенияПоЗаказамКлиентов.ПоказателиПоТипуДокумента(Ссылка)));
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры

Функция бг_РаспоряженияРасходногоОрдера()
	
	Возврат ОбщегоНазначения.ВыгрузитьКолонку(
		ТоварыПоРаспоряжениям,
		"Распоряжение",
		Истина);
		
КонецФункции

#КонецОбласти
