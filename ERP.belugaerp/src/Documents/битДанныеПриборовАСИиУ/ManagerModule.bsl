#Область ПрограммныйИнтерфейс

// Функция возвращает параметры загрузки данных
//
// Возвращаемое значение:
//    Структура - Параметры загрузки
//
Функция ПараметрыЗагрузкиДанныхАСИиУ() Экспорт
	
	ЭтоРабочаяБаза = бг_ОбщегоНазначенияСервер.ЭтоРабочаяБаза();
	Результат = Новый Структура;
	Результат.Вставить("ФорматФайлов", "xml");
	Результат.Вставить("КаталогФайлов", бг_КонстантыПовтИсп.ЗначениеКонстанты("КаталогФайловДанныхАСИиУ"));
	Результат.Вставить("ЗагружатьПятиминутныеДанные", бг_КонстантыПовтИсп.ЗначениеКонстанты("ЗагружатьПятиминутныеДанныеАСИиУ"));
	УдалениеФайловПослеЗагрузки = бг_КонстантыПовтИсп.ЗначениеКонстанты("УдалятьФайлыДанныхАСИиУПослеЗагрузки");
	Результат.Вставить("УдалятьФайлыПослеЗагрузки", ЭтоРабочаяБаза И УдалениеФайловПослеЗагрузки);
	Результат.Вставить("РазделительДанныеИмяФайла", "_");
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает данные документа связанного с именем файла
// Параметры:
//	ИмяФайла - Строка - Имя файла, например 0_16567_000_20200419_235959_0041_03.xml 
// Возвращаемое значение:
//    Структура - Данные документа, если уже был загружен, содержит
//		* Ссылка - ДокументСсылка.битДанныеПриборовАСИиУ - Ссылка на документ
//      * ХешФайлаДанных - Строка - Хеш файла данных, который был уже загружен
//
Функция ДанныеЗагруженногоДокумента(ИмяФайла) Экспорт
	Результат = Неопределено;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	битДанныеПриборовАСИиУ.Ссылка КАК Ссылка,
	               |	битДанныеПриборовАСИиУ.ХешСуммаФайлаДанных КАК ХешФайлаДанных
	               |ИЗ
	               |	Документ.битДанныеПриборовАСИиУ КАК битДанныеПриборовАСИиУ
	               |ГДЕ
	               |	битДанныеПриборовАСИиУ.ИмяФайла = &ИмяФайла";
	Запрос.УстановитьПараметр("ИмяФайла", ИмяФайла);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Новый Структура("Ссылка, ХешФайлаДанных");
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Заполняет документ данными файла
// Параметры:
//	Объект - ДокументОбъект.битДанныеПриборовАСИиУ - документ для заполнения
//
Процедура ЗаполнитьДокументПоДаннымФайла(Объект) Экспорт
	ФайлДанных = АктуальныйПрисоединенныйФайлСДанными(Объект.Ссылка);
	Если ФайлДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлДанных);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
		
	ТекстФайла = Новый ТекстовыйДокумент;
	Попытка
		ТекстФайла.Прочитать(ИмяВременногоФайла, ЧтениеXML.КодировкаИсточника);
	Исключение
		ТекстФайла.Прочитать(ИмяВременногоФайла);
	КонецПопытки;	
	
	ТекстСУчетомИсправленияВремени = ТекстФайла.ПолучитьТекст();
	ТекстСУчетомИсправленияВремени = СтрЗаменить(ТекстСУчетомИсправленияВремени, "Z</as", "</as");
	ТекстСУчетомИсправленияВремени = СтрЗаменить(ТекстСУчетомИсправленияВремени, "z</as", "</as");
		
	ЧтениеXML.УстановитьСтроку(ТекстСУчетомИсправленияВремени);
	УдалитьФайлы(ИмяВременногоФайла);	
	ПространствоИмен = "http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01";
	ИмяСвойства = "Documents";
	ТипОбъекта = ФабрикаXDTO.Пакеты.Получить(ПространствоИмен).КорневыеСвойства.Получить(ИмяСвойства).Тип;
		
	Попытка
		ОтветXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъекта);
	Исключение
		Возврат;
	КонецПопытки;
		
	Если ОтветXDTO.Document.Asiiu <> Неопределено Тогда
		ДанныеЗагрузки = ОтветXDTO.Document.Asiiu;
		Объект.СуточныеДанные = Истина;
	ИначеЕсли ОтветXDTO.Document.AsiiuTime <> Неопределено Тогда
		ДанныеЗагрузки = ОтветXDTO.Document.AsiiuTime;
		Объект.СуточныеДанные = Ложь;
	КонецЕсли;	
	СтруктураШапкиДокумента = СтруктураШапкиДокументаПоДаннымФайла(ОтветXDTO, ДанныеЗагрузки);
	ЗаполнитьЗначенияСвойств(Объект, СтруктураШапкиДокумента);
	Объект.ДополнительныеСвойства.Вставить("ЗагрузкаИзФайла");
	ДвиженияДокументаИзФайла(Объект, ОтветXDTO, ДанныеЗагрузки);
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ДвиженияДокументаИзФайла(Объект, ОтветXDTO, ДанныеЗагрузки)
	
	ДвиженияДокумента = Объект.Движения;
	ДвиженияДокумента.бг_ПоказанияПриборовАСИиУ.Очистить();
	
	Для каждого ОписаниеПозиции Из ДанныеЗагрузки.Data.Position Цикл
		
		НовоеДвижение = ДвиженияДокумента.бг_ПоказанияПриборовАСИиУ.Добавить();
		
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Объект, "ОрганизацияЕГАИС, ПриборУчета, СуточныеДанные");
		НовоеДвижение.АлкогольнаяПродукция = бг_ЗагрузкаДанныхИзФайловПовтИсп.АлкогольнаяПродукцияПоКоду(ОписаниеПозиции.Product.AlcCode);
		НовоеДвижение.Режим = бг_ЗагрузкаДанныхИзФайловПовтИсп.РежимРаботыПрибораУчетаПоКоду(СокрЛП(ОписаниеПозиции.Mode));
		НовоеДвижение.Температура = ОписаниеПозиции.Temperature;
		НовоеДвижение.Крепость = ОписаниеПозиции.PercentAlc;
		
		Если Объект.СуточныеДанные Тогда
			НовоеДвижение.Период = ОписаниеПозиции.StartDate;
			НовоеДвижение.ОкончаниеПериода = ОписаниеПозиции.EndDate;
			НовоеДвижение.КоличествоДалБСНачало = ОписаниеПозиции.VbsStart;
			НовоеДвижение.КоличествоДалБСОкончание = ОписаниеПозиции.VbsEnd;
			НовоеДвижение.КоличествоДалНачало = ОписаниеПозиции.AStart;
			НовоеДвижение.КоличествоДалОкончание = ОписаниеПозиции.AEnd;
			НовоеДвижение.КоличествоНачало = ОписаниеПозиции.BottleCountStart;
			НовоеДвижение.КоличествоОкончание = ОписаниеПозиции.BottleCountEnd;
		Иначе 
			НовоеДвижение.Период = ОписаниеПозиции.ControlDate;
			НовоеДвижение.КоличествоДалБСНачало = ОписаниеПозиции.VbsControl;
			НовоеДвижение.КоличествоДалНачало = ОписаниеПозиции.AControl;
			НовоеДвижение.КоличествоНачало = ОписаниеПозиции.BottleCountControl;
		КонецЕсли;
	КонецЦикла;
КонецФункции

Функция СтруктураШапкиДокументаПоДаннымФайла(ОтветXDTO, ДанныеЗагрузки)
	
	ДанныеОрганизацииЕГАИС = бг_ЗагрузкаДанныхИзФайловПовтИсп.ДанныеОрганизацииЕГАИСПоКоду(СокрЛП(ОтветXDTO.Owner.FSRAR_ID));
	Результат = Новый Структура;
	Результат.Вставить("ОрганизацияЕГАИС", ДанныеОрганизацииЕГАИС.ОрганизацияЕГАИС);
	Результат.Вставить("Организация", ДанныеОрганизацииЕГАИС.Организация);
	ДанныеПрибораУчета = Новый Структура;
	ДанныеПрибораУчета.Вставить("Код", СокрЛП(ДанныеЗагрузки.Sensor.SensorNumber));
	ДанныеПрибораУчета.Вставить("ИдентификаторРазмещения", СокрЛП(ДанныеЗагрузки.Sensor.PlaceId));
	ДанныеПрибораУчета.Вставить("Модель", СокрЛП(ДанныеЗагрузки.Sensor.SensorModel));
	ПриборУчета = бг_ЗагрузкаДанныхИзФайловПовтИсп.ПриборУчетаПоКоду(ДанныеПрибораУчета.Код);
	Если Не ЗначениеЗаполнено(ПриборУчета) Тогда
		ПриборУчета = Справочники.бг_ПриборыАСИиУ.НайтиСоздатьПриборУчета(ДанныеПрибораУчета);
	КонецЕсли;	
	Результат.Вставить("ПриборУчета", ПриборУчета);
	
	КодПроизводителя = "";
	ДанныеПроизводителя = ДанныеЗагрузки.Producer;
	Если ДанныеЗагрузки.Producer.Свойства().Получить("UL") <> Неопределено Тогда
		КодПроизводителя = ДанныеПроизводителя.UL.ClientRegId;
	ИначеЕсли ДанныеЗагрузки.Producer.Свойства().Получить("FL") <> Неопределено Тогда
		КодПроизводителя = ДанныеПроизводителя.FL.ClientRegId;
	ИначеЕсли ДанныеЗагрузки.Producer.Свойства().Получить("FO") <> Неопределено Тогда
		КодПроизводителя = ДанныеПроизводителя.FO.ClientRegId;
	ИначеЕсли ДанныеЗагрузки.Producer.Свойства().Получить("TS") <> Неопределено Тогда
		КодПроизводителя = ДанныеПроизводителя.TS.ClientRegId;
	КонецЕсли;	
	Результат.Вставить("Производитель", 
		бг_ЗагрузкаДанныхИзФайловПовтИсп.ДанныеОрганизацииЕГАИСПоКоду(КодПроизводителя).ОрганизацияЕГАИС);

	Возврат Результат;
	
КонецФункции	

Функция АктуальныйПрисоединенныйФайлСДанными(Документ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПрисоединенныеФайлы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.битДанныеПриборовАСИиУПрисоединенныеФайлы КАК ПрисоединенныеФайлы
	               |ГДЕ
	               |	ПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПрисоединенныеФайлы.ДатаСоздания УБЫВ";
	Запрос.УстановитьПараметр("ВладелецФайла", Документ);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

#КонецОбласти 