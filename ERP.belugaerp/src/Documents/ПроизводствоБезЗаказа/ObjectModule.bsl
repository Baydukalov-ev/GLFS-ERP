#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И Не Отказ Тогда
		бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ);
	КонецЕсли;
КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	бг_АкцизПоПриобретеннымЦенностямМатериалы.Очистить();
	бг_АкцизПоПриобретеннымЦенностямПродукция.Очистить();
КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	бг_ПроверитьСтатьюКалькуляции(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область АкцизыПоПриобретеннымЦенностям

Процедура бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПроизводствоБезЗаказаЛокализация.бг_ТребуетсяЗаполнениеАкцизовПоПриобретеннымЦенностям(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СтатусыСостоянияСписываемогоСырья = ПроизводствоБезЗаказаЛокализация.бг_СтатусыСостоянияСписываемогоСырья();
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаТаблицаМатериалы());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаПродукция());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиАкцизовПоПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиВыпущеннойПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаРасчетСписанияАкцизовПоПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаСписаниеВыпускПродукции());
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Если ДополнительныеСвойства.Свойство("бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям")
		И ДополнительныеСвойства.бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям = Истина Тогда
		ДатаОстатков = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	Иначе
		ДатаОстатков = '00010101';
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОстатков",     ДатаОстатков);
	Запрос.УстановитьПараметр("Товары",           МатериалыИРаботы.Выгрузить(, "НомерСтроки, Номенклатура, Серия, Количество"));
	Запрос.УстановитьПараметр("ВыходныеИзделия",  ВыходныеИзделия.Выгрузить(, "Номенклатура, Серия, Количество"));
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("СтатусыАкциза",    СтатусыСостоянияСписываемогоСырья.СтатусыАкциза);
	Запрос.УстановитьПараметр("СостоянияСырья",   СтатусыСостоянияСписываемогоСырья.СостоянияСырья);
	Запрос.УстановитьПараметр("ТипМестаХранения", Перечисления.бг_ТипыМестХраненияПодакцизнойПродукции.Подразделение);
	
	ТочностьУчетаМатериалов = РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностям.ТочностьУчетаПодакцизныхМатериалов();
	Запрос.УстановитьПараметр("ТочностьУчета", ТочностьУчетаМатериалов);
	
	Результат = Запрос.ВыполнитьПакет();
	бг_АкцизПоПриобретеннымЦенностямМатериалы.Загрузить(Результат[Результат.ВГраница() - 1].Выгрузить());
	бг_АкцизПоПриобретеннымЦенностямПродукция.Загрузить(Результат[Результат.ВГраница()].Выгрузить());
КонецПроцедуры

#КонецОбласти

Процедура бг_ПроверитьСтатьюКалькуляции(Отказ)
	
	бг_Номенклатура.ПроверитьСтатьюКалькуляцииВТЧ(ЭтотОбъект, "МатериалыИРаботы", Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
