#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьКомандуЗаполненияПоВыпускуЗаДень();
	бг_ДобавитьКомандуЗаполненияОстатковАлкогольнойПродукции();
	бг_ДобавитьКомандуФормированияСерийСпиртосодержащейСмеси();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_ЗаполнитьПоВыпускуЗаДень(Команда)
	ОповещениеОтвет = Новый ОписаниеОповещения("бг_ЗаполнитьПоВыпускуЗаДеньЗавершение", ЭтотОбъект);
	Если Не Объект.ВыходныеИзделия.Количество() = 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'"); 
		ПоказатьВопрос(ОповещениеОтвет, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОтвет, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьПоВыпускуЗаДеньЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		бг_ЗаполнитьПоВыпускуЗаДеньНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьОстаткиАлкогольнойПродукции(Команда)
	ПараметрыФормы = Новый Структура("Период", Объект.Дата);
	
	ОткрытьФорму("Документ.ПроизводствоБезЗаказа.Форма.бг_ПодборОстатковАлкогольнойПродукции",
			ПараметрыФормы,
			ЭтотОбъект, , , ,
			Новый ОписаниеОповещения("бг_ЗаполнитьОстаткиАлкогольнойПродукцииЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьОстаткиАлкогольнойПродукцииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено И ЭтоАдресВременногоХранилища(Результат) Тогда
		бг_ЗаполнитьОстаткиАлкогольнойПродукцииНаСервере(Результат);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_СформироватьСерииСпиртосодержащейСмеси(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Перед формированием серий спиртосодержащей смеси необходимо записать документ'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	бг_СформироватьСерииСпиртосодержащейСмесиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалыИРаботы

&НаКлиенте
&После("МатериалыИРаботыНоменклатураПриИзменении")
Процедура бг_МатериалыИРаботыНоменклатураПриИзменении(Элемент)
	
	бг_УстановитьСтатьюКалькуляцииИзНоменклатуры("МатериалыИРаботы");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДействияПриИзмененииСтрокТаблиц

&НаСервере
&После("ПослеИзмененияСтрокТЧПрограммноНаСервере")
Процедура бг_ПослеИзмененияСтрокТЧПрограммноНаСервере(ИмяТЧ, МассивИдентификаторовСтрок, СтруктураРанееВыполненныхДействий)
	
	бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура бг_ЗаполнитьПоВыпускуЗаДеньНаСервере()
	Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.УправленческаяОрганизация");
	КоличествоВыпускаПоУмолчанию = 2;
	СкладИПТЛ = бг_КонстантыПовтИсп.ЗначениеКонстанты("СкладИПТЛ");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад) КАК НаправлениеВыпуска,
	|	&Склад КАК Получатель,
	|	1 КАК НомерГруппыЗатрат,
	|	1 КАК ДоляСтоимости,
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ВыпускПродукцииОбороты.Распоряжение КАК Документ.ЭтапПроизводства2_2).Спецификация КАК Спецификация,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ОбъемИспользовать
	|				И НЕ СправочникНоменклатура.ОбъемЧислитель = 0
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(1 / СправочникНоменклатура.ОбъемЧислитель * СправочникНоменклатура.ОбъемЗнаменатель КАК ЧИСЛО(5, 2))) < &КоличествоВыпускаПоУмолчанию
	|						ТОГДА &КоличествоВыпускаПоУмолчанию
	|					ИНАЧЕ ВЫРАЗИТЬ(1 / СправочникНоменклатура.ОбъемЧислитель * СправочникНоменклатура.ОбъемЗнаменатель КАК ЧИСЛО(5, 2))
	|				КОНЕЦ
	|		ИНАЧЕ &КоличествоВыпускаПоУмолчанию
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ОбъемИспользовать
	|				И НЕ СправочникНоменклатура.ОбъемЧислитель = 0
	|			ТОГДА ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(1 / СправочникНоменклатура.ОбъемЧислитель * СправочникНоменклатура.ОбъемЗнаменатель КАК ЧИСЛО(5, 2))) < &КоличествоВыпускаПоУмолчанию
	|						ТОГДА &КоличествоВыпускаПоУмолчанию
	|					ИНАЧЕ ВЫРАЗИТЬ(1 / СправочникНоменклатура.ОбъемЧислитель * СправочникНоменклатура.ОбъемЗнаменатель КАК ЧИСЛО(5, 2))
	|				КОНЕЦ
	|		ИНАЧЕ &КоличествоВыпускаПоУмолчанию
	|	КОНЕЦ КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), КОНЕЦПЕРИОДА(&Период, ДЕНЬ), Период, ) КАК ВыпускПродукцииОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ПО ((ВЫРАЗИТЬ(ВыпускПродукцииОбороты.Распоряжение КАК Документ.ЭтапПроизводства2_2)) = ЭтапПроизводства2_2.Ссылка)
	|			И (ЭтапПроизводства2_2.Подразделение = &Подразделение)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка";
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", СкладИПТЛ);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("КоличествоВыпускаПоУмолчанию", КоличествоВыпускаПоУмолчанию);
	ТаблицаПродукции = Запрос.Выполнить().Выгрузить();
	Объект.ВыходныеИзделия.Загрузить(ТаблицаПродукции);
	
	ЗаполнитьПараметрыУказанияСерий();
	СтруктураДействий = Новый Структура;
	КэшированныеЗначения = Неопределено;
	ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, СкладИПТЛ, ПараметрыУказанияСерий["ВыходныеИзделия"]);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ВыходныеИзделия, СтруктураДействий, КэшированныеЗначения);
	ПослеИзмененияСтрокТЧПрограммноНаСервере("ВыходныеИзделия", , СтруктураДействий);
	УстановитьВидимостьЭлементовСерий();
	
	ЗаполнитьСлужебныеРеквизитыФормы();
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияПоВыпускуЗаДень()
	ИмяКоманды       = "бг_ЗаполнитьПоВыпускуЗаДень";
	ЗаголовокКоманды = НСтр("ru = 'Готовой продукцией';
								|en = 'Готовой продукцией'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ВыходныеИзделияГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ВыходныеИзделияГруппаРазделитель, 
								ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияОстатковАлкогольнойПродукции()
	ИмяКоманды       = "бг_ЗаполнитьОстаткиАлкогольнойПродукции";
	ЗаголовокКоманды = НСтр("ru = 'Подобрать остатки алкогольной продукции'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.МатериалыИРаботыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.МатериалыИРаботыДополнитьПоСпецификации,
								ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуФормированияСерийСпиртосодержащейСмеси()
	ИмяКоманды       = "бг_СформироватьСерииСпиртосодержащейСмеси";
	ЗаголовокКоманды = НСтр("ru = 'Сформировать серии спиртосодержащей смеси'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ВыходныеИзделияГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьОстаткиАлкогольнойПродукцииНаСервере(АдресВоВременномХранилище)
	бг_Материалы = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Если бг_Материалы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КэшированныеЗначения = Неопределено;
	
	НомерГруппыЗатрат = бг_НомерГруппыЗатратВыпускПродукции();
	
	Для Каждого СтрокаМатериал Из бг_Материалы Цикл
		НоваяСтрокаМатериал = Объект.МатериалыИРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаМатериал, СтрокаМатериал);
		НоваяСтрокаМатериал.КоличествоУпаковок = НоваяСтрокаМатериал.Количество;
		НоваяСтрокаМатериал.Подразделение = Объект.Подразделение;
		НоваяСтрокаМатериал.НомерГруппыЗатрат = НомерГруппыЗатрат;
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры("МатериалыИРаботы", НоваяСтрокаМатериал, ЭтотОбъект, СтруктураДействий,, Истина);
		ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, СтрокаМатериал.Склад, ПараметрыУказанияСерий.МатериалыИРаботы);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаМатериал, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция бг_НомерГруппыЗатратВыпускПродукции()
	ВыходныеИзделия = Объект.ВыходныеИзделия.Выгрузить(, "НомерГруппыЗатрат");
	ВыходныеИзделия.Свернуть("НомерГруппыЗатрат");
	
	Если ВыходныеИзделия.Количество() = 1 Тогда
		Возврат ВыходныеИзделия[0].НомерГруппыЗатрат;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура бг_СформироватьСерииСпиртосодержащейСмесиНаСервере()
	КэшированныеЗначения = Неопределено;
	
	Для Каждого СтрокаИзделие Из Объект.ВыходныеИзделия Цикл
		СтрокаИзделие.Серия = бг_Номенклатура.СерияВыпущеннойПродукции(
																Объект.Ссылка,
																СтрокаИзделие.СтатусУказанияСерий,
																СтрокаИзделие.Номенклатура,
																Объект.Дата,
																Неопределено);
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, СтрокаИзделие.Получатель, ПараметрыУказанияСерий.ВыходныеИзделия);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаИзделие, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура бг_УстановитьСтатьюКалькуляцииИзНоменклатуры(ИмяТЧ)
	
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		МассивИдентификаторовСтрок = Новый Массив;
		МассивИдентификаторовСтрок.Добавить(ТекущиеДанные.ПолучитьИдентификатор());
		бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок = Неопределено)
	
	Если ИмяТЧ = "МатериалыИРаботы" Тогда
		бг_Номенклатура.ЗаполнитьСтатьюКалькуляцииВТЧИзНоменклатуры(Объект, ИмяТЧ, МассивИдентификаторовСтрок);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
