#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("бг_СкидкиНаценки");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос        = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаСуммовыеСкидиГлобальные(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСуммовыеСкидиЛокальные(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
		
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата");
	Запрос.УстановитьПараметр("Период", СтруктураРеквизитов.Дата);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСуммовыеСкидиГлобальные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "бг_СуммовыеСкидки";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УстановкаСуммовыхСкидокСкидки.Ссылка.Дата КАК Период,
	|	УстановкаСуммовыхСкидокСкидки.Контрагент КАК Контрагент,
	|	УстановкаСуммовыхСкидокСкидки.ДокументРезерва КАК ДокументРезерва,
	|	СУММА(УстановкаСуммовыхСкидокСкидки.СуммаСкидки) КАК СуммаСкидки,
	|	СУММА(УстановкаСуммовыхСкидокСкидки.СуммаРезерва) КАК СуммаРезерва
	|ИЗ
	|	Документ.битУстановкаСуммовыхСкидок.СкидкиГлобальные КАК УстановкаСуммовыхСкидокСкидки
	|ГДЕ
	|	УстановкаСуммовыхСкидокСкидки.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаСуммовыхСкидокСкидки.Ссылка.Дата,
	|	УстановкаСуммовыхСкидокСкидки.Контрагент,
	|	УстановкаСуммовыхСкидокСкидки.ДокументРезерва";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаСуммовыеСкидиЛокальные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "бг_СуммовыеСкидкиЛокальные";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СкидкиЛокальные.Ссылка.Дата КАК Период,
	|	СкидкиЛокальные.Организация КАК Организация,
	|	СкидкиЛокальные.Контрагент КАК Контрагент,
	|	СкидкиЛокальные.ПунктНазначения КАК ПунктНазначения,
	|	СкидкиЛокальные.СкидкаНаценка КАК СкидкаНаценка,
	|	СУММА(СкидкиЛокальные.Начислено) КАК Начислено
	|ИЗ
	|	Документ.битУстановкаСуммовыхСкидок.СкидкиЛокальные КАК СкидкиЛокальные
	|ГДЕ
	|	СкидкиЛокальные.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СкидкиЛокальные.Ссылка.Дата,
	|	СкидкиЛокальные.Организация,
	|	СкидкиЛокальные.Контрагент,
	|	СкидкиЛокальные.ПунктНазначения,
	|	СкидкиЛокальные.СкидкаНаценка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#КонецЕсли
