
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		УстановитьОрганизациюЕГАИС();
		ПриПолученииДанныхНаСервере(РеквизитФормыВЗначение("Объект"));
	КонецЕсли;
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Если Параметр.Свойство("ОбъектИзменен")
			И Параметр.ОбъектИзменен Тогда
			Прочитать();
		Иначе
			ОбновитьСтатусЕГАИС();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВФормахДокументов)) Тогда
		
		Прочитать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)   
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом  

	ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ОтчетОПроизводствеиЕГАИС", ПараметрыЗаписи, Объект.Ссылка);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусЕГАИСПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
			ЭтотОбъект,
			Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = '""Отчет о производстве ЕГАИС"" не проведен. Провести?';
							|en = '""Отчет о производстве ЕГАИС"" не проведен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение",
			ЭтотОбъект,
			Новый Структура("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки));
		ТекстВопроса = НСтр("ru = '""Отчет о производстве ЕГАИС"" был изменен. Провести?';
							|en = '""Отчет о производстве ЕГАИС"" был изменен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОрганизациюЕГАИС()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыАлкогольнаяПродукцияПриИзменении(Элемент)
	ТоварыАлкогольнаяПродукцияПриИзмененииНаСервере()
КонецПроцедуры

&НаСервере
Процедура ТоварыАлкогольнаяПродукцияПриИзмененииНаСервере()
	
	ЗаполнитьКрепостьДляСтрокиТовара(Элементы.Товары.ТекущаяСтрока); 
	ОбновитьВторичныеДанныеТовараНаСервере(Элементы.Товары.ТекущаяСтрока);
	РассчитатьОбъемДал();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	РассчитатьОбъемДал();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.ТолькоПросмотр Или ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Элементы, "СтраницаТовары", "ТолькоПросмотр") Тогда
		ДлинаПрефиксаВИмениКолонки = 6;
		СсылкаНаЗначение = Объект.Товары[ВыбраннаяСтрока][Прав(Поле.Имя, СтрДлина(Поле.Имя) - ДлинаПрефиксаВИмениКолонки)];
		Если ЗначениеЗаполнено(СсылкаНаЗначение) Тогда
			ПоказатьЗначение(, СсылкаНаЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	РассчитатьОбъемДал();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСырьё

&НаКлиенте
Процедура СырьёСерияПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырьё.ТекущиеДанные;
	Если Не ТекущаяСтрока = Неопределено Тогда           
		СтруктураЗаполнения = ДанныеСерии(ТекущаяСтрока.Серия);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураЗаполнения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СырьёКоличествоПриИзменении(Элемент)
	
	РассчитатьОбъемДалСырьё();

КонецПроцедуры

&НаКлиенте
Процедура СырьёВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.ТолькоПросмотр Или ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Элементы, "СтраницаСырьё", "ТолькоПросмотр") Тогда
		ДлинаПрефиксаВИмениКолонки = 6;
		СсылкаНаЗначение = Объект.Товары[ВыбраннаяСтрока][Прав(Поле.Имя, СтрДлина(Поле.Имя) - ДлинаПрефиксаВИмениКолонки)];
		Если ЗначениеЗаполнено(СсылкаНаЗначение) Тогда
			ПоказатьЗначение(, СсылкаНаЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СырьёПослеУдаления(Элемент)
	
	РассчитатьОбъемДалСырьё();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапроситьСправки1(Команда)
	
	АдресВоВременномХранилище = ЗапросыСправок1ВоВременномХранилище();
	Если АдресВоВременномХранилище = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапросаСправок = Новый Структура;
	ПараметрыЗапросаСправок.Вставить("Операция",             ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки1"));
	ПараметрыЗапросаСправок.Вставить("АдресМассиваЗапросов", АдресВоВременномХранилище);
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормированиеИсходящегоЗапросаЕГАИС",
		ПараметрыЗапросаСправок,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ЗарегистрироватьДокументКВыгрузке();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьСправки2(Команда)
	
	АдресВоВременномХранилище = ЗапросыСправок2ВоВременномХранилище();
	Если АдресВоВременномХранилище = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапросаСправок = Новый Структура;
	ПараметрыЗапросаСправок.Вставить("Операция",             ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2"));
	ПараметрыЗапросаСправок.Вставить("АдресМассиваЗапросов", АдресВоВременномХранилище);
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормированиеИсходящегоЗапросаЕГАИС",
		ПараметрыЗапросаСправок,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ЗарегистрироватьДокументКВыгрузке();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ДанныеСерии(Серия)
	Результат = Новый Структура("АлкогольнаяПродукция, Справка2, Номенклатура, Производитель, Крепость");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Справка2ЕГАИС КАК Справка2,
	|	ЕСТЬNULL(СерииНоменклатуры.Справка2ЕГАИС.АлкогольнаяПродукция, НЕОПРЕДЕЛЕНО) КАК АлкогольнаяПродукция,
	|	СерииНоменклатуры.бг_Номенклатура КАК Номенклатура,
	|	СерииНоменклатуры.ПроизводительЕГАИС КАК Производитель,
	|	СерииНоменклатуры.бг_ФактическаяКрепость КАК Крепость
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Серия);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура УстановитьОрганизациюЕГАИС()
	Объект.ОрганизацияЕГАИС = Документы.битОтчетОПроизводствеЕГАИС.ОрганизацияЕГАИС(Объект.Организация)
КонецПроцедуры	

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	ОбновитьВторичныеДанныеТоваровНаСервере(ТекущийОбъект);
	РассчитатьОбъемДалСырьё();
	ОбновитьСтатусЕГАИС();	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеТовараНаСервере(Идентификатор)
	
	Товар = Объект.Товары.НайтиПоИдентификатору(Идентификатор);

	КодЕГАИС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Товар.АлкогольнаяПродукция, "Код"); 
	ОбновитьВторичныеДанныеТовара(Товар, КодЕГАИС)
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеТоваровНаСервере(ТекущийОбъект)
	
	КодЕГАИСПродукции = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
			ТекущийОбъект.Товары.ВыгрузитьКолонку("АлкогольнаяПродукция"), 
			"Код"); 
	
	Для Каждого Товар Из Объект.Товары Цикл
		ОбновитьВторичныеДанныеТовара(Товар, КодЕГАИСПродукции[Товар.АлкогольнаяПродукция]);
	КонецЦикла;
	
	РассчитатьОбъемДал();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКрепостьДляСтрокиТовара(Идентификатор)
	
	Товар = Объект.Товары.НайтиПоИдентификатору(Идентификатор);
	Крепость = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Товар.АлкогольнаяПродукция, "Крепость");
	Товар.Крепость = Крепость;
	Товар.КрепостьМин = Крепость;
	Товар.КрепостьМакс = Крепость;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВторичныеДанныеТовара(Товар, Знач КодЕГАИС)
	Товар.КодЕГАИС = ?(ЗначениеЗаполнено(КодЕГАИС), КодЕГАИС, "");
КонецПроцедуры

&НаСервере
Процедура РассчитатьОбъемДал()
	
	ОбъемДал = 0;
	
	СвойстваАлкогольнойПродукции = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
	Объект.Товары.Выгрузить(, "АлкогольнаяПродукция").ВыгрузитьКолонку("АлкогольнаяПродукция"),
	"ТипПродукции, Объем");

	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТовары.АлкогольнаяПродукция) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипПродукцииСтроки = СвойстваАлкогольнойПродукции[СтрокаТовары.АлкогольнаяПродукция].ТипПродукции;
		ОбъемПродукцииСтроки = СвойстваАлкогольнойПродукции[СтрокаТовары.АлкогольнаяПродукция].Объем;
		
		Если ТипПродукцииСтроки = Перечисления.ТипыПродукцииЕГАИС.Неупакованная 
			Или (ТипПродукцииСтроки = Перечисления.ТипыПродукцииЕГАИС.ПустаяСсылка() И ОбъемПродукцииСтроки = 0) Тогда
				ОбъемДал = ОбъемДал + СтрокаТовары.Количество;
			Иначе
				КоэффициентДал = 10;
				ОбъемДал = ОбъемДал + СтрокаТовары.Количество * ОбъемПродукцииСтроки / КоэффициентДал;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьОбъемДалСырьё()
	
	ОбъемДалС = 0;
	
	СвойстваАлкогольнойПродукции = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
	Объект.Сырьё.Выгрузить(, "АлкогольнаяПродукция").ВыгрузитьКолонку("АлкогольнаяПродукция"),
	"ТипПродукции, Объем");

	Для Каждого СтрокаСырьё Из Объект.Сырьё Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСырьё.АлкогольнаяПродукция) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипПродукцииСтроки = СвойстваАлкогольнойПродукции[СтрокаСырьё.АлкогольнаяПродукция].ТипПродукции;
		ОбъемПродукцииСтроки = СвойстваАлкогольнойПродукции[СтрокаСырьё.АлкогольнаяПродукция].Объем;
		
		Если ТипПродукцииСтроки = Перечисления.ТипыПродукцииЕГАИС.Неупакованная 
			ИЛИ (ТипПродукцииСтроки = Перечисления.ТипыПродукцииЕГАИС.ПустаяСсылка() И ОбъемПродукцииСтроки = 0) Тогда
				ОбъемДалС = ОбъемДалС + СтрокаСырьё.Количество;
		Иначе
				КоэффициентДал = 10;
				ОбъемДалС = ОбъемДалС + СтрокаСырьё.Количество * ОбъемПродукцииСтроки / КоэффициентДал;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	
	СтатусЕГАИС        = МенеджерОбъекта.СтатусПоУмолчанию();
	ДальнейшееДействие = МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие1 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие1
		|	КОНЕЦ КАК ДальнейшееДействие1,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие2 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие2
		|	КОНЕЦ КАК ДальнейшееДействие2,
		|	ВЫБОР
		|		КОГДА Статусы.ДальнейшееДействие3 В (&МассивДальнейшиеДействия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется)
		|		ИНАЧЕ Статусы.ДальнейшееДействие3
		|	КОНЕЦ КАК ДальнейшееДействие3
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК Статусы
		|ГДЕ
		|	Статусы.Документ = &Документ");
		
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("МассивДальнейшиеДействия", ИнтеграцияЕГАИС.НеотображаемыеВДокументахДальнейшиеДействия());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтатусЕГАИС = Выборка.Статус;
			
			ДальнейшееДействие = Новый Массив;
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие1);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие2);
			ДальнейшееДействие.Добавить(Выборка.ДальнейшееДействие3);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив;
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию);
	ДопустимыеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(
		СтатусЕГАИС,
		ДальнейшееДействие,
		ДопустимыеДействия);
	
	РедактированиеФормыНеДоступно = СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.КПередаче
										И СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачи
										И СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Отменен;
	
	Элементы.СтраницаОсновное.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	Элементы.СтраницаТовары.ТолькоПросмотр   = РедактированиеФормыНеДоступно;
	
	Элементы.ДокументОснование.ТолькоПросмотр = СтатусЕГАИС <> Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Отменен
														И Не Объект.ПометкаУдаления;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПередатьДанные" Тогда
		
		ИнтеграцияЕГАИСКлиент.ПодготовитьКПередаче(
			Объект.Ссылка,
			ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные"),
			ЭтотОбъект.УникальныйИдентификатор);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПричинуОшибки" Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Документ", Объект.Ссылка);
		ОткрытьФорму("Справочник.ЕГАИСПрисоединенныеФайлы.Форма.ФормаОшибки", ПараметрыОткрытияФормы, ЭтотОбъект);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОперацию" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПоследнююОперацию(Объект.Ссылка);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьПередачу" Тогда
		
		ИнтеграцияЕГАИСКлиент.ОтменитьПередачу(Объект.Ссылка);
		
	КонецЕсли;
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		ОбработатьНажатиеНавигационнойСсылки(ДополнительныеПараметры.НавигационнаяСсылкаФорматированнойСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапросыСправок1ВоВременномХранилище()
	
	МассивСправок    = Новый Массив;
	МассивПараметровЗапроса = Новый Массив;
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.Справка1) Тогда
			Справка = СтрокаТовары.Справка1;
			
			Если МассивСправок.Найти(Справка) = Неопределено Тогда
				МассивСправок.Добавить(Справка);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	НомераСправок = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСправок, "РегистрационныйНомер");
	
	Для каждого Справка Из МассивСправок Цикл
		
		ЗначенияПараметров = Новый Структура("Операция, ИмяПараметра, ЗначениеПараметра, ПредставлениеПараметра");
		ЗначенияПараметров.Вставить("Операция",               ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки1"));
		ЗначенияПараметров.Вставить("ИмяПараметра",           "НомерСправки");
		ЗначенияПараметров.Вставить("ЗначениеПараметра",      НомераСправок[Справка]);
		ЗначенияПараметров.Вставить("ПредставлениеПараметра", НСтр("ru = 'Номер справки';
																   |en = 'Номер справки'"));
		
		МассивПараметровЗапроса.Добавить(ЗначенияПараметров);
		
	КонецЦикла;
	
	Если МассивПараметровЗапроса.Количество() > 0 Тогда
		Возврат ПоместитьВоВременноеХранилище(МассивПараметровЗапроса, УникальныйИдентификатор);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗапросыСправок2ВоВременномХранилище()
	
	МассивСправок    = Новый Массив;
	МассивПараметровЗапроса = Новый Массив;
	
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.Справка2) Тогда
			Справка = СтрокаТовары.Справка2;
			
			Если МассивСправок.Найти(Справка) = Неопределено Тогда
				МассивСправок.Добавить(Справка);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	НомераСправок = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСправок, "РегистрационныйНомер");
	
	Для каждого Справка Из МассивСправок Цикл
		
		ЗначенияПараметров = Новый Структура("Операция, ИмяПараметра, ЗначениеПараметра, ПредставлениеПараметра");
		ЗначенияПараметров.Вставить("Операция",               ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2"));
		ЗначенияПараметров.Вставить("ИмяПараметра",           "НомерСправки");
		ЗначенияПараметров.Вставить("ЗначениеПараметра",      НомераСправок[Справка]);
		ЗначенияПараметров.Вставить("ПредставлениеПараметра", НСтр("ru = 'Номер справки';
																	|en = 'Номер справки'"));
		
		МассивПараметровЗапроса.Добавить(ЗначенияПараметров);
		
	КонецЦикла;
	
	Если МассивПараметровЗапроса.Количество() > 0 Тогда
		Возврат ПоместитьВоВременноеХранилище(МассивПараметровЗапроса, УникальныйИдентификатор);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗарегистрироватьДокументКВыгрузке()

	Перем адаптер_ПодпискиНаСобытияВызовСервера; // Используем модуль из расширения БИТMDT, обходим ошибки синтакс-проверки.
	адаптер_ПодпискиНаСобытияВызовСервера = ОбщегоНазначения.ОбщийМодуль("адаптер_ПодпискиНаСобытияВызовСервера");
	
	адаптер_ПодпискиНаСобытияВызовСервера.ЗарегистрироватьИсходящееСообщение(Объект.Ссылка, Неопределено);

КонецПроцедуры

#КонецОбласти

#КонецОбласти
