#Область ПрограммныйИнтерфейс

//	Процедура бг_СоздатьРегистрациюЦенНоменклатурыПоставщика создает документ 
//	Регистрация цен номенклатуры поставщика, для товаров не бг_ОбменB2B и по которым нет действующей цены, 
//	но есть для товарной категории. 
//
Процедура бг_СоздатьРегистрациюЦенНоменклатурыПоставщика() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецДня(ТекущаяДатаСеанса()), ВидГраницы.Включая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Товары,
	|	Номенклатура.ТоварнаяКатегория.бг_СкюМТ КАК SKUMT
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.бг_ОбменB2B
	|	И Номенклатура.ТоварнаяКатегория.бг_СкюМТ В
	|			(ВЫБРАТЬ
	|				бг_ЕК_СКЮ_СкюМТ.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.бг_ЕК_СКЮ_СкюМТ КАК бг_ЕК_СКЮ_СкюМТ
	|			ГДЕ
	|				НЕ бг_ЕК_СКЮ_СкюМТ.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Товары КАК Номенклатура,
	|	бг_ЕК_СКЮ_СкюМТ.Ссылка КАК SKUMT
	|ПОМЕСТИТЬ СпрНоменклатура
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бг_ЕК_СКЮ_СкюМТ КАК бг_ЕК_СКЮ_СкюМТ
	|		ПО ВТ_Товары.SKUMT = бг_ЕК_СКЮ_СкюМТ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика КАК ВидЦеныПоставщика
	|ПОМЕСТИТЬ ВТ_ВидыЦен
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних КАК ЦеныНоменклатурыПоставщиков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
	|	ЦеныНоменклатурыПоставщиков.Партнер КАК Партнер,
	|	СпрНоменклатура.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыПоставщиков.Номенклатура) КАК Номенклатура_РС,
	|	МАКСИМУМ(ЕСТЬNULL(ЦеныНоменклатурыПоставщиков.Цена, 0)) КАК Цена,
	|	ЦеныНоменклатурыПоставщиков.Характеристика КАК Характеристика,
	|	ЦеныНоменклатурыПоставщиков.Упаковка КАК Упаковка,
	|	ЦеныНоменклатурыПоставщиков.Валюта КАК Валюта,
	|	СУММА(ВЫБОР
	|			КОГДА СпрНоменклатура.Номенклатура = ЦеныНоменклатурыПоставщиков.Номенклатура
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьЦенаПоВидуЦенСкюМТ,
	|	СпрНоменклатура.SKUMT КАК SKUMT
	|ПОМЕСТИТЬ ВТ_НоменклатураБезЦен
	|ИЗ
	|	СпрНоменклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(&Период, ) КАК ЦеныНоменклатурыПоставщиков
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыЦен КАК ВТ_ВидыЦен
	|			ПО (ВТ_ВидыЦен.ВидЦеныПоставщика = ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика)
	|		ПО (СпрНоменклатура.SKUMT = ЦеныНоменклатурыПоставщиков.Номенклатура.ТоварнаяКатегория.бг_СкюМТ)
	|			И (НЕ ЦеныНоменклатурыПоставщиков.Номенклатура.бг_ОбменB2B)
	|			И (ЦеныНоменклатурыПоставщиков.Цена > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика,
	|	СпрНоменклатура.Номенклатура,
	|	СпрНоменклатура.SKUMT,
	|	ЦеныНоменклатурыПоставщиков.Партнер,
	|	ЦеныНоменклатурыПоставщиков.Характеристика,
	|	ЦеныНоменклатурыПоставщиков.Упаковка,
	|	ЦеныНоменклатурыПоставщиков.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураБезЦен.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
	|	ВТ_НоменклатураБезЦен.Партнер КАК Партнер,
	|	ВТ_НоменклатураБезЦен.Номенклатура КАК Номенклатура,
	|	ВТ_НоменклатураБезЦен.Характеристика КАК Характеристика,
	|	ВТ_НоменклатураБезЦен.Упаковка КАК Упаковка,
	|	ВТ_НоменклатураБезЦен.Валюта КАК Валюта,
	|	ВТ_НоменклатураБезЦен.Цена КАК Цена,
	|	ТабУсловия.УпаковкаЗаказа КАК УпаковкаЗаказа,
	|	ТабУсловия.МинимальнаяПартияПоставки КАК МинимальнаяПартияПоставки
	|
	|ИЗ
	|	ВТ_НоменклатураБезЦен КАК ВТ_НоменклатураБезЦен
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияЗакупок.СрезПоследних(&Период, ) КАК ТабУсловия
	|			ПО ВТ_НоменклатураБезЦен.Номенклатура = ТабУсловия.Номенклатура
	|				И ВТ_НоменклатураБезЦен.Характеристика = ТабУсловия.Характеристика
	|				И ВТ_НоменклатураБезЦен.ВидЦеныПоставщика = ТабУсловия.ВидЦеныПоставщика
	|	
	|ГДЕ
	|	ВТ_НоменклатураБезЦен.ЕстьЦенаПоВидуЦенСкюМТ = 0
	|	И ВТ_НоменклатураБезЦен.Цена > 0
	|ИТОГИ ПО
	|	Партнер";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() ТОгда
		Возврат;
	КонецЕсли;
	
	ВыборкаПартнер = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПартнер.Следующий() Цикл
		
		НовыйДокумент = Документы.РегистрацияЦенНоменклатурыПоставщика.СоздатьДокумент();
		НовыйДокумент.Комментарий 	= НСтр("ru='Создан регламентым заданием - БЕЛУГА. Создание регистрации цен поставщика'");
		НовыйДокумент.Дата 			= КонецДня(ТекущаяДатаСеанса());
		НовыйДокумент.Партнер		= ВыборкаПартнер.Партнер;

		ВыборкаДетали = ВыборкаПартнер.Выбрать();		
		Пока ВыборкаДетали.Следующий() Цикл
			НоваяСтрока = НовыйДокумент.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);
			Если ЗначениеЗаполнено(ВыборкаДетали.УпаковкаЗаказа) Или ЗначениеЗаполнено(ВыборкаДетали.МинимальнаяПартияПоставки) Тогда
				НоваяСтрока.УстановкаУсловий = Истина;
			КонецЕсли; 
		КонецЦикла;
		
		Если НовыйДокумент.Товары.Количество() > 0 Тогда
			
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Исключение
				ТекстОшибки = НСтр("ru='Не удалось провести документ регистрация цен номенклатуры поставщика по причине %1'"); 
				ТекстОшибки = СтрШаблон(ТекстОшибки, ОписаниеОшибки());
				ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("бг_СоздатьРегистрациюЦенНоменклатурыПоставщика", 
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстОшибки);	
			КонецПопытки; 
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
