#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	НомерЛинииВыходноеИзделие = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(ЭтотОбъект,
				"бг_ВыходныеИзделияПроизводственнаяЛиния", Элементы.ВыходныеИзделия, "Объект.ВыходныеИзделия.бг_ПроизводственнаяЛиния");
	
	бг_СтранаНазначения = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(ЭтотОбъект,
				"бг_СтранаНазначения", Элементы.ГруппаОсновное, "Объект.бг_СтранаНазначения", , Элементы.СпецификацияЭтап);
	бг_ВремяРасхода = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(ЭтотОбъект,
				"бг_ДатаОтгрузкиВремя", Элементы.ГруппаДатыОтгрузки, "Объект.бг_ДатаОтгрузкиВремя", , 
				Элементы.СтраницыГиперссылкаСостояниеОбеспечения);
	
	бг_ДобавитьКомандуЗаполненияСерийПоFIFO();
	бг_ДобавитьКомандуЗаполненияСерийФСМ();
	бг_ДобавитьКомандуЗаполненияКоличестваПоДаннымСПУМ();
	бг_ДобавитьКомандуПерезаполненияОбеспечения();
	бг_ДобавитьКомандуОтменыНеОбеспеченныхЗаказовМатериалов();
	
	бг_СоздатьЭлементыЕГАИС();
	
	бг_УстановитьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура бг_НавигационнаяСсылкаДокументаЕГАИСОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если "ОформитьОтчетОПроизводстве" = НавигационнаяСсылкаФорматированнойСтроки Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОткрытьРаспоряжения", Истина);
		
		СтруктураБыстрогоОтбора = Новый Структура();
		СтруктураБыстрогоОтбора.Вставить("ДокументОснование", Объект.Ссылка);
		ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);

		ОткрытьФорму(
			"Документ.битОтчетОПроизводствеЕГАИС.ФормаСписка",
			ПараметрыФормы,
			ЭтотОбъект);
		
		Возврат;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура бг_ПослеЗаписиНаСервереПеред(ТекущийОбъект, ПараметрыЗаписи)
	
	ЭтотОбъект["бг_НавигационнаяСсылкаДокументаЕГАИС"] = бг_ИнтеграцияЕГАИС.ТекстДокументаЕГАИСВЭтапеПроизводства(Объект);
	
	бг_УстановитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область Прочее

&НаКлиенте
&После("ПриИзмененииНоменклатуры")
Процедура бг_ПриИзмененииНоменклатуры(СтрокаТабличнойЧасти, ИмяТЧ)
	
	бг_УстановитьСтатьюКалькуляцииИзНоменклатуры(ИмяТЧ);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура бг_ЗаполнитьКоличествоПоДаннымСПУМ(Команда)
	бг_ЗаполнитьКоличествоПоДаннымСПУМНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбеспечениеЗаполнитьСерииПоFIFO(Команда)
	
	Если Не бг_ЗаполнитьСерииПоFIFO() Тогда
		ТекстПредупреждения = НСтр("ru = 'В табличной части нет товаров, по которым серии можно заполнить по FIFO.';
								|en = 'The tabular section contains no goods that can be used to fill in series by FIFO.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбеспечениеЗаполнитьСерииФСМ(Команда)
	
	Если Не бг_ЗаполнитьСерииФСМ() Тогда
		ТекстПредупреждения = НСтр("ru = 'В табличной части нет товаров, по которым можно заполнить серии ФСМ.';
								|en = 'The tabular section contains no goods that can be used to fill in series FSM.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьОбеспечениеМатериалами(Команда)
	бг_ПерезаполнитьОбеспечениеМатериалами();
КонецПроцедуры

&НаКлиенте
Процедура бг_ОтменитьНеОбеспеченныеЗаказыМатериалов(Команда)
	Оповещение = Новый ОписаниеОповещения("бг_ОтменитьНеОбеспеченныеЗаказыМатериаловПосле", ЭтотОбъект);
	
	ПоказатьВопрос(Оповещение,
		НСтр("ru = 'Выполнить отмену не обеспеченных заказов материалов?'"),
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да,
		НСтр("ru = 'Подтверждение операции'")
	);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_ВыходныеИзделияПроизведеноПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСериюВыпускаемойПродукции();
КонецПроцедуры

&НаКлиенте
Процедура бг_ВыходныеИзделияКоличествоУпаковокПриИзмененииПосле(Элемент)
	Оповещение = Новый ОписаниеОповещения("бг_ЗаполнениеОбеспеченияПосле", ЭтотОбъект);
	
	ПоказатьВопрос(Оповещение,
		НСтр("ru = 'Перезаполнить обеспечение материалами?'"),
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да,
		НСтр("ru = 'Подтверждение операции'")
	);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Обеспечение

&НаСервере
&После("ПослеИзмененияСтрокТЧПрограммноНаСервере")
Процедура бг_ПослеИзмененияСтрокТЧПрограммноНаСервере(ИмяТЧ, МассивИдентификаторовСтрок, СтруктураРанееВыполненныхДействий)
	
	бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
&Вместо("НастроитьЗависимыеЭлементыФормы")
Процедура бг_НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);

	Если СтруктураРеквизитов.Свойство("НеОтгружатьЧастями")
		Или Инициализация Тогда
		Если Не Форма.Элементы.Найти("бг_ДатаОтгрузкиВремя") = Неопределено Тогда
			Форма.Элементы["бг_ДатаОтгрузкиВремя"].Видимость = Форма.Объект.НеОтгружатьЧастями;
		КонецЕсли;
	КонецЕсли;                                  
	
	ПродолжитьВызов(Форма, СписокРеквизитов);   
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнениеОбеспеченияПосле(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		бг_ПерезаполнитьОбеспечениеМатериалами();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ОтменитьНеОбеспеченныеЗаказыМатериаловПосле(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		бг_ВыполнитьОтменуНеобеспеченныхЗаказовМатериалов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура бг_ПерезаполнитьОбеспечениеМатериалами()
	бг_ЭтапПроизводства2_2.ПерезаполнитьОбеспечениеМатериалами(Объект);
	
	ПослеИзмененияСтрокТЧПрограммноНаСервере("РасходМатериаловИРабот");
	ПослеИзмененияСтрокТЧПрограммноНаСервере("ЭкономияМатериалов");
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура бг_ВыполнитьОтменуНеобеспеченныхЗаказовМатериалов()
	бг_ЭтапПроизводства2_2.ВыполнитьОтменуНеобеспеченныхЗаказовМатериалов(Объект.Назначение);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияСерийПоFIFO()
	ИмяКоманды       = "бг_ОбеспечениеЗаполнитьСерииПоFIFO";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить серии по FIFO';
								|en = 'Fill in series by FIFO'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ОбеспечениеМатериаламиИРаботамиГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.Обеспечение_ЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияСерийФСМ()
	ИмяКоманды       = "бг_ОбеспечениеЗаполнитьСерииФСМ";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить серии ФСМ';
								|en = 'Fill in series FSM'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ОбеспечениеМатериаламиИРаботамиГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.Обеспечение_ЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияКоличестваПоДаннымСПУМ()
	// Команда заполнения количества в выходных изделиях по данным СПУМ
	ИмяКоманды       = "бг_ЗаполнитьКоличествоПоДаннымСПУМ";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить количество по данным СПУМ'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ВыходныеИзделия_Заполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуПерезаполненияОбеспечения()
	// Команда перезаполнения обеспечения по данным спецификации
	ИмяКоманды       = "бг_ЗаполнитьОбеспечениеМатериалами";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить обеспечение материалами'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ОбеспечениеМатериаламиИРаботамиГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.Обеспечение_ЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуОтменыНеОбеспеченныхЗаказовМатериалов()
	// Команда перезаполнения обеспечения по данным спецификации
	ИмяКоманды       = "бг_ОтменитьНеОбеспеченныеЗаказыМатериалов";
	ЗаголовокКоманды = НСтр("ru = 'Отменить не обеспеченные заказы материалов'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ОбеспечениеМатериаламиИРаботамиГруппаОбеспечение, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_СоздатьЭлементыЕГАИС()
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("бг_НавигационнаяСсылкаДокументаЕГАИС",	Новый ОписаниеТипов("ФорматированнаяСтрока"),,"Статус ЕГАИС"));
	ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты); 							
	
	ЭтотОбъект["бг_НавигационнаяСсылкаДокументаЕГАИС"] = бг_ИнтеграцияЕГАИС.ТекстДокументаЕГАИСВЭтапеПроизводства(Объект);
	
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(ЭтотОбъект
		, "бг_НавигационнаяСсылкаДокументаЕГАИС",	Элементы.СтраницаОсновное, "бг_НавигационнаяСсылкаДокументаЕГАИС", "ПолеФормы",,"ПолеНадписи");
	Элементы.бг_НавигационнаяСсылкаДокументаЕГАИС.УстановитьДействие("ОбработкаНавигационнойСсылки"
		, "бг_НавигационнаяСсылкаДокументаЕГАИСОбработкаНавигационнойСсылки");
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьКоличествоПоДаннымСПУМНаСервере()
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПериодДвиженийМарок", Объект.Дата);
	бг_ПодготовитьТаблицуВыпускаемойПродукции(Запрос);
	Документы.ЭтапПроизводства2_2.бг_ПодготовитьДанныеДвиженияМарок(Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	втДвижениеМарок.ЭтапПроизводства КАК ЭтапПроизводства,
	|	втДвижениеМарок.Номенклатура КАК Номенклатура,
	|	КОЛИЧЕСТВО(втДвижениеМарок.ГУИДМарки) КАК КоличествоМарок
	|ИЗ
	|	втДвижениеМарок КАК втДвижениеМарок
	|ГДЕ
	|	втДвижениеМарок.ПроизводственнаяЛинияСоответствуетДокументу
	|
	|СГРУППИРОВАТЬ ПО
	|	втДвижениеМарок.ЭтапПроизводства,
	|	втДвижениеМарок.Номенклатура";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'Данные по выпуску из СПУМ отсутствуют'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	ОтборПродукция = Новый Структура("Номенклатура");
	Пока Выборка.Следующий() Цикл
		ОтборПродукция.Номенклатура = Выборка.Номенклатура;
		СтрокиПродукция = Объект.ВыходныеИзделия.НайтиСтроки(ОтборПродукция);
		
		// Выпущенное по данным СПУМ количество относим на первую строку с продукцией
		// Если строк несколько (пользователь разбил строку), во всех строках кроме первой количество приравниваем 0
		КоличествоВыпущено = Выборка.КоличествоМарок;
		Для Каждого СтрокаПродукция Из СтрокиПродукция Цикл
			СтрокаПродукция.Количество = КоличествоВыпущено;
			
			КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(СтрокаПродукция.Упаковка, СтрокаПродукция.Номенклатура);
			СтрокаПродукция.КоличествоУпаковок = КоличествоВыпущено / КоэффициентУпаковки;
			
			КоличествоВыпущено = КоличествоВыпущено - СтрокаПродукция.Количество;
		КонецЦикла;
	КонецЦикла;
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Функция бг_ЗаполнитьСерииПоFIFO()
	
	Если бг_Номенклатура.ЕстьСтрокиДляЗаполненияСерийПоFIFO(Объект.ОбеспечениеМатериаламиИРаботами) Тогда
		
		бг_Номенклатура.ЗаполнитьСерииПоFIFOВТЧТовары(Объект, ПараметрыУказанияСерий.ОбеспечениеМатериаламиИРаботами);
		ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспеченияНаСервере();
		Модифицированность = Истина;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция бг_ЗаполнитьСерииФСМ()
	
	Если бг_Номенклатура.ЕстьСтрокиДляЗаполненияСерийФСМ(Объект.ОбеспечениеМатериаламиИРаботами) Тогда
		
		бг_Номенклатура.ЗаполнитьСерииФСМВТЧТовары(Объект, ПараметрыУказанияСерий.ОбеспечениеМатериаламиИРаботами);
		ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспеченияНаСервере();
		Модифицированность = Истина;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура бг_ПодготовитьТаблицуВыпускаемойПродукции(Запрос)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ДатаДокумента КАК Дата,
	|	&Ссылка КАК ЭтапПроизводства,
	|	ВЫРАЗИТЬ(ВыходныеИзделия.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВыходныеИзделия.бг_ПроизводственнаяЛиния КАК ПроизводственнаяЛиния,
	|	ВыходныеИзделия.ДатаПроизводства КАК ДатаРозлива,
	|	ВыходныеИзделия.Серия КАК Серия,
	|	ВыходныеИзделия.Количество КАК Количество
	|ПОМЕСТИТЬ втПродукция
	|ИЗ
	|	&ВыходныеИзделия КАК ВыходныеИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПродукция.Дата КАК Дата,
	|	втПродукция.ЭтапПроизводства КАК ЭтапПроизводства,
	|	&Организация КАК Организация,
	|	втПродукция.Номенклатура КАК Номенклатура,
	|	втПродукция.ПроизводственнаяЛиния КАК ПроизводственнаяЛиния,
	|	втПродукция.ДатаРозлива КАК ДатаРозлива,
	|	втПродукция.Серия КАК Серия,
	|	втПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ втМаркируемаяПродукция
	|ИЗ
	|	втПродукция КАК втПродукция
	|ГДЕ
	|	ЕСТЬNULL(втПродукция.Номенклатура.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПродукция";
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	ОтборВыходныеИзделия = Новый Структура("Отменено", Ложь);
	ТаблицаВыходныеИзделия = Объект.ВыходныеИзделия.Выгрузить(ОтборВыходныеИзделия,
					"Номенклатура, ДатаПроизводства, Серия, Количество, бг_ПроизводственнаяЛиния");
	Запрос.УстановитьПараметр("ВыходныеИзделия", ТаблицаВыходныеИзделия);
	
	Запрос.Выполнить();
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьСериюВыпускаемойПродукции()
	ТекущиеДанные = Элементы.ВыходныеИзделия.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено
		Или Не ТекущиеДанные.Произведено
		Или ТекущиеДанные.Отменено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Серия = бг_СерияВыпущеннойПродукции(
									Объект.Ссылка,
									ТекущиеДанные.СтатусУказанияСерий,
									ТекущиеДанные.Номенклатура,
									ТекущиеДанные.ДатаПроизводства,
									Объект.бг_СтранаНазначения);
	
	СтруктураДействий = Новый Структура;
	ПараметрыПроверкиСерий = Новый Структура;
	ПараметрыПроверкиСерий.Вставить("Склад", ТекущиеДанные.Получатель);
	ПараметрыПроверкиСерий.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий.ВыходныеИзделия);
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПараметрыПроверкиСерий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_СерияВыпущеннойПродукции(ДокументВыпуска, СтатусУказанияСерии, Продукция, ДатаПроизводства, бг_СтранаНазначения)
	Возврат бг_Номенклатура.СерияВыпущеннойПродукции(ДокументВыпуска, СтатусУказанияСерии, Продукция, ДатаПроизводства, бг_СтранаНазначения);
КонецФункции

&НаСервере
Процедура бг_УстановитьДоступностьЭлементов()
	ТолькоПросмотр = Не бг_ЭтапПроизводства2_2.ДоступноРедактированиеДокумента(Объект.Ссылка);
	Элементы["бг_ДатаОтгрузкиВремя"].Видимость = Объект.НеОтгружатьЧастями;
КонецПроцедуры

&НаКлиенте
Процедура бг_УстановитьСтатьюКалькуляцииИзНоменклатуры(ИмяТЧ)
	
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		МассивИдентификаторовСтрок = Новый Массив;
		МассивИдентификаторовСтрок.Добавить(ТекущиеДанные.ПолучитьИдентификатор());
		бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьСтатьюКалькуляцииИзНоменклатурыНаСервере(ИмяТЧ, МассивИдентификаторовСтрок = Неопределено)
	
	Если ИмяТЧ = "ОбеспечениеМатериаламиИРаботами" Тогда
		бг_Номенклатура.ЗаполнитьСтатьюКалькуляцииВТЧИзНоменклатуры(Объект, ИмяТЧ, МассивИдентификаторовСтрок);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
