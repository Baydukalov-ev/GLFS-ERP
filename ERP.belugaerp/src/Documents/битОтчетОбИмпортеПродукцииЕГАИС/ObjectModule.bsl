
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияЕГАИСПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ТекущийСтатусДокумента = Документы.битОтчетОбИмпортеПродукцииЕГАИС.ТекущийСтатус(Ссылка);
	
	ПроверитьПроведениеДокумента(Отказ, ТекущийСтатусДокумента, РежимЗаписи);
	ИзменитьШапкуДокумента(ТекущийСтатусДокумента, РежимЗаписи);		
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура бг_ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.ЗаписатьСтатусДокументаЕГАИСПоУмолчанию(ЭтотОбъект);
	АктуализироватьСерии();

КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	ДокументОснование       = Неопределено;
	ИдентификаторЕГАИС      = "";
	Товары.Очистить();
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.битОтчетОбИмпортеПродукцииЕГАИС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ЭтотОбъект.ДополнительныеСвойства);

	Если Не Отказ Тогда
		Для Каждого СтрокаТовар Из Товары Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаТовар.Справка2) Тогда
				Продолжить;
			КонецЕсли;
			
			СоответствиеНоменклатурыЕГАИС = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
			СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = СтрокаТовар.АлкогольнаяПродукция;
			СоответствиеНоменклатурыЕГАИС.Номенклатура         = СтрокаТовар.Номенклатура;
			СоответствиеНоменклатурыЕГАИС.Характеристика       = СтрокаТовар.Характеристика;
			СоответствиеНоменклатурыЕГАИС.Серия                = СтрокаТовар.Серия;
			СоответствиеНоменклатурыЕГАИС.Справка2             = СтрокаТовар.Справка2;
			СоответствиеНоменклатурыЕГАИС.Записать();
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		ЗаполнитьНаОснованииПТиУ(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	бг_ИнтеграцияЕГАИС.ПроверитьЗаполнениеАлкогольнойПродукции(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииПТиУ(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриобретениеТоваровУслуг.Организация КАК Организация,
	               |	ДоговорыКонтрагентов.Номер КАК НомерКонтракта,
	               |	ДоговорыКонтрагентов.Дата КАК ДатаКонтракта,
	               |	КлассификаторОрганизацийЕГАИСПоставщик.Ссылка КАК Поставщик,
	               |	КлассификаторОрганизацийЕГАИСОрганизация.Ссылка КАК ОрганизацияЕГАИС,
	               |	КлассификаторОрганизацийЕГАИСПоставщик.КодСтраны КАК КодСтраны,
	               |	ПриобретениеТоваровУслуг.Склад КАК Склад,
	               |	ПриобретениеТоваровУслуг.Ссылка КАК ДокументОснование
	               |ИЗ
	               |	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |		ПО ПриобретениеТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИСПоставщик
	               |		ПО ПриобретениеТоваровУслуг.Контрагент = КлассификаторОрганизацийЕГАИСПоставщик.Контрагент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИСОрганизация
	               |		ПО ПриобретениеТоваровУслуг.Организация = КлассификаторОрганизацийЕГАИСОрганизация.Контрагент
	               |ГДЕ
	               |	ПриобретениеТоваровУслуг.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |	ПриобретениеТоваровУслугТовары.Серия КАК Серия,
	               |	ВЫБОР
	               |		КОГДА ПриобретениеТоваровУслугТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	               |				И ПриобретениеТоваровУслугТовары.Номенклатура.ВидНоменклатуры = &ИмпортныеССП
	               |				И ПриобретениеТоваровУслугТовары.Номенклатура.бг_ТипИмпортныхССП = ЗНАЧЕНИЕ(Перечисление.бг_ТипыИмпортныхССП.Ароматизитор)
	               |			ТОГДА 0
	               |		КОГДА ПриобретениеТоваровУслугТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	               |			ТОГДА ПриобретениеТоваровУслугТовары.Количество
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Количество
	               |ИЗ
	               |	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	               |ГДЕ
	               |	ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ИмпортныеССП", бг_КонстантыПовтИсп.ЗначениеКонстанты("ИмпортныеССП"));
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаШапка = Результат[0].Выбрать();
	ВыборкаТовары = Результат[1].Выбрать();
	
	Если ВыборкаШапка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		НовСтрокаТовары = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрокаТовары, ВыборкаТовары);
		НовСтрокаТовары.НомерПартии = Строка(НовСтрокаТовары.Серия.УникальныйИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПроведениеДокумента(Отказ, ТекущийСтатусДокумента, РежимЗаписи)
	
	ТекущийСтатусДокумента = Документы.битОтчетОбИмпортеПродукцииЕГАИС.ТекущийСтатус(Ссылка);
	Если ТекущийСтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.бг_Подтвержден 
		И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
		И Не ЗначениеЗаполнено(ДокументОснование) 
		И Не ТекущийСтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Отменен Тогда
		ОбщегоНазначения.СообщитьПользователю("Невозможно проведение документа без указанного документа основания!",,,,Отказ);
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		СтрокиСПустымКоличеством = Товары.НайтиСтроки(Новый Структура("Количество", 0));
		Для каждого СтрокаТЧ Из СтрокиСПустымКоличеством Цикл
			СтрокаОшибки = СтрШаблон("В строке №%1 для позиции %2 не указано количество!",
				СтрокаТЧ.НомерСтроки, СтрокаТЧ.Номенклатура);
			ОбщегоНазначения.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьШапкуДокумента(ТекущийСтатусДокумента, РежимЗаписи)
	
	Если (РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения 
		Или ТекущийСтатусДокумента = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Отменен) 
		И ЗначениеЗаполнено(ДокументОснование) Тогда
		Комментарий = ?(ПустаяСтрока(Комментарий), "", Комментарий + " ") + Строка(ДокументОснование);
		ДокументОснование = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

// ОбщиеМеханизмы.АктуализацияСерийДокумента
Процедура АктуализироватьСерии()
	
	КлючевыеПоля = "Серия, Справка2";
	
	СерииДокумента = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
		Товары,,
		КлючевыеПоля);
		
	СерииДокумента.Свернуть(КлючевыеПоля);
	
	СерииДокумента.Колонки.Добавить(
		"ОрганизацияЕГАИСВладелец",
		Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
		
	СерииДокумента.Колонки.Добавить(
		"НомерГТД",
		Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
		
	СерииДокумента.ЗаполнитьЗначения(ОрганизацияЕГАИС, "ОрганизацияЕГАИСВладелец");
	СерииДокумента.ЗаполнитьЗначения(НомерГТД, "НомерГТД");
	
	СерииКАктуализации = СерииКАктуализации(СерииДокумента);
	
	Для Каждого ДанныеСерииКАктуализации Из СерииКАктуализации Цикл
		АктуализироватьСерию(ДанныеСерииКАктуализации);
	КонецЦикла;
	
КонецПроцедуры

Функция СерииКАктуализации(СерииДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииДокумента.Серия КАК Серия,
	|	СерииДокумента.НомерГТД КАК НомерГТД,
	|	СерииДокумента.ОрганизацияЕГАИСВладелец КАК ОрганизацияЕГАИСВладелец,
	|	СерииДокумента.Справка2 КАК Справка2
	|ПОМЕСТИТЬ СерииДокумента
	|ИЗ
	|	&СерииДокумента КАК СерииДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СерииДокумента.Серия КАК Серия,
	|	СерииДокумента.ОрганизацияЕГАИСВладелец КАК ОрганизацияЕГАИСВладелец,
	|	СправочникНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	СерииДокумента.НомерГТД КАК НомерГТД,
	|	СерииДокумента.Справка2 КАК Справка2
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СправочникСерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СерииДокумента КАК СерииДокумента
	|		ПО (СерииДокумента.Серия = СправочникСерииНоменклатуры.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникСерииНоменклатуры.бг_Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	(СправочникСерииНоменклатуры.бг_ОрганизацияЕГАИСВладелец <> СерииДокумента.ОрганизацияЕГАИСВладелец
	|			ИЛИ СправочникНоменклатура.ВестиУчетПоГТД
	|				И СправочникСерииНоменклатуры.бг_НомерГТД <> СерииДокумента.НомерГТД
	|			ИЛИ СправочникСерииНоменклатуры.Справка2ЕГАИС <> СерииДокумента.Справка2)";
	
	Запрос.УстановитьПараметр("СерииДокумента", СерииДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Процедура АктуализироватьСерию(ДанныеСерииКАктуализации)
	
	СерияОбъект = ДанныеСерииКАктуализации.Серия.ПолучитьОбъект();
	
	Если ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
		СерияОбъект.бг_ОрганизацияЕГАИСВладелец = ОрганизацияЕГАИС;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСерииКАктуализации.Справка2) Тогда
		СерияОбъект.Справка2ЕГАИС = ДанныеСерииКАктуализации.Справка2;
	КонецЕсли;
	
	Если ДанныеСерииКАктуализации.ВестиУчетПоГТД Тогда
		СерияОбъект.бг_НомерГТД = ДанныеСерииКАктуализации.НомерГТД;
	КонецЕсли;
	
	СерияОбъект.Записать();
	
КонецПроцедуры
// Конец ОбщиеМеханизмы.АктуализацияСерийДокумента

#КонецОбласти

#КонецЕсли
