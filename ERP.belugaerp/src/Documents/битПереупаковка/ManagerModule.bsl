#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.бг_ДвижениеМарок.ДобавитьКомандуДвижениеМарокПоДокументу(КомандыОтчетов);
	Отчеты.бг_СостояниеМарок.ДобавитьКомандуДвижениеМарокПоДокументу(КомандыОтчетов);
	
КонецПроцедуры

// Возвращает список идентификаторов марок, содержащихся в документе.
//
// Параметры:
//  Переупаковка - ДокументСсылка.битПереупаковка - Ссылка на переупаковку.
//
// Возвращаемое значение:
//   СписокЗначений
//
Функция ИдентификаторыМарок(Переупаковка) Экспорт
	
	ИдентификаторыМарок = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битПереупаковкаШтрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Документ.битПереупаковка.Штрихкоды КАК битПереупаковкаШтрихкоды
	|ГДЕ
	|	битПереупаковкаШтрихкоды.Ссылка = &Переупаковка";
	
	Запрос.УстановитьПараметр("Переупаковка", Переупаковка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если бг_МаркируемаяПродукцияКлиентСервер.ТипУпаковкиШтрихкода(Выборка.Штрихкод)
			= Перечисления.бг_ТипыЕдиницИзмерения.Бутылка Тогда
			
			ИдентификаторыМарок.Добавить(Выборка.Штрихкод);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИдентификаторыМарок;

КонецФункции

Функция ОрганизацияДокумента(Переупаковка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Переупаковка, "Организация");
	
КонецФункции

// Возвращает организацию ЕГАИС документа.
//
// Параметры:
//   Переупаковка - ДокументСсылка.битПереупаковка
//  
// Возвращаемое значение:
//   СправочникСсылка.КлассификаторОрганизацийЕГАИС
//
Функция ОрганизацияЕГАИСДокумента(Переупаковка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		Переупаковка,
		"Склад.бг_ПунктНазначения.ОрганизацияЕГАИС");
	
КонецФункции

#Область ОтложеннаяОбработка

Процедура бг_ОтложеннаяОбработкаОбъекта(ДокументСсылка, ВариантОбработки, Отказ,
	ДополнительныеСведения = Неопределено) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не бг_КонстантыПовтИсп.ЗначениеКонстанты("ПроводитьДокументыОтWMSОтложенно") Тогда
		Возврат;
	КонецЕсли;
	
	ВсеВарианты = Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов;
	
	Если ВариантОбработки = ВсеВарианты.ОбработатьДокументыWMS Тогда
		ОтложеннаяОбработкаПроведение(ДокументСсылка);
	ИначеЕсли ВариантОбработки = ВсеВарианты.РассчитатьПоказателиРаботыОператоровWMS Тогда
		ОтложеннаяОбработкаРасчетПоказателейРаботыОператоровWMS(ДокументСсылка);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтложеннаяОбработкаПроведение(ДокументСсылка)
	
	НачатьТранзакцию();
	
	Попытка
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.Заблокировать();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Если ЗначениеЗаполнено(ДокументОбъект.ОтражениеФактаПоРасходномуОрдеру) Тогда
			РегистрыСведений.бг_ОбъектыДляОтложеннойОбработки.УдалитьОбъект(
				ДокументОбъект.ОтражениеФактаПоРасходномуОрдеру,
				Перечисления.бг_ВариантыОтложеннойОбработкиОбъектов.ОбработатьДокументыWMS);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
			
		ШапкаОшибки = ОписаниеОшибки();
		
		ТелоОшибки = "";
		Для каждого СообщениеПользователю Из ПолучитьСообщенияПользователю(Истина) Цикл
			ТелоОшибки = ТелоОшибки + ?(ПустаяСтрока(ТелоОшибки), "", Символы.ПС) + СообщениеПользователю.Текст;
		КонецЦикла;
		
		ТекстОшибки = ШапкаОшибки + Символы.ПС + ТелоОшибки;
		
		ОтменитьТранзакцию();
		ВызватьИсключение ТекстОшибки;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура бг_ЗафиксироватьОшибкуОтложеннойОбработки(ДокументСсылка, ТекстОшибки) Экспорт

	РегистрыСведений.бг_ДокументыИнтеграцииСоСкладскимиСистемами.ОбновитьСтатусДокумента(
		ДокументСсылка,
		ТекущаяДатаСеанса(),
		Перечисления.бг_СтатусыДокументовИнтеграцииСоСкладскимиСистемами.ЗагруженБезОбработки,
		0,
		ТекстОшибки);

КонецПроцедуры

Процедура ОтложеннаяОбработкаРасчетПоказателейРаботыОператоровWMS(ДокументСсылка) Экспорт
	
	ДанныеДляРасчета = бг_WMS.НовыйДанныеДляРасчетаПоказателейРаботыОператоровWMS();
	ЗаполнитьДанныеДляРасчетаПоказателейРаботыОператоровWMS(ДанныеДляРасчета, ДокументСсылка);
	бг_WMS.СформироватьДвиженияПоказателейРаботыОператоровWMS(ДанныеДляРасчета);
	
КонецПроцедуры

#КонецОбласти // Конец ОтложеннаяОбработка

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетПоказателейРаботыОператоровWMS

Процедура ЗаполнитьДанныеДляРасчетаПоказателейРаботыОператоровWMS(ДанныеДляРасчета, ДокументСсылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеДляРасчета.Организация = Документы.битПереупаковка.ОрганизацияДокумента(
		ДокументСсылка);
	ДанныеДляРасчета.ОрганизацияЕГАИС = Документы.битПереупаковка.ОрганизацияЕГАИСДокумента(
		ДокументСсылка);
	ДанныеДляРасчета.ИгнорироватьТовары = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляРасчетаПоказателейРаботыОператоровWMS();
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗаполнитьЗначенияСвойств(
		ДанныеДляРасчета.ДанныеШапкиДокумента,
		РезультатыЗапроса[0].Выгрузить()[0]);
		
	Для каждого СтрокаШтрихкодыДокумента Из РезультатыЗапроса[1].Выгрузить() Цикл
		ЗаполнитьЗначенияСвойств(ДанныеДляРасчета.ШтрихкодыДокумента.Добавить(), СтрокаШтрихкодыДокумента);
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаДляРасчетаПоказателейРаботыОператоровWMS()
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	битПереупаковка.Ссылка КАК Документ,
	|	битПереупаковка.Проведен КАК Проведен,
	|	битПереупаковка.Дата КАК Дата,
	|	битПереупаковка.ВремяВыполнения КАК ВремяВыполнения,
	|	битПереупаковка.ОператорТСД КАК ОператорТСД
	|ИЗ
	|	Документ.битПереупаковка КАК битПереупаковка
	|ГДЕ
	|	битПереупаковка.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битПереупаковкаШтрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Документ.битПереупаковка.Штрихкоды КАК битПереупаковкаШтрихкоды
	|ГДЕ
	|	битПереупаковкаШтрихкоды.Ссылка = &ДокументСсылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Конец РасчетПоказателейРаботыОператоровWMS

#КонецОбласти

#КонецЕсли
