#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьКомандуФормированияСерииКомплекта();
	бг_ДобавитьКомандуФормированияСерийКомплектующих();
	бг_ДобавитьПолеПаллетизация();
	бг_УстановитьВидимостьДоступностьЭлементов();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// ОбщиеМеханизмы.ПриходныйОрдер
		бг_Склады.ДобавитьПолеПриходныйОрдерНаТовары(ЭтотОбъект);
		бг_ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары();
		// Конец ОбщиеМеханизмы.ПриходныйОрдер
		
		// ОбщиеМеханизмы.РасходныйОрдер
		бг_Склады.ДобавитьПолеРасходныйОрдерНаТовары(ЭтотОбъект);
		бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары();
		// Конец ОбщиеМеханизмы.РасходныйОрдер
		
		бг_ДобавитьПолеКомплектация();
		бг_ОбновитьОтображениеДекорацииКомплектация();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура бг_ПриЧтенииНаСервереПосле(ТекущийОбъект)
	
	// ОбщиеМеханизмы.ПриходныйОрдер
	бг_Склады.ДобавитьПолеПриходныйОрдерНаТовары(ЭтотОбъект);
	бг_ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары();
	// Конец ОбщиеМеханизмы.ПриходныйОрдер
	
	// ОбщиеМеханизмы.РасходныйОрдер
	бг_Склады.ДобавитьПолеРасходныйОрдерНаТовары(ЭтотОбъект);
	бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары();
	// Конец ОбщиеМеханизмы.РасходныйОрдер
	
	бг_ДобавитьПолеКомплектация();
	бг_ОбновитьОтображениеДекорацииКомплектация();
	
КонецПроцедуры

&НаСервере
Процедура бг_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	// ОбщиеМеханизмы.ПриходныйОрдер
	бг_ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары();
	// Конец ОбщиеМеханизмы.ПриходныйОрдер
	
	// ОбщиеМеханизмы.РасходныйОрдер
	бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары();
	// Конец ОбщиеМеханизмы.РасходныйОрдер
	
	бг_ОбновитьОтображениеДекорацииКомплектация();
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбработкаНавигационнойСсылкиПеред(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// ОбщиеМеханизмы.ПриходныйОрдер
	Если НавигационнаяСсылкаФорматированнойСтроки = "бг_ОформитьПриходныйОрдерНаТовары" Тогда
		СтандартнаяОбработка = Ложь;
		бг_ОткрытьФормуНовогоПриходногоОрдераНаТовары();
	КонецЕсли;
	// Конец ОбщиеМеханизмы.ПриходныйОрдер
	
	// ОбщиеМеханизмы.РасходныйОрдер
	Если НавигационнаяСсылкаФорматированнойСтроки = "бг_ОформитьРасходныйОрдерНаТовары" Тогда
		СтандартнаяОбработка = Ложь;
		бг_ОформитьРасходныйОрдер();
	КонецЕсли;
	// Конец ОбщиеМеханизмы.РасходныйОрдер
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "бг_ОформитьКомплектациюПродукцииЕГАИС" Тогда
		СтандартнаяОбработка = Ложь;
		бг_ОткрытьФормуНовойКомплектации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбработкаОповещенияПосле(ИмяСобытия, Параметр, Источник)
	
	// ОбщиеМеханизмы.ПриходныйОрдер
	Если ИмяСобытия = "Запись_ПриходныйОрдерНаТовары" Тогда
		бг_ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары();
	КонецЕсли;
	// Конец ОбщиеМеханизмы.ПриходныйОрдер
	
	// ОбщиеМеханизмы.РасходныйОрдер
	Если ИмяСобытия = "Запись_РасходныйОрдерНаТовары" Тогда
		бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары();
	КонецЕсли;
	// Конец ОбщиеМеханизмы.РасходныйОрдер
	
	Если ИмяСобытия = "Запись_КомплектацияПродукцииЕГАИС" Тогда
		бг_ОбновитьОтображениеДекорацииКомплектация();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_НоменклатураПриИзмененииПосле(Элемент)
	бг_УстановитьВидимостьДоступностьЭлементов();
	бг_ЗаполнитьПаллетизациюНоменклатурыПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура бг_ХозяйственнаяОперацияПриИзмененииПосле(Элемент)
	бг_УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_СформироватьСериюКомплекта(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Перед формированием серии комплекта необходимо записать документ'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.бг_УпаковкаПаллета) Тогда
		ТекстСообщения = НСтр("ru = 'Перед формированием серии комплекта необходимо указать паллету'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "бг_УпаковкаПаллета");
		Возврат;
	КонецЕсли;
	
	бг_СформироватьСериюКомплектаНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура бг_СформироватьСерииКомплектующих(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Перед формированием серий необходимо записать документ'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Серия) Тогда
		ТекстСообщения = НСтр("ru = 'Перед формированием серий необходимо указать серию разбираемой продукции'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "бг_УпаковкаПаллета");
		Возврат;
	КонецЕсли;
	
	бг_СформироватьСерииКомплектующихНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ДобавитьКомандуФормированияСерииКомплекта()
	ИмяКоманды       = "бг_СформироватьСериюКомплекта";
	ЗаголовокКоманды = НСтр("ru = 'Сформировать серию комплекта'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ГруппаУказаниеСерий, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
	Элементы.УказатьСерииВШапке.Ширина = 12; // после добавления второй кнопки в группу типовая команда растягивается
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуФормированияСерийКомплектующих()
	ИмяКоманды       = "бг_СформироватьСерииКомплектующих";
	ЗаголовокКоманды = НСтр("ru = 'Сформировать серии'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьВидимостьДоступностьЭлементов()
	
	ЭтоСборкаАлкогольнойПродукции = бг_ЭтоСборкаАлкогольнойПродукции();
	ЭтоРазборкаАлкогольнойПродукции = бг_ЭтоРазборкаАлкогольнойПродукции();
	
	Элементы["бг_СформироватьСериюКомплекта"].Видимость = ЭтоСборкаАлкогольнойПродукции;
	Элементы["бг_УпаковкаПаллета"].Видимость = ЭтоСборкаАлкогольнойПродукции;
	Элементы["бг_ТоварыУпаковкаПаллета"].Видимость = ЭтоРазборкаАлкогольнойПродукции;
	Элементы["бг_СформироватьСерииКомплектующих"].Видимость = ЭтоРазборкаАлкогольнойПродукции;
	
КонецПроцедуры

&НаСервере
Процедура бг_СформироватьСериюКомплектаНаСервере()
	
	ДополнительныеПараметрыЗаполненияСерииКомплекта = бг_ДополнительныеПараметрыЗаполненияСерииКомплекта();
	
	Объект.Серия = бг_Номенклатура.СерияВыпущеннойПродукции(
		Объект.Ссылка,
		Объект.СтатусУказанияСерий,
		Объект.Номенклатура,
		Объект.Дата,
		Справочники.СтраныМира.ПустаяСсылка(),
		ДополнительныеПараметрыЗаполненияСерииКомплекта);
		
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.СборкаТоваров);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.Шапка);
	бг_ЗарегистрироватьСоответствиеНоменклатурыЕГАИС(Объект.Номенклатура, Объект.Серия,
					ДополнительныеПараметрыЗаполненияСерииКомплекта);	
КонецПроцедуры

&НаСервере
Процедура бг_СформироватьСерииКомплектующихНаСервере()
	ВыделенныеСтроки = Элементы.Товары.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеНоменклатурыКомплектующих = бг_ДанныеНоменклатурыКомплектующих();
	
	ДанныеСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Серия,
		"ДатаПроизводства, бг_СтранаНазначения, бг_Экспорт, ПроизводительЕГАИС,
		|бг_ОрганизацияВладелец, бг_ОрганизацияЕГАИСВладелец, Справка2ЕГАИС, бг_Сертификат,
		|Справка2ЕГАИС.АлкогольнаяПродукция");
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		СтрокаТовар = Объект.Товары.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		Если СтрокаТовар.СтатусУказанияСерий = 0
			Или ЗначениеЗаполнено(СтрокаТовар.Серия) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.бг_УпаковкаПаллета) Тогда
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Не заполнена колонка ""Паллета"" в строке %1 списка ""Товары""'"),
				СтрокаТовар.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Продолжить;
		КонецЕсли;
		
		ДанныеНоменклатуры = ДанныеНоменклатурыКомплектующих[СтрокаТовар.Номенклатура];
		
		ДанныеСерии.Вставить("бг_ДокументВыпуска", Объект.Ссылка);
		ДанныеСерии.Вставить("бг_Номенклатура", СтрокаТовар.Номенклатура);
		ДанныеСерии.Вставить("бг_УпаковкаПаллета", СтрокаТовар.бг_УпаковкаПаллета);
		
		ГоденДо = НоменклатураКлиентСервер.бг_ГоденДоПоДатеПроизводства(
						ДанныеСерии.ДатаПроизводства,
						ДанныеНоменклатуры.СрокГодности,
						ДанныеНоменклатуры.ЕдиницаИзмеренияСрокаГодности);
		
		ДанныеСерии.Вставить("ГоденДо", ГоденДо);
		
		СтрокаТовар.Серия = бг_СерииНоменклатуры.СоздатьСерию(
						ДанныеНоменклатуры.ВидНоменклатуры,
						ДанныеСерии);
		
		бг_ЗарегистрироватьСоответствиеНоменклатурыЕГАИС(СтрокаТовар.Номенклатура, СтрокаТовар.Серия, ДанныеСерии);
	КонецЦикла;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.СборкаТоваров);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.ТЧ);	
КонецПроцедуры

&НаСервере
Функция бг_ДанныеНоменклатурыКомплектующих()
	НоменклатураКомплектующие =
		Объект.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура");
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъектов(НоменклатураКомплектующие,
				"ВидНоменклатуры, СрокГодности, ЕдиницаИзмеренияСрокаГодности");
КонецФункции

&НаСервере
Процедура бг_ДобавитьПолеПаллетизация()
		
	бг_УпаковкаПаллета = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_УпаковкаПаллета",
		Элементы.ГруппаНоменклатура,
		"Объект.бг_УпаковкаПаллета",
		,
		Элементы.Назначение);
	бг_УпаковкаПаллета.АвтоМаксимальнаяШирина = Ложь;
	бг_УпаковкаПаллета.МаксимальнаяШирина = 28;
	
	бг_УпаковкаПаллетаТовары = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_ТоварыУпаковкаПаллета",
		Элементы.Товары,
		"Объект.Товары.бг_УпаковкаПаллета",
		,
		Элементы.ТоварыГруппаКолонокСерия);
	
КонецПроцедуры

&НаСервере
Функция бг_ЭтоСборкаАлкогольнойПродукции()
	
	Возврат Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
		И бг_Номенклатура.ЕстьАлкогольнаяПродукция(Объект.Номенклатура);
	
КонецФункции

&НаСервере
Функция бг_ЭтоРазборкаАлкогольнойПродукции()
	
	Возврат Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
		И бг_Номенклатура.ЕстьАлкогольнаяПродукция(Объект.Номенклатура);
	
КонецФункции

&НаКлиенте
Процедура бг_ЗаполнитьПаллетизациюНоменклатурыПоУмолчанию()

	ПаллетизацияНоменклатурыПоУмолчанию = бг_ПаллетизацияНоменклатурыПоУмолчанию(Объект.Номенклатура);
	
	Если ЗначениеЗаполнено(ПаллетизацияНоменклатурыПоУмолчанию) Тогда
		Объект.бг_УпаковкаПаллета = ПаллетизацияНоменклатурыПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция бг_ПаллетизацияНоменклатурыПоУмолчанию(Номенклатура)

	Возврат бг_Номенклатура.ПаллетизацияНоменклатурыПоУмолчанию(Номенклатура);
	
КонецФункции

&НаСервере
Функция бг_ДополнительныеПараметрыЗаполненияСерииКомплекта()
	
	ДополнительныеПараметрыЗаполнения = Неопределено;
	
	Если Объект.Товары.Количество() > 0 Тогда
		ДанныеКомплектующегоТовара = Объект.Товары[0];
		
		Если ЗначениеЗаполнено(ДанныеКомплектующегоТовара.Серия) Тогда
			ДополнительныеПараметрыЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				ДанныеКомплектующегоТовара.Серия,
				"ДатаПроизводства, ПроизводительЕГАИС, бг_ОрганизацияВладелец, бг_ОрганизацияЕГАИСВладелец,
				|Справка2ЕГАИС, Справка2ЕГАИС.АлкогольнаяПродукция, бг_Сертификат");
			ДополнительныеПараметрыЗаполнения.Вставить("бг_УпаковкаПаллета", Объект.бг_УпаковкаПаллета);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДополнительныеПараметрыЗаполнения;
	
КонецФункции

&НаСервере
Процедура бг_ЗарегистрироватьСоответствиеНоменклатурыЕГАИС(Номенклатура, Серия,
									ДополнительныеПараметрыЗаполненияСерии)
		
	Если ЗначениеЗаполнено(Серия) И ДополнительныеПараметрыЗаполненияСерии <> Неопределено Тогда
		АлкогольнаяПродукция = ДополнительныеПараметрыЗаполненияСерии.Справка2ЕГАИСАлкогольнаяПродукция;
		Справка2 = ДополнительныеПараметрыЗаполненияСерии.Справка2ЕГАИС;
		
		СоответствиеНоменклатурыЕГАИС = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = АлкогольнаяПродукция;
		СоответствиеНоменклатурыЕГАИС.Номенклатура         = Номенклатура;
		СоответствиеНоменклатурыЕГАИС.Серия                = Серия;
		СоответствиеНоменклатурыЕГАИС.Справка2             = Справка2;
		СоответствиеНоменклатурыЕГАИС.Записать();
	КонецЕсли;
	
КонецПроцедуры

 #Область ПриходныйОрдерНаТовары

// ОбщиеМеханизмы.ПриходныйОрдер
&НаСервере
Процедура бг_ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары()
	
	бг_Склады.ОбновитьОтображениеДекорацииПриходногоОрдераНаТовары(
		ЭтотОбъект,
		Метаданные.Документы.СборкаТоваров);
		
КонецПроцедуры

&НаКлиенте
Процедура бг_ОткрытьФормуНовогоПриходногоОрдераНаТовары()
	
	Основание = Новый Структура;
	Основание.Вставить("Распоряжение", Объект.Ссылка);
	Основание.Вставить("Отправитель", Объект.Склад);
	Основание.Вставить("Склад", Объект.Склад);
	Основание.Вставить("ДатаВходящегоДокумента", Объект.Дата);
	Основание.Вставить("НомерВходящегоДокумента", Объект.Номер);
	Основание.Вставить("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
	
	Основание.Вставить(
		"СкладскаяОперация",
		ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов"));
	
	Основание.Вставить(
		"ДатаПоступления",
		?(ЗначениеЗаполнено(Объект.ДатаПоступления), Объект.ДатаПоступления, Объект.Дата));
	
	ОткрытьФорму(
		"Документ.ПриходныйОрдерНаТовары.Форма.ФормаДокумента",
		Новый Структура("Основание", Основание));
	
КонецПроцедуры
// Конец ОбщиеМеханизмы.ПриходныйОрдер

#КонецОбласти // Конец ПриходныйОрдерНаТовары

#Область РасходныйОрдерНаТовары

// ОбщиеМеханизмы.РасходныйОрдерНаТовары
&НаСервере
Процедура бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары()
	
	бг_Склады.ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары(
		ЭтотОбъект,
		Метаданные.Документы.СборкаТоваров);
		
КонецПроцедуры

&НаСервере
Процедура бг_ОформитьРасходныйОрдер()
	
	ПараметрыСозданияРасходныхОрдеров = СкладыСервер.ПараметрыПереоформленияРасходныхОрдеров();
	
	ПараметрыСозданияРасходныхОрдеров.Получатель = Объект.Склад;
	ПараметрыСозданияРасходныхОрдеров.Склад = Объект.Склад;
	ПараметрыСозданияРасходныхОрдеров.РаспоряженияНаОтгрузку = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		Объект.Ссылка);
	
	СкладыСервер.ПереоформитьРасходныеОрдера(ПараметрыСозданияРасходныхОрдеров);
	
	бг_ОбновитьОтображениеДекорацииРасходногоОрдераНаТовары();
	
КонецПроцедуры
// Конец ОбщиеМеханизмы.РасходныйОрдерНаТовары

#КонецОбласти // Конец РасходныйОрдерНаТовары

#Область Комплектация

&НаСервере
Процедура бг_ДобавитьПолеКомплектация()
	
	ИмяПоля = "бг_ДекорацияКомплектацияПродукцииЕГАИС";
	
	Если Элементы.Найти(ИмяПоля) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДекорацияКомплектация = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьДекорациюНаФорму(
		ЭтотОбъект,
		ИмяПоля,,
		НСтр("ru = ' '"));
	ДекорацияКомплектация.Ширина = 100;
	
КонецПроцедуры

&НаСервере
Процедура бг_ОбновитьОтображениеДекорацииКомплектация()
	
	ДекорацияКомплектация = Элементы.бг_ДекорацияКомплектацияПродукцииЕГАИС;
	
	ДекорацияКомплектация.Видимость = бг_ОтображатьДекорациюСозданияКомплектации();
	ДекорацияКомплектация.Заголовок = бг_ТекстЗаголовкаДекорацииКомплектация();
	
КонецПроцедуры

Функция бг_ОтображатьДекорациюСозданияКомплектации()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Не Объект.Проведен Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЕстьПравоСозданияКомплектации =
		ПравоДоступа("Изменение", Метаданные.Документы.битКомплектацияПродукцииЕГАИС)
			Или Пользователи.ЭтоПолноправныйПользователь();
			
	СписокНоменклатуры = Новый Массив;
	
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
			И СписокНоменклатуры.Найти(СтрокаТовары.Номенклатура) = Неопределено Тогда
			
			СписокНоменклатуры.Добавить(СтрокаТовары.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.Номенклатура)
		И СписокНоменклатуры.Найти(Объект.Номенклатура) = Неопределено Тогда
		
		СписокНоменклатуры.Добавить(Объект.Номенклатура);
	КонецЕсли;
	
	Если СписокНоменклатуры.Количество() = 0 Тогда
		ЕстьМаркируемаяАлкогольнаяПродукция = Ложь;
	Иначе
		ЕстьМаркируемаяАлкогольнаяПродукция = бг_Номенклатура.ЕстьМаркируемаяАлкогольнаяПродукция(СписокНоменклатуры);
	КонецЕсли;
	
	Возврат ЕстьПравоСозданияКомплектации И ЕстьМаркируемаяАлкогольнаяПродукция;
	
КонецФункции

Функция бг_ТекстЗаголовкаДекорацииКомплектация()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭлементыФорматированнойСтроки = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	битКомплектацияПродукцииЕГАИС.Ссылка КАК Ссылка,
	|	битКомплектацияПродукцииЕГАИС.Номер КАК Номер,
	|	битКомплектацияПродукцииЕГАИС.Дата КАК Дата
	|ИЗ
	|	Документ.битКомплектацияПродукцииЕГАИС КАК битКомплектацияПродукцииЕГАИС
	|ГДЕ
	|	битКомплектацияПродукцииЕГАИС.Основание = &Основание
	|	И НЕ битКомплектацияПродукцииЕГАИС.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаголовокДекорации = СтрШаблон(
			НСтр("ru = 'Комплектация продукции ЕГАИС %1 от %2'"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер),
			Формат(Выборка.Дата, "ДФ=dd.MM.yyyy"));
		
		ЭлементыФорматированнойСтроки.Добавить(
			Новый ФорматированнаяСтрока(
				ЗаголовокДекорации,,
				ЦветаСтиля.ГиперссылкаЦвет,,
				ПолучитьНавигационнуюСсылку(Выборка.Ссылка)));
				
	Иначе
		
		ЗаголовокДекорации = НСтр("ru = 'Оформить комплектацию продукции ЕГАИС'");
		
		ЭлементыФорматированнойСтроки.Добавить(
			Новый ФорматированнаяСтрока(
				ЗаголовокДекорации,,
				ЦветаСтиля.ГиперссылкаЦвет,,
				"бг_ОформитьКомплектациюПродукцииЕГАИС"));
				
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(ЭлементыФорматированнойСтроки);
	
КонецФункции

&НаКлиенте
Процедура бг_ОткрытьФормуНовойКомплектации()
	
	Основание = Новый Структура;
	Основание.Вставить("Основание", Объект.Ссылка);
	
	ОткрытьФорму(
		"Документ.битКомплектацияПродукцииЕГАИС.Форма.ФормаДокумента",
		Новый Структура("Основание", Основание));
	
КонецПроцедуры

#КонецОбласти // Конец Комплектация

#КонецОбласти

