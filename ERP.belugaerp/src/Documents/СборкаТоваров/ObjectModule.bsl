
#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И Не Отказ Тогда
		бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ);
	КонецЕсли;
	
КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)
	
	бг_АкцизПоПриобретеннымЦенностямМатериалы.Очистить();
	бг_АкцизПоПриобретеннымЦенностямПродукция.Очистить();
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	
	бг_СформироватьДвиженияСоставКомплекта();
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	ХозяйственныеОперации = Перечисления.ХозяйственныеОперации;
	
	// Проверка количества в шапке.
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "Объект";
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);

	// Проверка количества в т.ч. товары.
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);

	// Если сборка - доля стоимости не нужна.
	Если ХозяйственнаяОперация = ХозяйственныеОперации.СборкаТоваров Или Товары.Количество() < 2 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ДоляСтоимости");
	КонецЕсли;

	// Если накладная по заказу - то код строки должен быть заполнен.
	Если Не ЗначениеЗаполнено(ЗаказНаСборку) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КодСтроки");
	КонецЕсли;

	// Проверка характеристки в шапке.
	Если Не ИспользоватьХарактеристики Или Не Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");
	КонецЕсли;
		
	ЗапретитьПоступлениеТоваровБезНомеровГТД = ПолучитьФункциональнуюОпцию("ЗапретитьПоступлениеТоваровБезНомеровГТД");
	ВестиУчетПоГТД = ОбщегоНазначенияУТ.ЗначенияРеквизитовОбъектаПоУмолчанию(Номенклатура, "ВестиУчетПоГТД").ВестиУчетПоГТД;
	КонтролироватьНомераГТД = ЗапретитьПоступлениеТоваровБезНомеровГТД
		И ((ХозяйственнаяОперация = ХозяйственныеОперации.СборкаТоваров И ВестиУчетПоГТД)
		ИЛИ ХозяйственнаяОперация = ХозяйственныеОперации.РазборкаТоваров И НЕ ВестиУчетПоГТД);
	
	Если (ХозяйственнаяОперация = ХозяйственныеОперации.СборкаТоваров) И ЗначениеЗаполнено(НоменклатураОсновногоКомпонента) Тогда
		ПредставлениеОсновногоКомпонента =
			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(НоменклатураОсновногоКомпонента, ХарактеристикаОсновногоКомпонента);
			
		ОтборТоваров =
			Новый Структура("Номенклатура, Характеристика", НоменклатураОсновногоКомпонента, ХарактеристикаОсновногоКомпонента);
		Если Товары.НайтиСтроки(ОтборТоваров).Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Основной компонент `%НазваниеТовара%` в товарах не найден.
				|Укажите основной компонент из перечня товаров';
				|en = 'Main component ""%НазваниеТовара%"" is not found in the list of goods.
				|Choose a main component from the list of goods'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НазваниеТовара%", ПредставлениеОсновногоКомпонента);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "Объект", Отказ);
		КонецЕсли;
		
		Если КонтролироватьНомераГТД Тогда
			КомпонентВестиУчетПоГТД =
				ОбщегоНазначенияУТ.ЗначенияРеквизитовОбъектаПоУмолчанию(НоменклатураОсновногоКомпонента,"ВестиУчетПоГТД").ВестиУчетПоГТД;
			Если Не КомпонентВестиУчетПоГТД Тогда
				ТекстСообщения = НСтр("ru = 'По основному компоненту `%НазваниеТовара%` учет по ГТД не ведется.
					|Укажите основной компонент, по которому ведется учет по ГТД.';
					|en = 'CCD records are kept for main component `%НазваниеТовара%`.
					|Specify a main component that has CCD records.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НазваниеТовара%", ПредставлениеОсновногоКомпонента);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		
		ПроверятьХарактеристикуКомпонента = 
			ИспользоватьХарактеристики И Не ЗначениеЗаполнено(ХарактеристикаОсновногоКомпонента)
			И Справочники.Номенклатура.ХарактеристикиИспользуются(НоменклатураОсновногоКомпонента);
		Если ПроверятьХарактеристикуКомпонента Тогда
			ПроверяемыеРеквизиты.Добавить("ХарактеристикаОсновногоКомпонента");
		КонецЕсли;
		
	ИначеЕсли (ХозяйственнаяОперация = ХозяйственныеОперации.СборкаТоваров) И КонтролироватьНомераГТД Тогда
		ТекстСообщения = НСтр("ru = 'Требуется определять страну происхождения и номера ГТД комплекта.
			|Укажите основной компонент, по которому ведется учет по ГТД.';
			|en = 'Country of origin and CCD numbers are required. 
			|Specify a main component that has CCD records.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "Объект", Отказ);
		
	ИначеЕсли (ХозяйственнаяОперация = ХозяйственныеОперации.РазборкаТоваров) И КонтролироватьНомераГТД Тогда
		Запрос = Новый Запрос("
			|ВЫБРАТЬ
			|	Компоненты.НомерСтроки КАК НомерСтроки,
			|	Компоненты.Номенклатура
			|ПОМЕСТИТЬ Компоненты
			|ИЗ &Компоненты КАК Компоненты;
			|
			|ВЫБРАТЬ
			|	Компоненты.НомерСтроки,
			|	ИСТИНА КАК ВестиУчетПоГТД
			|ИЗ Компоненты КАК Компоненты
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Описания
			|		ПО Описания.Ссылка = Компоненты.Номенклатура
			|ГДЕ Описания.ВестиУчетПоГТД
			|");
		Запрос.УстановитьПараметр("Компоненты", Товары.Выгрузить( , "НомерСтроки, Номенклатура"));
		Выборка = Запрос.Выполнить().Выбрать();
		ТекстСообщения = НСтр("ru = 'Для комплектующей в строке %НомерСтроки% списка ""Товары"" ведется учет по ГТД.
			|Такие позиции недопустимы, если для разбираемого комплекта не ведется учет по ГТД.';
			|en = 'CCD records are kept for the component in line %НомерСтроки% of ""Goods"" list.
			|These items are invalid if the disassembled set has no CCD records.'");
		Пока Выборка.Следующий() Цикл
			ИтоговоеСообщение = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "НомерГТД");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИтоговоеСообщение, , Поле, "Объект", Отказ);
		КонецЦикла;
	КонецЕсли;

	// Проверка характеристик в т.ч. товары.
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
#Удаление	
	ОтборТоваров = Новый Структура("Номенклатура, Характеристика", Номенклатура, Характеристика);
	ПредставлениеКомплекта = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Номенклатура, Характеристика);
	Для Каждого СтрокаТЧ Из Товары.НайтиСтроки(ОтборТоваров) Цикл
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указан товар ""%НазваниеТовара%"".
			|Один и тот же товар не может являться и комплектом, и комплектующей одновременно.';
			|en = 'You have specified ""%НазваниеТовара%"" in line %НомерСтроки%.
			|The same product cannot be both a set and a component.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НазваниеТовара%", ПредставлениеКомплекта);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаТЧ.НомерСтроки);
	
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Номенклатура");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "Объект", Отказ);
	КонецЦикла;
#КонецУдаления
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.СборкаТоваров);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, ПараметрыУказанияСерий.ТЧ, Отказ, МассивНепроверяемыхРеквизитов);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, ПараметрыУказанияСерий.Шапка, Отказ, МассивНепроверяемыхРеквизитов);
		
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СборкаТоваровЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяТабличнойЧасти = "Товары";
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(ЭтотОбъект, СборкаПодДеятельность, ПараметрыПроверки, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область АкцизыПоПриобретеннымЦенностям

Процедура бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не СборкаТоваровЛокализация.бг_ТребуетсяЗаполнениеАкцизовПоПриобретеннымЦенностям(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СтатусыСостоянияСписываемогоСырья = СборкаТоваровЛокализация.бг_СтатусыСостоянияСписываемогоСырья();
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаТаблицаМатериалы());
	МассивТекстов.Добавить(СборкаТоваровЛокализация.бг_ТекстЗапросаПродукция());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиАкцизовПоПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиВыпущеннойПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаРасчетСписанияАкцизовПоПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаСписаниеВыпускПродукции());
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Если ДополнительныеСвойства.Свойство("бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям")
		И ДополнительныеСвойства.бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям = Истина Тогда
		ДатаОстатков = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	Иначе
		ДатаОстатков = '00010101';
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОстатков",     ДатаОстатков);
	Запрос.УстановитьПараметр("Товары",           Товары.Выгрузить(, "НомерСтроки, Номенклатура, Серия, Количество"));
	Запрос.УстановитьПараметр("Номенклатура",     Номенклатура);
	Запрос.УстановитьПараметр("Серия",            Серия);
	Запрос.УстановитьПараметр("Количество",       Количество);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("СтатусыАкциза",    СтатусыСостоянияСписываемогоСырья.СтатусыАкциза);
	Запрос.УстановитьПараметр("СостоянияСырья",   СтатусыСостоянияСписываемогоСырья.СостоянияСырья);
	Запрос.УстановитьПараметр("ТипМестаХранения", Перечисления.бг_ТипыМестХраненияПодакцизнойПродукции.Склад);
	
	ТочностьУчетаМатериалов = РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностям.ТочностьУчетаПодакцизныхМатериалов();
	Запрос.УстановитьПараметр("ТочностьУчета", ТочностьУчетаМатериалов);
	
	Результат = Запрос.ВыполнитьПакет();
	бг_АкцизПоПриобретеннымЦенностямМатериалы.Загрузить(Результат[Результат.ВГраница() - 1].Выгрузить());
	бг_АкцизПоПриобретеннымЦенностямПродукция.Загрузить(Результат[Результат.ВГраница()].Выгрузить());
КонецПроцедуры

#КонецОбласти // Конец АкцизыПоПриобретеннымЦенностям

Процедура бг_СформироватьДвиженияСоставКомплекта()
	
	Движения.бг_СоставКомплектов.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СборкаТоваровТовары.Номенклатура КАК Комплектующее,
	|	СборкаТоваровТовары.Серия КАК СерияКомплектующего,
	|	СборкаТоваров.Номенклатура КАК Комплект,
	|	СборкаТоваров.Серия КАК СерияКомплекта
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
	|		ПО (СборкаТоваровТовары.Ссылка = &Ссылка)
	|			И (СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров))
	|			И СборкаТоваров.Ссылка = СборкаТоваровТовары.Ссылка
	|			И (СборкаТоваров.Номенклатура.ВидНоменклатуры.АлкогольнаяПродукция)
	|			И (СборкаТоваровТовары.Номенклатура.ВидНоменклатуры.АлкогольнаяПродукция)";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	
	Движения.бг_СоставКомплектов.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

#КонецОбласти
