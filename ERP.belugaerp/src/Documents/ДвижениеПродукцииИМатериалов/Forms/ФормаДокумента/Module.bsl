#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	бг_ДобавитьКомандуЗаполнитьСерииПоFIFO();
	бг_ДобавитьКомандуЗаполненияСерийФСМ();
	бг_ДобавитьКомандыУстановитьКоличество();
	бг_ДобавитьКомандуЗаполнитьОстаткамиВКладовой();
	бг_ДобавитьКомандуЗаполненияОстатковФСМ();
	бг_ДобавитьДанныеИКомандыПропущенныеФСМ();
	бг_ДобавитьКомандуЗаполненияМатериаловПеремещениеВИПТЛ();
	
	бг_УстановитьВидимостьДоступностьКоманд();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) 
		И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой")
		Тогда
		Если ЗначениеЗаполнено(Объект.Дата) Тогда
			Объект.Дата = КонецДня(Объект.Дата);
		Иначе
			Объект.Дата = КонецДня(ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_ХозяйственнаяОперацияПриИзмененииПосле(Элемент)
	бг_УстановитьВидимостьДоступностьКоманд();
КонецПроцедуры

&НаКлиенте
Процедура бг_ДанныеФСМНачалоДиапазонаПриИзменении(Элемент)
	бг_ВычислитьКоличествоМарокВДиапазоне();
КонецПроцедуры

&НаКлиенте
Процедура бг_ДанныеФСМКонецДиапазонаПриИзменении(Элемент)
	бг_ВычислитьКоличествоМарокВДиапазоне();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_АРМУстановитьКоличество(Команда)
	ПараметрыФормы = Новый Структура("Данные, Период", бг_ДанныеДокументаКлиент(), Объект.Дата);
	ОткрытьФорму("Документ.ДвижениеПродукцииИМатериалов.Форма.бг_УстановкаКоличества", ПараметрыФормы, 
			ЭтотОбъект, , , , 		
			Новый ОписаниеОповещения("бг_АРМУстановитьКоличествоЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура бг_АРМУстановитьКоличествоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И ЭтоАдресВременногоХранилища(Результат) Тогда
		бг_ОбработкаИзмененияКоличества(Результат);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_УстановитьКоличество(Команда)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Количество = бг_КоличествоПоНоменклатуреКлиент(ТекущиеДанные.Номенклатура);
		УстановитьКоличествоЗавершение = Новый ОписаниеОповещения("бг_УстановитьКоличествоЗавершение", ЭтотОбъект,
				Новый Структура("Номенклатура, Распоряжение", ТекущиеДанные.Номенклатура, ТекущиеДанные.Распоряжение));
		ПоказатьВводЧисла(УстановитьКоличествоЗавершение, Количество, 
						НСтр("ru='Итоговое количество материала'"), 15, 3); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_УстановитьКоличествоЗавершение(ВыбранноеЧисло, ДополнительныеПараметры) Экспорт
	Если Не ВыбранноеЧисло = Неопределено Тогда
		ДополнительныеПараметры.Вставить("Количество", Макс(0, ВыбранноеЧисло));
		бг_УстановитьВыбранноеКоличествоСервер(ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбеспечениеЗаполнитьСерииПоFIFO(Команда)
	
	Если Не бг_ЗаполнитьСерииПоFIFOСервер() Тогда
		ТекстПредупреждения = НСтр("ru = 'В табличной части нет товаров, по которым серии можно заполнить по FIFO.';
								|en = 'The tabular section contains no goods that can be used to fill in series by FIFO.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьСерииФСМ(Команда)
	
	Если Не бг_ЗаполнитьСерииФСМ() Тогда
		ТекстПредупреждения = НСтр("ru = 'В табличной части нет товаров, по которым можно заполнить серии ФСМ.';
								|en = 'The tabular section contains no goods that can be used to fill in series FSM.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьОстаткиФСМ(Команда)
	Если Не бг_ПроверитьЗаполнениеДокументаПередЗаполнениемОстатковФСМ() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("бг_ЗаполнитьОстаткиФСМЗавершение", ЭтотОбъект);
	Если Объект.Товары.Количество() <> 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьОстаткиФСМЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		бг_ЗаполнитьОстаткиФСМ();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьОстаткамиВКладовой(Команда)
	Если Не бг_ПроверитьЗаполнениеДокументаПередЗаполнениемОстатковФСМ() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("бг_ТоварыЗаполнитьОстаткамиВКладовойЗавершение", ЭтотОбъект);
	Если Объект.Товары.Количество() <> 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьОстаткамиВКладовойЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		бг_ЗаполнитьОстаткиВКладовойСервер();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьПропущеннымиМарками(Команда)
	Если Не бг_ПроверитьЗаполнениеДокументаПередЗаполнениемОстатковФСМ() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("бг_ЗаполнитьПропущеннымиМаркамиЗавершение", ЭтотОбъект);
	Если Объект.бг_ДанныеФСМ.Количество() <> 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьПропущеннымиМаркамиЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		бг_ЗаполнитьПропущенныеМаркиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьПоДаннымФСМ(Команда)
	Оповещение = Новый ОписаниеОповещения("бг_ЗаполнитьПоДаннымФСМЗавершение", ЭтотОбъект);
	Если Объект.Товары.Количество() <> 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ЗаполнитьПоДаннымФСМЗавершение(ВыбранноеЗначение, ПараметрыВопроса) Экспорт
	Если ВыбранноеЗначение = КодВозвратаДиалога.Да Тогда
		бг_ЗаполнитьПоДаннымФСМНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьМатериалыИПТЛ(Команда)
	ПараметрыФормы = Новый Структура("Период", Объект.Дата);
	
	ОткрытьФорму("Документ.ДвижениеПродукцииИМатериалов.Форма.бг_ПеремещениеМатериаловВИПТЛ",
			ПараметрыФормы,
			ЭтотОбъект, , , ,
			Новый ОписаниеОповещения("бг_ТоварыЗаполнитьМатериалыИПТЛЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыЗаполнитьМатериалыИПТЛЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено И ЭтоАдресВременногоХранилища(Результат) Тогда
		бг_ЗаполнитьМатериалыИПТЛ(Результат);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииРаботыСФормой

&НаСервере
Процедура бг_УстановитьВидимостьДоступностьКоманд()
	ПередачаМатериаловВКладовую = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
	ВозвратМатериаловИзКладовой = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой;
	ПеремещениеПолуфабрикатов   = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов;
	
	Элементы.бг_ОбеспечениеЗаполнитьСерииПоFIFO.Видимость = ПередачаМатериаловВКладовую 
								Или ПеремещениеПолуфабрикатов Или ВозвратМатериаловИзКладовой;
	Элементы.бг_ТоварыЗаполнитьСерииФСМ.Видимость = ПередачаМатериаловВКладовую;
	Элементы.бг_ТоварыЗаполнитьОстаткиФСМ.Видимость = ВозвратМатериаловИзКладовой;
	Элементы.бг_ЗаполнитьПропущеннымиМарками.Видимость = ВозвратМатериаловИзКладовой;
	Элементы.бг_ЗаполнитьПоДаннымФСМ.Видимость = ВозвратМатериаловИзКладовой;
	Элементы.бг_ТоварыЗаполнитьМатериалыИПТЛ.Видимость    = ПеремещениеПолуфабрикатов;
	
	Элементы.бг_СтраницаДанныеФСМ.Видимость = ВозвратМатериаловИзКладовой;
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполнитьОстаткамиВКладовой()
	ИмяКоманды       = "бг_ТоварыЗаполнитьОстаткамиВКладовой";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить остатками в кладовой'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ГруппаЗаполнитьЦены, ВидКнопкиФормы.КнопкаКоманднойПанели);
	ТекущаяКоманда = Команды[ИмяКоманды];
	ТекущаяКоманда.ИзменяетСохраняемыеДанные = Истина;
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияОстатковФСМ()
	ИмяКоманды       = "бг_ТоварыЗаполнитьОстаткиФСМ";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить остатки ФСМ'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ТоварыЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьДанныеИКомандыПропущенныеФСМ()
	СтраницаМарки = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьСтраницуНаФорму(
			ЭтотОбъект, "бг_СтраницаДанныеФСМ", НСтр("ru='Данные ФСМ'"), "ГруппаСтраницы");
	СтраницаМарки.ПутьКДаннымЗаголовка = "Объект.бг_ДанныеФСМ.КоличествоСтрок";
	ТаблицаМаркиФСМ = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьТаблицуНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМ", СтраницаМарки, "Объект.бг_ДанныеФСМ");
	ТаблицаМаркиФСМ.Подвал = Истина;
	бг_ДанныеФСМНоменклатура = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМНоменклатура", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.Номенклатура");
	бг_ДанныеФСМНоменклатура.Ширина = 16;
	бг_ДанныеФСМСерия = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМСерия", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.Серия");
	бг_ДанныеФСМСерия.Ширина = 14;
	бг_ДанныеФСМНазначение = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМНазначение", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.Назначение");
	бг_ДанныеФСМНазначение.Ширина = 14;
	бг_ДанныеФСМРазряд = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМРазряд", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.Разряд");
	бг_ДанныеФСМРазряд.Ширина = 8;
	бг_ДанныеФСМНачалоДиапазона = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМНачалоДиапазона", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.НачалоДиапазона");
	бг_ДанныеФСМНачалоДиапазона.Ширина = 12;
	бг_ДанныеФСМНачалоДиапазона.УстановитьДействие("ПриИзменении", "бг_ДанныеФСМНачалоДиапазонаПриИзменении");
	бг_ДанныеФСМКонецДиапазона = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМКонецДиапазона", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.КонецДиапазона");
	бг_ДанныеФСМКонецДиапазона.Ширина = 12;
	бг_ДанныеФСМКонецДиапазона.УстановитьДействие("ПриИзменении", "бг_ДанныеФСМКонецДиапазонаПриИзменении");
	бг_ДанныеФСМКоличество = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
			ЭтотОбъект, "бг_ДанныеФСМКоличество", ТаблицаМаркиФСМ, "Объект.бг_ДанныеФСМ.Количество");
	бг_ДанныеФСМКоличество.Ширина = 10;
	бг_ДанныеФСМКоличество.ТолькоПросмотр = Истина;
	бг_ДанныеФСМКоличество.ПутьКДаннымПодвала = "Объект.бг_ДанныеФСМ.ИтогКоличество";
			
	ИмяКоманды = "бг_ЗаполнитьПропущеннымиМарками";
	ЗаголовокКоманды = НСтр("ru='Заполнить пропущенными'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды, 
			ТаблицаМаркиФСМ.КоманднаяПанель, ЗаголовокКоманды, ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
	ТекущаяКоманда = Команды[ИмяКоманды];
	ТекущаяКоманда.ИзменяетСохраняемыеДанные = Истина;
	ИмяКоманды = "бг_ЗаполнитьПоДаннымФСМ";
	ЗаголовокКоманды = НСтр("ru='По данным ФСМ'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды, 
			Элементы.ТоварыЗаполнить, ЗаголовокКоманды, ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
	ТекущаяКоманда = Команды[ИмяКоманды];
	ТекущаяКоманда.ИзменяетСохраняемыеДанные = Истина;
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполнитьСерииПоFIFO()
	ИмяКоманды       = "бг_ОбеспечениеЗаполнитьСерииПоFIFO";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить серии по FIFO';
								|en = 'Fill in series by FIFO'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ТоварыЗаполнитьСерииПоFEFO , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандыУстановитьКоличество()
	ИмяКоманды       = "бг_АРМУстановитьКоличество";
	ЗаголовокКоманды = НСтр("ru = 'АРМ. Установить количество'; en = 'AVP. Set quantity'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыКоманднаяПанель, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ГруппаТорговоеОборудование, ВидКнопкиФормы.КнопкаКоманднойПанели);
	КомандаУстановитьКоличество = ЭтотОбъект.Команды[ИмяКоманды];
	КомандаУстановитьКоличество.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.F5, Ложь, Истина, Ложь);
	КомандаУстановитьКоличество.Картинка = БиблиотекаКартинок.Зарплата48;
	КомандаУстановитьКоличество.Подсказка = НСтр("ru='АРМ установки количества'"); 
	КомандаУстановитьКоличество.Отображение = ОтображениеКнопки.Картинка;
	КомандаУстановитьКоличество.ИзменяетСохраняемыеДанные = Истина;
	
	ИмяКоманды       = "бг_УстановитьКоличество";
	ЗаголовокКоманды = НСтр("ru = 'Установить количество'; en = 'Set quantity'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыКоманднаяПанель, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ГруппаТорговоеОборудование, ВидКнопкиФормы.КнопкаКоманднойПанели);
	КомандаУстановитьКоличество = ЭтотОбъект.Команды[ИмяКоманды];
	КомандаУстановитьКоличество.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.F5);
	КомандаУстановитьКоличество.Картинка = БиблиотекаКартинок.ОбъединитьСтроки;
	КомандаУстановитьКоличество.Подсказка = НСтр("ru='Установить количество материала'"); 
	КомандаУстановитьКоличество.Отображение = ОтображениеКнопки.Картинка;
	КомандаУстановитьКоличество.ИзменяетСохраняемыеДанные = Истина;
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияСерийФСМ()
	ИмяКоманды       = "бг_ТоварыЗаполнитьСерииФСМ";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить серии ФСМ';
								|en = 'Fill in series FSM'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ТоварыЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьКомандуЗаполненияМатериаловПеремещениеВИПТЛ()
	ИмяКоманды       = "бг_ТоварыЗаполнитьМатериалыИПТЛ";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить материалами для ИПТЛ'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ТоварыЗаполнитьСерииПоFEFO, ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

#КонецОбласти 

#Область ПомощникУстановкиКоличества

&НаСервере
Процедура бг_ОбработкаИзмененияКоличества(АдресВоВременномХранилище)
	ВыбранныеПозиции = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	ПараметрыОбработки = Новый Структура("Номенклатура, Количество");
	Для Каждого ВыбраннаяПозиции Из ВыбранныеПозиции Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ВыбраннаяПозиции);
		бг_УстановитьВыбранноеКоличествоСервер(ПараметрыОбработки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция бг_ДанныеДокументаКлиент()
	Результат = Новый Массив;
	Для каждого СтрокаДокумента Из Объект.Товары Цикл
		НоваяСтрока = Новый Структура("Номенклатура, Количество");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
		Результат.Добавить(НоваяСтрока);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция бг_КоличествоПоНоменклатуреКлиент(Номенклатура)
	Результат = 0;
	Для каждого СтрокаДокумента Из Объект.Товары Цикл
		Если СтрокаДокумента.Номенклатура = Номенклатура Тогда
			Результат = Результат + СтрокаДокумента.Количество;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция бг_УстановитьВыбранноеКоличествоСервер(ПараметрыОбработки)
	Номенклатура = ПараметрыОбработки.Номенклатура;
	Количество = ПараметрыОбработки.Количество;
	Распоряжение = Неопределено;
	КэшированныеЗначения = Неопределено;
	
	СтрокиУдалить = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, КодСтроки", 
						Номенклатура, 0));
	Для Каждого СтрокаУдалить Из СтрокиУдалить Цикл
		Распоряжение = СтрокаУдалить.Распоряжение;
		Объект.Товары.Удалить(СтрокаУдалить);
	КонецЦикла;
	
	СтрокиТовары = Объект.Товары.Выгрузить(Новый Структура("Номенклатура", Номенклатура));
	Если Не ЗначениеЗаполнено(Распоряжение) И СтрокиТовары.Количество() > 0 Тогда
		Распоряжение = СтрокиТовары[0].Распоряжение;
	КонецЕсли;
	КоличествоПоНазначению = СтрокиТовары.Итог("Количество");
	
	Если Количество <= КоличествоПоНазначению Тогда
		СтрокиУдалить = Новый Массив;
		КоличествоККорректировке = КоличествоПоНазначению - Количество;
		СтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
		Для каждого СтрокаТовары Из СтрокиТовары Цикл
			Если КоличествоККорректировке = 0 Тогда
				Прервать;
			КонецЕсли;
			Если СтрокаТовары.Количество > КоличествоККорректировке Тогда
				СтрокаТовары.Количество = СтрокаТовары.Количество - КоличествоККорректировке;
				СтрокаТовары.КоличествоУпаковок = СтрокаТовары.Количество;
				СтрокаТовары.Упаковка = Неопределено;
				КоличествоККорректировке = 0;
			Иначе
				СтрокиУдалить.Добавить(СтрокаТовары);
				КоличествоККорректировке = КоличествоККорректировке - СтрокаТовары.Количество;
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаУдалить Из СтрокиУдалить Цикл
			Объект.Товары.Удалить(СтрокаУдалить);
		КонецЦикла;
	Иначе
		СтрокаТовары = Объект.Товары.Добавить();
		СтрокаТовары.Номенклатура = Номенклатура;
		СтрокаТовары.Количество = Количество - КоличествоПоНазначению;
		СтрокаТовары.КоличествоУпаковок = СтрокаТовары.Количество;
		СтрокаТовары.Распоряжение = Распоряжение;
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(ЭтотОбъект, СтрокаТовары, СтруктураДействий);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
КонецФункции

#КонецОбласти 

#Область ЗаполнениеТабличныхЧастей

&НаСервере
Процедура бг_ЗаполнитьОстаткиВКладовойСервер()
	Объект.Товары.Очистить();
	Период = Новый Граница(Объект.Дата, ВидГраницы.Включая);
	Объект.Товары.Загрузить(бг_Номенклатура.ОстаткиНаСкладеНаДату(Период, Объект.Отправитель, Объект.Ссылка));
	бг_ДействияПослеЗагрузкиТовары();
КонецПроцедуры

&НаСервере
Функция бг_ЗаполнитьСерииПоFIFOСервер()
	
	Если бг_Номенклатура.ЕстьСтрокиДляЗаполненияСерийПоFIFO(Объект.Товары) Тогда
		
		бг_Номенклатура.ЗаполнитьСерииПоFIFOВТЧТовары(Объект, ПараметрыУказанияСерий);
		Модифицированность = Истина;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция бг_ЗаполнитьСерииФСМ()
	
	Если бг_Номенклатура.ЕстьСтрокиДляЗаполненияСерийФСМ(Объект.Товары) Тогда
		
		бг_Номенклатура.ЗаполнитьСерииФСМВТЧТовары(Объект, ПараметрыУказанияСерий);
		Модифицированность = Истина;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция бг_ПроверитьЗаполнениеДокументаПередЗаполнениемОстатковФСМ()
	Если Не ЗначениеЗаполнено(Объект.Отправитель) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен склад отправитель'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "Объект.Отправитель");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура бг_ЗаполнитьОстаткиФСМ()
	бг_ДвижениеПродукцииИМатериалов.бг_ЗаполнитьОстаткиФСМ(Объект);
КонецПроцедуры

&НаСервере
Процедура бг_ДействияПослеЗагрузкиТовары()
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц", Новый Структура("НужноОкруглять", Ложь));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(
								НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ДвижениеПродукцииИМатериалов));
	ПараметрыПроверкиСерий = Новый Структура("Склад, ПараметрыУказанияСерий");
	ПараметрыПроверкиСерий.Склад = Новый Структура("Отправитель, Получатель", Объект.Отправитель, Объект.Получатель);
	ПараметрыПроверкиСерий.ПараметрыУказанияСерий = ПараметрыУказанияСерий;
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПараметрыПроверкиСерий);
	
	ОбеспечениеКлиентСервер.СтруктураДействийВставитьПриИзмененииНазначения(СтруктураДействий);
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		СтрокаТовары.КоличествоУпаковок = СтрокаТовары.Количество;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьПоДаннымФСМНаСервере()
	Объект.Товары.Очистить();
	ТаблицаСерий = Объект.бг_ДанныеФСМ.Выгрузить();
	ТаблицаСерий.Свернуть("Номенклатура, Серия", "Количество");
	Объект.Товары.Загрузить(ТаблицаСерий);
	бг_ДействияПослеЗагрузкиТовары();
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьПропущенныеМаркиНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	Объект.бг_ДанныеФСМ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =  бг_ТекстЗапросаПропущенныеМарки();
	Запрос.УстановитьПараметр("МаркиФСМ", 
		бг_КонстантыПовтИсп.ЗначениеКонстанты("ФедеральнаяСпецМарка"));
	Запрос.УстановитьПараметр("ПериодГраницаИсключая", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", Объект.Отправитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаСерии = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСерии.Следующий() Цикл
			НачалоДиапазона = -2;
			КонецДиапазона = -2;
			Выборка = ВыборкаСерии.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.НомерМарки = КонецДиапазона + 1 Тогда
					КонецДиапазона = Выборка.НомерМарки;
				Иначе
					бг_ДобавитьДиапазон(ВыборкаНоменклатура.Номенклатура, ВыборкаСерии.Серия, Выборка.Назначение,
						НачалоДиапазона, КонецДиапазона);
					НачалоДиапазона = Выборка.НомерМарки;
					КонецДиапазона = Выборка.НомерМарки;
				КонецЕсли;
			КонецЦикла;
			бг_ДобавитьДиапазон(ВыборкаНоменклатура.Номенклатура, ВыборкаСерии.Серия, Выборка.Назначение,
					НачалоДиапазона, КонецДиапазона);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьДиапазон(Номенклатура, Серия, Назначение, НачалоДиапазона, КонецДиапазона) 
	ПервыйСимволРазряд = 4;
	ДлинаРазряд = 3;
	ДлинаДиапазон = 8;
	Если КонецДиапазона > 0 Тогда
		НоваяСтрока = Объект.бг_ДанныеФСМ.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Серия = Серия;
		НоваяСтрока.Назначение = Назначение;
		НачалоДиапазонаСтрока = Формат(НачалоДиапазона, "ЧГ=0");
		КонецДиапазонаСтрока = Формат(КонецДиапазона, "ЧГ=0");
		НоваяСтрока.Разряд = Сред(НачалоДиапазонаСтрока, ПервыйСимволРазряд, ДлинаРазряд);
		НоваяСтрока.НачалоДиапазона = Прав(НачалоДиапазонаСтрока, ДлинаДиапазон);
		НоваяСтрока.КонецДиапазона = Прав(КонецДиапазонаСтрока, ДлинаДиапазон);
		НоваяСтрока.Количество = КонецДиапазона - НачалоДиапазона + 1;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция бг_ТекстЗапросаПропущенныеМарки()
	
	ИспользоватьОптимизированныеЗапросы = бг_КонстантыПовтИсп.ЗначениеКонстанты(
		"ИспользоватьОптимизированныеЗапросыДвиженияМарок");
	
	Если ИспользоватьОптимизированныеЗапросы Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ТоварыНаСкладахОстатки.Назначение) КАК Назначение,
		|	ТоварыНаСкладахОстатки.Серия КАК Серия
		|ПОМЕСТИТЬ втСерии
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ПериодГраницаИсключая,
		|			Склад = &Склад
		|				И Номенклатура.ВидНоменклатуры = &МаркиФСМ) КАК ТоварыНаСкладахОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Серия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	бг_ИдентификаторыМарок.СерияФСМ КАК Серия,
		|	бг_ИдентификаторыМарок.ГУИДМарки КАК ГУИДМарки,
		|	бг_ИдентификаторыМарок.НомерМарки КАК НомерМарки
		|ПОМЕСТИТЬ втИдентификаторыМарок
		|ИЗ
		|	РегистрСведений.бг_ИдентификаторыМарок КАК бг_ИдентификаторыМарок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
		|		ПО бг_ИдентификаторыМарок.СерияФСМ = втСерии.Серия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ГУИДМарки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.ГУИДМарки КАК ГУИДМарки,
		|	МАКСИМУМ(Таблица.Период) КАК Период
		|ПОМЕСТИТЬ втДвижениеМарокМаксПериод
		|ИЗ
		|	(ВЫБРАТЬ
		|		бг_ДвижениеМарок.ГУИДМарки КАК ГУИДМарки,
		|		бг_ДвижениеМарок.Период КАК Период
		|	ИЗ
		|		втИдентификаторыМарок КАК втГУИДыИдентификаторовМарок
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ДвижениеМарок КАК бг_ДвижениеМарок
		|			ПО втГУИДыИдентификаторовМарок.ГУИДМарки = бг_ДвижениеМарок.ГУИДМарки) КАК Таблица
		|ГДЕ
		|	Таблица.Период < &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ГУИДМарки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	бг_ДвижениеМарок.ГУИДМарки КАК ГУИДМарки
		|ПОМЕСТИТЬ втДвижениеМарокСрезПоследних
		|ИЗ
		|	втДвижениеМарокМаксПериод КАК втДвижениеМарокМаксПериод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ДвижениеМарок КАК бг_ДвижениеМарок
		|		ПО втДвижениеМарокМаксПериод.ГУИДМарки = бг_ДвижениеМарок.ГУИДМарки
		|			И втДвижениеМарокМаксПериод.Период = бг_ДвижениеМарок.Период
		|ГДЕ
		|	бг_ДвижениеМарок.СтатусМарки = ЗНАЧЕНИЕ(Перечисление.бг_СтатусыАкцизныхМарок.Пропущена)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИдентификаторыМарок.НомерМарки КАК НомерМарки,
		|	втСерии.Серия КАК Серия,
		|	втСерии.Номенклатура КАК Номенклатура,
		|	втСерии.Назначение КАК Назначение
		|ИЗ
		|	втДвижениеМарокСрезПоследних КАК втДвижениеМарокСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИдентификаторыМарок КАК втИдентификаторыМарок
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
		|			ПО втИдентификаторыМарок.Серия = втСерии.Серия
		|		ПО втДвижениеМарокСрезПоследних.ГУИДМарки = втИдентификаторыМарок.ГУИДМарки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерМарки
		|ИТОГИ ПО
		|	Номенклатура,
		|	Серия";
	Иначе 
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ТоварыНаСкладахОстатки.Назначение) КАК Назначение,
		|	ТоварыНаСкладахОстатки.Серия КАК Серия
		|ПОМЕСТИТЬ втСерии
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ПериодГраницаИсключая,
		|			Склад = &Склад
		|				И Номенклатура.ВидНоменклатуры = &МаркиФСМ) КАК ТоварыНаСкладахОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Серия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	бг_ИдентификаторыМарок.СерияФСМ КАК Серия,
		|	бг_ИдентификаторыМарок.ГУИДМарки КАК ГУИДМарки,
		|	бг_ИдентификаторыМарок.НомерМарки КАК НомерМарки
		|ПОМЕСТИТЬ втИдентификаторыМарок
		|ИЗ
		|	РегистрСведений.бг_ИдентификаторыМарок КАК бг_ИдентификаторыМарок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
		|		ПО бг_ИдентификаторыМарок.СерияФСМ = втСерии.Серия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Серия,
		|	ГУИДМарки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИдентификаторыМарок.НомерМарки КАК НомерМарки,
		|	втСерии.Серия КАК Серия,
		|	втСерии.Номенклатура КАК Номенклатура,
		|	втСерии.Назначение КАК Назначение
		|ИЗ
		|	РегистрСведений.бг_ДвижениеМарок.СрезПоследних(
		|			&ПериодГраницаИсключая,
		|			ГУИДМарки В
		|				(ВЫБРАТЬ
		|					втИдентификаторыМарок.ГУИДМарки
		|				ИЗ
		|					втИдентификаторыМарок КАК втИдентификаторыМарок)) КАК бг_ДвижениеМарокСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИдентификаторыМарок КАК втИдентификаторыМарок
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСерии КАК втСерии
		|			ПО втИдентификаторыМарок.Серия = втСерии.Серия
		|		ПО бг_ДвижениеМарокСрезПоследних.ГУИДМарки = втИдентификаторыМарок.ГУИДМарки
		|ГДЕ
		|	бг_ДвижениеМарокСрезПоследних.СтатусМарки = ЗНАЧЕНИЕ(Перечисление.бг_СтатусыАкцизныхМарок.Пропущена)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерМарки
		|ИТОГИ ПО
		|	Номенклатура,
		|	Серия";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура бг_ЗаполнитьМатериалыИПТЛ(АдресВоВременномХранилище)
	КэшированныеЗначения = Неопределено;
	
	бг_Материалы = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Если бг_Материалы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаМатериал Из бг_Материалы Цикл
		НоваяСтрокаТовар = Объект.Товары.Добавить();
		НоваяСтрокаТовар.Номенклатура         = СтрокаМатериал.Материал;
		НоваяСтрокаТовар.Количество           = СтрокаМатериал.КоличествоНорматив;
		НоваяСтрокаТовар.КоличествоУпаковок   = СтрокаМатериал.КоличествоНорматив;
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(ЭтотОбъект, НоваяСтрокаТовар, СтруктураДействий);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовар, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
	бг_Номенклатура.ЗаполнитьСерииПоLIFOВТЧТовары(Объект, ПараметрыУказанияСерий);
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура бг_ВычислитьКоличествоМарокВДиапазоне()
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14));

	ТекущаяСтрока = Элементы.бг_ДанныеФСМ.ТекущиеДанные;
	Если Не ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока.Количество = ТипЧисло.ПривестиЗначение(ТекущаяСтрока.КонецДиапазона) - 
			ТипЧисло.ПривестиЗначение(ТекущаяСтрока.НачалоДиапазона) + 1;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
