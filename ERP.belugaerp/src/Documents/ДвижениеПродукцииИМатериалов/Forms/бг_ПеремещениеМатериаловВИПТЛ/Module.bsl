#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Период", Период);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Склад) Тогда
		ЗаполнитьМатериалыИПТЛ();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ЗаполнитьМатериалыИПТЛ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьМатериалыИПТЛ();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметки(Команда)
	УстановитьОтметку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	УстановитьОтметку(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	Закрыть(ПоместитьВХранилище());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтметку(Значение)
	Для Каждого СтрокаМатериал Из Материалы Цикл
		Если Не ЗначениеЗаполнено(СтрокаМатериал.Спецификация) Тогда
			СтрокаМатериал.ПеренестиВДокумент = Ложь;
		Иначе
			СтрокаМатериал.ПеренестиВДокумент = Значение;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыИПТЛ()
	Материалы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.Серия КАК Серия,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Остаток
	|ПОМЕСТИТЬ ОстаткиПродукции
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&Период,
	|			Склад = &Склад
	|				И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПродукции.Номенклатура КАК Продукция,
	|	ОстаткиПродукции.Характеристика КАК ПродукцияХарактеристика,
	|	ЕСТЬNULL(ОстаткиПродукции.Серия.бг_ДокументВыпуска.Спецификация, ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)) КАК Спецификация,
	|	СУММА(ОстаткиПродукции.Остаток) КАК КоличествоОстаток
	|ИЗ
	|	ОстаткиПродукции КАК ОстаткиПродукции
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПродукции.Номенклатура,
	|	ОстаткиПродукции.Характеристика,
	|	ЕСТЬNULL(ОстаткиПродукции.Серия.бг_ДокументВыпуска.Спецификация, ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка))";
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецДня(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Склад);
	Результат = Запрос.Выполнить();
	ТаблицаОстаткиПродукции = Результат.Выгрузить();
	
	Отбор = Новый Структура("Спецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	СтрокиПродукцияБезСпецификации = ТаблицаОстаткиПродукции.НайтиСтроки(Отбор);
	Для Каждого СтрокаПродукция Из СтрокиПродукцияБезСпецификации Цикл
		НоваяСтрокаМатериал = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаМатериал, СтрокаПродукция);
	КонецЦикла;
	
	Нормативы = ПотребностьСогласноСпецификациям(ТаблицаОстаткиПродукции);
	ПеремещаемыеМатериалы = ПеремещаемыеМатериалы(Нормативы);
	
	Для Каждого СтрокаНорматив Из Нормативы Цикл
		Для Каждого СтрокаМатериал Из СтрокаНорматив.МатериалыИУслуги Цикл
			Если ПеремещаемыеМатериалы.Найти(СтрокаМатериал.Номенклатура) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаМатериал = Материалы.Добавить();
			НоваяСтрокаМатериал.Продукция               = СтрокаНорматив.ОсновноеИзделие.Номенклатура;
			НоваяСтрокаМатериал.ПродукцияХарактеристика = СтрокаНорматив.ОсновноеИзделие.Характеристика;
			НоваяСтрокаМатериал.Спецификация            = СтрокаНорматив.Спецификация;
			НоваяСтрокаМатериал.КоличествоОстаток       = СтрокаНорматив.ОсновноеИзделие.Количество;
			НоваяСтрокаМатериал.Материал                = СтрокаМатериал.Номенклатура;
			НоваяСтрокаМатериал.КоличествоНорматив      = СтрокаМатериал.Количество;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПотребностьСогласноСпецификациям(ТаблицаОстаткиПродукции)
	ТаблицаСписокНоменклатуры = Справочники.РесурсныеСпецификации.СписокНоменклатуры();
	Для Каждого СтрокаПродукция Из ТаблицаОстаткиПродукции Цикл
		Если Не ЗначениеЗаполнено(СтрокаПродукция.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаСписокНоменклатуры = ТаблицаСписокНоменклатуры.Добавить();
		НоваяСтрокаСписокНоменклатуры.Спецификация = СтрокаПродукция.Спецификация;
		НоваяСтрокаСписокНоменклатуры.Номенклатура = СтрокаПродукция.Продукция;
		НоваяСтрокаСписокНоменклатуры.Характеристика = СтрокаПродукция.ПродукцияХарактеристика;
		НоваяСтрокаСписокНоменклатуры.Количество = СтрокаПродукция.КоличествоОстаток;
	КонецЦикла;
	
	ПараметрыВыборкиДанных = Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных("МатериалыИУслуги");
	ДанныеСпецификаций = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоСпискуНоменклатуры(ТаблицаСписокНоменклатуры, ПараметрыВыборкиДанных);
	
	Возврат ДанныеСпецификаций;
КонецФункции

&НаСервере
Функция ПеремещаемыеМатериалы(Нормативы)
	МатериалыПоСпецификациям = Новый Массив;
	
	Для Каждого СтрокаНорматив Из Нормативы Цикл
		МатериалыПоСпецификации = СтрокаНорматив.МатериалыИУслуги.ВыгрузитьКолонку("Номенклатура");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МатериалыПоСпецификациям, МатериалыПоСпецификации);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Материалы)
	|	И Номенклатура.ВидНоменклатуры В(&ВидыНоменклатуры)";
	Запрос.УстановитьПараметр("Материалы", МатериалыПоСпецификациям);
	
	ВидыНоменклатуры = Новый Массив;
	ВидыНоменклатуры.Добавить(бг_КонстантыПовтИсп.ЗначениеКонстанты("ВидНоменклатурыСпирт"));
	ВидыНоменклатуры.Добавить(бг_КонстантыПовтИсп.ЗначениеКонстанты("ИмпортныеССП"));
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыНоменклатуры);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Номенклатура");
КонецФункции

&НаСервере
Функция ПоместитьВХранилище()
	Отбор = Новый Структура("ПеренестиВДокумент", Истина);
	МатериалыПеренестиВДокумент = Материалы.Выгрузить(Отбор, "Материал, КоличествоНорматив");
	МатериалыПеренестиВДокумент.Свернуть("Материал", "КоличествоНорматив");
	
	Возврат ПоместитьВоВременноеХранилище(МатериалыПеренестиВДокумент);
КонецФункции

#КонецОбласти
