#Область ПрограммныйИнтерфейс

// Возвращает таблицу значений, содержащую остатки на складе на конец месяца 
// и минимальный остаток до даты контроля
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация
//  Склад - СправочникСсылка.Склады - Склад
// 	Период - Дата - дата из месяца, на конец которого получаем остатки
// 	ДатаКонтроля - Дата - дата по которую будет контроль, чтобы не превысить минимальный остаток при списаниии
//
// Возвращаемое значение:
//   ТаблицаЗначений - Допустимые потери за месяц
//  	* Номенклатура - СправочникСсылка.Номенклатура - материал
//  	* Серия - СправочникСсылка.СерииНоменклатуры - серия
//  	* Количество - Число - Остаток на конец месяца
//  	* КоличествоФакт - Число - Остаток на конец месяца
//  	* КоличествоКонтроль - Число - минимальный остаток до даты контроля по дням
//
Функция ОстаткиТоваров(Организация, Склад, Период, ДатаКонтроля) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецМесяца(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаНачалаКонтроля", НачалоМесяца(ДатаКонтроля));
	Запрос.УстановитьПараметр("ДатаОкончанияКонтроля", КонецДня(ДатаКонтроля));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК Количество,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И АналитикаУчетаНоменклатуры.МестоХранения = &Склад) КАК ТоварыОрганизацийОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизацийОбороты.Период КАК Период,
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ТоварыОрганизацийОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	втОстатки КАК втОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Обороты(
	|				&ДатаНачалаКонтроля,
	|				&ДатаОкончанияКонтроля,
	|				День,
	|				АналитикаУчетаНоменклатуры В
	|					(ВЫБРАТЬ
	|						втОстатки.АналитикаУчетаНоменклатуры
	|					ИЗ
	|						втОстатки КАК втОстатки)) КАК ТоварыОрганизацийОбороты
	|		ПО втОстатки.АналитикаУчетаНоменклатуры = ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийОбороты.Период,
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТоварыОрганизацийОбороты.Период,
	|	ТоварыОрганизацийОбороты.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбороты.Период КАК Период,
	|	втОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ЕСТЬNULL(втОбороты2.Количество, 0)) КАК Количество
	|ПОМЕСТИТЬ втОборотыНарастающимИтогом
	|ИЗ
	|	втОбороты КАК втОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК втОбороты2
	|		ПО втОбороты.АналитикаУчетаНоменклатуры = втОбороты2.АналитикаУчетаНоменклатуры
	|			И втОбороты.Период >= втОбороты2.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбороты.Период,
	|	втОбороты.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	втОбороты.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Номенклатура КАК Номенклатура,
	|	втОстатки.Серия КАК Серия,
	|	втОстатки.Количество КАК Количество,
	|	втОстатки.Количество КАК КоличествоФакт,
	|	ВЫБОР
	|		КОГДА втОстатки.Количество + ЕСТЬNULL(ДанныеКонтроля.Количество, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ втОстатки.Количество + ЕСТЬNULL(ДанныеКонтроля.Количество, 0)
	|	КОНЕЦ КАК КоличествоКонтроль
	|ИЗ
	|	втОстатки КАК втОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			втОборотыНарастающимИтогом.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|			МИНИМУМ(втОборотыНарастающимИтогом.Количество) КАК Количество
	|		ИЗ
	|			втОборотыНарастающимИтогом КАК втОборотыНарастающимИтогом
	|		
	|		СГРУППИРОВАТЬ ПО
	|			втОборотыНарастающимИтогом.АналитикаУчетаНоменклатуры) КАК ДанныеКонтроля
	|		ПО втОстатки.АналитикаУчетаНоменклатуры = ДанныеКонтроля.АналитикаУчетаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	втОстатки.Номенклатура.Родитель.Наименование";
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
КонецФункции

// Возвращает таблицу значений, содержащую допустимые потери за период (месяц)
//
// Параметры:
// 	Период - Дата - Месяц потерь
//  Организация - СправочникСсылка.Организации - Организация
//
// Возвращаемое значение:
//   ТаблицаЗначений - Допустимые потери за месяц
//  	* Номенклатура - СправочникСсылка.Номенклатура - материал
//  	* Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения - упаковка
//  	* Количество - Число - допустимые потери
//  	* Спецификация - СправочникСсылка.РесурснаяСпецификация - спецификация, по которой рассчитано значение
//  	* Изделие - СправочникСсылка.Номенклатура - выпущенное изделие
//
Функция ПотериПоНорме(Период, Организация) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВыпускПродукцииОбороты.Распоряжение КАК Документ.ЭтапПроизводства2_2).Спецификация КАК Спецификация,
	|	СУММА(ВыпускПродукцииОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ втВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(
	|			НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&Период, МЕСЯЦ),
	|			,
	|			Организация = &Организация
	|				И Распоряжение ССЫЛКА Документ.ЭтапПроизводства2_2) КАК ВыпускПродукцииОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииОбороты.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ВЫРАЗИТЬ(ВыпускПродукцииОбороты.Распоряжение КАК Документ.ЭтапПроизводства2_2).Спецификация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РесурсныеСпецификацииМатериалыИУслуги.Ссылка КАК Спецификация,
	|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура КАК Номенклатура,
	|	РесурсныеСпецификацииМатериалыИУслуги.Упаковка КАК Упаковка,
	|	СУММА(РесурсныеСпецификацииМатериалыИУслуги.КоличествоУпаковок) КАК Количество,
	|	ВЫБОР
	|		КОГДА РесурсныеСпецификацииМатериалыИУслуги.Ссылка.ОсновноеИзделиеКоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РесурсныеСпецификацииМатериалыИУслуги.Ссылка.ОсновноеИзделиеКоличествоУпаковок
	|	КОНЕЦ КАК КоличествоИзделий
	|ПОМЕСТИТЬ втДанныеСпецификаций
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	|ГДЕ
	|	РесурсныеСпецификацииМатериалыИУслуги.Ссылка В
	|			(ВЫБРАТЬ
	|				втВыпускПродукции.Спецификация
	|			ИЗ
	|				втВыпускПродукции КАК втВыпускПродукции)
	|	И РесурсныеСпецификацииМатериалыИУслуги.Альтернативный
	|
	|СГРУППИРОВАТЬ ПО
	|	РесурсныеСпецификацииМатериалыИУслуги.Ссылка,
	|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура,
	|	РесурсныеСпецификацииМатериалыИУслуги.Упаковка,
	|	ВЫБОР
	|		КОГДА РесурсныеСпецификацииМатериалыИУслуги.Ссылка.ОсновноеИзделиеКоличествоУпаковок = 0
	|			ТОГДА 1
	|		ИНАЧЕ РесурсныеСпецификацииМатериалыИУслуги.Ссылка.ОсновноеИзделиеКоличествоУпаковок
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеСпецификаций.Спецификация КАК Спецификация,
	|	втВыпускПродукции.Номенклатура КАК Изделие,
	|	втДанныеСпецификаций.Номенклатура КАК Номенклатура,
	|	втДанныеСпецификаций.Упаковка КАК Упаковка,
	|	втДанныеСпецификаций.Количество * (втВыпускПродукции.Количество / втДанныеСпецификаций.КоличествоИзделий) КАК Количество
	|ИЗ
	|	втДанныеСпецификаций КАК втДанныеСпецификаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВыпускПродукции КАК втВыпускПродукции
	|		ПО втДанныеСпецификаций.Спецификация = втВыпускПродукции.Спецификация";
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
КонецФункции

// Возвращает таблицу значений, содержащую распределение фактических потерь 
//
// Параметры:
// 	ДопустимыеПотери - ТаблицаЗначений - Допустимые потери за месяц
//  	* Номенклатура - СправочникСсылка.Номенклатура - материал
//  	* Количество - Число - допустимые потери
//  	* Спецификация - СправочникСсылка.РесурснаяСпецификация - спецификация, по которой рассчитано значение
//  	* Изделие - СправочникСсылка.Номенклатура - выпущенное изделие
//	ФактическиеПотери - ТаблицаЗначений - Фактические потери за месяц
//  	* Номенклатура - СправочникСсылка.Номенклатура - материал
//  	* Серия - СправочникСсылка.СерииНоменклатуры - серия
//  	* Количество - Число - фактические потери
//
// Возвращаемое значение:
//   ТаблицаЗначений - Распределение потерь за месяц
//  	* Номенклатура - СправочникСсылка.Номенклатура - материал
//  	* Серия - СправочникСсылка.СерииНоменклатуры - серия
//  	* Изделие - СправочникСсылка.Номенклатура - изделие
//  	* КоличествоПоНорме - Число - фактические потери
//  	* СверхНормы - Число - фактические потери
//
Функция РаспределитьПотери(ДопустимыеПотери, ФактическиеПотери) Экспорт
	Результат = ТаблицаРаспределениеПотерь();
	ФактическиеПотериИтоги = ФактическиеПотери.Скопировать(, "Номенклатура, Количество");
	ФактическиеПотериИтоги.Свернуть("Номенклатура, Количество");
	Для каждого СтрокаНоменклатура Из ФактическиеПотериИтоги Цикл
		СтруктураПоиска = Новый Структура("Номенклатура", СтрокаНоменклатура.Номенклатура);
	    ФактическиеПотериНоменклатура = ФактическиеПотери.Скопировать(СтруктураПоиска);
	    ДопустимыеПотериНоменклатура = ДопустимыеПотери.Скопировать(СтруктураПоиска);
		ОпределитьПотериСверхНорм(ДопустимыеПотериНоменклатура, ФактическиеПотериНоменклатура, Результат);
		ОпределитьПотериПоНорме(ДопустимыеПотериНоменклатура, ФактическиеПотериНоменклатура, Результат);
	КонецЦикла; 
	Возврат Результат;
КонецФункции

// Возвращает количество подчиненных документов 
//
// Параметры:
// 	Ссылка - ДокументСсылка.битСписаниеПотерь - Документ основание
//
// Возвращаемое значение:
//   Число - Количество подчиненных документов списания
//
Функция КоличествоДокументовСписания(Ссылка) Экспорт
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Результат = 0;
	Иначе
		ТаблицаДокументов = ДокументыСписания(Ссылка);
		Результат = ТаблицаДокументов.Количество();
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Возвращает таблицу подчиненных документов
//
// Параметры:
// 	Ссылка - ДокументСсылка.битСписаниеПотерь - Документ основание
//
// Возвращаемое значение:
//   Число - Количество подчиненных документов списания
//
// Возвращаемое значение:
//   ТаблицаЗначений - подчиненные документы
//  	* Ссылка - ДокументСсылка.ВнутреннееПотреблениеТоваров, ДокументСсылка.ДвижениеПродукцииИМатериалов - подчиненный документ 
//  	* Проведен - Булево - документ проведен
//  	* ПометкаУдаления - Булево - документ помечен на удаление
//
Функция ДокументыСписания(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК Ссылка,
	|	ВнутреннееПотреблениеТоваров.Проведен КАК Проведен,
	|	ВнутреннееПотреблениеТоваров.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.бг_СписаниеПотерь = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвижениеПродукцииИМатериалов.Ссылка,
	|	ДвижениеПродукцииИМатериалов.Проведен,
	|	ДвижениеПродукцииИМатериалов.ПометкаУдаления
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|ГДЕ
	|	ДвижениеПродукцииИМатериалов.бг_СписаниеПотерь = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Склад)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаРаспределениеПотерь()
	ДокОбъект = Документы.битСписаниеПотерь.СоздатьДокумент();
	Возврат ДокОбъект.РаспределениеПотерь.Выгрузить().Скопировать();
КонецФункции

Процедура ОпределитьПотериСверхНорм(ДопустимыеПотери, ФактическиеПотери, Результат)
	ПотериСвехнорм = ФактическиеПотери.Итог("Количество") - ДопустимыеПотери.Итог("Количество");
	Пока ПотериСвехнорм > 0 Цикл
		Если ФактическиеПотери.Количество() = 0 Тогда
			ВызватьИсключение НСтр("ru='Ошибка алгоритма распределения потерь'"); 
		КонецЕсли;
		СтрокаФакт = ФактическиеПотери[0];
		Если СтрокаФакт.Количество > ПотериСвехнорм Тогда
			КоличествоСверхНормы = ПотериСвехнорм;
		Иначе
			КоличествоСверхНормы = СтрокаФакт.Количество;
		КонецЕсли;
		НоваяСтрока = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФакт, "Номенклатура, Серия");
		НоваяСтрока.КоличествоСверхНормы = КоличествоСверхНормы;
		СтрокаФакт.Количество = СтрокаФакт.Количество - КоличествоСверхНормы;
		ПотериСвехнорм = ПотериСвехнорм - КоличествоСверхНормы;
		Если СтрокаФакт.Количество = 0 Тогда
			ФактическиеПотери.Удалить(СтрокаФакт);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОпределитьПотериПоНорме(ДопустимыеПотери, ФактическиеПотери, Результат)
	ФактическиеПотериИтог = ФактическиеПотери.Итог("Количество");
	ДопустимыеПотериИтог = ДопустимыеПотери.Итог("Количество");
	Если ФактическиеПотериИтог = 0 Тогда
		Возврат;
	КонецЕсли;
	Если ФактическиеПотериИтог > ДопустимыеПотериИтог Или ДопустимыеПотериИтог = 0 Тогда
		ВызватьИсключение НСтр("ru='Ошибка алгоритма распределения потерь'"); 
	КонецЕсли;
	
	СкорректироватьНормуНаКоэффициентРаспределения(ДопустимыеПотери, ФактическиеПотериИтог);
	
	Для каждого СтрокаФакт Из ФактическиеПотери Цикл
		Пока СтрокаФакт.Количество > 0 Цикл
			Если ДопустимыеПотери.Количество() = 0 Тогда
				ВызватьИсключение НСтр("ru='Ошибка алгоритма распределения потерь'"); 
			КонецЕсли;
			СтрокаНорма = ДопустимыеПотери[0];
			Если СтрокаНорма.Количество >= СтрокаФакт.Количество Тогда
				КоличествоПоНорме = СтрокаФакт.Количество;
			Иначе 
				КоличествоПоНорме = СтрокаНорма.Количество;
			КонецЕсли;
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФакт, "Номенклатура, Серия");
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНорма, "Изделие");
			НоваяСтрока.КоличествоПоНорме = КоличествоПоНорме;
			СтрокаФакт.Количество = СтрокаФакт.Количество - КоличествоПоНорме;
			СтрокаНорма.Количество = СтрокаНорма.Количество - КоличествоПоНорме;
			Если СтрокаНорма.Количество = 0 Тогда
				ДопустимыеПотери.Удалить(СтрокаНорма);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура СкорректироватьНормуНаКоэффициентРаспределения(ДопустимыеПотери, ФактическиеПотериИтог)
	КоэффициентРаспределения = ФактическиеПотериИтог / ДопустимыеПотери.Итог("Количество");
	Если КоэффициентРаспределения = 1 Тогда 
		Возврат;
	КонецЕсли;
	ДопустимыеПотери.Сортировать("Количество");
	Для каждого СтрокаНорма Из ДопустимыеПотери Цикл
		Если ДопустимыеПотери.Индекс(СтрокаНорма) = ДопустимыеПотери.Количество() - 1 Тогда
			СтрокаНорма.Количество = ФактическиеПотериИтог;
		Иначе
			СтрокаНорма.Количество = Окр(СтрокаНорма.Количество * КоэффициентРаспределения, 3);
			ФактическиеПотериИтог = ФактическиеПотериИтог - СтрокаНорма.Количество;
		КонецЕсли
	КонецЦикла;
КонецПроцедуры 

#КонецОбласти 
