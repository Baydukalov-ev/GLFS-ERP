#Область ОбработчикиСобытий

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
	МесяцСписания = НачалоМесяца(ТекущаяДатаСеанса());
	ДатаКонтроляОстатков = ТекущаяДатаСеанса();
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	ПараметрыПроведенияДокумента = ОпределитьПараметрыПроведения();
	СоздатьДокументыСписания(Отказ, ПараметрыПроведенияДокумента);
КонецПроцедуры

&После("ОбработкаУдаленияПроведения")
Процедура бг_ОбработкаУдаленияПроведения(Отказ)
	ОтменитьУдалитьДокументы(Отказ, Документы.битСписаниеПотерь.ДокументыСписания(Ссылка));
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьПараметрыПроведения()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битСписаниеПотерь.СтатьяРасходовСписаниеПоНорме КАК СтатьяРасходовСписаниеПоНорме,
	|	битСписаниеПотерь.СтатьяРасходовСписаниеСверхНормы КАК СтатьяРасходовСписаниеСверхНормы,
	|	битСписаниеПотерь.Организация КАК Организация,
	|	битСписаниеПотерь.Склад КАК Склад,
	|	битСписаниеПотерь.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	битСписаниеПотерь.Подразделение КАК Подразделение,
	|	битСписаниеПотерь.Ссылка КАК Ссылка,
	|	битСписаниеПотерь.МесяцСписания КАК МесяцСписания,
	|	битСписаниеПотерь.Склад.КонтролироватьСвободныеОстатки КАК КонтролироватьСвободныеОстатки
	|ИЗ
	|	Документ.битСписаниеПотерь КАК битСписаниеПотерь
	|ГДЕ
	|	битСписаниеПотерь.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битСписаниеПотерьОстаткиТоваров.Номенклатура КАК Номенклатура,
	|	битСписаниеПотерьОстаткиТоваров.Серия КАК Серия,
	|	битСписаниеПотерьОстаткиТоваров.Количество КАК Количество
	|ИЗ
	|	Документ.битСписаниеПотерь.ОстаткиТоваров КАК битСписаниеПотерьОстаткиТоваров
	|ГДЕ
	|	битСписаниеПотерьОстаткиТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битСписаниеПотерьРаспределениеПотерь.Номенклатура КАК Номенклатура,
	|	битСписаниеПотерьРаспределениеПотерь.Серия КАК Серия,
	|	битСписаниеПотерьРаспределениеПотерь.Изделие КАК Изделие,
	|	битСписаниеПотерьРаспределениеПотерь.КоличествоПоНорме КАК Количество,
	|	битСписаниеПотерьРаспределениеПотерь.КоличествоСверхНормы КАК КоличествоСверхНормы
	|ИЗ
	|	Документ.битСписаниеПотерь.РаспределениеПотерь КАК битСписаниеПотерьРаспределениеПотерь
	|ГДЕ
	|	битСписаниеПотерьРаспределениеПотерь.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннийЗапрос.Номенклатура КАК Номенклатура,
	|	ВнутреннийЗапрос.Серия КАК Серия,
	|	СУММА(ВнутреннийЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		битСписаниеПотерьОстаткиТоваров.Номенклатура КАК Номенклатура,
	|		битСписаниеПотерьОстаткиТоваров.Серия КАК Серия,
	|		битСписаниеПотерьОстаткиТоваров.Количество КАК Количество
	|	ИЗ
	|		Документ.битСписаниеПотерь.ОстаткиТоваров КАК битСписаниеПотерьОстаткиТоваров
	|	ГДЕ
	|		битСписаниеПотерьОстаткиТоваров.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		битСписаниеПотерьРаспределениеПотерь.Номенклатура,
	|		битСписаниеПотерьРаспределениеПотерь.Серия,
	|		-битСписаниеПотерьРаспределениеПотерь.КоличествоПоНорме - битСписаниеПотерьРаспределениеПотерь.КоличествоСверхНормы
	|	ИЗ
	|		Документ.битСписаниеПотерь.РаспределениеПотерь КАК битСписаниеПотерьРаспределениеПотерь
	|	ГДЕ
	|		битСписаниеПотерьРаспределениеПотерь.Ссылка = &Ссылка) КАК ВнутреннийЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВнутреннийЗапрос.Номенклатура,
	|	ВнутреннийЗапрос.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеПродукцииИМатериалов.Ссылка КАК Ссылка,
	|	ДвижениеПродукцииИМатериалов.Проведен КАК Проведен,
	|	ДвижениеПродукцииИМатериалов.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|ГДЕ
	|	ДвижениеПродукцииИМатериалов.бг_СписаниеПотерь = &Ссылка
	|	И ДвижениеПродукцииИМатериалов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеПродукцииИМатериалов.Ссылка КАК Ссылка,
	|	ДвижениеПродукцииИМатериалов.Проведен КАК Проведен,
	|	ДвижениеПродукцииИМатериалов.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|ГДЕ
	|	ДвижениеПродукцииИМатериалов.бг_СписаниеПотерь = &Ссылка
	|	И ДвижениеПродукцииИМатериалов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК Ссылка,
	|	ВнутреннееПотреблениеТоваров.Проведен КАК Проведен,
	|	ВнутреннееПотреблениеТоваров.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.бг_СписаниеПотерь = &Ссылка";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	тзШапка = РезультатЗапроса[0].Выгрузить();
	Результат = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(тзШапка[0]);
	Результат.Вставить("РезультатЗапросаОстатки", РезультатЗапроса[1]);
	Результат.Вставить("РезультатЗапросаПотери", РезультатЗапроса[2]);
	Результат.Вставить("РезультатЗапросаВозврат", РезультатЗапроса[3]);
	Результат.Вставить("ДокументыВозвратИзКладовой", РезультатЗапроса[4].Выгрузить());
	Результат.Вставить("ДокументыПередачаВКладовую", РезультатЗапроса[5].Выгрузить());
	Результат.Вставить("ДокументыСписания", РезультатЗапроса[6].Выгрузить());
	Возврат Результат;
КонецФункции

Процедура СоздатьДокументыСписания(Отказ, ПараметрыПроведения)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	Если ПараметрыПроведения.КонтролироватьСвободныеОстатки Тогда
		УстановитьПризнакКонтроляСвободныхОстатков(ПараметрыПроведения.ЦеховаяКладовая, Ложь);
	КонецЕсли;
	ИзменятьПараметрСеанса = Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
	Если ИзменятьПараметрСеанса Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Истина;
	КонецЕсли;
	ОтменитьУдалитьДокументы(Отказ, ПараметрыПроведения.ДокументыПередачаВКладовую);
	ОтменитьУдалитьДокументы(Отказ, ПараметрыПроведения.ДокументыСписания);
	ОтменитьУдалитьДокументы(Отказ, ПараметрыПроведения.ДокументыВозвратИзКладовой);
	СоздатьДокументВозвратИзКладовой(Отказ, ПараметрыПроведения);
	СоздатьДокументПотери(Отказ, ПараметрыПроведения);
	СоздатьДокументПередачаВКладовую(Отказ, ПараметрыПроведения);
	Если ПараметрыПроведения.КонтролироватьСвободныеОстатки Тогда
		УстановитьПризнакКонтроляСвободныхОстатков(ПараметрыПроведения.ЦеховаяКладовая, Истина);
	КонецЕсли;
	Если ИзменятьПараметрСеанса Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьДокументВозвратИзКладовой(Отказ, ПараметрыПроведения)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ДокументОбъект = ОпределитьСоздатьДокументОбъект(ПараметрыПроведения.ДокументыВозвратИзКладовой, "ДвижениеПродукцииИМатериалов");
	ДокументОбъект.Организация = ПараметрыПроведения.Организация;
	ДокументОбъект.Дата = КонецМесяца(ПараметрыПроведения.МесяцСписания);
	ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой;
	ДокументОбъект.Отправитель = ПараметрыПроведения.ЦеховаяКладовая;
	ДокументОбъект.Получатель = ПараметрыПроведения.Склад;
	ДокументОбъект.бг_СписаниеПотерь = ПараметрыПроведения.Ссылка;
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.Комментарий = СтрШаблон(НСтр("ru='Списание потерь %1'"), Формат(ПараметрыПроведения.МесяцСписания, "ДФ='ММММ гггг'")); 
	ДокументОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ДокументОбъект.Статус = Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято;
	ДокументОбъект.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным;
	ДокументОбъект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	ДокументОбъект.Товары.Очистить();
	Выборка = ПараметрыПроведения.РезультатЗапросаОстатки.Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
	КонецЦикла;
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ДвижениеПродукцииИМатериалов);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьКонтрольТоваровОрганизацийПоДокументу");
	ДокументОбъект.Записать(РежимЗаписи);
КонецПроцедуры

Процедура СоздатьДокументПотери(Отказ, ПараметрыПроведения)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ДокументОбъект = ОпределитьСоздатьДокументОбъект(ПараметрыПроведения.ДокументыСписания, "ВнутреннееПотреблениеТоваров");
	ДокументОбъект.Организация = ПараметрыПроведения.Организация;
	ДокументОбъект.Дата = КонецМесяца(ПараметрыПроведения.МесяцСписания);
	ДокументОбъект.Подразделение = ПараметрыПроведения.Подразделение;
	ДокументОбъект.Склад = ПараметрыПроведения.Склад;
	ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	ДокументОбъект.Статус = Перечисления.СтатусыВнутреннихПотреблений.Отгружено;
	ДокументОбъект.бг_СписаниеПотерь = ПараметрыПроведения.Ссылка;
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.Комментарий = СтрШаблон(НСтр("ru='Списание потерь %1'"), Формат(ПараметрыПроведения.МесяцСписания, "ДФ='ММММ гггг'")); 
	ДокументОбъект.Товары.Очистить();
	Выборка = ПараметрыПроведения.РезультатЗапросаПотери.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Количество > 0 Тогда
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
			НоваяСтрока.СтатьяРасходов = ПараметрыПроведения.СтатьяРасходовСписаниеПоНорме;
			НоваяСтрока.АналитикаРасходов = Выборка.Изделие;
		КонецЕсли;
		Если Выборка.КоличествоСверхНормы > 0 Тогда
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Количество = Выборка.КоличествоСверхНормы;
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
			НоваяСтрока.СтатьяРасходов = ПараметрыПроведения.СтатьяРасходовСписаниеСверхНормы;
		КонецЕсли;
		
	КонецЦикла;
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ВнутреннееПотреблениеТоваров);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);	                             
	ДокументОбъект.Записать(РежимЗаписи);
КонецПроцедуры

Процедура СоздатьДокументПередачаВКладовую(Отказ, ПараметрыПроведения)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ДокументОбъект = ОпределитьСоздатьДокументОбъект(ПараметрыПроведения.ДокументыПередачаВКладовую, "ДвижениеПродукцииИМатериалов");
	ДокументОбъект.Организация = ПараметрыПроведения.Организация;
	ДокументОбъект.Дата = КонецМесяца(ПараметрыПроведения.МесяцСписания) + 1;
	ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
	ДокументОбъект.Отправитель = ПараметрыПроведения.Склад;
	ДокументОбъект.Получатель = ПараметрыПроведения.ЦеховаяКладовая;
	ДокументОбъект.бг_СписаниеПотерь = ПараметрыПроведения.Ссылка;
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.Комментарий = СтрШаблон(НСтр("ru='Списание потерь %1'"), Формат(ПараметрыПроведения.МесяцСписания, "ДФ='ММММ гггг'")); 
	ДокументОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ДокументОбъект.Статус = Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято;
	ДокументОбъект.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным;
	ДокументОбъект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	ДокументОбъект.Товары.Очистить();
	Выборка = ПараметрыПроведения.РезультатЗапросаВозврат.Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
	КонецЦикла;
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ДвижениеПродукцииИМатериалов);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);	
	ДокументОбъект.Записать(РежимЗаписи);
КонецПроцедуры

Функция ОпределитьСоздатьДокументОбъект(ТаблицаДокументов, ИмяДокумента)
	Если ТаблицаДокументов.Количество() > 0 Тогда
		СтрокаДокумент = ТаблицаДокументов[0];
		Результат = СтрокаДокумент.Ссылка.ПолучитьОбъект();
		Результат.ПометкаУдаления = Ложь;
	Иначе
		Результат = Документы[ИмяДокумента].СоздатьДокумент();
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура ОтменитьУдалитьДокументы(Отказ, ТаблицаДокументов)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	мДокументы = ТаблицаДокументов.НайтиСтроки(Новый Структура("ПометкаУдаления", Ложь));
	Для каждого СтрокаДокумент Из мДокументы Цикл
		ДокументОбъект = СтрокаДокумент.Ссылка.ПолучитьОбъект();
		РежимЗаписи = ?(СтрокаДокумент.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись);
		ДокументОбъект.ПометкаУдаления = Истина;
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьКонтрольТоваровОрганизацийПоДокументу");
		ДокументОбъект.Записать(РежимЗаписи);
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьПризнакКонтроляСвободныхОстатков(СкладСсылка, Признак)
	СкладОбъект = СкладСсылка.ПолучитьОбъект();
	СкладОбъект.КонтролироватьСвободныеОстатки = Признак;
	СкладОбъект.ДополнительныеСвойства.Вставить("адаптер_ЭтоЗагрузкаДанных");
	СкладОбъект.Записать();
КонецПроцедуры

#КонецОбласти 