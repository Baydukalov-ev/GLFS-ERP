

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
		
	бг_ИзменитьТекстЗапросаСпискаРаспоряжений();
	
	бг_ДобавитьЭлементыВСписокКОформлению();

	бг_ИзменитьРежимВыделенияСтрок();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
 
 &НаКлиенте
Процедура бг_ОформитьТТНИсходящуюЕГАИСВместо(Команда)
		
	ОчиститьСообщения();
	
	Если Не ИнтеграцияИСКлиент.ВыборСтрокиСпискаКорректен(Элементы.СписокКОформлению, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	бг_ОформитьТТНИсходящуюЕГАИСНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ДобавитьЭлементыВСписокКОформлению()
	
	Если ПравоДоступа("Просмотр", Метаданные.Документы.битМаршрутныйЛист) Тогда
		КолонкаМаршрутныйЛист = Элементы.Вставить(
			"бг_МаршрутныйЛист",
			Тип("ПолеФормы"),
			Элементы.СписокКОформлению,
			Элементы.СписокКОформлениюОтветственный); 
		КолонкаМаршрутныйЛист.Вид = ВидПоляФормы.ПолеНадписи;
		КолонкаМаршрутныйЛист.Заголовок = НСтр("ru='Маршрутный лист'");
		КолонкаМаршрутныйЛист.ПутьКДанным = "СписокКОформлению.бг_МаршрутныйЛист";
		КолонкаМаршрутныйЛист.Ширина = 13;
		КолонкаМаршрутныйЛист.РастягиватьПоГоризонтали = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура бг_ИзменитьРежимВыделенияСтрок()

	Элементы.СписокКОформлению.РежимВыделения = РежимВыделенияТаблицы.Множественный;

КонецПроцедуры

&НаСервере
Процедура бг_ИзменитьТекстЗапросаСпискаРаспоряжений()
	
		
	Если ПравоДоступа("Просмотр", Метаданные.Документы.битМаршрутныйЛист) Тогда
		
		ТекстЗапросаДляИзменения = СписокКОформлению.ТекстЗапроса;	
		
		СтрокаПоиска = "ВЫБРАТЬ РАЗРЕШЕННЫЕ"; 
		СтрокаЗамены = СтрШаблон("%1 %2", бг_ВТТекстЗапросаМаршрутныеЛисты(), Символы.ПС + СтрокаПоиска);
		ТекстЗапросаДляИзменения = СтрЗаменить(
			ТекстЗапросаДляИзменения,
			СтрокаПоиска,
			СтрокаЗамены);

		СтрокаПоиска = "Таблица.Основание        КАК ДокументОснование"; 
		СтрокаЗамены = СтрШаблон("%1 %2", 
			"МАКСИМУМ(ЕСТЬNULL(ВТ_МаршрутныеЛисты.бг_МаршрутныйЛист,
			|ЗНАЧЕНИЕ(Документ.битМаршрутныйЛист.ПУстаяСсылка))) КАК бг_МаршрутныйЛист,",
			Символы.ПС + СтрокаПоиска);
		ТекстЗапросаДляИзменения = СтрЗаменить(
			ТекстЗапросаДляИзменения,
			СтрокаПоиска,
			СтрокаЗамены);
		
		СтрокаПоиска = "ПО Классификатор.ТорговыйОбъект = Таблица.ТорговыйОбъект"; 
		СтрокаЗамены = СтрШаблон("%1", 
		   		Символы.ПС + 	
			"	ПО Классификатор.Контрагент = Таблица.Контрагент
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаршрутныеЛисты КАК ВТ_МаршрутныеЛисты
			|	ПО (Таблица.Основание.ЗаказКлиента = ВТ_МаршрутныеЛисты.Заказ)");
		ТекстЗапросаДляИзменения = СтрЗаменить(
			ТекстЗапросаДляИзменения,
			СтрокаПоиска,
			СтрокаЗамены);

		СтрокаПоиска = "И НЕ Таблица.Основание.Ссылка ЕСТЬ NULL"; 
		СтрокаЗамены = СтрШаблон("%1 %2", 
			СтрокаПоиска, 
			Символы.ПС + 	
			"СГРУППИРОВАТЬ ПО
			|	Таблица.Основание,
			|	Таблица.Ответственный,
			|	Таблица.Дата,
			|	Таблица.Номер,
			|	Классификатор.Ссылка,
			|	Таблица.СтатусОформления");
		ТекстЗапросаДляИзменения = СтрЗаменить(
			ТекстЗапросаДляИзменения,
			СтрокаПоиска,
			СтрокаЗамены);
	
		СписокКОформлению.ТекстЗапроса = ТекстЗапросаДляИзменения;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция бг_ВТТекстЗапросаМаршрутныеЛисты()

	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ЕСТЬNULL(
	|		битМаршрутныйЛистЗаказы.Ссылка, ЗНАЧЕНИЕ(Документ.битМаршрутныйЛист.ПУстаяСсылка))) КАК бг_МаршрутныйЛист,
	|	битМаршрутныйЛистЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_МаршрутныеЛисты
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
  	|СГРУППИРОВАТЬ ПО
	|	битМаршрутныйЛистЗаказы.Заказ
	|;";
	
КонецФункции

#КонецОбласти

#Область ГрупповоеСозданиеТТНИсходящуюЕГАИС
 
&НаСервере
Процедура бг_ОформитьТТНИсходящуюЕГАИСНаСервере()
	
	Основания = ОбщегоНазначения.СкопироватьРекурсивно(Элементы.СписокКОформлению.ВыделенныеСтроки);

	Для Каждого СтрокаОснование Из Основания Цикл 
		ПродажиСервер.бг_СоздатьДокументТТНИсходящаяЕГАИС(СтрокаОснование.Основание);					
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

