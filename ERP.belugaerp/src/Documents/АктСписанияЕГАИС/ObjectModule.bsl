#Область ОбработчикиСобытий

&После("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("бг_ОтчетОбИмпортеПродукции") Тогда
		бг_ЗаполнитьПоОтчетуОбИмпортеПродукции(ДанныеЗаполнения.бг_ОтчетОбИмпортеПродукции);
	КонецЕсли;
	
	бг_ЗаполнитьОрганизациюЕГАИСИСправкиБ();
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроверкиЗаполнения")
Процедура бг_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2
		Или ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Справка2");
	КонецЕсли;
	
	Если ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПричинаСписания");
	КонецЕсли;
	
	Ключ = Новый Структура("ВидДокумента", ВидДокумента);
	
	ПроверятьТолькоЕслиЗаполнены = Ложь;
	Если Дата < '20180101' И ВидДокумента <> Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3 Тогда
		ПроверятьТолькоЕслиЗаполнены = Истина;
	ИначеЕсли ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1 Тогда
		Если ПричиныСписанияТребующиеУказанияМарки().Найти(ПричинаСписания) = Неопределено Тогда
			Ключ.Вставить("РазрешеноНеУказыватьПартионныеМаркиВСтроке");
		КонецЕсли;
	КонецЕсли;
	
#Удаление
	АкцизныеМаркиЕГАИС.ПроверитьЗаполнениеАкцизныхМарок(ЭтотОбъект, Отказ, ПроверятьТолькоЕслиЗаполнены, Ключ);
#КонецУдаления
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
#Вставка
	бг_ИнтеграцияЕГАИС.ПроверитьЗаполнениеАлкогольнойПродукции(ЭтотОбъект, Отказ);
#КонецВставки
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	бг_ИнициализироватьДополнительныеСвойства();
	бг_ПроверитьВозможностьИзмененияДокумента(Отказ, РежимЗаписи);
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроведения")
Процедура бг_ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.АктСписанияЕГАИС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
#Вставка
	// Снимаем флаги автоматической записи, чтобы вызываемый ниже метод ИнтеграцияИС.ЗаписатьНаборыЗаписей()
	// не вызывал дополнительную запись пустых наборов регистра марок, которые лишний раз будут выгружаться в WMS.
	Движения.бг_ДвижениеМарок.Записывать = Ложь;
#КонецВставки
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ЭтотОбъект.ДополнительныеСвойства);
	
#Вставка
	бг_СформироватьДвиженияПоМаркам(Отказ);
#КонецВставки
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_ПроверитьВозможностьИзмененияДокумента(Отказ, РежимЗаписи)
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Документы.АктСписанияЕГАИС.бг_СтатусЯвляетсяПодтвержденным(ДополнительныеСвойства.бг_ТекущийСтатус)
		И Не ДополнительныеСвойства.бг_ЭтоКонтролерЕГАИС Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Невозможно изменение документа со статусом ""Проведен ЕГАИС""!",,,, Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если Не ЗначениеЗаполнено(ДокументОснование)
			И Не ЗначениеЗаполнено(бг_ОтчетОбИмпортеПродукции)
			И ДополнительныеСвойства.бг_ТекущийСтатус <> Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.Отменен Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				"Невозможно проведение документа без указанного документа основания!",,,,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ЗаполнитьОрганизациюЕГАИСИСправкиБ()
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент = &Организация
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации = ИСТИНА";
	
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Организация"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОрганизацияЕГАИС = ВыборкаДетальныеЗаписи.ОрганизацияЕГАИС;
		Документы.АктСписанияЕГАИС.ПодобратьСправки2(ЭтотОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_ИнициализироватьДополнительныеСвойства()
	
	// бг_ТекущийСтатус
	ТекущийСтатус = РегистрыСведений.СтатусыДокументовЕГАИС.ТекущееСостояние(Ссылка).Статус;
	ДополнительныеСвойства.Вставить("бг_ТекущийСтатус", ТекущийСтатус);
	
	// бг_ФормироватьДвиженияПоМаркам
	ФормироватьДвиженияПоМаркам = бг_ИнтеграцияЕГАИСПовтИсп.ИспользоватьМеханизмДвиженийМарок(Ссылка);
	ДополнительныеСвойства.Вставить("бг_ФормироватьДвиженияПоМаркам", ФормироватьДвиженияПоМаркам);
	
	// бг_ЭтоКонтролерЕГАИС
	ДополнительныеСвойства.Вставить("бг_ЭтоКонтролерЕГАИС", Пользователи.РолиДоступны("бг_КонтролерЕГАИС"));
	
	// бг_ЭтоСписаниеПоОтчетуОбИмпорте
	ДополнительныеСвойства.Вставить("бг_ЭтоСписаниеПоОтчетуОбИмпорте", ЗначениеЗаполнено(бг_ОтчетОбИмпортеПродукции));
	
КонецПроцедуры

#Область ПоОтчетуОбИмпорте

Процедура бг_ЗаполнитьПоОтчетуОбИмпортеПродукции(ОтчетОбИмпортеПродукции) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	битОтчетОбИмпортеПродукцииЕГАИС.Организация КАК Организация,
	|	битОтчетОбИмпортеПродукцииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	битОтчетОбИмпортеПродукцииЕГАИС.Поставщик КАК Поставщик,
	|	битОтчетОбИмпортеПродукцииЕГАИС.ИдентификаторЕГАИС КАК ИдентификаторЕГАИС,
	|	битОтчетОбИмпортеПродукцииЕГАИС.Комментарий КАК Комментарий,
	|	битОтчетОбИмпортеПродукцииЕГАИС.ДатаИмпорта КАК ДатаИмпорта,
	|	битОтчетОбИмпортеПродукцииЕГАИС.НомерКонтракта КАК НомерКонтракта,
	|	битОтчетОбИмпортеПродукцииЕГАИС.ДатаКонтракта КАК ДатаКонтракта,
	|	битОтчетОбИмпортеПродукцииЕГАИС.НомерГТД КАК НомерГТД,
	|	битОтчетОбИмпортеПродукцииЕГАИС.ДатаГТД КАК ДатаГТД,
	|	битОтчетОбИмпортеПродукцииЕГАИС.КодСтраны КАК КодСтраны,
	|	битОтчетОбИмпортеПродукцииЕГАИС.Ответственный КАК Ответственный,
	|	битОтчетОбИмпортеПродукцииЕГАИС.Склад КАК Склад
	|ИЗ
	|	Документ.битОтчетОбИмпортеПродукцииЕГАИС КАК битОтчетОбИмпортеПродукцииЕГАИС
	|ГДЕ
	|	битОтчетОбИмпортеПродукцииЕГАИС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Характеристика КАК Характеристика,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Серия КАК Серия,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Количество КАК Количество,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Крепость КАК Крепость,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.КрепостьМин КАК КрепостьМин,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.КрепостьМакс КАК КрепостьМакс,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.НомерПартии КАК НомерПартии,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Справка1 КАК Справка1,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Справка2 КАК Справка2,
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Количество КАК КоличествоУпаковок
	|ИЗ
	|	Документ.битОтчетОбИмпортеПродукцииЕГАИС.Товары КАК битОтчетОбИмпортеПродукцииЕГАИСТовары
	|ГДЕ
	|	битОтчетОбИмпортеПродукцииЕГАИСТовары.Ссылка = &Ссылка
	|	И битОтчетОбИмпортеПродукцииЕГАИСТовары.Номенклатура.бг_ТипИмпортныхССП = ЗНАЧЕНИЕ(Перечисление.бг_ТипыИмпортныхССП.Ароматизитор)";
	
	Запрос.УстановитьПараметр("Ссылка", ОтчетОбИмпортеПродукции);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ДанныеШапки = РезультатЗапроса[0].Выбрать();
	ДанныеШапки.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
	Товары.Загрузить(РезультатЗапроса[1].Выгрузить());
	бг_ОтчетОбИмпортеПродукции = ОтчетОбИмпортеПродукции;
	
КонецПроцедуры

#КонецОбласти // ПоОтчетуОбИмпорте

#Область ДвиженияПоМаркам

Процедура бг_СформироватьДвиженияПоМаркам(Отказ)
	
	Если Отказ Или Не ДополнительныеСвойства.бг_ФормироватьДвиженияПоМаркам Тогда
		Возврат;
	КонецЕсли;
	
	Если Документы.АктСписанияЕГАИС.бг_СтатусЯвляетсяПодтвержденным(ДополнительныеСвойства.бг_ТекущийСтатус) Тогда
		
		ДанныеСписываемыхШтрихкодов = Документы.АктСписанияЕГАИС.бг_ДанныеСписываемыхШтрихкодов(
			Ссылка,
			Ложь);
			
		бг_ПроверитьСоответствиеМарокТоварам(Отказ, ДанныеСписываемыхШтрихкодов);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		бг_ОтразитьДвиженияМарок(ДанныеСписываемыхШтрихкодов.Марки);
		
	Иначе
		
		Движения.бг_ДвижениеМарок.Очистить();
		Движения.бг_ДвижениеМарок.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура бг_ПроверитьСоответствиеМарокТоварам(Отказ, ДанныеСписываемыхШтрихкодов)
	
	Если ДанныеСписываемыхШтрихкодов = Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Не найдены данные списываемых марок, проведение невозможно.'"),
			Ссылка,,,
			Отказ);
			
		Возврат;
	КонецЕсли;
	
	Документы.АктСписанияЕГАИС.бг_МаркиСоответствуютАлкогольнойПродукцииАкта(
		ДанныеСписываемыхШтрихкодов.Марки,
		Ссылка,
		Отказ);
		
КонецПроцедуры

Процедура бг_ОтразитьДвиженияМарок(Марки)
	
	СтатусыМарокПоОперации = Перечисления.бг_СтатусыАкцизныхМарок.СтатусыПоОперации(Метаданные().Имя);
	СтатусМаркиВыбыла = СтатусыМарокПоОперации.СтатусВыбыла;
	
	ДатаДвиженияМарок = Документы.АктСписанияЕГАИС.бг_ДатаДвиженияМарок(
		Ссылка,
		Дата,
		ДатаРегистрацииДвижений);
	
	Для каждого СтрокаМарки Из Марки Цикл
		Запись = Движения.бг_ДвижениеМарок.Добавить();
		Запись.Период = ДатаДвиженияМарок;
		ЗаполнитьЗначенияСвойств(Запись, СтрокаМарки);
		Запись.СтатусМарки = СтатусМаркиВыбыла;
	КонецЦикла;
	
	Движения.бг_ДвижениеМарок.Записать();
	
КонецПроцедуры

#КонецОбласти // Конец ДвиженияПоМаркам

#КонецОбласти