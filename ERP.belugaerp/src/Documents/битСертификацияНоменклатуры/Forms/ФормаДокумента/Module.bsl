#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.бг_ТиповыеАнализыНоменклатуры.ФормаВыбора"
		И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ДополнитьТаблицуАнализов(ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	ПриИзмененииНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура АнализыПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОграничениеТипаЗначениеПоказателя", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура АнализыЗначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Анализы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидРезультата = ПредопределенноеЗначение("Перечисление.бг_ВидыРезультатовЛабораторныхАнализов.ЗначениеИзСписка") Тогда
		ТекущиеДанные.СоответствуетНормативу = АнализСоответствуетНормативуСогласноСписка(ТекущиеДанные.Показатель, ТекущиеДанные.Значение);
	Иначе
		ТекущиеДанные.СоответствуетНормативу = ТекущиеДанные.Значение >= ТекущиеДанные.МинимальноеНормативноеЗначение
														И ТекущиеДанные.Значение <= ТекущиеДанные.МаксимальноеНормативноеЗначение;
	КонецЕсли;
	
	РассчитатьРезультатСертификации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьАнализы(Команда)
	Если Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ТекстСообщения = НСтр("ru = 'Требуется указать номенклатуру'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , , "Объект.Номенклатура");
		Возврат;
	КонецЕсли;
	
	Если Объект.Анализы.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьАнализыЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(Оповещение,
			НСтр("ru = 'Таблица анализов будет очищена. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,
			0,
			КодВозвратаДиалога.Да,
			НСтр("ru = 'Подтверждение операции'")
			);
	Иначе
		ЗаполнитьТиповыеАнализыДляНоменклатуры();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПоследнейСертификации(Команда)
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Требуется указать организацию'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , , "Объект.Организация");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ТекстСообщения = НСтр("ru = 'Требуется указать номенклатуру'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , , "Объект.Номенклатура");
		Возврат;
	КонецЕсли;
	
	Если Объект.Анализы.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоПоследнейСертификацииЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(Оповещение,
			НСтр("ru = 'Таблица анализов будет очищена. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,
			0,
			КодВозвратаДиалога.Да,
			НСтр("ru = 'Подтверждение операции'")
			);
	Иначе
		ЗаполнитьПоПоследнейСертификацииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзТиповогоАнализа(Команда)
	ОткрытьФорму("Справочник.бг_ТиповыеАнализыНоменклатуры.ФормаВыбора", , ЭтотОбъект, , , , ,
													РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	 РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьПоПоследнейСертификацииЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоПоследнейСертификацииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАнализыЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьТиповыеАнализыДляНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииНоменклатуры()
	Объект.ТиповойАнализ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Номенклатура, "бг_АнализыДляУдостоверенияОКачестве");
	ЗаполнитьТиповыеАнализыДляНоменклатуры();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПоследнейСертификацииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СертификацияНоменклатуры.Ссылка КАК СертификацияНоменклатуры
	|ПОМЕСТИТЬ втДокументСертификации
	|ИЗ
	|	Документ.битСертификацияНоменклатуры КАК СертификацияНоменклатуры
	|ГДЕ
	|	СертификацияНоменклатуры.Организация = &Организация
	|	И СертификацияНоменклатуры.Номенклатура = &Номенклатура
	|	И СертификацияНоменклатуры.Проведен
	|	И СертификацияНоменклатуры.РезультатСертификации = ЗНАЧЕНИЕ(Перечисление.бг_РезультатыСертификации.Сертификат)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СертификацияНоменклатуры.ДатаСертификата УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СертификацияАнализы.ТиповойАнализ КАК ТиповойАнализ,
	|	СертификацияАнализы.Показатель КАК Показатель,
	|	СертификацияАнализы.ВидРезультата КАК ВидРезультата,
	|	СертификацияАнализы.Значение КАК Значение,
	|	СертификацияАнализы.СоответствуетНормативу КАК СоответствуетНормативу,
	|	СертификацияАнализы.МинимальноеНормативноеЗначение КАК МинимальноеНормативноеЗначение,
	|	СертификацияАнализы.МаксимальноеНормативноеЗначение КАК МаксимальноеНормативноеЗначение
	|ИЗ
	|	втДокументСертификации КАК втДокументСертификации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.битСертификацияНоменклатуры.Анализы КАК СертификацияАнализы
	|		ПО втДокументСертификации.СертификацияНоменклатуры = СертификацияАнализы.Ссылка";
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'Не найдено оформленной сертификации по выбранной продукции'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТаблицаАнализы = Результат.Выгрузить();
	Объект.Анализы.Загрузить(ТаблицаАнализы);
	
	РассчитатьРезультатСертификации();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТиповыеАнализыДляНоменклатуры()
	ТаблицаАнализы = Документы.битСертификацияНоменклатуры.ТаблицаАнализовДляСертификации(Объект.ТиповойАнализ);
	
	Объект.Анализы.Загрузить(ТаблицаАнализы);
	
	РассчитатьРезультатСертификации();
КонецПроцедуры

&НаСервере
Процедура ДополнитьТаблицуАнализов(ТиповойАнализНоменклатуры)
	ТаблицаАнализы = Документы.битСертификацияНоменклатуры.ТаблицаАнализовДляСертификации(ТиповойАнализНоменклатуры);
	Для Каждого СтрокаДополнительныйАнализ Из ТаблицаАнализы Цикл
		НоваяСтрокаАнализ = Объект.Анализы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАнализ, СтрокаДополнительныйАнализ);
	КонецЦикла;
	
	РассчитатьРезультатСертификации();
КонецПроцедуры

&НаСервереБезКонтекста
Функция АнализСоответствуетНормативуСогласноСписка(Показатель, Значение)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДопустимыеЗначенияПоказателей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.бг_ПоказателиАнализовНоменклатуры.ДопустимыеЗначенияПоказателей КАК ДопустимыеЗначенияПоказателей
	|ГДЕ
	|	ДопустимыеЗначенияПоказателей.Ссылка = &Ссылка
	|	И ДопустимыеЗначенияПоказателей.ЗначениеПоказателя = &ЗначениеПоказателя";
	Запрос.УстановитьПараметр("Ссылка", Показатель);
	Запрос.УстановитьПараметр("ЗначениеПоказателя", Значение);
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
КонецФункции

&НаКлиенте
Процедура УстановитьОграничениеТипаЗначениеПоказателя() Экспорт
	ТекущиеДанные = Элементы.Анализы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидРезультата = ПредопределенноеЗначение("Перечисление.бг_ВидыРезультатовЛабораторныхАнализов.ЗначениеИзСписка") Тогда
		ТипЗначенияПоказателя = Новый ОписаниеТипов("СправочникСсылка.бг_ЗначенияПоказателейАнализовНоменклатуры");
	Иначе
		ТипЗначенияПоказателя = Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 5));
	КонецЕсли;
	
	Элементы.АнализыЗначение.ОграничениеТипа = ТипЗначенияПоказателя;
КонецПроцедуры

&НаСервере
Процедура РассчитатьРезультатСертификации()
	ОтборНеСоответствуетНормативу  = Новый Структура("СоответствуетНормативу", Ложь);
	СтрокиНеСоответствуетНормативу = Объект.Анализы.НайтиСтроки(ОтборНеСоответствуетНормативу);
	
	Объект.РезультатСертификации = ?(СтрокиНеСоответствуетНормативу.Количество() = 0,
									Перечисления.бг_РезультатыСертификации.Сертификат,
									Перечисления.бг_РезультатыСертификации.ОтказаноВСертификации);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом  
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи) 
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
КонецПроцедуры

#КонецОбласти
