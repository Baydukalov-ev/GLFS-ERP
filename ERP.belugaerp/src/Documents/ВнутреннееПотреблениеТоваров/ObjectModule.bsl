#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура бг_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		бг_ЗаполнитьПризнакСписанияНормативныхПотерьПоАкцизам();
		бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ);
	КонецЕсли;
КонецПроцедуры

&Перед("ОбработкаЗаполнения")
Процедура бг_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.битАктОбУничтоженииФСМ") Тогда
		бг_ЗаполнитьНаОснованииАктаСписанияЕГАИС(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

&После("ПриКопировании")
Процедура бг_ПриКопировании(ОбъектКопирования)

	бг_АкцизПоПриобретеннымЦенностям.Очистить();
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(ЭтотОбъект, ЭтотОбъект.Товары);

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура бг_ЗаполнитьНаОснованииАктаСписанияЕГАИС(ДанныеЗаполнения)
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	битАктОбУничтоженииФСМ.Организация
		|ИЗ
		|	Документ.битАктОбУничтоженииФСМ КАК битАктОбУничтоженииФСМ
		|ГДЕ
		|	битАктОбУничтоженииФСМ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	битАктОбУничтоженииФСММарки.Номенклатура,
		|	битАктОбУничтоженииФСММарки.КоличествоМарок КАК КоличествоУпаковок,
		|	битАктОбУничтоженииФСММарки.КоличествоМарок КАК Количество,
		|	битАктОбУничтоженииФСММарки.Серия
		|ИЗ
		|	Документ.битАктОбУничтоженииФСМ.Марки КАК битАктОбУничтоженииФСММарки
		|
		|ГДЕ
		|	битАктОбУничтоженииФСММарки.Ссылка = &Ссылка
		|");
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРеквизиты = РезультатЗапроса[0].Выбрать();
	Если Не ВыборкаРеквизиты.Следующий() Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаРеквизиты);
	
	ТаблицаТовары = РезультатЗапроса[1].Выгрузить();
	Товары.Загрузить(ТаблицаТовары);
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВнутреннееПотреблениеТоваров);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
КонецПроцедуры

#Область АкцизыПоПриобретеннымЦенностям

Процедура бг_ЗаполнитьПризнакСписанияНормативныхПотерьПоАкцизам()
	СтатьяСписанияНормативныхПотерь =
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "бг_СтатьяСписанияНормативныхПотерьПоАкцизам");
	бг_СписаниеНормативныхПотерьПоАкцизам = Товары.Найти(СтатьяСписанияНормативныхПотерь, "СтатьяРасходов") <> Неопределено;
КонецПроцедуры

Процедура бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ВнутреннееПотреблениеТоваровЛокализация.бг_ТребуетсяЗаполнениеАкцизовПоПриобретеннымЦенностям(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СтатусыСостоянияСписываемогоСырья = ВнутреннееПотреблениеТоваровЛокализация.бг_СтатусыСостоянияСписываемогоСырья();
	
	бг_ТаблицаАкцизы = бг_АкцизПоПриобретеннымЦенностям.ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Если ДополнительныеСвойства.Свойство("бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям")
		И ДополнительныеСвойства.бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям = Истина Тогда
		ДатаОстатков = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	Иначе
		ДатаОстатков = '00010101';
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОстатков",         ДатаОстатков);
	Запрос.УстановитьПараметр("Товары",           Товары.Выгрузить(, "НомерСтроки, Номенклатура, Серия, Количество"));
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("СтатусыАкциза",    СтатусыСостоянияСписываемогоСырья.СтатусыАкциза);
	Запрос.УстановитьПараметр("СостоянияСырья",   СтатусыСостоянияСписываемогоСырья.СостоянияСырья);
	Запрос.УстановитьПараметр("ТипМестаХранения", Перечисления.бг_ТипыМестХраненияПодакцизнойПродукции.Склад);
	
	ТочностьУчетаМатериалов = РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностям.ТочностьУчетаПодакцизныхМатериалов();
	Запрос.УстановитьПараметр("ТочностьУчета", ТочностьУчетаМатериалов);
	
	// Списание акциза по материалам
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаТаблицаМатериалы());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиАкцизовПоМатериалам());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаСписаниеАкцизовПоМатериалам());
	Запрос.Текст = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Результат = Запрос.Выполнить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат.Выгрузить(), бг_ТаблицаАкцизы);
	
	// Списание акцизов по продукции
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаТаблицаМатериалы());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиАкцизовПоПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаОстаткиВыпущеннойПродукции());
	МассивТекстов.Добавить(бг_УчетБанковскихГарантий.ТекстЗапросаРасчетСписанияАкцизовПоПродукции());
	
	Запрос.Текст = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	Результат = Запрос.Выполнить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат.Выгрузить(), бг_ТаблицаАкцизы);
	
	бг_АкцизПоПриобретеннымЦенностям.Загрузить(бг_ТаблицаАкцизы);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
