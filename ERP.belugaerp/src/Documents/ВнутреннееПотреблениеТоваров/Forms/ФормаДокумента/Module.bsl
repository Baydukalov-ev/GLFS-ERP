
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_WMS.ДобавитьПоляНаФормуДокумента(ЭтаФорма);
	бг_ДобавитьКомандуЗаполнитьСерииПоFIFO();
	бг_ДобавитьКомандуЗаполнитьТоварыПоОстаткамНаСкладеНаСервере();
	бг_ДобавитьЭлементыАкциза();
		
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбработкаВыбораПосле(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаВыбораСтатьиИАналитики" Тогда
		бг_ЗаполнитьАналитикуРасходовСписаниеТехнологическихПотерь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура бг_ТоварыСтатьяРасходовПриИзмененииПосле(Элемент)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		бг_ЗаполнитьАналитикуРасходовСписаниеТехнологическихПотерь(ТекущиеДанные.ПолучитьИдентификатор());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыНоменклатураПриИзмененииПосле(Элемент)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		бг_ЗаполнитьАналитикуРасходовСписаниеТехнологическихПотерь(ТекущиеДанные.ПолучитьИдентификатор());
	КонецЕсли;
	
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура бг_ТоварыКоличествоУпаковокПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

&НаКлиенте
Процедура бг_ТоварыУпаковкаПриИзмененииПосле(Элемент)
	бг_ЗаполнитьСуммуАкцизаПоСтроке();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_ЗаполнитьТоварыПоОстаткамНаСкладе(Команда)

	Если Не бг_ПроверитьВозможностьЗаполненияТоваровПоОстаткамНаСкладе() Тогда
		Возврат;
	КонецЕсли;

	ТекстВопроса = "Будет выполнено заполнение товаров по остаткам на выбранном складе. Продолжить?";
	
	Оповещение = Новый ОписаниеОповещения("бг_ЗаполнитьТоварыПоОстаткамНаСкладеПослеВопроса",
		ЭтотОбъект,
		Новый Структура);
		
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура бг_ОбеспечениеЗаполнитьСерииПоFIFO(Команда)
	
	Если Не бг_ЗаполнитьСерииПоFIFOСервер() Тогда
		ТекстПредупреждения = НСтр("ru = 'В табличной части нет товаров, по которым серии можно заполнить по FIFO.';
								|en = 'The tabular section contains no goods that can be used to fill in series by FIFO.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнитьТоварыПоОстаткамНаСкладе

&НаКлиенте
Функция бг_ПроверитьВозможностьЗаполненияТоваровПоОстаткамНаСкладе()

	ВозможноЗаполнениеТоваровПоОстаткамНаСкладе = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
		ВозможноЗаполнениеТоваровПоОстаткамНаСкладе = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнен склад!");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ВозможноЗаполнениеТоваровПоОстаткамНаСкладе = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена организация!");
	КонецЕсли;
	
	Возврат ВозможноЗаполнениеТоваровПоОстаткамНаСкладе;

КонецФункции

&НаКлиенте
Процедура бг_ЗаполнитьТоварыПоОстаткамНаСкладеПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	бг_ЗаполнитьТоварыПоОстаткамНаСкладеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьТоварыПоОстаткамНаСкладеНаСервере()

	ОстаткиТоваровНаСкладе = бг_ОстаткиТоваровНаСкладеНаСервере();
	
	Если ОстаткиТоваровНаСкладе.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВыбораПодборНаСервере(
		Новый Структура(
			"АдресТоваровВХранилище",
			ПоместитьВоВременноеХранилище(ОстаткиТоваровНаСкладе, УникальныйИдентификатор)));
			
КонецПроцедуры

&НаСервере
Функция бг_ОстаткиТоваровНаСкладеНаСервере()

	бг_ОстаткиТоваровНаСкладеНаСервере = бг_НовыйОстаткиТоваровНаСкладеНаСервере();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлючиАналитики.Номенклатура КАК Номенклатура,
	|	КлючиАналитики.Номенклатура.Артикул КАК Артикул,
	|	КлючиАналитики.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	КлючиАналитики.Характеристика КАК Характеристика,
	|	КлючиАналитики.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик КАК ХарактеристикиИспользуются,
	|	КлючиАналитики.Серия КАК Серия,
	|	&Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) > ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|			ТОГДА ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|		ИНАЧЕ СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток)
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) > ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|			ТОГДА ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|		ИНАЧЕ СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток)
	|	КОНЕЦ КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|				И Организация = &Организация
	|				И АналитикаУчетаНоменклатуры.МестоХранения = &Склад
	|				И АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)) КАК ТоварыОрганизацийОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КлючиАналитики
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов СвободныеОстаткиОстатки
	|			ПО СвободныеОстаткиОстатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|				И КлючиАналитики.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
	|				И КлючиАналитики.Характеристика = СвободныеОстаткиОстатки.Характеристика
	|				И КлючиАналитики.МестоХранения = СвободныеОстаткиОстатки.Склад
	|		ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры = КлючиАналитики.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиАналитики.Номенклатура,
	|	КлючиАналитики.Характеристика,
	|	КлючиАналитики.Серия,
	|	КлючиАналитики.Номенклатура.Артикул,
	|	КлючиАналитики.Номенклатура.ТипНоменклатуры,
	|	КлючиАналитики.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) > ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|			ТОГДА ЕСТЬNULL(СУММА(СвободныеОстаткиОстатки.Свободно), 0)
	|		ИНАЧЕ СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток)
	|	КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия";
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Склад КАК Склад,
	|	СУММА(Т.Свободно) КАК Свободно
	|ПОМЕСТИТЬ ВТ_ДоступныеОстатки
	|ИЗ
	|	РегистрСведений.РаспределениеЗапасов КАК Т
	|ГДЕ
	|	Т.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|	И Т.Склад = &Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Склад
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Свободно) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	О.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	О.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиОрганизации
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(Организация, АналитикаУчетаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					&Организация КАК Организация,
	|					А.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТ_ДоступныеОстатки КАК Ф
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК А
	|						ПО
	|							Ф.Номенклатура = А.Номенклатура
	|								И Ф.Характеристика = А.Характеристика
	|								И Ф.Склад = А.МестоХранения)) КАК О
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	О.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Номенклатура КАК Номенклатура,
	|	А.Номенклатура.Артикул КАК Артикул,
	|	А.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	А.Характеристика КАК Характеристика,
	|	А.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик КАК ХарактеристикиИспользуются,
	|	А.Серия КАК Серия,
	|	А.МестоХранения КАК Склад,
	|	ВЫБОР
	|		КОГДА СУММА(О.КоличествоОстаток) > СУММА(Т.Свободно)
	|			ТОГДА СУММА(Т.Свободно)
	|		ИНАЧЕ СУММА(О.КоличествоОстаток)
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(О.КоличествоОстаток) > СУММА(Т.Свободно)
	|			ТОГДА СУММА(Т.Свободно)
	|		ИНАЧЕ СУММА(О.КоличествоОстаток)
	|	КОНЕЦ КАК КоличествоУпаковок
	|ИЗ
	|	ВТ_ОстаткиОрганизации КАК О
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК А
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоступныеОстатки КАК Т
	|			ПО А.Номенклатура = Т.Номенклатура
	|				И А.Характеристика = Т.Характеристика
	|				И А.МестоХранения = Т.Склад
	|		ПО О.АналитикаУчетаНоменклатуры = А.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	А.Номенклатура,
	|	А.Характеристика,
	|	А.Серия,
	|	А.МестоХранения,
	|	А.Номенклатура.Артикул,
	|	А.Номенклатура.ТипНоменклатуры,
	|	А.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА СУММА(О.КоличествоОстаток) > СУММА(Т.Свободно)
	|			ТОГДА СУММА(Т.Свободно)
	|		ИНАЧЕ СУММА(О.КоличествоОстаток)
	|	КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия";
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = бг_ОстаткиТоваровНаСкладеНаСервере.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	Возврат бг_ОстаткиТоваровНаСкладеНаСервере;
	
КонецФункции

&НаСервере
Функция бг_НовыйОстаткиТоваровНаСкладеНаСервере()

	НовыйОстаткиТоваровНаСкладе = Обработки.ПодборТоваровВДокументПродажи.Создать().Корзина.Выгрузить();
	
	НовыйОстаткиТоваровНаСкладе.Колонки.Добавить("ХарактеристикиИспользуются", Новый ОписаниеТипов("Булево"));
	
	Возврат НовыйОстаткиТоваровНаСкладе; 

КонецФункции

&НаСервере
Процедура бг_ДобавитьКомандуЗаполнитьТоварыПоОстаткамНаСкладеНаСервере()

	// Команда
	КомандаЗаполнитьТоварыПоОстаткамНаСкладе = Команды.Добавить("бг_ЗаполнитьТоварыПоОстаткамНаСкладе");
	КомандаЗаполнитьТоварыПоОстаткамНаСкладе.Действие = "бг_ЗаполнитьТоварыПоОстаткамНаСкладе";
	КомандаЗаполнитьТоварыПоОстаткамНаСкладе.Заголовок = "Заполнить товары по остаткам на складе";
	КомандаЗаполнитьТоварыПоОстаткамНаСкладе.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КомандаЗаполнитьТоварыПоОстаткамНаСкладе.Картинка = БиблиотекаКартинок.РазделСклад16;
	
	// Кнопка
	КнопкаЗаполнитьТоварыПоОстаткамНаСкладе = Элементы.Добавить(
		"бг_ЗаполнитьТоварыПоОстаткамНаСкладе",
		Тип("КнопкаФормы"),
		Элементы.ТоварыГруппаЗаполнить);
		
	КнопкаЗаполнитьТоварыПоОстаткамНаСкладе.ИмяКоманды = "бг_ЗаполнитьТоварыПоОстаткамНаСкладе";
	
КонецПроцедуры

#КонецОбласти // Конец ЗаполнитьТоварыПоОстаткамНаСкладе

&НаСервере
Процедура бг_ДобавитьКомандуЗаполнитьСерииПоFIFO()
	ИмяКоманды       = "бг_ОбеспечениеЗаполнитьСерииПоFIFO";
	ЗаголовокКоманды = НСтр("ru = 'Заполнить серии по FIFO';
								|en = 'Fill in series by FIFO'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.ТоварыГруппаЗаполнить, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, Элементы.ТоварыЗаполнитьСерииПоFEFO , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

&НаСервере
Функция бг_ЗаполнитьСерииПоFIFOСервер()
	Если бг_Номенклатура.ЕстьСтрокиДляЗаполненияСерийПоFIFO(Объект.Товары) Тогда
		бг_Номенклатура.ЗаполнитьСерииПоFIFOВТЧТовары(Объект, ПараметрыУказанияСерий);
		Модифицированность = Истина;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура бг_ЗаполнитьАналитикуРасходовСписаниеТехнологическихПотерь(ИдентификаторСтроки = Неопределено)
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	СтатьяСписанияТехнологическихПотерь = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "бг_СтатьяСписанияТехнологическихПотерь");
	Если Не ЗначениеЗаполнено(СтатьяСписанияТехнологическихПотерь) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		СтрокаТовар = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если СтрокаТовар.СтатьяРасходов = СтатьяСписанияТехнологическихПотерь Тогда
			СтрокаТовар.АналитикаРасходов = СтрокаТовар.Номенклатура;
		КонецЕсли;
	Иначе
		ОтборСтроки = Новый Структура("СтатьяРасходов", СтатьяСписанияТехнологическихПотерь);
		СтрокиТовары = Объект.Товары.НайтиСтроки(ОтборСтроки);
		
		Для Каждого СтрокаТовар Из СтрокиТовары Цикл
			СтрокаТовар.АналитикаРасходов = СтрокаТовар.Номенклатура;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#Область Акциз

&НаСервере
Процедура бг_ДобавитьЭлементыАкциза()

	бг_ТоварыСуммаАкциза = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
	  ЭтотОбъект,
	  "бг_ТоварыСуммаАкциза", 
	  Элементы.Товары, 
	  "Объект.Товары.бг_СуммаАкциза");

	бг_ТоварыСуммаАкциза.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
&После("ОрганизацияПриИзмененииНаСервере")
Процедура бг_ОрганизацияПриИзмененииНаСервере()
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
&После("ОбработкаВыбораПодборНаСервере")
Процедура бг_ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
&После("ДатаПриИзмененииСервер")
Процедура бг_ДатаПриИзмененииСервер()
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары);
КонецПроцедуры

&НаСервере
Процедура бг_ЗаполнитьСуммуАкцизаПоСтроке()
	ВыделенныеСтроки = Новый Массив;
	ВыделенныеСтроки.Добавить(Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока));
	бг_УчетАкцизов.ЗаполнитьСуммуАкциза(Объект, Объект.Товары, ВыделенныеСтроки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти // Конец СлужебныеПроцедурыИФункции
