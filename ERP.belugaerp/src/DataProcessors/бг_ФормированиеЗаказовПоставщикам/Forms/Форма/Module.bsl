#Область ОбработчикиСОбытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("АдресДанныхОтчета") 
		Или ПустаяСтрока(Параметры.АдресДанныхОтчета) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДанныхОтчета = ПолучитьИзВременногоХранилища(Параметры.АдресДанныхОтчета);	
	ТаблицаДанныхОтчета.Свернуть(
		"ЗаказНаОтгрузкуОрганизация,Номенклатура", 
		"ОсталосьОбеспечить");
	
	ДанныеОтчета.Загрузить(ТаблицаДанныхОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьЗаказыПоставщикамПоДаннымОтчета(Команда)
	
	СформироватьЗаказыПоставщикамПоДаннымОтчетаНаСервере();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементофФормыТаблицаСозданныеЗаказы

&НаКлиенте
Процедура СозданныеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбраннаяСтрока = СозданныеЗаказы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ДанныеСтроки = Новый Структура("Организация,Контрагент,ЗаказПоставщику");
	
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыбраннаяСтрока);
	
	Для Каждого КлючИЗначение Из ДанныеСтроки Цикл
		Если Не ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			Продолжить;
		КонецЕсли;
		ПоказатьЗначение(, КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьЗаказыПоставщикамПоДаннымОтчетаНаСервере()
	
	ДеревоЗначений = РеквизитФормыВЗначение("СозданныеЗаказы", Тип("ДеревоЗначений"));
	
	ВыборкаПоОрганизации = ДанныеФормированияЗаказов();
	
	Пока ВыборкаПоОрганизации.Следующий() Цикл
		
		ВыборкаПоКонтрагенту = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		РодительскаяСтрокаОрганизация = ДеревоЗначений.Строки.Добавить();
		РодительскаяСтрокаОрганизация.Организация = ВыборкаПоОрганизации.Организация;
		
		Пока ВыборкаПоКонтрагенту.Следующий() Цикл
			
			РодительскаяСтрокаКонтрагент = РодительскаяСтрокаОрганизация.Строки.Добавить();
			РодительскаяСтрокаКонтрагент.Контрагент = ВыборкаПоКонтрагенту.Контрагент;
			
			ЗаказПоставщикуОбъект = Документы.ЗаказПоставщику.СоздатьДокумент();
			ЗаказПоставщикуОбъект.Дата = ТекущаяДатаСеанса();
			ЗаказПоставщикуОбъект.Контрагент = ВыборкаПоКонтрагенту.Контрагент;
			ЗаказПоставщикуОбъект.Партнер = ВыборкаПоКонтрагенту.Партнер;
			ЗаказПоставщикуОбъект.Организация = ВыборкаПоОрганизации.Организация;
			
			ЗаказПоставщикуОбъект.Заполнить(Неопределено);
			
			ВыборкаДетальныеЗаписи = ВыборкаПоКонтрагенту.Выбрать();
			
			ЗаполнитьТабличнуюЧастьЗаказа(ЗаказПоставщикуОбъект, ВыборкаДетальныеЗаписи);
			
			ЗаказПоставщикуОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
			
			ЗаказПоставщикуСсылка = Неопределено;
		
			Попытка
				ЗаказПоставщикуОбъект.Записать();
				ЗаказПоставщикуСсылка = ЗаказПоставщикуОбъект.Ссылка;
			Исключение
				ОбщегоНазначения.СообщитьПользователю(
					ПодробноеПредставлениеОшибки(
						ИнформацияОбОшибке()));	
			КонецПопытки;
					
			Если ЗаказПоставщикуСсылка <> Неопределено Тогда
				СтрокаЗаказ = РодительскаяСтрокаКонтрагент.Строки.Добавить();
				СтрокаЗаказ.ЗаказПоставщику = ЗаказПоставщикуСсылка;
			Иначе
				ДеревоЗначений.Строки.Удалить(РодительскаяСтрокаОрганизация);	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоЗначений, СозданныеЗаказы);

	Элементы.СформироватьЗаказыПоставщикамПоДаннымОтчета.Доступность = Не ДеревоЗначений.Строки.Количество() > 0;	
	
КонецПроцедуры

&НаСервере
Функция ДанныеФормированияЗаказов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеОтчета.ЗаказНаОтгрузкуОрганизация КАК Организация,
		|	ДанныеОтчета.Номенклатура КАК Номенклатура,
		|	ДанныеОтчета.ОсталосьОбеспечить КАК Количество
		|ПОМЕСТИТЬ ДанныеОтчета
		|ИЗ
		|	&ДанныеОтчета КАК ДанныеОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОтчета.Организация КАК Организация,
		|	ДанныеОтчета.Номенклатура.бг_ОсновнойПоставщик КАК Контрагент,
		|	ДанныеОтчета.Номенклатура.бг_ОсновнойПоставщик.Партнер КАК Партнер,
		|	ДанныеОтчета.Номенклатура КАК Номенклатура,
		|	СУММА(ДанныеОтчета.Количество) КАК Количество
		|ИЗ
		|	ДанныеОтчета КАК ДанныеОтчета
		|СГРУППИРОВАТЬ ПО
		|	ДанныеОтчета.Организация,
		|	ДанныеОтчета.Номенклатура.бг_ОсновнойПоставщик,
		|	ДанныеОтчета.Номенклатура.бг_ОсновнойПоставщик.Партнер,
		|	ДанныеОтчета.Номенклатура	
		|ИТОГИ
		|	МАКСИМУМ(Партнер)
		|ПО 
		|	Организация,
		|	Контрагент";
	
	Запрос.УстановитьПараметр("ДанныеОтчета", ДанныеОтчета.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьЗаказа(ЗаказПоставщикуОбъект, ВыборкаДетальныеЗаписи)

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
		НоваяСтрока = ЗаказПоставщикуОбъект.Товары.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.Количество;
		НоваяСтрока.КоличествоУпаковок = ВыборкаДетальныеЗаписи.Количество;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти



