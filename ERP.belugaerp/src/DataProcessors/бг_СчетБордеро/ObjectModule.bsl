#Область ПрограммныйИнтерфейс
// Формирует табличный документ отчета
Функция ЕженедельныйБордеро(ПараметрыБордеро) Экспорт  
	УстановитьПривилегированныйРежим(Истина);
    Результат = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ЕженедельныйБордеро");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Область1");
	ОбластьЗаголовок.Параметры.ДатаНачала = Формат(ПараметрыБордеро.ДатаНачала, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ДатаОкончания = Формат(ПараметрыБордеро.ДатаОкончания, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ДатаБордеро = Формат(ТекущаяДатаСеанса(), "ДЛФ=DD");
	ОбластьШапка = Макет.ПолучитьОбласть("Область2");
	ОбластьСтрока = Макет.ПолучитьОбласть("Область3");
	ОбластьИтоги = Макет.ПолучитьОбласть("Область4");
	ОбластьПодвал = Макет.ПолучитьОбласть("Область5");
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыБордеро.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыБордеро.ДатаОкончания);
	Запрос.УстановитьПараметр("ТипРейса", ПараметрыБордеро.ТипРейса);
	Запрос.УстановитьПараметр("ИспользоватьФильтрПоТипуРейса", ЗначениеЗаполнено(ПараметрыБордеро.ТипРейса));
	Запрос.УстановитьПараметр("ТипДоставки", ПараметрыБордеро.ТипДоставки);
	Запрос.УстановитьПараметр("Организация", ПараметрыБордеро.Организация);
	Запрос.УстановитьПараметр("ИспользоватьФильтрПоОрганизации", ЗначениеЗаполнено(ПараметрыБордеро.Организация));
	Запрос.УстановитьПараметр("Склад", ПараметрыБордеро.Склад);
	Запрос.УстановитьПараметр("ИспользоватьФильтрПоСкладу", ЗначениеЗаполнено(ПараметрыБордеро.Склад));
	Запрос.Текст = ТекстЗапросаЕженедельныйБордеро();
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Первый = Истина;
	Пока ВыборкаКонтрагент.Следующий() Цикл
		ВыборкаДоговор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДоговор.Следующий() Цикл
			ВыборкаОрганизация = ВыборкаДоговор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаОрганизация.Следующий() Цикл
				Если Первый Тогда
					Первый = Ложь;
				Иначе 
					Результат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ОбластьЗаголовок.Параметры.Страхователь = ВыборкаОрганизация.Страхователь;
				ОбластьЗаголовок.Параметры.Страховщик = ВыборкаОрганизация.Страховщик;
				ОбластьЗаголовок.Параметры.Договор = ВыборкаОрганизация.ДоговорСтрахования;
				СуммаПрописьюШаблон = НСтр("ru='не более %1 (%2, %3/100) рублей'");
				СуммаСтрока = СокрЛП(ЧислоПрописью(ВыборкаДоговор.МаксимальнаяСтраховаяСумма));
				СуммаПрописью = СтрШаблон(СуммаПрописьюШаблон, 
									Формат(ВыборкаДоговор.МаксимальнаяСтраховаяСумма, "ЧДЦ=2"),
					                Лев(СуммаСтрока, СтрДлина(СуммаСтрока) - СтрДлина(" 00")),                        
									Прав(СуммаСтрока, СтрДлина("00")));
				ОбластьЗаголовок.Параметры.МаксимальнаяСтраховаяСумма = СуммаПрописью;
				Результат.Вывести(ОбластьЗаголовок);
				Результат.Вывести(ОбластьШапка);  
				НомерПП = 0;
				СтраховаяСуммаИтого = 0;
				СтраховаяПремияИтого = 0;
				ВыборкаДаты = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДаты.Следующий() Цикл 
					ВыборкаРейс = ВыборкаДаты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаРейс.Следующий() Цикл
						ВыборкаТипТранспорта = ВыборкаРейс.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						СтраховаяСуммаДата = 0;
						СтраховаяПремияДата = 0;
						Пока ВыборкаТипТранспорта.Следующий() Цикл
							ВыборкаСтраховаяСтавка = ВыборкаТипТранспорта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаСтраховаяСтавка.Следующий() Цикл
								ВыборкаПоПунктамПогрузки = ВыборкаСтраховаяСтавка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаПоПунктамПогрузки.Следующий() Цикл
									ВыборкаПоПункамВыгрузки = ВыборкаПоПунктамПогрузки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаПоПункамВыгрузки.Следующий() Цикл  
										МассивНомеровТТН = Новый Массив;
										ВыборкаПоНомерамТТН = ВыборкаПоПункамВыгрузки.Выбрать();
										Пока ВыборкаПоНомерамТТН.Следующий() Цикл
											МассивНомеровТТН.Добавить(ВыборкаПоНомерамТТН.НомерТТН);
										КонецЦикла;    
										Если СуммаСоответствуетДиапазону(ВыборкаПоПункамВыгрузки.СтраховаяСумма, 
											ПараметрыБордеро.СтраховаяСуммаМинимум, ПараметрыБордеро.СтраховаяСуммаМаксимум) Тогда
											НомерПП = НомерПП + 1;
											НомерТТН = СтрСоединить(МассивНомеровТТН, " ,");
											ОбластьСтрока.Параметры.НомерПП = НомерПП;
											ОбластьСтрока.Параметры.НомерТТН = НомерТТН;
											ОбластьСтрока.Параметры.ДатаТТН = ВыборкаДаты.ДатаТТН;
											ОбластьСтрока.Параметры.Страхователь = ВыборкаПоПункамВыгрузки.Страхователь;
											ОбластьСтрока.Параметры.ТипТранспорта = ВыборкаТипТранспорта.ТипТранспорта;
											ОбластьСтрока.Параметры.ПунктОтправления = ВыборкаПоПунктамПогрузки.ПунктОтправления;
											ОбластьСтрока.Параметры.ПунктНазначения = ВыборкаПоПункамВыгрузки.ПунктНазначения;
											ОбластьСтрока.Параметры.СтраховаяСтавка = ВыборкаСтраховаяСтавка.СтраховаяСтавка;
											ОбластьСтрока.Параметры.СтраховаяСумма = ВыборкаПоПункамВыгрузки.СтраховаяСумма;
											ОбластьСтрока.Параметры.СтраховаяПремия = ВыборкаПоПункамВыгрузки.СтраховаяПремия;
											Результат.Вывести(ОбластьСтрока);
											СтраховаяСуммаДата = СтраховаяСуммаДата + ВыборкаПоПункамВыгрузки.СтраховаяСумма;
											СтраховаяПремияДата = СтраховаяПремияДата + ВыборкаПоПункамВыгрузки.СтраховаяПремия;
											СтраховаяСуммаИтого = СтраховаяСуммаИтого + ВыборкаПоПункамВыгрузки.СтраховаяСумма;
											СтраховаяПремияИтого = СтраховаяПремияИтого + ВыборкаПоПункамВыгрузки.СтраховаяПремия;
										КонецЕсли;
									КонецЦикла;                                         
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;                                                  
				КонецЦикла;
				ОбластьИтоги.Параметры.СтраховаяСумма = СтраховаяСуммаИтого;
				ОбластьИтоги.Параметры.СтраховаяПремия = СтраховаяПремияИтого;
				Результат.Вывести(ОбластьИтоги);
				Результат.Вывести(ОбластьПодвал);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Формирует табличный документ отчета
Функция СчетБордеро(ПараметрыБордеро) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Результат = Новый ТабличныйДокумент;
	Если ЕстьПоступления(ПараметрыБордеро) Тогда
		Возврат Результат;
	КонецЕсли;    

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСчетБордео(); 

	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыБордеро.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыБордеро.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", ПараметрыБордеро.Организация);
	Запрос.УстановитьПараметр("Договор", ПараметрыБордеро.Договор);
	
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	ДанныеБордео = РезультатЗапросаПакет[0].Выгрузить();
	ДанныеВзаиморасчетов = РезультатЗапросаПакет[1].Выгрузить();
	Макет = ПолучитьМакет("СчетБордеро");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Область1");
	ОбластьШапка = Макет.ПолучитьОбласть("Область2");
	ОбластьСтрока = Макет.ПолучитьОбласть("Область3");
	ОбластьИтоги = Макет.ПолучитьОбласть("Область4");
	ОбластьПодвал = Макет.ПолучитьОбласть("Область5");

	ОбластьЗаголовок.Параметры.ДатаНачала = Формат(ПараметрыБордеро.ДатаНачала, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ДатаОкончания = Формат(ПараметрыБордеро.ДатаОкончания, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.Договор = ПараметрыБордеро.Договор;
	ОбластьЗаголовок.Параметры.Страхователь = ПараметрыБордеро.Организация;
	ОбластьЗаголовок.Параметры.Страховщик = ПараметрыБордеро.Контрагент;
    Результат.Вывести(ОбластьЗаголовок);
    Результат.Вывести(ОбластьШапка);
	
	НомерПП = 0;
	Для каждого СтрокаБордеро Из ДанныеБордео Цикл
		НомерПП = НомерПП + 1;
		ОбластьСтрока.Параметры.Заполнить(СтрокаБордеро);
		ОбластьСтрока.Параметры.НПП = НомерПП;
    	Результат.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтоги.Параметры.СтраховаяСумма = ДанныеБордео.Итог("СтраховаяСумма");
	ОбластьИтоги.Параметры.СтраховаяПремия = ДанныеБордео.Итог("СтраховаяПремия");
   	Результат.Вывести(ОбластьИтоги);
	
	ОбластьПодвал.Параметры.Заполнить(ПараметрыБордеро);
	ОбластьПодвал.Параметры.СуммаУплачено = ДанныеВзаиморасчетов.Итог("СуммаУплачено");
	ОбластьПодвал.Параметры.СальдоНачальное = ДанныеВзаиморасчетов.Итог("СальдоНачальное");
	ОбластьПодвал.Параметры.СальдоКонечное = ДанныеВзаиморасчетов.Итог("СальдоКонечное");
	ОбластьПодвал.Параметры.СтраховаяПремия = ДанныеБордео.Итог("СтраховаяПремия");
	Результат.Вывести(ОбластьПодвал);
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции                         

Функция СуммаСоответствуетДиапазону(Сумма, СуммаМинимум, СуммаМаксимум)
	Результат = Ложь;
	Если (Сумма >= СуммаМинимум Или СуммаМинимум = 0)
		И (Сумма <= СуммаМаксимум Или СуммаМаксимум = 0) Тогда
		Результат = Истина;
	КонецЕсли;      
	Возврат Результат;
КонецФункции

Функция ТекстЗапросаСчетБордео()
	Возврат
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(битМаршрутныйЛистЗаказы.Ссылка.Дата, НЕДЕЛЯ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(битМаршрутныйЛистЗаказы.Ссылка.Дата, НЕДЕЛЯ) КАК КонецПериода,
	|	СУММА(битМаршрутныйЛистЗаказы.СуммаДокумента) КАК СтраховаяСумма,
	|	СУММА(битМаршрутныйЛистЗаказы.СтраховаяПремия) КАК СтраховаяПремия
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И битМаршрутныйЛистЗаказы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И битМаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|	И битМаршрутныйЛистЗаказы.ДокументОтгрузки.Организация = &Организация
	|	И битМаршрутныйЛистЗаказы.Ссылка.СтраховаяСтавка.Договор = &Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(битМаршрутныйЛистЗаказы.Ссылка.Дата, НЕДЕЛЯ),
	|	КОНЕЦПЕРИОДА(битМаршрутныйЛистЗаказы.Ссылка.Дата, НЕДЕЛЯ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход, 0) КАК СуммаУплачено,
	|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК СальдоНачальное,
	|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК СальдоКонечное
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			,
	|			АналитикаУчетаПоПартнерам.Договор = &Договор
	|				И АналитикаУчетаПоПартнерам.Организация = &Организация) КАК РасчетыСПоставщикамиОстаткиИОбороты";
КонецФункции

Функция ТекстЗапросаЕженедельныйБордеро() 
	Возврат 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.Ссылка КАК Ссылка,
	|	ТТНВходящаяЕГАИС.Дата КАК Дата,
	|	ТТНВходящаяЕГАИС.ТипТранспорта КАК ТипТранспорта,
	|	ТТНВходящаяЕГАИС.ПунктПогрузки КАК ПунктПогрузки,
	|	ТТНВходящаяЕГАИС.ПунктРазгрузки КАК ПунктРазгрузки,
	|	ТТНВходящаяЕГАИС.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ втТТНВходящаяЕГАИС
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.Ссылка КАК Ссылка,
	|	ТТНИсходящаяЕГАИС.Дата КАК Дата,
	|	ТТНИсходящаяЕГАИС.ТипТранспорта КАК ТипТранспорта,
	|	ТТНИсходящаяЕГАИС.ПунктПогрузки КАК ПунктПогрузки,
	|	ТТНИсходящаяЕГАИС.ПунктРазгрузки КАК ПунктРазгрузки,
	|	ТТНИсходящаяЕГАИС.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ втТТНИсходящаяЕГАИС
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	битМаршрутныйЛистЗаказы.Ссылка КАК Ссылка,
	|	битМаршрутныйЛистЗаказы.ДокументОтгрузки.Номер КАК НомерТТН,
	|	НАЧАЛОПЕРИОДА(втТТНИсходящаяЕГАИС.Дата, ДЕНЬ) КАК ДатаТТН,
	|	втТТНИсходящаяЕГАИС.ТипТранспорта КАК ТипТранспорта,
	|	втТТНИсходящаяЕГАИС.ПунктПогрузки КАК ПунктПогрузки,
	|	втТТНИсходящаяЕГАИС.ПунктРазгрузки КАК ПунктРазгрузки,
	|	битМаршрутныйЛистЗаказы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	битМаршрутныйЛистЗаказы.СтраховаяПремия КАК СтраховаяПремия,
	|	битМаршрутныйЛистЗаказы.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ втДанныеДокументов
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТТНИсходящаяЕГАИС КАК втТТНИсходящаяЕГАИС
	|		ПО (втТТНИсходящаяЕГАИС.ДокументОснование = битМаршрутныйЛистЗаказы.ДокументОтгрузки)
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И битМаршрутныйЛистЗаказы.ДокументОтгрузки В
	|			(ВЫБРАТЬ
	|				втТТНИсходящаяЕГАИС.ДокументОснование
	|			ИЗ
	|				втТТНИсходящаяЕГАИС)
	|	И битМаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|	И НЕ битМаршрутныйЛистЗаказы.Ссылка.СтраховаяСтавка = ЗНАЧЕНИЕ(Справочник.бг_СтавкиСтраховыхКомпаний.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &ТипДоставки = ""Самовывоз""
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ВидПеревозки ПОДОБНО ""%Самовывоз%""
	|			КОГДА &ТипДоставки = ""НеСамовывоз""
	|				ТОГДА НЕ битМаршрутныйЛистЗаказы.Ссылка.ВидПеревозки ПОДОБНО ""%Самовывоз%""
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользоватьФильтрПоТипуРейса
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ТипРейса = &ТипРейса
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользоватьФильтрПоСкладу
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.Склад В ИЕРАРХИИ (&Склад)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользоватьФильтрПоОрганизации
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.Организация = &Организация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	битМаршрутныйЛистЗаказы.Ссылка,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(битМаршрутныйЛистЗаказы.ДокументОтгрузки) В (ТИП(Документ.ПриобретениеТоваровУслуг), ТИП(Документ.ВозвратТоваровОтКлиента))
	|			ТОГДА ВЫБОР
	|					КОГДА битМаршрутныйЛистЗаказы.ДокументОтгрузки.НомерВходящегоДокумента = """"""""
	|						ТОГДА битМаршрутныйЛистЗаказы.ДокументОтгрузки.Номер
	|					ИНАЧЕ битМаршрутныйЛистЗаказы.ДокументОтгрузки.НомерВходящегоДокумента
	|				КОНЕЦ
	|		ИНАЧЕ битМаршрутныйЛистЗаказы.ДокументОтгрузки.Номер
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(втТТНВходящаяЕГАИС.Дата, ДЕНЬ),
	|	втТТНВходящаяЕГАИС.ТипТранспорта,
	|	втТТНВходящаяЕГАИС.ПунктПогрузки,
	|	втТТНВходящаяЕГАИС.ПунктРазгрузки,
	|	битМаршрутныйЛистЗаказы.ДокументОтгрузки,
	|	битМаршрутныйЛистЗаказы.СтраховаяПремия,
	|	битМаршрутныйЛистЗаказы.СуммаДокумента
	|ИЗ
	|	Документ.битМаршрутныйЛист.Заказы КАК битМаршрутныйЛистЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТТНВходящаяЕГАИС КАК втТТНВходящаяЕГАИС
	|		ПО (втТТНВходящаяЕГАИС.ДокументОснование = битМаршрутныйЛистЗаказы.ДокументОтгрузки)
	|ГДЕ
	|	битМаршрутныйЛистЗаказы.Ссылка.Проведен
	|	И битМаршрутныйЛистЗаказы.ДокументОтгрузки В
	|			(ВЫБРАТЬ
	|				втТТНВходящаяЕГАИС.ДокументОснование
	|			ИЗ
	|				втТТНВходящаяЕГАИС)
	|	И битМаршрутныйЛистЗаказы.Ссылка.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.бг_ВидыМаршрутныхЛистов.Рейс)
	|	И битМаршрутныйЛистЗаказы.Ссылка.ТипРейса = &ТипРейса
	|	И НЕ битМаршрутныйЛистЗаказы.Ссылка.СтраховаяСтавка = ЗНАЧЕНИЕ(Справочник.бг_СтавкиСтраховыхКомпаний.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &ТипДоставки = ""Самовывоз""
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ВидПеревозки ПОДОБНО ""%Самовывоз%""
	|			КОГДА &ТипДоставки = ""НеСамовывоз""
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.ВидПеревозки ПОДОБНО ""%Самовывоз%""
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользоватьФильтрПоСкладу
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.Склад В ИЕРАРХИИ (&Склад)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользоватьФильтрПоОрганизации
	|				ТОГДА битМаршрутныйЛистЗаказы.Ссылка.Организация = &Организация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(втДанныеДокументов.Ссылка.Организация.НаименованиеПолное КАК СТРОКА(512)) КАК Страхователь,
	|	втДанныеДокументов.Ссылка КАК Рейс,
	|	втДанныеДокументов.Ссылка.СтраховаяСтавка.Контрагент.НаименованиеПолное КАК Страховщик,
	|	втДанныеДокументов.Ссылка.СтраховаяСтавка.Договор КАК ДоговорСтрахования,
	|	втДанныеДокументов.Ссылка.СтраховаяСтавка.Договор.бг_МаксимальнаяСтраховаяСумма КАК МаксимальнаяСтраховаяСумма,
	|	втДанныеДокументов.ТипТранспорта КАК ТипТранспорта,
	|	ВЫРАЗИТЬ(втДанныеДокументов.ПунктПогрузки КАК СТРОКА(512)) КАК ПунктОтправления,
	|	ВЫРАЗИТЬ(втДанныеДокументов.ПунктРазгрузки КАК СТРОКА(512)) КАК ПунктНазначения,
	|	втДанныеДокументов.НомерТТН КАК НомерТТН,
	|	втДанныеДокументов.ДатаТТН КАК ДатаТТН,
	|	втДанныеДокументов.СуммаДокумента КАК СтраховаяСумма,
	|	втДанныеДокументов.СтраховаяПремия КАК СтраховаяПремия,
	|	ВЫБОР
	|		КОГДА втДанныеДокументов.Ссылка.СтраховаяСтавка.Ставка = 0
	|			ТОГДА втДанныеДокументов.Ссылка.СтраховаяСтавка
	|		ИНАЧЕ втДанныеДокументов.Ссылка.СтраховаяСтавка.Ставка
	|	КОНЕЦ КАК СтраховаяСтавка
	|ИЗ
	|	втДанныеДокументов КАК втДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТТН
	|ИТОГИ
	|	МАКСИМУМ(МаксимальнаяСтраховаяСумма),
	|	СУММА(СтраховаяСумма),
	|	СУММА(СтраховаяПремия)
	|ПО
	|	Страховщик,
	|	ДоговорСтрахования,
	|	Страхователь,
	|	ДатаТТН,
	|	Рейс,
	|	ТипТранспорта,
	|	СтраховаяСтавка,
	|	ПунктОтправления,
	|	ПунктНазначения";
КонецФункции

Функция ЕстьПоступления(ПараметрыБордеро)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыБордеро.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыБордеро.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", ПараметрыБордеро.Организация);
	Запрос.УстановитьПараметр("Договор", ПараметрыБордеро.Договор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Проведен
	|	И ПриобретениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПриобретениеТоваровУслуг.Организация = &Организация
	|	И ПриобретениеТоваровУслуг.Договор = &Договор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеУслугПрочихАктивов.Ссылка
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ПриобретениеУслугПрочихАктивов
	|ГДЕ
	|	ПриобретениеУслугПрочихАктивов.Проведен
	|	И ПриобретениеУслугПрочихАктивов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПриобретениеУслугПрочихАктивов.Организация = &Организация
	|	И ПриобретениеУслугПрочихАктивов.Договор = &Договор";
	
	Результат = Запрос.Выполнить();
	
	ЕстьПоступления = Не Результат.Пустой();
	ТекстСообщения = НСтр("ru='В указанном периоде обнаружены проведенные поступления по договору %1:'");
	ТекстСообщения = СтрШаблон(ТекстСообщения, ПараметрыБордеро.Договор); 
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = ТекстСообщения + Символы.ПС + Строка(Выборка.Ссылка);
	КонецЦикла;
	
	Если ЕстьПоступления Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Возврат ЕстьПоступления;
	
КонецФункции

#КонецОбласти