#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции	

#Область Печать 

// Добавляет команды печати "ТТН" и "Транспортная накладная" в коллекцию команд печати документа.
//
// Параметры:
//	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//	УсловиеВидимости - Структура - Условие видимости печатной формы
//	
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - элемент коллекции КомандыПечати, содержащий описание команды печати.
//
Функция ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ТТН 1-Т
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.бг_ПечатьТранспортнаяНакладная";
	КомандаПечати.Идентификатор = "бг_ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т) (основной)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.бг_ПечатьТранспортнаяНакладная";
	КомандаПечати.Идентификатор = "бг_ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная (основной)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	Возврат КомандаПечати;
	
КонецФункции

// Формирует печатные формы объекта.
//
// Параметры:
//	МассивОбъектов			- Массив Из ДокументСсылка	- ссылки на объекты которые нужно распечатать.
//	ПараметрыПечати			- Структура					- дополнительные параметры печати.
//	КоллекцияПечатныхФорм	- ТаблицаЗначений			- сформированные табличные документы.
//	ОбъектыПечати			- СписокЗначений			- объекты печати.
//	ПараметрыВывода			- Структура					- параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_ТТН",
			НСтр("ru = 'Товарно-транспортная накладная (1-Т) (Белуга)'"),
			СформироватьПечатнуюФормуТТН(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_ТранспортнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_ТранспортнаяНакладная",
			НСтр("ru = 'Транспортная накладная (Белуга)'"),
			СформироватьПечатнуюФормуТранспортнойНакладной(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;	

КонецПроцедуры

#Область ПечатьТТН

Функция СформироватьПечатнуюФормуТТН(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН";
	
	НомерТипаДокумента = 0;

	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.бг_ПолучитьДанныеДляПечатнойФормыТТН(
			ПараметрыПечати, 
			СтруктураОбъектов.Значение); 
		
		ЗаполнитьТабличныйДокументТТН(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;	
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДанныеШапки = ДанныеДляПечати.ДанныеШапки.Выбрать();
	ДанныеТабличнойЧасти = ДанныеДляПечати.ДанныеТабличнойЧасти.Выгрузить();
	ДанныеСчетФактуры = ДанныеДляПечати.ДанныеСчетФактуры.Выгрузить();
	
	НоменклатураСвернуто = ДанныеТабличнойЧасти.Скопировать(, "Ссылка, Номенклатура");
	НоменклатураСвернуто.Свернуть("Ссылка, Номенклатура");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеШапки.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Реализация", ДанныеШапки.Ссылка);
		
		СчетФактурыДокумента = ДанныеСчетФактуры.НайтиСтроки(Отбор);
		
		НомерСчетФактуры = "";
		
		Если СчетФактурыДокумента.Количество() > 0 Тогда
			НомерСчетФактуры = СчетФактурыДокумента[0].Номер;	
		КонецЕсли;	
		
		ЭтоЭкспорт = Ложь;
		
		Если ДанныеШапки.Валюта <> ВалютаРегламентированногоУчета Тогда
			ИмяМакета = "бг_ПФ_MXL_ТТН_Экспорт";
			ЭтоЭкспорт = Истина;
		Иначе
			ИмяМакета = "бг_ПФ_MXL_ТТН";	
		КонецЕсли;
		
		Макет = ПолучитьМакет(ИмяМакета);
		
		// Шапка
		Область = Макет.ПолучитьОбласть("Шапка");
		
		Область.Параметры.Заполнить(ДанныеШапки);
		
		Область.Параметры.Серия = "---";
		
		ВывестиНомерЗаказаДляСетевогоКлиента(Область, ДанныеШапки, НомерСчетФактуры);			
		
		ГрузоотправительРеквизиты = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Организация, 
				ДанныеШапки.ДатаДокумента),
			"ИНН,КПП");
				
		ГрузоотправительТелефон = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Организация, 
				ДанныеШапки.ДатаДокумента),
			"Телефоны");		
				
		ГрузоотправительПредставление = СтрШаблон(
			НСтр("ru='%1, %2, %3, %4'"), 
			ДанныеШапки.ОрганизацияНаименование, 
			ГрузоотправительРеквизиты,
			ДанныеШапки.АдресПунктаНазначения,
			ГрузоотправительТелефон);		
				
		Область.Параметры.ГрузоотправительПредставление = ГрузоотправительПредставление;
		
		ГрузополучательНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Контрагент, 
				ДанныеШапки.ДатаДокумента),
			"ПолноеНаименование");
				
		ГрузополучательРеквизиты = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Грузополучатель, 
				ДанныеШапки.ДатаДокумента),
			"ИНН,КПП");		
				
		ШаблонТелефонаСтрокой = НСтр("ru=', тел.: %1'");
				
		Область.Параметры.ГрузополучательПредставление = СтрШаблон(
			НСтр("ru='%1, %2, %3%4'"), 
			ГрузополучательНаименование, 
			ГрузополучательРеквизиты, 
			ДанныеШапки.АдресГрузополучателя,
			?(
				ПустаяСтрока(ДанныеШапки.ТелефонГрузополучателя), 
				"", 
				СтрШаблон(ШаблонТелефонаСтрокой, ДанныеШапки.ТелефонГрузополучателя)));
				
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеШапки.Контрагент, 
			ДанныеШапки.ДатаДокумента,,
			ДанныеШапки.БанковскийСчетКонтрагента);
				
		ЭтоМеждународныйСчетПлательщика = СведенияОПокупателе.бг_ЭтоМеждународныйСчет;

		СписокСведенийПлательщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,НомерСчета,Банк, %1'"),
			?(ЭтоМеждународныйСчетПлательщика, "", "БИК,КоррСчет"));

		ПредставлениеПлательщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОПокупателе,
			СписокСведенийПлательщика,
			Не ЭтоМеждународныйСчетПлательщика);
				
		Область.Параметры.ПлательщикПредставление = ПредставлениеПлательщика;
		
		ТабличныйДокумент.Вывести(Область);
		
		// Таблица	
		ОбластиТаблицы = ИменаОбластейТаблицыТТН(
			ЭтоСетевойКлиент(ДанныеШапки.КатегорияМакетовПечатныхФорм));
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть(ОбластиТаблицы.ОбластьШапкаТаблицы);
		
		НомерСтраницы = 1;
		ШаблонНомераСтраницы = НСтр("ru='Страница %1'");
		ОбластьШапкаТаблицы.Параметры.НомерСтраницы = СтрШаблон(ШаблонНомераСтраницы, НомерСтраницы);
		
		ОбластьШапкаТаблицы.Параметры.Заполнить(ДанныеШапки);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть(ОбластиТаблицы.ОбластьСтрока);
		ОбластьИтогиПоСтранице = Макет.ПолучитьОбласть(ОбластиТаблицы.ОбластьИтогоПоСтранице);
		ОбластьИтоги = Макет.ПолучитьОбласть(ОбластиТаблицы.ОбластьВсего);
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		Отбор = Новый Структура("Ссылка", ДанныеШапки.Ссылка);
			
		НоменклатураДокумента = НоменклатураСвернуто.НайтиСтроки(Отбор);
		СтрокиТаблицы = ДанныеТабличнойЧасти.НайтиСтроки(Отбор);
		
		ИтогиПоТаблице = ПараметрыИтоговПоТаблицеТТН();
		
		ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
		
		НомерСтроки = 0;
		КоличествоСтрок = СтрокиТаблицы.Количество();
		
		Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ДанныеСтроки = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицы);
			
			РассчитатьЦенуСуммуВВалютеРеглУчета(
				ДанныеСтроки,
				ДанныеШапки,
				ВалютаРегламентированногоУчета,  
				ЭтоЭкспорт);
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ДанныеСтроки);
			
			ДанныеЕдиницыИзмеренияВесаСтроки = Новый Структура;
			ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("ЕдиницаИзмерения", ДанныеСтроки.ВесЕдиницаИзмерения);
			ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("Числитель", ДанныеСтроки.ВесЕдиницаИзмеренияЧислитель);
			ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("Знаменатель", ДанныеСтроки.ВесЕдиницаИзмеренияЗнаменатель);
			
			ВесНеттоТонн = ВесВТоннах(
				ДанныеСтроки.МассаНетто, 
				ДанныеЕдиницыИзмеренияВесаСтроки, 
				ЕдиницаИзмеренияВеса);
			
			ОбластьСтрокаТаблицы.Параметры.МассаНетто = ВесНеттоТонн;
			
			ОбластьСтрокаТаблицы.Параметры.ТоварНаименование = СтрШаблон(
				НСтр("ru='%1
					|Декларация о соответствии %2 (%3 - %4)'"), 
				ДанныеСтроки.НоменклатураНаименование,
				ДанныеСтроки.НомерСертификата,
				Формат(ДанныеСтроки.ДатаНачалаСертификата, "ДФ=dd.MM.yyyy"),
				Формат(ДанныеСтроки.ДатаОкончанияСертификата, "ДФ=dd.MM.yyyy"));
				
			ОбластьСтрокаТаблицы.Параметры.НомерЗаписиВКартотеке = "---";	
			ОбластьСтрокаТаблицы.Параметры.НомерПрейскуранта = "---";
			
			Если ПустаяСтрока(ДанныеСтроки.Артикул) Тогда
				ОбластьСтрокаТаблицы.Параметры.Артикул = "---";	
			КонецЕсли;		
			
			ПроверяемаяОбласть = Новый Массив;
			ПроверяемаяОбласть.Добавить(ОбластьСтрокаТаблицы);
			ПроверяемаяОбласть.Добавить(ОбластьИтогиПоСтранице);
			
			Если НомерСтроки = КоличествоСтрок Тогда
				
				ИтогиПоТаблицеДляПодвала = ОбщегоНазначения.СкопироватьРекурсивно(ИтогиПоТаблице);
				
				РассчитатьИтогиПоТаблицеТТН(ИтогиПоТаблицеДляПодвала, ДанныеСтроки, ЕдиницаИзмеренияВеса);
								
				ЗаполнитьПодвалТТН(
					ОбластьПодвал, 
					ДанныеШапки, 
					ИтогиПоТаблицеДляПодвала, 
					НоменклатураДокумента, 
					КоличествоСтрок); 
				
				ПроверяемаяОбласть.Добавить(ОбластьИтоги);
				ПроверяемаяОбласть.Добавить(ОбластьПодвал);
				
			КонецЕсли;	
			
			Если Не ТабличныйДокумент.ПроверитьВывод(ПроверяемаяОбласть) Тогда
				
				ОбластьИтогиПоСтранице.Параметры.Заполнить(ИтогиПоТаблице.ИтогиПоСтранице);
				ТабличныйДокумент.Вывести(ОбластьИтогиПоСтранице);
				
				// очистим структуру для начала расчета итогов по новой странице
				Для Каждого ПараметрИтога Из ИтогиПоТаблице.ИтогиПоСтранице Цикл
					ИтогиПоТаблице.ИтогиПоСтранице[ПараметрИтога.Ключ] = 0;	
				КонецЦикла;	
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = СтрШаблон(ШаблонНомераСтраницы, НомерСтраницы);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
			КонецЕсли;	
						
			РассчитатьИтогиПоТаблицеТТН(ИтогиПоТаблице, ДанныеСтроки, ЕдиницаИзмеренияВеса);
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);	
						
		КонецЦикла;	
		
		ОбластьИтогиПоСтранице.Параметры.Заполнить(ИтогиПоТаблице.ИтогиПоСтранице);
		ТабличныйДокумент.Вывести(ОбластьИтогиПоСтранице);
		
		ОбластьИтоги.Параметры.Заполнить(ИтогиПоТаблице.ИтогиПоДокументу);
		ТабличныйДокумент.Вывести(ОбластьИтоги);
		
		// Подвал
		ОбластьПодвал.Параметры.КоличествоЛистовПродолжения = НомерСтраницы;
		
		ПроверяемаяОбласть.Очистить();	
		ПроверяемаяОбласть.Добавить(ОбластьПодвал);
		
		Если Не ТабличныйДокумент.ПроверитьВывод(ПроверяемаяОбласть) Тогда		
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Транспортный раздел
		Область = Макет.ПолучитьОбласть("ТранспортныйРаздел");
		
		Область.Параметры.Заполнить(ДанныеШапки);
		
		ЗачеркнутыйШрифт = Новый Шрифт(Область.Области.Стандарт.Шрифт,,,,,, Истина); 
		
		Область.Области.Стандарт.Шрифт   = ЗачеркнутыйШрифт;
		Область.Области.Ограничено.Шрифт = ЗачеркнутыйШрифт;
		
		Область.Параметры.НомерПутевогоЛиста = "---";
		
		Область.Параметры.СрокДоставки = СтрШаблон(
			НСтр("ru='%1 - %2'"), 
			ДанныеШапки.ПлановаяДатаДоставкиС,
			ДанныеШапки.ПлановаяДатаДоставкиПо);
			
		ЗаказчикРеквизиты = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Заказчик, 
				ДанныеШапки.ДатаДокумента,,
				ДанныеШапки.БанковскийСчетЗаказчика),
			"ИНН,КПП,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
		ЗаказчикПредставление = СтрШаблон(
			НСтр("ru='%1, %2'"), 
			ДанныеШапки.ЗаказчикНаименование, 
			ЗаказчикРеквизиты);		
			
		Область.Параметры.ОрганизацияЗаказчик = ЗаказчикПредставление;
		
		ШаблонСложенияСтрок = НСтр("ru='%1%2'");
		
		Область.Параметры.ПунктПогрузки = СтрШаблон(
			ШаблонСложенияСтрок,  
			ДанныеШапки.АдресПунктаНазначения,
			?(
				ПустаяСтрока(ДанныеШапки.НомерТелефонаПунктаНазначения), 
				"", 
				СтрШаблон(ШаблонТелефонаСтрокой, ДанныеШапки.НомерТелефонаПунктаНазначения)));
			
		Область.Параметры.ПунктРазгрузки = СтрШаблон(
			ШаблонСложенияСтрок, 
			ДанныеШапки.АдресГрузополучателя,
			?(
				ПустаяСтрока(ДанныеШапки.ТелефонГрузополучателя), 
				"", 
				СтрШаблон(ШаблонТелефонаСтрокой, ДанныеШапки.ТелефонГрузополучателя)));
				
		Область.Параметры.ВодительскоеУдостоверение = СтрШаблон(
			ШаблонСложенияСтрок, 
			ДанныеШапки.ВодительскоеУдостоверениеСерия, 
			ДанныеШапки.ВодительскоеУдостоверениеНомер);
				
		Область.Параметры.ОрганизацияПеревозчик = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеШапки.Перевозчик, 
				ДанныеШапки.ДатаДокумента,,
				ДанныеШапки.БанковскийСчетПеревозчика),
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
		ПредставлениеВодитель = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.Водитель);		
				
		Область.Параметры.ВодительФИО = ПредставлениеВодитель;		
		
		ТабличныйДокумент.Вывести(Область);
		
		// Сведения о грузе
		Область = Макет.ПолучитьОбласть("СведенияОГрузе");
		
		ИтогиТранспортныйРаздел = ИтогиПоТаблице.ИтогиТранспортныйРаздел;
		
		ЗаполнитьТранспортныйРазделТТН(
			ДанныеШапки, 
			Область, 
			ИтогиТранспортныйРаздел, 
			НомерСчетФактуры);
		
		ТабличныйДокумент.Вывести(Область);
		
		// Подвал сведений о грузе
		Область = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
		
		Область.Параметры.Заполнить(ИтогиПоТаблице.ИтогиПоДокументу);
		
		Область.Параметры.ИтогоКоличествоМестПрописью = ЧислоПрописью(
			ИтогиПоТаблице.ИтогиПоДокументу.ИтогоКоличествоМест, 
			"НП=Ложь", 
			",,,,,,,,0");
			
		Область.Параметры.МассаГрузаБруттоПрописью = СтрШаблон(
			НСтр("ru='%1 т'"),
			ЧислоПрописью(
				ИтогиПоТаблице.ИтогиПоДокументу.ИтогоВесБрутто,  
				"ДП=Истина", "целая, целых, целых, ж, стотысячная, стотысячных, стотысячных, ж, 5"));
				
		Область.Параметры.НомераПломб = ДанныеШапки.НомераПломб;
		
		Область.Параметры.ВодительЭкспедитор = ?(
			ЗначениеЗаполнено(ДанныеШапки.Экспедитор), 
			ДанныеШапки.Экспедитор, 
			ДанныеШапки.Водитель);
			
		Область.Параметры.СдалФИО = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.Отпустил);
		Область.Параметры.СдалДолжность = ДанныеШапки.ОтпускПроизвелДолжность;
		
		ТабличныйДокумент.Вывести(Область);
		
		// Погрузочные операции
		Область = Макет.ПолучитьОбласть("ПогрузочныеОперации");
		
		Область.Параметры.Грузоотправитель = ДанныеШапки.ОрганизацияНаименование;
				
		Область.Параметры.Грузополучатель = ГрузополучательНаименование;
				
		Область.Параметры.МеханизмПогрузки = "Автопогрузчик, 2т";
		Область.Параметры.СпособПогрузки = "Механизированный";
		
		Область.Параметры.ДатаПогрузкиПрибытия = ?(
			ЗначениеЗаполнено(ДанныеШапки.ДатаПрибытия), 
			ДанныеШапки.ДатаПрибытия, 
			"---");
			
		Область.Параметры.ДатаПогрузкиУбытия = ?(
			ЗначениеЗаполнено(ДанныеШапки.ДатаУбытия), 
			ДанныеШапки.ДатаУбытия, 
			"---");
		
		ТабличныйДокумент.Вывести(Область);
		
		// Прочие сведения
		Область = Макет.ПолучитьОбласть("ПрочиеСведения");
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ДанныеШапки.Ссылка);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьПодвалТТН(ОбластьПодвал, ДанныеШапки, ИтогиПоТаблице, 
	НоменклатураДокумента, КоличествоСтрокТаблицы)

	ОбластьПодвал.Параметры.Заполнить(ИтогиПоТаблице.ИтогиПоДокументу);
	ОбластьПодвал.Параметры.Заполнить(ДанныеШапки);
	
	ФорматДаты = "ДФ=dd.MM.yyyy";
	ПараметрыПредметаИсчисления = ",,,,,,,,0";
	
	ОбластьПодвал.Параметры.НомераБланков = "---";
	ОбластьПодвал.Параметры.ЛистовПриложений = ЧислоПрописью(
		КоличествоСтрокТаблицы * 4,,
		ПараметрыПредметаИсчисления) + " листах";
	
	ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(
		КоличествоСтрокТаблицы, 
		"НП=Ложь", 
		ПараметрыПредметаИсчисления);
		
	ОбластьПодвал.Параметры.ВсегоНаименованийПрописью = ЧислоПрописью(
		НоменклатураДокумента.Количество(), 
		"НП=Ложь", 
		ПараметрыПредметаИсчисления);
		
	ОбластьПодвал.Параметры.ВсегоНаименований = НоменклатураДокумента.Количество();	
	
	ОбластьПодвал.Параметры.ИтогоКоличествоМестПрописью = ЧислоПрописью(
		ИтогиПоТаблице.ИтогиПоДокументу.ИтогоКоличествоМест, 
		"НП=Ложь", 
		ПараметрыПредметаИсчисления);
	
	ОбластьПодвал.Параметры.ОтпущеноНаСуммуПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
		ИтогиПоТаблице.ИтогиПоДокументу.ИтогоСуммаСНДСВалюта, 
		ДанныеШапки.Валюта);
		
	ОбластьПодвал.Параметры.МассаГрузаНеттоПрописью = СтрШаблон(
		НСтр("ru='%1 т'"),
		ЧислоПрописью(
			ИтогиПоТаблице.ИтогиПоДокументу.ИтогоВесНетто,  
			"ДП=Истина", "целая, целых, целых, ж, стотысячная, стотысячных, стотысячных, ж, 5"));
			
	МассаГрузаБруттоПрописью = СтрШаблон(
		НСтр("ru='%1 т'"),
		ЧислоПрописью(
			ИтогиПоТаблице.ИтогиПоДокументу.ИтогоВесБрутто,  
			"ДП=Истина", "целая, целых, целых, ж, стотысячная, стотысячных, стотысячных, ж, 5"));		
			
	ОбластьПодвал.Параметры.МассаГрузаБруттоПрописью = МассаГрузаБруттоПрописью;
					
	ШаблонПредставленияФизЛица = НСтр("ru='%1 
									|на основании дов. №%2 от %3'");
	
	ОбластьПодвал.Параметры.ФИООтпускРазрешил = СтрШаблон(
		ШаблонПредставленияФизЛица, 
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.ОтгрузкуРазрешил), 
		ДанныеШапки.ОтгрузкуРазрешилДоверенностьНомер, 
		Формат(ДанныеШапки.ОтгрузкуРазрешилДоверенностьДата, ФорматДаты));
		
	ОбластьПодвал.Параметры.ГлавныйБухгалтерФИО = СтрШаблон(
		ШаблонПредставленияФизЛица, 
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.ГлавныйБухгалтер), 
		ДанныеШапки.ГлавныйБухгалтерДоверенностьНомер, 
		Формат(ДанныеШапки.ГлавныйБухгалтерДоверенностьДата, ФорматДаты));
		
	ПредставлениеФИООтпускПроизвел = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеШапки.Отпустил);	
		
	ОбластьПодвал.Параметры.ФИООтпускПроизвел = ПредставлениеФИООтпускПроизвел;
	
	ЕстьЭкспедитор = ЗначениеЗаполнено(ДанныеШапки.Экспедитор);
	
	Если ЕстьЭкспедитор Тогда
		ДолжностьВодителя = НСтр("ru='экспедитор'");
	Иначе
		ДолжностьВодителя = НСтр("ru='водитель-экспедитор'");
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ФИОГрузПринял = ?(ЕстьЭкспедитор, ДанныеШапки.Экспедитор, ДанныеШапки.Водитель);
	ОбластьПодвал.Параметры.ГрузПринялДолжность = ДолжностьВодителя;
	
КонецПроцедуры

Функция ЭтоСетевойКлиент(КатегорияМакетовПечатныхФорм)

	Возврат КатегорияМакетовПечатныхФорм = Перечисления.бг_КатегорииМакетовПечатныхФорм.ОбщийДляСетей;	
	
КонецФункции	

Процедура ВывестиНомерЗаказаДляСетевогоКлиента(Область, ДанныеШапки, НомерСчетФактуры)

	КатегорияМакетовПечатныхФорм = ДанныеШапки.КатегорияМакетовПечатныхФорм;
	
	Если Не ЭтоСетевойКлиент(КатегорияМакетовПечатныхФорм) Тогда
		Возврат;
	КонецЕсли;	
	
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	
	Область.Параметры.НомерЗаказаЗаголовок = "Номер заказа";
	Область.Параметры.НомерЗаказа = ДанныеШапки.НомерЗаказаКлиента;
	
	Область.Области.НомерЗаказа.Обвести(Линия, Линия, Линия, Линия);
	Область.Области.НомерЗаказаЗаголовок.Обвести(Линия, Линия, Линия, Линия);
					
КонецПроцедуры	

Процедура ЗаполнитьТранспортныйРазделТТН(ДанныеШапки, Область, ИтогиТранспортныйРаздел, НомерСчетФактуры)
	
	ЗаполнятьСтрокуАлкоголь = ИтогиТранспортныйРаздел.ИтогоКоличествоМестАлкоголь > 0;
	ЗаполнятьСтрокуПрочее = ИтогиТранспортныйРаздел.ИтогоКоличествоМестПрочее > 0;
	
	ПараметрыЗаполненияПоУмолчанию = Новый Структура;
	
	// 1 строка
	ПараметрыЗаполненияПоУмолчанию.Вставить("НаименованиеГруза_1Строка", 		"1 --");
	ПараметрыЗаполненияПоУмолчанию.Вставить("СопроводительныеДокументы_1Строка","--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ВидУпаковки_1Строка", 				"--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ИтогоКоличествоМест_1Строка", 		"--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("СпособОпределенияМассы_1Строка", 	"--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("НомерКонтейнера_1Строка", 			"--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ИтогоВес_1Строка", 				"--");
	
	// 2 строка
	ПараметрыЗаполненияПоУмолчанию.Вставить("НаименованиеГруза_2Строка", 	 "2 --");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ВидУпаковки_2Строка", 			 "--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ИтогоКоличествоМест_2Строка", 	 "--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("СпособОпределенияМассы_2Строка","--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("НомерКонтейнера_2Строка", 		 "--");
	ПараметрыЗаполненияПоУмолчанию.Вставить("ИтогоВес_2Строка", 			 "--");	

	ШаблонСопроводительныхДокументов = НСтр(
		"ru='ТТН №%1 от %2 к ней: ТН, %3 №%4%СчетФактура%, Декларация о соответствии, Удостоверение о качестве'");

	ЭтоПродажаНаЭкспорт = ДанныеШапки.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
	ФорматированнаяДатаДокумента = Формат(ДанныеШапки.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ШаблонСопроводительныхДокументов = СтрЗаменить(
		ШаблонСопроводительныхДокументов, 
		"%СчетФактура%", 
		?(
			Не ПустаяСтрока(НомерСчетФактуры) И ЭтоПродажаНаЭкспорт, 
			СтрШаблон(НСтр("ru=', Счет фактура №%1'"), СокрЛП(НомерСчетФактуры)), 
			""));
	
	ПредставлениеСопроводительныеДокументы = СтрШаблон(
		ШаблонСопроводительныхДокументов, 
		ДанныеШапки.НомерДокумента, 
		ФорматированнаяДатаДокумента,
		?(
			ЭтоПродажаНаЭкспорт, 
			"ТОРГ-12", 
			"УПД"),
		?(
			ЭтоПродажаНаЭкспорт, 
			ДанныеШапки.НомерДокумента, 
			СтрШаблон(
				НСтр("ru='%1 от %2'"), 
				ДанныеШапки.НомерДокумента, 
				ФорматированнаяДатаДокумента)));
		
	ПредставлениеВидУпаковки = "кор";
	ПредставлениеСпособОпределенияМассы = "Расчетный";
	ПредставлениеНомерКонтейнера = ?(
		ПустаяСтрока(ДанныеШапки.НомерКонтейнера), 
		"--", 
		ДанныеШапки.НомерКонтейнера);
	
	Если ЗаполнятьСтрокуАлкоголь Тогда
		
		ПараметрыЗаполненияПоУмолчанию.НаименованиеГруза_1Строка = "1 Алкогольная продукция";
		ПараметрыЗаполненияПоУмолчанию.СопроводительныеДокументы_1Строка = ПредставлениеСопроводительныеДокументы;
		ПараметрыЗаполненияПоУмолчанию.ВидУпаковки_1Строка = ПредставлениеВидУпаковки;
		ПараметрыЗаполненияПоУмолчанию.СпособОпределенияМассы_1Строка = ПредставлениеСпособОпределенияМассы;
		ПараметрыЗаполненияПоУмолчанию.ИтогоКоличествоМест_1Строка = ИтогиТранспортныйРаздел.ИтогоКоличествоМестАлкоголь;
		ПараметрыЗаполненияПоУмолчанию.ИтогоВес_1Строка = ИтогиТранспортныйРаздел.ИтогоВесБруттоАлкоголь;
		ПараметрыЗаполненияПоУмолчанию.НомерКонтейнера_1Строка = ПредставлениеНомерКонтейнера;
		
		Если ЗаполнятьСтрокуПрочее Тогда
			
			ПараметрыЗаполненияПоУмолчанию.НаименованиеГруза_2Строка = "2 Безалкогольная продукция";
			ПараметрыЗаполненияПоУмолчанию.ВидУпаковки_2Строка = ПредставлениеВидУпаковки;
			ПараметрыЗаполненияПоУмолчанию.СпособОпределенияМассы_2Строка = ПредставлениеСпособОпределенияМассы;
			ПараметрыЗаполненияПоУмолчанию.ИтогоКоличествоМест_2Строка = ИтогиТранспортныйРаздел.ИтогоКоличествоМестПрочее;
			ПараметрыЗаполненияПоУмолчанию.ИтогоВес_2Строка = ИтогиТранспортныйРаздел.ИтогоВесБруттоПрочее;
			ПараметрыЗаполненияПоУмолчанию.НомерКонтейнера_2Строка = ПредставлениеНомерКонтейнера;
			
		КонецЕсли;
				
	ИначеЕсли ЗаполнятьСтрокуПрочее Тогда
		
		ПараметрыЗаполненияПоУмолчанию.НаименованиеГруза_1Строка = "1 Безалкогольная продукция";	
		ПараметрыЗаполненияПоУмолчанию.СопроводительныеДокументы_1Строка = ПредставлениеСопроводительныеДокументы;
		ПараметрыЗаполненияПоУмолчанию.ВидУпаковки_1Строка = ПредставлениеВидУпаковки;
		ПараметрыЗаполненияПоУмолчанию.СпособОпределенияМассы_1Строка = ПредставлениеСпособОпределенияМассы;
		ПараметрыЗаполненияПоУмолчанию.ИтогоКоличествоМест_1Строка = ИтогиТранспортныйРаздел.ИтогоКоличествоМестПрочее;
		ПараметрыЗаполненияПоУмолчанию.ИтогоВес_1Строка = ИтогиТранспортныйРаздел.ИтогоВесБруттоПрочее;
		ПараметрыЗаполненияПоУмолчанию.НомерКонтейнера_1Строка = ПредставлениеНомерКонтейнера;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Область.Параметры, ПараметрыЗаполненияПоУмолчанию);
	
КонецПроцедуры	

Функция ПараметрыИтоговПоТаблицеТТН()

	ПараметрыИтогов = Новый Структура;

	// итоги по странице
	ИтогиПоСтранице = Новый Структура;
	
	ИтогиПоСтранице.Вставить("ИтогоКоличествоНаСтранице", 		0);
	ИтогиПоСтранице.Вставить("ИтогоКоличествоМестНаСтранице", 	0);
	ИтогиПоСтранице.Вставить("ИтогоВесНеттоНаСтранице", 		0);
	ИтогиПоСтранице.Вставить("ИтогоСуммаСНДСНаСтранице",		0);
	ИтогиПоСтранице.Вставить("ИтогоСуммаСНДСНаСтраницеВалюта", 	0);
	ИтогиПоСтранице.Вставить("ИтогоКоличествоДалНаСтранице", 	0);
	
	// итоги по документу
	ИтогиПоДокументу = Новый Структура;
	
	ИтогиПоДокументу.Вставить("ИтогоКоличество",	0);
	ИтогиПоДокументу.Вставить("ИтогоКоличествоМест",0);
	ИтогиПоДокументу.Вставить("ИтогоВесНетто", 		0);
	ИтогиПоДокументу.Вставить("ИтогоВесБрутто", 	0);
	ИтогиПоДокументу.Вставить("ИтогоСуммаСНДС", 	0);
	ИтогиПоДокументу.Вставить("ИтогоСуммаСНДСВалюта",0);
	ИтогиПоДокументу.Вставить("ИтогоКоличествоДал", 0);
	
	// итоги транспортный раздел
	ИтогиТранспортныйРаздел = Новый Структура;
	
	ИтогиТранспортныйРаздел.Вставить("ИтогоКоличествоМестАлкоголь", 0);
	ИтогиТранспортныйРаздел.Вставить("ИтогоВесБруттоАлкоголь", 		0);
	ИтогиТранспортныйРаздел.Вставить("ИтогоКоличествоМестПрочее", 	0);
	ИтогиТранспортныйРаздел.Вставить("ИтогоВесБруттоПрочее", 		0);

	ПараметрыИтогов.Вставить("ИтогиПоСтранице", 	ИтогиПоСтранице);
	ПараметрыИтогов.Вставить("ИтогиПоДокументу", 	ИтогиПоДокументу);
	ПараметрыИтогов.Вставить("ИтогиТранспортныйРаздел", ИтогиТранспортныйРаздел);
	
	Возврат ПараметрыИтогов;
	
КонецФункции	

Процедура РассчитатьИтогиПоТаблицеТТН(ПараметрыИтогов, ДанныеСтроки, ЕдиницаИзмеренияВеса)

	ИтогиПоСтранице = ПараметрыИтогов.ИтогиПоСтранице;
	ИтогиПоДокументу = ПараметрыИтогов.ИтогиПоДокументу;
	ИтогиТранспортныйРаздел = ПараметрыИтогов.ИтогиТранспортныйРаздел;
	
	ДанныеЕдиницыИзмеренияВесаСтроки = Новый Структура;
	ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("ЕдиницаИзмерения", ДанныеСтроки.ВесЕдиницаИзмерения);
	ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("Числитель", ДанныеСтроки.ВесЕдиницаИзмеренияЧислитель);
	ДанныеЕдиницыИзмеренияВесаСтроки.Вставить("Знаменатель", ДанныеСтроки.ВесЕдиницаИзмеренияЗнаменатель);
	
	ВесНеттоТонн = ВесВТоннах(ДанныеСтроки.МассаНетто, ДанныеЕдиницыИзмеренияВесаСтроки, ЕдиницаИзмеренияВеса);
	ВесБруттоТонн = ВесВТоннах(ДанныеСтроки.МассаБрутто, ДанныеЕдиницыИзмеренияВесаСтроки, ЕдиницаИзмеренияВеса);
	
	ИтогиПоСтранице.ИтогоКоличествоНаСтранице = ИтогиПоСтранице.ИтогоКоличествоНаСтранице + ДанныеСтроки.Количество;
	ИтогиПоСтранице.ИтогоКоличествоМестНаСтранице = ИтогиПоСтранице.ИтогоКоличествоМестНаСтранице + ДанныеСтроки.КоличествоМест;
	ИтогиПоСтранице.ИтогоВесНеттоНаСтранице = ИтогиПоСтранице.ИтогоВесНеттоНаСтранице + ВесНеттоТонн;
	ИтогиПоСтранице.ИтогоСуммаСНДСНаСтранице = ИтогиПоСтранице.ИтогоСуммаСНДСНаСтранице + ДанныеСтроки.СуммаВВалютеРеглУчета;
	ИтогиПоСтранице.ИтогоСуммаСНДСНаСтраницеВалюта = ИтогиПоСтранице.ИтогоСуммаСНДСНаСтраницеВалюта + ДанныеСтроки.СуммаВВалютеДокумента;
	ИтогиПоСтранице.ИтогоКоличествоДалНаСтранице = ИтогиПоСтранице.ИтогоКоличествоДалНаСтранице + ДанныеСтроки.КоличествоДАЛ;
	
	ИтогиПоДокументу.ИтогоКоличество = ИтогиПоДокументу.ИтогоКоличество + ДанныеСтроки.Количество;
	ИтогиПоДокументу.ИтогоКоличествоМест = ИтогиПоДокументу.ИтогоКоличествоМест + ДанныеСтроки.КоличествоМест;
	ИтогиПоДокументу.ИтогоВесНетто = ИтогиПоДокументу.ИтогоВесНетто + ВесНеттоТонн;
	ИтогиПоДокументу.ИтогоВесБрутто = ИтогиПоДокументу.ИтогоВесБрутто + ВесБруттоТонн;
	ИтогиПоДокументу.ИтогоСуммаСНДС = ИтогиПоДокументу.ИтогоСуммаСНДС + ДанныеСтроки.СуммаВВалютеРеглУчета;
	ИтогиПоДокументу.ИтогоСуммаСНДСВалюта = ИтогиПоДокументу.ИтогоСуммаСНДСВалюта + ДанныеСтроки.СуммаВВалютеДокумента;
	ИтогиПоДокументу.ИтогоКоличествоДал = ИтогиПоДокументу.ИтогоКоличествоДал + ДанныеСтроки.КоличествоДАЛ;
	
	Если ДанныеСтроки.АлкогольнаяПродукция Тогда	
		ИтогиТранспортныйРаздел.ИтогоКоличествоМестАлкоголь = ИтогиТранспортныйРаздел.ИтогоКоличествоМестАлкоголь
			+ ДанныеСтроки.КоличествоМест;
			
		ИтогиТранспортныйРаздел.ИтогоВесБруттоАлкоголь = ИтогиТранспортныйРаздел.ИтогоВесБруттоАлкоголь 
			+ ВесБруттоТонн;		
	Иначе		
		ИтогиТранспортныйРаздел.ИтогоКоличествоМестПрочее = ИтогиТранспортныйРаздел.ИтогоКоличествоМестПрочее 
			+ ДанныеСтроки.КоличествоМест;
			
		ИтогиТранспортныйРаздел.ИтогоВесБруттоПрочее = ИтогиТранспортныйРаздел.ИтогоВесБруттоПрочее 
			+ ВесБруттоТонн;
	КонецЕсли;	
	
КонецПроцедуры

Функция ВесВТоннах(ПересчитываемыйВес, ДанныеЕдиницыИзмеренияВесаСтроки, ЕдиницаИзмеренияВеса)
	
	ВесВТоннах = 0;
	
	КоличествоКилограммВТонне = 1000;
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) 
		Или Не ЗначениеЗаполнено(ДанныеЕдиницыИзмеренияВесаСтроки.ЕдиницаИзмерения) Тогда
		Возврат ВесВТоннах;	
	КонецЕсли;	
	
	Если ДанныеЕдиницыИзмеренияВесаСтроки.ЕдиницаИзмерения = ЕдиницаИзмеренияВеса Тогда
		ВесВТоннах = ПересчитываемыйВес / КоличествоКилограммВТонне;	
	ИначеЕсли ДанныеЕдиницыИзмеренияВесаСтроки.Числитель > 1 Тогда	
		ВесВТоннах = ПересчитываемыйВес / ДанныеЕдиницыИзмеренияВесаСтроки.Числитель / КоличествоКилограммВТонне;
	Иначе
		ВесВТоннах = ПересчитываемыйВес;
	КонецЕсли;	
	
	Возврат ВесВТоннах;
	
КонецФункции	

Функция ИменаОбластейТаблицыТТН(ЭтоСетевойКлиент)
	
	ИменаОбластей = Новый Структура;
	
	ИменаОбластей.Вставить("ОбластьШапкаТаблицы", "ЗаголовокТаблицы%1");
	ИменаОбластей.Вставить("ОбластьСтрока", "Строка%1");
	ИменаОбластей.Вставить("ОбластьИтогоПоСтранице", "ИтогоПоСтранице%1");
	ИменаОбластей.Вставить("ОбластьВсего", "Всего%1");
	
	ЧастьИмениОбласти = "";
	
	Если ЭтоСетевойКлиент Тогда
		ЧастьИмениОбласти = "СетевойКлиент";	
	КонецЕсли;	
	
	Для Каждого ИмяОбласти Из ИменаОбластей Цикл
		ИменаОбластей[ИмяОбласти.Ключ] = СтрШаблон(ИмяОбласти.Значение, ЧастьИмениОбласти);	
	КонецЦикла;	
	
	Возврат ИменаОбластей;	
	
КонецФункции

Процедура РассчитатьЦенуСуммуВВалютеРеглУчета(ДанныеСтроки, ДанныеШапки, ВалютаРегламентированногоУчета, ЭтоЭкспорт)
	
	ЦенаВВалютеРеглУчета = ?(
		ЭтоЭкспорт, 
		РаботаСКурсамиВалют.ПересчитатьВВалюту(
			ДанныеСтроки.ЦенаВВалютеДокумента, 
			ДанныеШапки.Валюта, 
			ВалютаРегламентированногоУчета, 
			ДанныеШапки.ДатаДокумента), 
		ДанныеСтроки.ЦенаВВалютеДокумента);
		
	СуммаВВалютеРеглУчета = ?(
		ЭтоЭкспорт, 
		РаботаСКурсамиВалют.ПересчитатьВВалюту(
			ДанныеСтроки.СуммаВВалютеДокумента, 
			ДанныеШапки.Валюта, 
			ВалютаРегламентированногоУчета, 
			ДанныеШапки.ДатаДокумента), 
		ДанныеСтроки.СуммаВВалютеДокумента);
	
	ДанныеСтроки.Вставить("ЦенаВВалютеРеглУчета", ЦенаВВалютеРеглУчета);
	ДанныеСтроки.Вставить("СуммаВВалютеРеглУчета", СуммаВВалютеРеглУчета);
	
КонецПроцедуры	

#КонецОбласти

#Область ПечатьТранспортнаяНакладная

Функция СформироватьПечатнуюФормуТранспортнойНакладной(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТРН";
	
	НомерТипаДокумента = 0;

	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.бг_ПолучитьДанныеДляПечатнойФормыТранспортнойНакладной(
			ПараметрыПечати, 
			СтруктураОбъектов.Значение); 
		
		ЗаполнитьТабличныйДокументТранспортнойНакладной(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьТабличныйДокументТранспортнойНакладной(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	Макет = ПолучитьМакет("бг_ПФ_MXL_ТранспортнаяНакладная");

	ДанныеПоШапке = ДанныеДляПечати.ДанныеПоШапке.Выбрать();
	ДанныеСчетовФактур = ДанныеДляПечати.ДанныеСчетФактуры.Выгрузить();
		
	ПервыйДокумент = Истина;
	
	Пока ДанныеПоШапке.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПараметрыЗаполнения = ПараметрыЗаполненияТранспортнойНакладной(
			ДанныеПоШапке, 
			ДанныеСчетовФактур);
		
		Область = Макет.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона");
		Область.Параметры.Заполнить(ПараметрыЗаполнения);
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		Область = Макет.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона");
		Область.Параметры.Заполнить(ПараметрыЗаполнения);
		ТабличныйДокумент.Вывести(Область);
		
		Если ТабличныйДокумент.КоличествоСтраниц() > 1 Тогда
			
			ТабличныйДокумент.НижнийКолонтитул.Выводить = Истина;
			
			ТекстКолонтитула = СтрШаблон(
				НСтр("ru='%1, [&НомерСтраницы]стр. из [&СтраницВсего]'"), 
				ДанныеПоШапке.НомерДокумента);
			
			ТабличныйДокумент.НижнийКолонтитул.ТекстСправа = ТекстКолонтитула;     
			ТабличныйДокумент.НижнийКолонтитул.НачальнаяСтраница = 1;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			ДанныеПоШапке.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры	

Функция ПараметрыЗаполненияТранспортнойНакладной(ДанныеПечати, ДанныеСчетовФактур)
	
	ФорматДаты = "ДФ=dd.MM.yyyy";
	
	ПараметрыТранспортнойНакладной = Новый Структура;
	
	ПараметрыТранспортнойНакладной.Вставить("Пункт0_1", 1);
	ПараметрыТранспортнойНакладной.Вставить("Пункт0_2", Формат(ДанныеПечати.ДатаЗаказа, ФорматДаты));
	ПараметрыТранспортнойНакладной.Вставить("Пункт0_3", ДанныеПечати.НомерЗаказа);
	ПараметрыТранспортнойНакладной.Вставить("Пункт0_4", Формат(ДанныеПечати.ДатаДокумента, ФорматДаты));
	ПараметрыТранспортнойНакладной.Вставить("Пункт0_5", ДанныеПечати.НомерДокумента);
	
	Грузоотправитель = ДанныеПечати.Организация;
	ЭтоСамовывоз = ДанныеПечати.ЭтоСамовывоз;
	ЭтоЭкспедитор = Ложь;
	
	Если ЗначениеЗаполнено(ДанныеПечати.ОрганизаторПеревозки) Тогда	
		Если ЭтоСамовывоз 
			Или Не ДанныеПечати.МыГрузимТовар Тогда
			Грузоотправитель = ДанныеПечати.ОрганизаторПеревозки;
			ЭтоЭкспедитор = Истина;	
		КонецЕсли;			
	Иначе	
		Грузоотправитель = ?(
			ЭтоСамовывоз И ЗначениеЗаполнено(ДанныеПечати.Перевозчик), 
			ДанныеПечати.Грузополучатель, 
			Грузоотправитель);				
	КонецЕсли;
				
	ШаблонПеречисленияЧерезЗапятую = НСтр("ru='%1, %2'");
			
	ПредставлениеГрузоотправителя =  ФормированиеПечатныхФорм.ОписаниеОрганизации(
		ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			Грузоотправитель, 
			ДанныеПечати.ДатаДокумента),
		"ОфициальноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны");		
		
	ПараметрыТранспортнойНакладной.Вставить("ЭтоЭкспедитор", ?(ЭтоЭкспедитор, "V", ""));
		
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт1_1", 
		ПредставлениеГрузоотправителя);
				
	ПараметрыТранспортнойНакладной.Вставить("Пункт2_1", ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Грузополучатель, 
				ДанныеПечати.ДатаДокумента),
			"СокращенноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны"));
				
	ШаблонСложенияСтрок = НСтр("ru='%1%2'");
				
	РеквизитыПунктаНазначения = СтрШаблон(
		ШаблонСложенияСтрок, 
		ДанныеПечати.АдресДоставки, 
		?(
			ПустаяСтрока(ДанныеПечати.ТелефонПунктаНазначения), 
			"", 
			СтрШаблон(НСтр("ru=', тел.: %1'"), ДанныеПечати.ТелефонПунктаНазначения)));
				
	ПараметрыТранспортнойНакладной.Вставить("Пункт2_2", РеквизитыПунктаНазначения);
		
	ПараметрыТранспортнойНакладной.Вставить("Пункт3_1", "Алкогольная продукция в ассортименте");
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт3_2", 
		СтрШаблон(
			НСтр("ru='Всего мест: %1, гофрокороб'"), 
			ЧислоПрописью(ДанныеПечати.КоличествоМест, ,",,,,,,,,0")));
			
	МассаБруттоПрописью = ?(
		ДанныеПечати.МассаБрутто > 0, 
		?(
			ДанныеПечати.МассаБрутто <> Цел(ДанныеПечати.МассаБрутто), 
			ЧислоПрописью(ДанныеПечати.МассаБрутто, "ДП=Истина", "целая, целых, целых, ж, десятая, десятой, десятых, ж, 1"), 
			ЧислоПрописью(ДанныеПечати.МассаБрутто, ,",,,,,,,,0")), 
		"");
			
	МассаНеттоПрописью = ?(
		ДанныеПечати.МассаНетто > 0, 
		ЧислоПрописью(ДанныеПечати.МассаНетто, "ДП=Истина", "целая, целых, целых, ж, десятая, десятой, десятых, ж, 1"), 
		"");
		
	ПредставлениеМассаБрутто = ?(
		ПустаяСтрока(МассаБруттоПрописью), 
		"", 
		СтрШаблон(НСтр("ru='Масса брутто: %1 кг.'"), МассаБруттоПрописью));
	
	ПредставлениеМассаНетто = ?(
		ПустаяСтрока(МассаНеттоПрописью), 
		"", 
		СтрШаблон(НСтр("ru='Масса нетто: %1 кг.'"), МассаНеттоПрописью));
		
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт3_3", 
		?(
			ПустаяСтрока(МассаБруттоПрописью) И ПустаяСтрока(МассаНеттоПрописью), 
			"", 
			СтрШаблон(НСтр("ru='%1 / %2'"), ПредставлениеМассаБрутто, ПредставлениеМассаНетто)));
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт3_5", 
		СтрШаблон(
			НСтр("ru='%1 (%2)'"), 
			ДанныеПечати.СуммаДокумента, 
			РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта)));
			
	НомерСчетаФактуры = "";			
			
	Отбор = Новый Структура("Реализация", ДанныеПечати.Ссылка);
	
	ДанныеСчетФактуры = ДанныеСчетовФактур.НайтиСтроки(Отбор);
	
	Если ДанныеСчетФактуры.Количество() <> 0 Тогда
		НомерСчетаФактуры = ДанныеСчетФактуры[0].Номер;	
	КонецЕсли;	
	
	ЭтоЭкспорт = ДанныеПечати.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
	
	ПредставлениеПечатногоДокумента = ?(
		ЭтоЭкспорт, 
		СтрШаблон(НСтр("ru='ТОРГ-12 №%1'"), ДанныеПечати.НомерДокумента), 
		СтрШаблон(
			НСтр("ru='УПД №%1 от %2'"), 
			ДанныеПечати.НомерДокумента, 
			Формат(ДанныеПечати.ДатаДокумента, ФорматДаты)));
		
	ПредставлениеСчетаФактуры = ?(
		ЭтоЭкспорт, 
		СтрШаблон(НСтр("ru=', Счет фактура №%1'"), СокрЛП(НомерСчетаФактуры)), 
		"");
	
	ПредставлениеСопроводительныеДокументы = СтрШаблон(
		НСтр("ru='ТТН №%1 от %2 к ней: ТН, %3%4'"), 
		ДанныеПечати.НомерДокумента, 
		Формат(ДанныеПечати.ДатаДокумента, ФорматДаты),
		ПредставлениеПечатногоДокумента, 
		ПредставлениеСчетаФактуры);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт4_1", 
		ПредставлениеСопроводительныеДокументы);
		
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт4_2", 
		"Декларация о соответствии, Удостоверение о качестве");
	
	Если ДанныеПечати.ДатаДокумента < Дата(2022,03,01) Тогда
		ПредставлениеРеквизитов = СтрШаблон(
			НСтр("ru='%1; %2, ИНН %3; %4, ИНН %5'"), 
			ПредставлениеСопроводительныеДокументы, 
			ДанныеПечати.Организация, 
			ДанныеПечати.ГрузоотправительИНН, 
			ДанныеПечати.Грузополучатель, 
			ДанныеПечати.ГрузополучательИНН);
	Иначе
		ПредставлениеРеквизитов = СтрШаблон(
			НСтр("ru='%1; %2, ИНН %3'"), 
			ПредставлениеСопроводительныеДокументы, 
			ДанныеПечати.Организация, 
			ДанныеПечати.ГрузоотправительИНН); 
	КонецЕсли;
	
	ПараметрыТранспортнойНакладной.Вставить("Пункт4_3", ПредставлениеРеквизитов);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт5_1", 
		Формат(ДанныеПечати.ПлановаяДатаДоставкиПо, ФорматДаты));
		
	РеквизитыПеревозчика = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Перевозчик, 
				ДанныеПечати.ДатаДокумента),
			"ЮридическийАдрес,ИНН,Телефоны");
				
	ПредставлениеПеревозчика = СтрШаблон(
		ШаблонПеречисленияЧерезЗапятую, 
		ДанныеПечати.ПеревозчикНаименование, 
		РеквизитыПеревозчика);			
		
	ПараметрыТранспортнойНакладной.Вставить("Пункт6_1", ПредставлениеПеревозчика);
	
	ПредставлениеВодительскоеУдостоверение = СтрШаблон(
			ШаблонСложенияСтрок, 
			ДанныеПечати.ВодительскоеУдостоверениеСерия, 
			ДанныеПечати.ВодительскоеУдостоверениеНомер);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт6_2", 
		СтрШаблон(
			НСтр("ru='%1, ИНН:%2, вод. удостоверение: %3'"), 
			ДанныеПечати.Водитель, 
			ДанныеПечати.ВодительИНН, 
			?(
				Не ПустаяСтрока(ПредставлениеВодительскоеУдостоверение), 
				ПредставлениеВодительскоеУдостоверение, 
				"---")));
			
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт7_1", 
		СтрШаблон(
			НСтр("ru='Автомобиль: %1; Прицеп: %2; Грузоподъемность: %3'"), 
			?(
				ЗначениеЗаполнено(ДанныеПечати.МаркаТранспортногоСредства), 
				ДанныеПечати.МаркаТранспортногоСредства, 
				"---"), 
			?(
				ЗначениеЗаполнено(ДанныеПечати.МаркаПрицепа), 
				ДанныеПечати.МаркаПрицепа, 
				"---"), 
			?(
				ЗначениеЗаполнено(ДанныеПечати.ТранспортноеСредствоГрузоподъемность), 
				ДанныеПечати.ТранспортноеСредствоГрузоподъемность, 
				"---")));
		
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт7_2", 
		СтрШаблон(
			НСтр("ru='Автомобиль: %1; Прицеп: %2'"), 
			?(
				ЗначениеЗаполнено(ДанныеПечати.ТранспортноеСредствоРегистрационныйНомер), 
				ДанныеПечати.ТранспортноеСредствоРегистрационныйНомер, 
				"---"), 
			?(
				ЗначениеЗаполнено(ДанныеПечати.ПрицепРегистрационныйНомер), 
				ДанныеПечати.ПрицепРегистрационныйНомер, 
				"---")));
				
	ПараметрыТранспортнойНакладной.Вставить("Пункт7_3", ДанныеПечати.ДоговорНаВладение);
				
	ПараметрыТранспортнойНакладной.Вставить("Пункт7_5", ДанныеПечати.ТипВладенияТС);
	
	ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
		ФормированиеПечатныхФорм.СведенияОЮрФизЛице( 
			ДанныеПечати.Организация, 
			ДанныеПечати.ДатаДокумента),
		"ОфициальноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны");
	
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_1", ПредставлениеОрганизации);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_2", 
		СтрШаблон(
			ШаблонСложенияСтрок, 
			ДанныеПечати.АдресПунктаНазначения, 
			?(
				ПустаяСтрока(ДанныеПечати.НомерТелефона), 
				"", 
				СтрШаблон(НСтр("ru=', тел.: %1'"), ДанныеПечати.НомерТелефона))));
			
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_3", ДанныеПечати.МаршрутныйЛистДатаПрибытия);
	
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_4", ДанныеПечати.ДатаПрибытия);
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_41", ДанныеПечати.ДатаУбытия);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_5", 
		СтрШаблон(НСтр("ru='%1 кг.'"), Формат(ДанныеПечати.МассаБрутто, "ЧДЦ=2")));
	
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_51", ДанныеПечати.КоличествоМест);	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_6", 
		СтрШаблон(
			НСтр("ru='Указанный груз с исправной пломбой, тарой и упаковкой %1'"), 
			ДанныеПечати.НомераПломб));
			
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_7Должность",
		ДанныеПечати.ОтпустилДолжность);		
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_7",  
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Отпустил));
				
	ЕстьЭкспедитор = ЗначениеЗаполнено(ДанныеПечати.Экспедитор);
	ЕстьВодитель = ЗначениеЗаполнено(ДанныеПечати.ВодительРейса);
	
	Если ЕстьЭкспедитор Тогда
		ПредставлениеВодителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Экспедитор);
	ИначеЕсли ЗначениеЗаполнено(ДанныеПечати.Водитель) Тогда
		ПредставлениеВодителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Водитель);
	Иначе
		ПредставлениеВодителя = "---";
	КонецЕсли;	
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_8", 
		ПредставлениеВодителя);
	
	Если ЕстьЭкспедитор Тогда
		ДолжностьВодителя = НСтр("ru='экспедитор'");
	Иначе
		ДолжностьВодителя = НСтр("ru='водитель-экспедитор'");
	КонецЕсли;
		
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт8_81", 
		ДолжностьВодителя);
		
	ПредставлениеЛицаПринимающегоГруз = ?(
		Грузоотправитель = ДанныеПечати.Организация, 
		ДанныеПечати.ОрганизацияНаименование, 
		ПредставлениеОрганизации);	
		
	ПараметрыТранспортнойНакладной.Вставить("Пункт8_9", ПредставлениеЛицаПринимающегоГруз);
			
	ПараметрыТранспортнойНакладной.Вставить("Пункт10_1", РеквизитыПунктаНазначения);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт10_2", 
		СтрШаблон(
			НСтр("ru='%1 - %2'"), 
			ДанныеПечати.ПлановаяДатаДоставкиС, 
			ДанныеПечати.ПлановаяДатаДоставкиПо));
			
	ПараметрыТранспортнойНакладной.Вставить("Пункт10_5", ДанныеПечати.КоличествоМест);
	
	ПараметрыТранспортнойНакладной.Вставить(
		"Пункт10_6", 
		СтрШаблон(НСтр("ru='%1 кг.'"), Формат(ДанныеПечати.МассаБрутто, "ЧДЦ=2")));
		
	ВодительСдавшийГруз = "";	
		
	Если Не ЕстьЭкспедитор Тогда
			
		ВодительСдавшийГруз = СтрШаблон(
			НСтр("ru='%1 ____________________________ %2'"),
			ДолжностьВодителя,
			ПредставлениеВодителя);
		
	КонецЕсли;	

	ПараметрыТранспортнойНакладной.Вставить("Пункт10_9", ВодительСдавшийГруз);
		
	Возврат ПараметрыТранспортнойНакладной;
	
КонецФункции	

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли