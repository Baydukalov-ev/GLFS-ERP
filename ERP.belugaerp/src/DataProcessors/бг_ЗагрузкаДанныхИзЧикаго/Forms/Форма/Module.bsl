
#Область ОбработчикиСобытийФормы
	  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//08.07.2022 TODO1cbit Прохоренко В.В. - в будущем надо вынести на форму с возможностью изменения на "Выгрузка"
	ВариантОбмена = "Загрузки";
	//08.07.2022 TODO1cbit Прохоренко В.В. - 
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИнициализироватьНастройки(ВариантОбмена);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры          

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПерезаполнитьЗависимыеДанные();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	  
&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	МассивАдресовФайловВоВременномХранилище = Новый Массив;
	ВыполнитьОбменНаСервере(МассивАдресовФайловВоВременномХранилище);
	
КонецПроцедуры          

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	УстановитьЗначениеОтметки(Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	УстановитьЗначениеОтметки(Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкуДляОбмена(Команда) 
	
	СохранитьНастройкуДляОбменаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкуДляОбмена(Команда) 
	
	ЗагрузитьНастройкуДляОбменаНаСервере();
	ПерезаполнитьЗависимыеДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользоватьПодробныйСписокОбъектовОбменаПриИзменении(Элемент)
	
	ЗаполнитьПредставлениеОбъектовОбмена();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОбъектовОбменаОтметкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПредставлениеОбъектовОбмена.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ИспользоватьПодробныйСписокОбъектовОбмена Тогда
		
		//Проставляем отметку в объектах выгрузки
		МассивНайденныхСтрок = Объект.ОбъектыОбмена.НайтиСтроки(Новый Структура("Название", ТекущиеДанные.Название));
		Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			СтрокаМассива.Отметка = ТекущиеДанные.Отметка;
		КонецЦикла;
		
		//Подготовим отметку для группы выгрузки
		МассивНайденныхСтрок = Объект.ОбъектыОбмена.НайтиСтроки(Новый Структура("КодГруппы", ТекущиеДанные.КодГруппы));
		ОтметкаДляГруппыОбмена = Истина;
		Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			Если Не СтрокаМассива.Отметка Тогда
				ОтметкаДляГруппыОбмена = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//Установим ОтметкуДляГруппыОбмена в таблице групп
		МассивНайденныхСтрок = Объект.ГруппыОбмена.НайтиСтроки(Новый Структура("КодГруппы", ТекущиеДанные.КодГруппы));
		Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			СтрокаМассива.Отметка = ОтметкаДляГруппыОбмена;
		КонецЦикла;
		
	Иначе
		
		//Проставляем отметку в таблице групп
		МассивНайденныхСтрок = Объект.ГруппыОбмена.НайтиСтроки(Новый Структура("КодГруппы", ТекущиеДанные.КодГруппы));
		Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			СтрокаМассива.Отметка = ТекущиеДанные.Отметка;
		КонецЦикла;
		
		//Проставляем отметку в объектах выгрузки по данному коду группы
		МассивНайденныхСтрок = Объект.ОбъектыОбмена.НайтиСтроки(Новый Структура("КодГруппы", ТекущиеДанные.КодГруппы));
		Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			СтрокаМассива.Отметка = ТекущиеДанные.Отметка;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КаталогДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь к данным";
	ДиалогОткрытияФайла.Каталог = Объект.КаталогДанных;		
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("КаталогДанныхЗавершениеВыбора", ЭтотОбъект));	

КонецПроцедуры

#Область ОбработчикиСобытийТаблицаФилиалы

&НаКлиенте
Процедура ФилиалыАктивныйПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Филиалы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.Активный Тогда
		Объект.АктивныйФилиал = ТекущиеДанные.Филиал; 
	КонецЕсли;		
	
	//Сбросим флаг с остальных строк - активным может быть только один
	Для каждого СтрокаФилиала Из Объект.Филиалы Цикл
		
		Если СтрокаФилиала = ТекущиеДанные Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаФилиала.Активный = Ложь;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПерезаполнитьЗависимыеДанные()

	ЗаполнитьПредставлениеОбъектовОбмена();
	УстановитьОтметкуАктивногоФилиала();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПредставлениеОбъектовОбмена()
	
	ОбновитьОтметкуДляГруппОбмена();
	
	ПредставлениеОбъектовОбмена.Очистить();
	
	Если Объект.ИспользоватьПодробныйСписокОбъектовОбмена Тогда
		Для Каждого СтрокаТЧ Из Объект.ОбъектыОбмена Цикл
			Если СтрокаТЧ.Включен Тогда
				ЗаполнитьЗначенияСвойств(ПредставлениеОбъектовОбмена.Добавить(), СтрокаТЧ);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТЧ Из Объект.ГруппыОбмена Цикл
			ЗаполнитьЗначенияСвойств(ПредставлениеОбъектовОбмена.Добавить(), СтрокаТЧ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтметкуДляГруппОбмена(КодГруппы = Неопределено)

	Если КодГруппы = Неопределено Тогда
		
		//Отберём уникальные значения КодГруппы из ОбъектыОбмена
		МассивКодыГрупп = Новый Массив;
		Для каждого СтрокаОбъектаОбмена Из Объект.ОбъектыОбмена Цикл
			Если МассивКодыГрупп.Найти(СтрокаОбъектаОбмена.КодГруппы) = Неопределено Тогда
				МассивКодыГрупп.Добавить(СтрокаОбъектаОбмена.КодГруппы);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого ТекущийКодГруппы Из МассивКодыГрупп Цикл
			ОбновитьОтметкуДляГруппыОбмена(ТекущийКодГруппы);
		КонецЦикла;
		
	Иначе
		
		ОбновитьОтметкуДляГруппыОбмена(КодГруппы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметкуАктивногоФилиала()

	Для каждого ТекущаяСтрока Из Объект.Филиалы Цикл
		
		Если ТекущаяСтрока.Филиал = Объект.АктивныйФилиал Тогда
			ТекущаяСтрока.Активный = Истина;
		Иначе
			ТекущаяСтрока.Активный = Ложь;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтметкуДляГруппыОбмена(КодГруппы)

	//Подготовим отметку для ГруппыОбмена
	МассивНайденныхСтрок = Объект.ОбъектыОбмена.НайтиСтроки(Новый Структура("КодГруппы", КодГруппы));
	ОтметкаДляГруппыОбмена = Истина;
	Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
		Если Не СтрокаМассива.Отметка Тогда
			ОтметкаДляГруппыОбмена = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//Установим Отметку для ГруппыОбмена в таблице групп
	МассивНайденныхСтрок = Объект.ГруппыОбмена.НайтиСтроки(Новый Структура("КодГруппы", КодГруппы));
	Для Каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
		СтрокаМассива.Отметка = ОтметкаДляГруппыОбмена;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбменНаСервере(МассивАдресовФайловВоВременномХранилище)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Не ОбработкаОбъект.ПараметрыОбменаКорректноЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект.ВыполнитьОбмен(МассивАдресовФайловВоВременномХранилище);	

КонецПроцедуры

&НаКлиенте
Процедура КаталогДанныхЗавершениеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() Тогда
		Объект.КаталогДанных = ВыбранныеФайлы[0];
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(Объект.КаталогДанных) Тогда 
		Если Не Прав(Объект.КаталогДанных, 1) = "\" Тогда 
			Объект.КаталогДанных = Объект.КаталогДанных + "\";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеОтметки(ЗначениеОтметки)

	//устанавливаем значение отметки для отображаемого списка выгружаемых объектов
	Для Каждого СтрокаТЧ Из ПредставлениеОбъектовОбмена Цикл 
		СтрокаТЧ.Отметка = ЗначениеОтметки;		
	КонецЦикла;
	
	//устанавливаем значение отметки для групп выгрузки
	Для Каждого СтрокаТЧ Из Объект.ГруппыОбмена Цикл 
		СтрокаТЧ.Отметка = ЗначениеОтметки;		
	КонецЦикла;
	
	//устанавливаем значение отметки для объектов выгрузки
	Для Каждого СтрокаТЧ Из Объект.ОбъектыОбмена Цикл 
		СтрокаТЧ.Отметка = ЗначениеОтметки;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПараметрыВыгрузки()
	
	Если Не ЗначениеЗаполнено(Объект.АктивныйФилиал) Тогда 
		Сообщить("Не выбран филиал!");		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура СохранитьНастройкуДляОбменаНаСервере()
	
	НастройкаОбмена = Новый Структура();
	
	СохранённыеОбъектыОбмена = Новый СписокЗначений;
	Для каждого СтрокаОбъектаОбмена Из Объект.ОбъектыОбмена Цикл
		СохранённыеОбъектыОбмена.Добавить(СтрокаОбъектаОбмена.Название,, СтрокаОбъектаОбмена.Отметка);
	КонецЦикла;
	
	НастройкаОбмена.Вставить("СохранённыеОбъектыОбмена",		СохранённыеОбъектыОбмена);
	НастройкаОбмена.Вставить("ИспользоватьПодробныйСписокОбъектовОбмена",	Объект.ИспользоватьПодробныйСписокОбъектовОбмена);
	НастройкаОбмена.Вставить("Период",              			Объект.Период);
	НастройкаОбмена.Вставить("Пользователь",        			Объект.Пользователь);
	НастройкаОбмена.Вставить("КаталогДанных",       			Объект.КаталогДанных);
	НастройкаОбмена.Вставить("АктивныйФилиал",      			Объект.АктивныйФилиал);
	НастройкаОбмена.Вставить("КомпоновщикНастроек", 			Объект.КомпоновщикНастроек.Настройки);
	
	ИмяНастройки = "Настройки_" + ВариантОбмена + СтрЗаменить(Строка(Объект.Пользователь)," ", "");//имя должно быть без пробелов
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("Чикаго_" + ВариантОбмена, НастройкаОбмена, ИмяНастройки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкуДляОбменаНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ОбработкаОбъект.НастройкаОбменаЗагружена(ВариантОбмена) Тогда
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
