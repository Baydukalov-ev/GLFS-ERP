#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьОтборыСКД();
	ВывестиКолонкиВидыВозвращаемыхДокументов();
	
	ТекущийПользователь  = Пользователи.ТекущийПользователь();
	Период.ДатаОкончания = ТекущаяДатаСеанса();
	Период.ДатаНачала    = НачалоМесяца(Период.ДатаОкончания);
	
	ЗаполнитьСписокДокументов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЭлементДокументыПриИзменении(Элемент)
	ИмяЭлемента = Элемент.Имя;
	
	ТекущиеДанные = Элементы.Документы.ТекущиеДанные;
	Значение = ТекущиеДанные[ИмяЭлемента];
	
	УстановитьПризнакВозвратаДокументов(ТекущиеДанные.Ссылка, Значение, ИмяЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательВыводДокументовПриИзменении(Элемент)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметку(Команда)
	УстановитьЗначениеОтметки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	УстановитьЗначениеОтметки(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьОтборыСКД()
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	МакетСКД = ЗначениеОбъект.ПолучитьМакет("МакетОтборДокументов");
	АдресВХранилище = ПоместитьВоВременноеХранилище(МакетСКД, УникальныйИдентификатор);
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВХранилище);
	
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(МакетСКД.НастройкиПоУмолчанию);
КонецПроцедуры

&НаСервере
Процедура ВывестиКолонкиВидыВозвращаемыхДокументов()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыВозвращаемыхДокументов.Ссылка КАК Ссылка,
	|	ВидыВозвращаемыхДокументов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.бг_ВидыВозвращаемыхДокументов КАК ВидыВозвращаемыхДокументов
	|ГДЕ
	|	НЕ ВидыВозвращаемыхДокументов.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Реквизиты = Новый Массив;
	Счетчик = 0;
	Пока Выборка.Следующий() Цикл
		ИмяЭлемента = "r_" + Счетчик;
		Счетчик = Счетчик + 1;
		
		СтрокаСоответствиеИмен = СоответствиеИменЭлементовСсылкам.Добавить();
		СтрокаСоответствиеИмен.ИмяЭлемента = ИмяЭлемента;
		СтрокаСоответствиеИмен.Ссылка = Выборка.Ссылка;
		
		Реквизиты.Добавить(Новый РеквизитФормы(
					ИмяЭлемента,
					Новый ОписаниеТипов("Булево"),
					"Объект.СписокДокументы",
					Выборка.Наименование));
	КонецЦикла;
	ИзменитьРеквизиты(Реквизиты);
	
	Для Каждого СтрокаСоответствиеИмен Из СоответствиеИменЭлементовСсылкам Цикл
		НовыйЭлемент = Элементы.Вставить(СтрокаСоответствиеИмен.ИмяЭлемента, Тип("ПолеФормы"), Элементы.Документы, Элементы.ДокументыТипДокумента);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПутьКДанным = "Объект.СписокДокументы" + "." + СтрокаСоответствиеИмен.ИмяЭлемента;
		
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "ЭлементДокументыПриИзменении");
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументов()
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	
	МакетОтборы = ЗначениеОбъект.ПолучитьМакет("МакетОтборДокументов");
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрНачалоПериода = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрНачалоПериода.Значение = Период.ДатаНачала;
	ПараметрНачалоПериода.Использование = Истина;
	
	ПараметрКонецПериода = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрКонецПериода.Значение = ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания), Период.ДатаОкончания);
	ПараметрКонецПериода.Использование = Истина;
	
	ПараметрПереключательВыводДокументов = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("Переключатель");
	ПараметрПереключательВыводДокументов.Значение = ПереключательВыводДокументов;
	ПараметрПереключательВыводДокументов.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(МакетОтборы, НастройкиКомпоновки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаДанные = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаДанные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Объект.СписокДокументы.Очистить();
	
	ТаблицаДокументы = ТаблицаДанные.Скопировать(, "Ссылка, Дата");
	ТаблицаДокументы.Свернуть("Ссылка, Дата");
	ТаблицаДокументы.Сортировать("Дата, Ссылка");
	ТаблицаДокументы.Индексы.Добавить("Ссылка");
	
	Для Каждого СтрокаДокумент Из ТаблицаДокументы Цикл
		НоваяСтрока = Объект.СписокДокументы.Добавить();
		НоваяСтрока.Ссылка = СтрокаДокумент.Ссылка;
		
		ЗаполнитьЗначенияРеквизитовДокумента(НоваяСтрока, ТаблицаДанные);
		ЗаполнитьЗначенияРеквизитовВозвратаДокументов(НоваяСтрока, ТаблицаДанные);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияРеквизитовДокумента(СтрокаДанные, ТаблицаДанные)
	Отбор = Новый Структура("Ссылка", СтрокаДанные.Ссылка);
	СтрокиДанные = ТаблицаДанные.НайтиСтроки(Отбор);
	
	ЗаполнитьЗначенияСвойств(СтрокаДанные, СтрокиДанные[0]);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияРеквизитовВозвратаДокументов(ТекущаяСтрока, ТаблицаДанные)
	Отбор = Новый Структура("Ссылка", ТекущаяСтрока.Ссылка);
	СтрокиДанные = ТаблицаДанные.НайтиСтроки(Отбор);
	
	Для Каждого СтрокаДанные Из СтрокиДанные Цикл
		ИмяЭлемента = ИмяЭлементаУправления(СтрокаДанные.ВидДокумента);
		Если ИмяЭлемента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока[ИмяЭлемента] = СтрокаДанные.Возвращен;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ИмяЭлементаУправления(ВидДокумента)
	Отбор = Новый Структура("Ссылка", ВидДокумента);
	СтрокиСоответствиеЭлементов = СоответствиеИменЭлементовСсылкам.НайтиСтроки(Отбор);
	
	Если СтрокиСоответствиеЭлементов.Количество() > 0 Тогда
		Возврат СтрокиСоответствиеЭлементов[0].ИмяЭлемента;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура УстановитьПризнакВозвратаДокументов(Документ, Значение, ИмяЭлементаУправления)
	ВидДокумента = ВидДокумента(ИмяЭлементаУправления);
	Если Не ЗначениеЗаполнено(ВидДокумента)
		Или Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.бг_ВозвратДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	НаборЗаписей.Отбор.ВидДокумента.Установить(ВидДокумента);
	
	НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Документ = Документ;
	НоваяСтрока.ВидДокумента = ВидДокумента;
	НоваяСтрока.Возвращен = Значение;
	НоваяСтрока.ДатаВозвратаДокумента = ТекущаяДатаСеанса();
	НоваяСтрока.Пользователь = ТекущийПользователь;
	
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Функция ВидДокумента(ИмяЭлементаУправления)
	Отбор = Новый Структура("ИмяЭлемента", ИмяЭлементаУправления);
	СтрокиСоответствиеЭлементов = СоответствиеИменЭлементовСсылкам.НайтиСтроки(Отбор);
	
	Если СтрокиСоответствиеЭлементов.Количество() > 0 Тогда
		Возврат СтрокиСоответствиеЭлементов[0].Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбновитьСписокДокументов()
	НомерТекущейСтроки = 0;
	
	ТекущиеДанные = Элементы.Документы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		НомерТекущейСтроки = ТекущиеДанные.НомерСтроки;
	КонецЕсли;
	
	ЗаполнитьСписокДокументов();
	
	Если НомерТекущейСтроки <> 0
		И Объект.СписокДокументы.Количество() >= НомерТекущейСтроки Тогда
		Элементы.Документы.ТекущаяСтрока = Объект.СписокДокументы[НомерТекущейСтроки - 1].ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеОтметки(Значение)
	ТекущиеДокументы = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Документы.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ТекущиеДокументы.Добавить(Объект.СписокДокументы.НайтиПоИдентификатору(ВыделеннаяСтрока).Ссылка);
	КонецЦикла;
	
	УстановитьВозвратПакетаДокументов(ТекущиеДокументы, Значение);
	
	ОбновитьСписокДокументов()
КонецПроцедуры

&НаСервере
Процедура УстановитьВозвратПакетаДокументов(ТекущиеДокументы, Значение)
	Для Каждого ТекущийДокумент Из ТекущиеДокументы Цикл
		Для Каждого СтрокаЭлементыУправления Из СоответствиеИменЭлементовСсылкам Цикл
			УстановитьПризнакВозвратаДокументов(ТекущийДокумент, Значение, СтрокаЭлементыУправления.ИмяЭлемента);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
