
#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьВыгружаемыеСтатусыМарок();
	ЗаполнитьВидыНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВыгружаемыеДанные(Команда)
	
	Если Не ВозможноЗаполнениеСтатусовМарок() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВыгружаемыеДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьМарки(Команда)
	
	Если Не ВозможнаВыгрузкаМарок() Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеПослеВопроса = Новый ОписаниеОповещения("ВыгрузитьМаркиЗавершение", ЭтотОбъект);
	
	ПомеченныеСтрокиСерии = ПомеченныеСтроки(Объект.Серии);
	
	КоличествоМарокКВыгрузке = 0;
	Для каждого ПомеченнаяСтрокаСерии Из ПомеченныеСтрокиСерии Цикл
		КоличествоМарокКВыгрузке = КоличествоМарокКВыгрузке + ПомеченнаяСтрокаСерии.КоличествоМарокКВыгрузке;
	КонецЦикла;
	
	ТекстВопроса = СтрШаблон(
		НСтр("ru='Будут выгружены актуальные состояния %1 марок по %2 сериям вместе с текущей структурой упаковок. Продолжить?'"),
		КоличествоМарокКВыгрузке,
		ПомеченныеСтрокиСерии.Количество());
	
	ПоказатьВопрос(ОповещениеПослеВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьМаркиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьМаркиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОтметитьВсе(Команда)
	ИзменитьОтметки(Объект.Номенклатура, Истина);
	ИзменитьОтметки(Объект.Серии, Истина);
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураСнятьОтметкуСоВсех(Команда)
	ИзменитьОтметки(Объект.Номенклатура, Ложь);
	ИзменитьОтметки(Объект.Серии, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СерииОтметитьВсе(Команда)
	
	ТекущаяСтрокаНоменклатура = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекущаяСтрокаНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаНоменклатура.Пометка = Истина;
	ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке = ТекущаяСтрокаНоменклатура.КоличествоМарокОстаток;
	
	ИзменитьОтметки(Объект.Серии, Истина, ТекущаяСтрокаНоменклатура.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииСнятьОтметкуСоВсех(Команда)
	
	ТекущаяСтрокаНоменклатура = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекущаяСтрокаНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаНоменклатура.Пометка = Ложь;
	ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке = 0;
	
	ИзменитьОтметки(Объект.Серии, Ложь, ТекущаяСтрокаНоменклатура.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьСерииПоЧастиНаименования(Команда)
	
	ОповещениеПослеВводаСтроки = Новый ОписаниеОповещения("ОтметитьСерииПоЧастиНаименованияЗавершение", ЭтотОбъект);
	
	ПоказатьВводСтроки(
		ОповещениеПослеВводаСтроки,
		НаименованиеСерии,
		НСтр("ru='Будут отмечены серии, содержащие введенный текст'"));
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОтметитьСерииПоЧастиНаименованияЗавершение(ВыбраннаяСтрока, ДополнительныеПараметры) Экспорт
	
	Если ВыбраннаяСтрока = Неопределено Или ПустаяСтрока(ВыбраннаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьОтметки(Объект.Номенклатура, Ложь);
	ИзменитьОтметки(Объект.Серии, Ложь);
	
	ВыбраннаяСтрока = СокрЛП(ВыбраннаяСтрока);
	
	ОтметитьСерииПоЧастиНаименованияЗавершениеНаСервере(ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОчиститьВыгружаемыеДанные(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ОчиститьВыгружаемыеДанные(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСОстаткомНаСкладеПриИзменении(Элемент)
	ОчиститьВыгружаемыеДанные(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СтатусыМарокПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СтатусыМарок.ТекущиеДанные;
	
	ОчиститьВыгружаемыеДанные(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущаяСтрока.Пометка Тогда
		
		Для каждого СтрокаВидыНоменклатуры Из Объект.ВидыНоменклатуры Цикл
		
			Если СтрокаВидыНоменклатуры <> ТекущаяСтрока И СтрокаВидыНоменклатуры.Пометка Тогда
				СтрокаВидыНоменклатуры.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		ОчиститьВыгружаемыеДанные(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриАктивизацииСтроки(Элемент)
	
	Элементы.Серии.ОтборСтрок = Неопределено;
	
	ТекущаяСтрока = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Серии.ОтборСтрок = Новый ФиксированнаяСтруктура(
		Новый Структура(
			"Номенклатура",
			ТекущаяСтрока.Номенклатура));
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.Пометка Тогда
		ТекущаяСтрока.КоличествоМарокКВыгрузке = ТекущаяСтрока.КоличествоМарокОстаток;
	Иначе
		ТекущаяСтрока.КоличествоМарокКВыгрузке = 0;
	КонецЕсли;
	
	СвязанныеСерии = Объект.Серии.НайтиСтроки(Новый Структура("Номенклатура", ТекущаяСтрока.Номенклатура));
	
	Для каждого СтрокаСвязанныеСерии Из СвязанныеСерии Цикл
		
		СтрокаСвязанныеСерии.Пометка = ТекущаяСтрока.Пометка;
		
		Если СтрокаСвязанныеСерии.Пометка Тогда
			СтрокаСвязанныеСерии.КоличествоМарокКВыгрузке = СтрокаСвязанныеСерии.КоличествоМарокОстаток;
		Иначе
			СтрокаСвязанныеСерии.КоличествоМарокКВыгрузке = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПометкаПриИзменении(Элемент)
	
	ТекущаяСтрокаСерии = Элементы.Серии.ТекущиеДанные;
	Если ТекущаяСтрокаСерии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаНоменклатура = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекущаяСтрокаНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрокаСерии.Пометка Тогда
		
		ТекущаяСтрокаСерии.КоличествоМарокКВыгрузке = ТекущаяСтрокаСерии.КоличествоМарокОстаток;
		ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке = ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке
			+ ТекущаяСтрокаСерии.КоличествоМарокОстаток;
			
		Иначе
			
		ТекущаяСтрокаСерии.КоличествоМарокКВыгрузке = 0;
		ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке = ТекущаяСтрокаНоменклатура.КоличествоМарокКВыгрузке
			- ТекущаяСтрокаСерии.КоличествоМарокОстаток;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьСерииПриИзменении(Элемент)
	
	Если Не ВыгружатьСерии Тогда
		СоздаватьСлужебныйДокументСодержащийСерии = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьСлужебныйДокументСодержащийСерииПриИзменении(Элемент)
	
	Если СоздаватьСлужебныйДокументСодержащийСерии Тогда
		ВыгружатьСерии = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПомеченныеСтроки(Таблица)

	Возврат Таблица.НайтиСтроки(Новый Структура("Пометка", Истина));

КонецФункции

&НаКлиенте
Функция ВозможноЗаполнениеСтатусовМарок()
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не заполнена организация'"),,
			"Организация",,
			Отказ);
		
	КонецЕсли;
	
	Если ПомеченныеСтроки(Объект.ВидыНоменклатуры).Количество() = 0 Тогда
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбраны виды номенклатуры для заполнения'"),,
			"ВидыНоменклатуры",,
			Отказ);
		
	КонецЕсли;
	
	Если ПомеченныеСтроки(Объект.СтатусыМарок).Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбраны статусы марок для заполнения'"),,
			"СтатусыМарок",,
			Отказ);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаКлиенте
Функция ВозможнаВыгрузкаМарок()
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не заполнена организация'"),,
			"Организация",,
			Отказ);
		
		КонецЕсли;
		
	Если СоздаватьСлужебныйДокументСодержащийСерии И Не ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не заполнена организация ЕГАИС'"),,
			"ОрганизацияЕГАИС",,
			Отказ);
		
	КонецЕсли;
	
	Если ПомеченныеСтроки(Объект.Серии).Количество() = 0 Тогда
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбраны серии и марки для выгрузки'"),,
			"Серии",,
			Отказ);
		
	КонецЕсли;
		
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВыгружаемыеСтатусыМарок()
	
	ВсеВыгружаемыеСтатусыМарок = бг_ДвижениеМарокИнтеграция.СтатусыМарок();
	
	ОтмечаемыеСтатусыМарокПоУмолчанию = Новый Массив;
	ОтмечаемыеСтатусыМарокПоУмолчанию.Добавить(Перечисления.бг_СтатусыАкцизныхМарок.Оклеена);
	ОтмечаемыеСтатусыМарокПоУмолчанию.Добавить(Перечисления.бг_СтатусыАкцизныхМарок.НаБалансе);
	
	Для каждого СтатусМарки Из ВсеВыгружаемыеСтатусыМарок Цикл
		
		НоваяСтрока = Объект.СтатусыМарок.Добавить();
		НоваяСтрока.СтатусМарки = СтатусМарки;
		
		НоваяСтрока.Пометка = ОтмечаемыеСтатусыМарокПоУмолчанию.Найти(СтатусМарки) <> Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыНоменклатуры()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ПометкаУдаления
	|	И Номенклатура.АлкогольнаяПродукция
	|	И Номенклатура.ВидАлкогольнойПродукции.Маркируемый";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Объект.ВидыНоменклатуры.Загрузить(РезультатЗапроса.Выгрузить());
	
	Если Объект.ВидыНоменклатуры.Количество() = 1 Тогда
		Объект.ВидыНоменклатуры[0].Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьВыгружаемыеДанные(Форма)
	
	Для каждого СтрокаСтатусыМарок Из Форма.Объект.СтатусыМарок Цикл
		СтрокаСтатусыМарок.КоличествоМарокОстаток = 0;
	КонецЦикла;
	
	Форма.Объект.Номенклатура.Очистить();
	Форма.Объект.Серии.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыгружаемыеДанныеНаСервере()
	
	ОчиститьВыгружаемыеДанные(ЭтотОбъект);
	
	ВыгружаемыеДанные = ВыгружаемыеДанныеСвернутые();
	
	ЗаполнитьВыгружаемуюНоменклатуру(ВыгружаемыеДанные);
	ЗаполнитьВыгружаемыеСерии(ВыгружаемыеДанные);
	ЗаполнитьПоказателиВыгружаемыхСтатусовМарок(ВыгружаемыеДанные);
	
КонецПроцедуры

&НаСервере
Функция ВыгружаемыеДанныеСвернутые()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременныеТаблицыМарокОстатков(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Марки.Номенклатура КАК Номенклатура,
	|	Марки.Серия КАК Серия,
	|	Марки.СтатусМарки КАК СтатусМарки,
	|	СУММА(Марки.Количество) КАК Количество
	|ИЗ
	|	Марки КАК Марки
	|
	|СГРУППИРОВАТЬ ПО
	|	Марки.Номенклатура,
	|	Марки.СтатусМарки,
	|	Марки.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатуры.Серия КАК Серия,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество
	|ИЗ
	|	ВыгружаемыеСерииСОстатками КАК ОстаткиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Серия";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыгружаемыеДанные = Новый Структура;
	
	ВыгружаемыеДанные.Вставить("ОстаткиПоМаркам", РезультатыЗапроса[0].Выгрузить());
	ВыгружаемыеДанные.Вставить("ОстаткиПоСкладам", РезультатыЗапроса[1].Выгрузить());
	
	Возврат ВыгружаемыеДанные;
	
КонецФункции

&НаСервере
Функция ВыгружаемыеМарки(СерииКВыгрузке)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременныеТаблицыМарокОстатков(МенеджерВременныхТаблиц, СерииКВыгрузке);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Марки.ГУИДМарки КАК ГУИДМарки,
	|	Марки.КодУпаковки КАК КодУпаковки
	|ИЗ
	|	Марки КАК Марки";
	
	ВыгружаемыеМарки = Запрос.Выполнить().Выгрузить();
	
	Возврат ВыгружаемыеМарки;
	
КонецФункции

&НаСервере
Процедура СформироватьВременныеТаблицыМарокОстатков(МенеджерВременныхТаблиц, СерииОтбор = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	Номенклатура.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ ВыгружаемыеСерии
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СерииНоменклатуры.бг_Номенклатура = Номенклатура.Ссылка
	|			И (Номенклатура.ВидНоменклатуры В (&ВидыНоменклатуры))
	|ГДЕ
	|	&УсловиеОтбораПоСериям
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыгружаемыеСерии.Номенклатура КАК Номенклатура,
	|	ВыгружаемыеСерии.Серия КАК Серия,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК Количество
	|ПОМЕСТИТЬ ВыгружаемыеСерииСОстатками
	|ИЗ
	|	ВыгружаемыеСерии КАК ВыгружаемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				&УсловиеОтбораПоСкладу
	|					И Серия В
	|						(ВЫБРАТЬ
	|							ВыгружаемыеСерии.Серия КАК Серия
	|						ИЗ
	|							ВыгружаемыеСерии КАК ВыгружаемыеСерии)) КАК ТоварыНаСкладахОстатки
	|		ПО ВыгружаемыеСерии.Серия = ТоварыНаСкладахОстатки.Серия
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТолькоСОстаткомНаСкладе
	|				ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеМарокСрезПоследних.ГУИДМарки КАК ГУИДМарки,
	|	ВыгружаемыеСерииСОстатками.Номенклатура КАК Номенклатура,
	|	ДвижениеМарокСрезПоследних.Серия КАК Серия,
	|	ДвижениеМарокСрезПоследних.КодУпаковки КАК КодУпаковки,
	|	ДвижениеМарокСрезПоследних.СтатусМарки КАК СтатусМарки,
	|	1 КАК Количество
	|ПОМЕСТИТЬ Марки
	|ИЗ
	|	(ВЫБРАТЬ
	|		бг_ДвижениеМарокСрезПоследних.ГУИДМарки КАК ГУИДМарки,
	|		бг_ДвижениеМарокСрезПоследних.Серия КАК Серия,
	|		бг_ДвижениеМарокСрезПоследних.КодУпаковки КАК КодУпаковки,
	|		бг_ДвижениеМарокСрезПоследних.СтатусМарки КАК СтатусМарки
	|	ИЗ
	|		РегистрСведений.бг_ДвижениеМарок.СрезПоследних КАК бг_ДвижениеМарокСрезПоследних
	|	ГДЕ
	|		бг_ДвижениеМарокСрезПоследних.СтатусМарки В(&СтатусыМарок)) КАК ДвижениеМарокСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ИдентификаторыМарок КАК бг_ИдентификаторыМарок
	|		ПО ДвижениеМарокСрезПоследних.ГУИДМарки = бг_ИдентификаторыМарок.ГУИДМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыгружаемыеСерииСОстатками КАК ВыгружаемыеСерииСОстатками
	|		ПО ДвижениеМарокСрезПоследних.Серия = ВыгружаемыеСерииСОстатками.Серия
	|ГДЕ
	|	бг_ИдентификаторыМарок.Организация = &Организация
	|	И ВЫБОР
	|			КОГДА &ТолькоСОстаткомНаСкладе
	|				ТОГДА ВыгружаемыеСерииСОстатками.Количество > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВыбранныеВидыНоменклатуры());
	Запрос.УстановитьПараметр("СтатусыМарок", ВыбранныеСтатусыМарок());
	Запрос.УстановитьПараметр("ТолькоСОстаткомНаСкладе", ТолькоСОстаткомНаСкладе);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если ЗначениеЗаполнено(Склад) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСкладу", "Склад = &Склад");
		Запрос.УстановитьПараметр("Склад", Склад);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСкладу", "Истина");
	КонецЕсли;
	
	Если СерииОтбор <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСериям", "СерииНоменклатуры.Ссылка В(&Серии)");
		Запрос.УстановитьПараметр("Серии", СерииОтбор);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСериям", "Истина");
	КонецЕсли;
	
	Запрос.Выполнить();

КонецПроцедуры

&НаСервере
Функция ВыбранныеВидыНоменклатуры()
	
	ВыбранныеВидыНоменклатуры = Новый Массив;
	
	Для каждого СтрокаВидыНоменклатуры Из ПомеченныеСтроки(Объект.ВидыНоменклатуры) Цикл
		ВыбранныеВидыНоменклатуры.Добавить(СтрокаВидыНоменклатуры.ВидНоменклатуры);
	КонецЦикла;
	
	Возврат ВыбранныеВидыНоменклатуры;
	
КонецФункции

&НаСервере
Функция ВыбранныеСтатусыМарок()
	
	ВыбранныеСтатусыМарок = Новый Массив;
	
	Для каждого СтрокаСтатусыМарок Из ПомеченныеСтроки(Объект.СтатусыМарок) Цикл
		ВыбранныеСтатусыМарок.Добавить(СтрокаСтатусыМарок.СтатусМарки);
	КонецЦикла;
	
	Возврат ВыбранныеСтатусыМарок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВыгружаемуюНоменклатуру(ВыгружаемыеДанные)
	
	ВыгружаемаяНоменклатура = ВыгружаемыеДанные.ОстаткиПоМаркам.Скопировать(, "Номенклатура, Количество");
	ВыгружаемаяНоменклатура.Свернуть("Номенклатура", "Количество");
	
	ОстаткиНоменклатуры = ВыгружаемыеДанные.ОстаткиПоСкладам.Скопировать(, "Номенклатура, Количество");
	ОстаткиНоменклатуры.Свернуть("Номенклатура", "Количество");
	ОстаткиНоменклатуры.Индексы.Добавить("Номенклатура");
	
	Для каждого СтрокаВыгружаемаяНоменклатура Из ВыгружаемаяНоменклатура Цикл
		
		НоваяСтрокаНоменклатура = Объект.Номенклатура.Добавить();
		НоваяСтрокаНоменклатура.Номенклатура = СтрокаВыгружаемаяНоменклатура.Номенклатура;
		НоваяСтрокаНоменклатура.КоличествоМарокОстаток = СтрокаВыгружаемаяНоменклатура.Количество;
		НоваяСтрокаНоменклатура.КоличествоМарокКВыгрузке = СтрокаВыгружаемаяНоменклатура.Количество;
		НоваяСтрокаНоменклатура.Пометка = Истина;
		
		ПараметрыПоиска = Новый Структура("Номенклатура", СтрокаВыгружаемаяНоменклатура.Номенклатура);
		НайденныеСтроки = ОстаткиНоменклатуры.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрокаНоменклатура.КоличествоОстатокСклад = НайденныеСтроки[0].Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыгружаемыеСерии(ВыгружаемыеДанные)
	
	ВыгружаемыеСерии = ВыгружаемыеДанные.ОстаткиПоМаркам.Скопировать(, "Номенклатура, Серия, Количество");
	ВыгружаемыеСерии.Свернуть("Номенклатура, Серия", "Количество");
	
	ОстаткиСерий = ВыгружаемыеДанные.ОстаткиПоСкладам.Скопировать(, "Номенклатура, Серия, Количество");
	ОстаткиСерий.Свернуть("Номенклатура, Серия", "Количество");
	ОстаткиСерий.Индексы.Добавить("Номенклатура, Серия");
	
	Для каждого СтрокаВыгружаемыеСерии Из ВыгружаемыеСерии Цикл
		
		НоваяСтрокаСерии = Объект.Серии.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаВыгружаемыеСерии);
		НоваяСтрокаСерии.КоличествоМарокОстаток = СтрокаВыгружаемыеСерии.Количество;
		НоваяСтрокаСерии.КоличествоМарокКВыгрузке = СтрокаВыгружаемыеСерии.Количество;
		НоваяСтрокаСерии.Пометка = Истина;
		
		ПараметрыПоиска = Новый Структура(
			"Номенклатура, Серия",
			СтрокаВыгружаемыеСерии.Номенклатура,
			СтрокаВыгружаемыеСерии.Серия);
			
		НайденныеСтроки = ОстаткиСерий.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрокаСерии.КоличествоОстатокСклад = НайденныеСтроки[0].Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиВыгружаемыхСтатусовМарок(ВыгружаемыеДанные)
	
	ВыгружаемыеСтатусыМарок = ВыгружаемыеДанные.ОстаткиПоМаркам.Скопировать(, "СтатусМарки, Количество");
	ВыгружаемыеСтатусыМарок.Свернуть("СтатусМарки", "Количество");
	
	Для каждого СтрокаСтатусыМарок Из Объект.СтатусыМарок Цикл
		
		Если Не СтрокаСтатусыМарок.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыПоиска = Новый Структура("СтатусМарки", СтрокаСтатусыМарок.СтатусМарки);
		НайденныеСтроки = ВыгружаемыеСтатусыМарок.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаСтатусыМарок.КоличествоМарокОстаток = НайденныеСтроки[0].Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьМаркиНаСервере()
	
	СерииКВыгрузке = СерииКВыгрузке();
	
	ВыгружаемыеМарки = ВыгружаемыеМарки(СерииКВыгрузке);
	
	НачатьТранзакцию();
	
	Попытка
		
		Если ВыгружатьСерии Тогда
			
			Если СоздаватьСлужебныйДокументСодержащийСерии Тогда
				СоздатьСлужебныйДокументСодержащийСерии(СерииКВыгрузке);
			КонецЕсли;
			
			ЗарегистрироватьСерииКВыгрузке(СерииКВыгрузке);
		КонецЕсли;
		
		СоздатьДокументВыгрузкиМарокУпаковок(ВыгружаемыеМарки);
		
		Если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		ОписаниеОшибки = ОписаниеОшибки();
		
		ВызватьИсключение ОписаниеОшибки;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСлужебныйДокументСодержащийСерии(СерииКВыгрузке)
	
	СерииВключатьВДокумент = Новый Массив;
	
	ТТНВходящаяЕГАИСОбъект = Документы.ТТНВходящаяЕГАИС.СоздатьДокумент();
	ТТНВходящаяЕГАИСОбъект.Грузополучатель = ОрганизацияЕГАИС;
	ТТНВходящаяЕГАИСОбъект.Дата = ТекущаяДатаСеанса();
	
	Для каждого Серия Из СерииКВыгрузке Цикл
		
		Запрос = Новый Запрос;
		бг_СерииНоменклатурыИнтеграция.ЗаполнитьТекстыЗапросовУсловиями(Запрос.Текст, "",,, Серия, Истина);
		Запрос.УстановитьПараметр("Ссылка", Серия);
		Запрос.УстановитьПараметр("УсловиеЗапроса", Истина);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			СерииВключатьВДокумент.Добавить(Серия);
			Продолжить;
		КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если Не ЗначениеЗаполнено(Выборка.ОрганизацияВладелец_ЗначениеРеквизитаИдентификатор) Тогда
			СерииВключатьВДокумент.Добавить(Серия);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Серия Из СерииВключатьВДокумент Цикл
		НоваяСтрока = ТТНВходящаяЕГАИСОбъект.Товары.Добавить();
		НоваяСтрока.Серия = Серия;
	КонецЦикла;
	
	Если ТТНВходящаяЕГАИСОбъект.Товары.Количество() Тогда
		ТТНВходящаяЕГАИСОбъект.ОбменДанными.Загрузка = Истина;
		ТТНВходящаяЕГАИСОбъект.ПометкаУдаления = Истина;
		ТТНВходящаяЕГАИСОбъект.Комментарий = НСтр("ru='Служебный документ для выгрузки серий'");
		ТТНВходящаяЕГАИСОбъект.ДополнительныеСвойства.Вставить("адаптер_ЭтоЗагрузкаДанных", Истина);
		ТТНВходящаяЕГАИСОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьСерииКВыгрузке(СерииКВыгрузке)
	
	Перем адаптер_ИсходящиеСообщения;
	адаптер_ИсходящиеСообщения = ОбщегоНазначения.ОбщийМодуль("Справочники.адаптер_ИсходящиеСообщения");
	
	Для каждого Серия Из СерииКВыгрузке Цикл
		адаптер_ИсходящиеСообщения.ЗарегистрироватьИсходящееСообщениеПриЗаписи(Серия);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СерииКВыгрузке()
	
	ВыбранныеСтрокиСерии = ПомеченныеСтроки(Объект.Серии);
	СерииКВыгрузке = Новый Массив;
	Для каждого ВыбраннаяСтрокаСерии Из ВыбранныеСтрокиСерии Цикл
		СерииКВыгрузке.Добавить(ВыбраннаяСтрокаСерии.Серия);
	КонецЦикла;
	
	Возврат СерииКВыгрузке;
	
КонецФункции

&НаСервере
Процедура СоздатьДокументВыгрузкиМарокУпаковок(ВыгружаемыеМарки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийИндекс = 0;
	ПоследнийИндекс = ВыгружаемыеМарки.Количество() - 1;
	
	// Ввиду ограничения 100 тысяч строк в ТЧ документа выгружаем марки порциями.
	КоличествоМарокНаИтерации = 5;
	
	Пока ТекущийИндекс <= ПоследнийИндекс Цикл
		
		ПоследнийИндексНаИтерацииВыгрузки = Мин(ТекущийИндекс + КоличествоМарокНаИтерации - 1, ПоследнийИндекс);
		
		ВыгрузкаМарокУпаковокОбъект = Документы.бг_ВыгрузкаМарокУпаковок.СоздатьДокумент();
		ВыгрузкаМарокУпаковокОбъект.Дата = ТекущаяДатаСеанса();
		ВыгрузкаМарокУпаковокОбъект.Организация = Организация;
		
		КодыУпаковок = Новый Массив;
		
		Для Счетчик = ТекущийИндекс По ПоследнийИндексНаИтерацииВыгрузки Цикл
		
			СтрокаВыгружаемыеМарки = ВыгружаемыеМарки[Счетчик];
			
			НоваяСтрока = ВыгрузкаМарокУпаковокОбъект.Марки.Добавить();
			НоваяСтрока.ГУИДМарки = СтрокаВыгружаемыеМарки.ГУИДМарки;
			
			Если СтрокаВыгружаемыеМарки.КодУпаковки <> ""
				И КодыУпаковок.Найти(СтрокаВыгружаемыеМарки.КодУпаковки) = Неопределено Тогда
				
				КодыУпаковок.Добавить(СтрокаВыгружаемыеМарки.КодУпаковки);
			КонецЕсли;
		
		КонецЦикла;
		
		ВыгрузкаМарокУпаковокОбъект.Записать();
		
		ВыгрузкаМарокУпаковокОбъект.Движения.бг_ДвижениеМарок.Записать();
		ВыгрузкаМарокУпаковокОбъект.Движения.бг_СоставУпаковок.Записать();
		
		ТекущийИндекс = ПоследнийИндексНаИтерацииВыгрузки + 1;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтметки(Таблица, НовоеЗначениеПометки, Номенклатура = Неопределено)
	
	Для каждого СтрокаТаблицы Из Таблица Цикл
		
		Если Номенклатура <> Неопределено И СтрокаТаблицы.Номенклатура <> Номенклатура Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.Пометка = НовоеЗначениеПометки;
		
		Если СтрокаТаблицы.Пометка Тогда
			СтрокаТаблицы.КоличествоМарокКВыгрузке = СтрокаТаблицы.КоличествоМарокОстаток;
		Иначе
			СтрокаТаблицы.КоличествоМарокКВыгрузке = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьСерииПоЧастиНаименованияЗавершениеНаСервере(СтрокаПоискаСерии)

	Для каждого СтрокаСерии Из Объект.Серии Цикл
	
		Если СтрНайти(Строка(СтрокаСерии.Серия), СтрокаПоискаСерии) > 0 Тогда
			
			СтрокаСерии.Пометка = Истина;
			СтрокаСерии.КоличествоМарокКВыгрузке = СтрокаСерии.КоличествоМарокОстаток;
			
			ПараметрыПоиска = Новый Структура("Номенклатура", СтрокаСерии.Номенклатура);
			НайденныеСтроки = Объект.Номенклатура.НайтиСтроки(ПараметрыПоиска);
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				НайденныеСтроки[0].Пометка = Истина;
				НайденныеСтроки[0].КоличествоМарокКВыгрузке = НайденныеСтроки[0].КоличествоМарокКВыгрузке
					+ СтрокаСерии.КоличествоМарокКВыгрузке;
					
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти