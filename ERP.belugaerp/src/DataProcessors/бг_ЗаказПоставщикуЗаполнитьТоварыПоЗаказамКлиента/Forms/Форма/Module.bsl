
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ОбъектыНазначения") Тогда
		Объект.СсылкаНаОбъект = Параметры.ОбъектыНазначения[0];
	Иначе
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Данная обработка заполнения может быть вызвана только из формы документа'"),
			,
			,
			,
			Отказ);
		Возврат;
	КонецЕсли;
	
	КлючевыеРеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СсылкаНаОбъект, 
		"Организация, ЦенаВключаетНДС");
	
	Организация = КлючевыеРеквизитыДокументаОснования.Организация;
	ЦенаВключаетНДС = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого СтрокаТЧ Из ВладелецФормы.Объект.Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.бг_ЗаказКлиента) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокДокументовЗаказКлиента.НайтиПоЗначению(
			СтрокаТЧ.бг_ЗаказКлиента) = Неопределено Тогда
			СписокДокументовЗаказКлиента.Добавить(
				СтрокаТЧ.бг_ЗаказКлиента);
		КонецЕсли;
	КонецЦикла;
	
	Склад = ВладелецФормы.Объект.Склад;
	
	Если СписокДокументовЗаказКлиента.Количество() <> 0 Тогда
		ЗаполнитьТаблицуФормы();
	КонецЕсли;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПеренестиТоварыВДокумент", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru='Очистить табличную часть товары перед заполнением?'"),
		РежимДиалогаВопрос.ДаНетОтмена,
		,
		,
		НСтр("ru='Перенести номенклатуру в документ?'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокДокументовЗаказКлиентаОткрытие(Элемент, СтандартнаяОбработка)
	
	Если СписокДокументовЗаказКлиента.Количество() = 1
		И ЗначениеЗаполнено(СписокДокументовЗаказКлиента[0]) Тогда
		ПоказатьЗначение(, СписокДокументовЗаказКлиента[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовЗаказКлиентаПриИзменении(Элемент)
	
	Если СписокДокументовЗаказКлиента.Количество() <> 0 Тогда
		
		ЗаполнитьТаблицуФормы();
		
	КонецЕсли;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЗаказовКлиентаПриИзменении(Элемент)
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЗаказовКлиентаВыбраноПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыЗаказовКлиента.ТекущиеДанные;
	
	ТекущаяСтрока.СуммаПоступления = Окр(ТекущаяСтрока.Выбрано * ТекущаяСтрока.ЦенаПоступления, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЗаказовКлиентаЦенаПоступленияриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыЗаказовКлиента.ТекущиеДанные;
	
	ТекущаяСтрока.СуммаПоступления = Окр(ТекущаяСтрока.Выбрано * ТекущаяСтрока.ЦенаПоступления, 2);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЗаказовКлиентаСуммаПоступленияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыЗаказовКлиента.ТекущиеДанные;
	
	Если ТекущаяСтрока.Выбрано = 0 Тогда
		ТекущаяСтрока.ЦенаПоступления = 0;
	Иначе
		ТекущаяСтрока.ЦенаПоступления = Окр(ТекущаяСтрока.СуммаПоступления / ТекущаяСтрока.Выбрано, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	
	Для каждого СтрокаТовары Из ТоварыЗаказовКлиента Цикл
		
		СтрокаТовары.СуммаПоступления = ?(ЦенаВключаетНДС, СтрокаТовары.СуммаСНДС, СтрокаТовары.Сумма);
		
		Если СтрокаТовары.Выбрано = 0 Тогда
			СтрокаТовары.ЦенаПоступления = 0;
		Иначе
			СтрокаТовары.ЦенаПоступления = Окр(СтрокаТовары.СуммаПоступления / СтрокаТовары.Выбрано, 2);
		КонецЕсли;
		
	КонецЦикла;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИфункции
	
&НаСервере
Процедура ЗаполнитьТаблицуФормы()
	
	ТоварыЗаказовКлиента.Очистить();
	
	Если СписокДокументовЗаказКлиента.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ЭтоГруппа") = Истина Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовЗаказКлиента", СписокДокументовЗаказКлиента);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТовары.Упаковка КАК Упаковка,
	|	СУММА(ЗаказКлиентаТовары.Количество) КАК Количество,
	|	ЗаказКлиентаТовары.Цена КАК Цена,
	|	СУММА(ЗаказКлиентаТовары.Сумма) КАК Сумма,
	|	ЗаказКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЗаказКлиентаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ЗаказКлиентаТовары.СуммаСНДС) КАК СуммаСНДС,
	|	ЗаказКлиентаТовары.ВидЦены КАК ВидЦеныПоставщика,
	|	МАКСИМУМ(ЗаказКлиентаТовары.КодСтроки) КАК КодСтроки,
	|	СУММА(ЗаказКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ЗаказКлиентаТовары.Номенклатура.бг_ЕК_СУМ КАК СУМ,
	|	ЗаказКлиентаТовары.Номенклатура.СтавкаНДС КАК СтавкаНДСНоменклатуры,
	|	ЗаказКлиентаТовары.Склад КАК Склад,
	|	ЗаказКлиентаТовары.Ссылка КАК ЗаказКлиента,
	|	СУММА(ЗаказКлиентаТовары.бг_КоличествоКоробок) КАК бг_КоличествоКоробок,
	|	СУММА(ЗаказКлиентаТовары.бг_КоличествоПаллет) КАК бг_КоличествоПаллет,
	|	ЗаказКлиентаТовары.бг_УпаковкаПаллета КАК бг_УпаковкаПаллета
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В(&СписокДокументовЗаказКлиента)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Ссылка,
	|	ЗаказКлиентаТовары.Упаковка,
	|	ЗаказКлиентаТовары.Номенклатура,
	|	ЗаказКлиентаТовары.Цена,
	|	ЗаказКлиентаТовары.ВидЦены,
	|	ЗаказКлиентаТовары.Склад,
	|	ЗаказКлиентаТовары.Номенклатура.бг_ЕК_СУМ,
	|	ЗаказКлиентаТовары.Номенклатура.СтавкаНДС,
	|	ЗаказКлиентаТовары.СтавкаНДС,
	|	ЗаказКлиентаТовары.бг_УпаковкаПаллета,
	|	ЗаказКлиентаТовары.бг_УпаковкаПаллета.Родитель,
	|	ЗаказКлиентаТовары.бг_УпаковкаПаллета";

	РезультатЗапроса = Запрос.Выполнить();
	ДанныеСтрокиТовары = РезультатЗапроса.Выбрать();
	
	Пока ДанныеСтрокиТовары.Следующий() Цикл
		
		НоваяСтрокаТовары = ТоварыЗаказовКлиента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ДанныеСтрокиТовары);
		
		НоваяСтрокаТовары.Выбрано			= ДанныеСтрокиТовары.КоличествоУпаковок;
		
		НоваяСтрокаТовары.СуммаПоступления	= ?(ЦенаВключаетНДС, НоваяСтрокаТовары.СуммаСНДС, НоваяСтрокаТовары.Сумма);
		
		Если НоваяСтрокаТовары.Выбрано = 0 Тогда
			НоваяСтрокаТовары.ЦенаПоступления = 0;
		Иначе
			НоваяСтрокаТовары.ЦенаПоступления = Окр(НоваяСтрокаТовары.СуммаПоступления / НоваяСтрокаТовары.Выбрано, 2);
		КонецЕсли;
		
		Если НоваяСтрокаТовары.КоличествоУпаковок = 0 Тогда
			НоваяСтрокаТовары.КоэффициентУпаковки = 1;
		Иначе
			НоваяСтрокаТовары.КоэффициентУпаковки = НоваяСтрокаТовары.Количество / НоваяСтрокаТовары.КоличествоУпаковок;
		КонецЕсли;	
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиВТаблице()
	
	ИтогКоличество			= ТоварыЗаказовКлиента.Итог("Количество");
	ИтогКоличествоУпаковок	= ТоварыЗаказовКлиента.Итог("КоличествоУпаковок");
	ИтогСумма				= ТоварыЗаказовКлиента.Итог("Сумма");
	ИтогСуммаНДС			= ТоварыЗаказовКлиента.Итог("СуммаНДС");
	ИтогСуммаСНДС			= ТоварыЗаказовКлиента.Итог("СуммаСНДС");
	ИтогВыбрано				= ТоварыЗаказовКлиента.Итог("Выбрано");
	ИтогСуммаПоступления	= ТоварыЗаказовКлиента.Итог("СуммаПоступления");	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоэффициентыУпаковок(ДанныеУпаковок)
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.КоэффициентыУпаковок(ДанныеУпаковок);
	
КонецФункции
	
&НаКлиентеНаСервереБезКонтекста
Функция ЗависимыеРеквизиты()
	
	Возврат Новый Структура(
		"БезВозвратнойТары,ОтмененоБезВозвратнойТары,Отменено",
		"Сумма,СуммаНДС,СуммаСНДС,СуммаРучнойСкидки",
		"Сумма,СуммаНДС,СуммаСНДС,СуммаРучнойСкидки",
		"Сумма,СуммаНДС,СуммаСНДС,СуммаРучнойСкидки");
	
КонецФункции

&НаКлиенте
Процедура ПеренестиТоварыВДокумент(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
        Возврат;
	КонецЕсли;
	
	Товары = ВладелецФормы.Объект.Товары;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	    // Очистить табличную часть документа перед заполнением
		Товары.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТоварыЗаказовКлиента Цикл
		
		НоваяСтрокаТовары = Товары.Добавить();
		
		НоваяСтрокаТовары.Номенклатура			= СтрокаТаблицы.Номенклатура;
		НоваяСтрокаТовары.Упаковка				= СтрокаТаблицы.Упаковка;
		НоваяСтрокаТовары.Склад					= Склад;
		НоваяСтрокаТовары.КоличествоУпаковок 	= СтрокаТаблицы.Выбрано;
		НоваяСтрокаТовары.Количество			= СтрокаТаблицы.Выбрано * СтрокаТаблицы.КоэффициентУпаковки;   
	
		НоваяСтрокаТовары.бг_КоличествоКоробок  		= СтрокаТаблицы.бг_КоличествоКоробок;
		НоваяСтрокаТовары.бг_КоличествоПаллет  			= СтрокаТаблицы.бг_КоличествоПаллет;
		НоваяСтрокаТовары.бг_УпаковкаПаллета  			= СтрокаТаблицы.бг_УпаковкаПаллета;
		
		НоваяСтрокаТовары.СтавкаНДС	= СтрокаТаблицы.СтавкаНДСНоменклатуры;
		НоваяСтрокаТовары.Цена		= СтрокаТаблицы.ЦенаПоступления;
		НоваяСтрокаТовары.Сумма		= СтрокаТаблицы.СуммаПоступления;
		
		НоваяСтрокаТовары.СуммаНДС	= УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
			НоваяСтрокаТовары.Сумма,
			НоваяСтрокаТовары.СтавкаНДС,
			ЦенаВключаетНДС,
			ВладелецФормы.Объект.НалогообложениеНДС);
		
		Если ЦенаВключаетНДС Тогда
			НоваяСтрокаТовары.СуммаСНДС	= НоваяСтрокаТовары.Сумма;
		Иначе
			НоваяСтрокаТовары.СуммаСНДС	= НоваяСтрокаТовары.Сумма + НоваяСтрокаТовары.СуммаНДС;
		КонецЕсли;
		
		// Обработка строки ТЧ при изменении реквизитов
		СтруктураДействий = Новый Структура;
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ВладелецФормы.Объект);
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСумму");
		СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
		СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, Неопределено);
		
		НоваяСтрокаТовары.бг_ЗаказКлиента = СтрокаТаблицы.ЗаказКлиента;
		
	КонецЦикла;
	
	ВладелецФормы.Модифицированность = Истина;
	ВладелецФормы.Объект.бг_СозданНаОснованииЗаказовКлиента = Истина;   
	ВладелецФормы.Элементы.бг_ЗаказКлиента.Видимость = Истина;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

#КонецОбласти


