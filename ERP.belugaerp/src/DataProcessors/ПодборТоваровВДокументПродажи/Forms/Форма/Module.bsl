#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьЭлементыПаллетизации();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
&ИзменениеИКонтроль("ДобавитьВКорзинуНаКлиенте")
Функция бг_ДобавитьВКорзинуНаКлиенте(ПараметрыТовара, НовыеСтроки)
	
	Отбор = Новый Структура(
		"НоменклатураНабора,
		|ХарактеристикаНабора,
		|Артикул,
		|Номенклатура,
		|ТипНоменклатуры,
		|Характеристика,
		|ХарактеристикиИспользуются,
		|Упаковка,
		|ВидЦены,
		|Склад,
		|ПроцентРучнойСкидки,
		|СрокПоставки,
		|ВариантОбеспечения,
		|Обособленно,
		|Серия");
	
	МассивИДСтрокПересчетаСтатусаСерий = Новый Массив;
	
	Для Каждого НоваяСтрока Из НовыеСтроки Цикл
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСумму");
		СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
		СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));

		ЗаполнитьЗначенияСвойств(Отбор, НоваяСтрока);
#Вставка
		Если НоваяСтрока.ХарактеристикиИспользуются Тогда
			Отбор.Вставить("бг_УпаковкаПаллета", НоваяСтрока.бг_УпаковкаПаллета);
		КонецЕсли;
#КонецВставки
		
		Если ИспользоватьДатыОтгрузки Тогда
			Отбор.Вставить("ДатаОтгрузки", НоваяСтрока.ДатаОтгрузки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Отбор.ТипНоменклатуры) Тогда
			Отбор.ТипНоменклатуры = ПараметрыТовара.ТипНоменклатуры;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Отбор.ВариантОбеспечения) Тогда
			ЗаполнитьВариантОбеспеченияИФлаг(ЭтотОбъект, Отбор,
				ВариантОбеспеченияИФлагОбособленно, ТолькоОбособленно, ОграничиватьВариантыОбеспечения);
		КонецЕсли;
		
		РезультатПоиска = Объект.Корзина.НайтиСтроки(Отбор);
		
		Если РезультатПоиска.Количество() = 0 ИЛИ НоваяСтрока.Погрешность <> 0 Тогда
			
			ТекущаяСтрока = Объект.Корзина.Добавить();
			ТекущаяСтрока.Цена = НоваяСтрока.Цена;
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Отбор);
			ТекущаяСтрока.ИндексНабора = ?(ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураНабора), 1, 0);
			
			СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомПогрешностиОкругления", НоваяСтрока.Погрешность);
			СтруктураДействий.Вставить("ЗаполнитьПризнакНаличияНоменклатурыПродаваемойСовместно", ВариантАнализаНоменклатурыПродаваемойСовместно);

			Если РежимПодбораБезСуммовыхПараметров 
				Или Не ЗапрашиватьЦену
				Или ЦенообразованиеКлиент.НеобходимПересчетЦеныПриИзменении(ТекущаяСтрока.Номенклатура, "Серия") Тогда
				
				СтруктураЗаполненияЦены = Новый Структура;
				СтруктураЗаполненияЦены.Вставить("Дата", ТекущаяДатаСеанса);
				СтруктураЗаполненияЦены.Вставить("Валюта", Валюта);

				Если ИспользоватьСоглашенияСКлиентами И ЗначениеЗаполнено(Соглашение) Или Не ИспользоватьСоглашенияСКлиентами И ЗначениеЗаполнено(Партнер) Тогда
					
					СтруктураЗаполненияЦены.Вставить("Партнер",    Партнер);
					СтруктураЗаполненияЦены.Вставить("Соглашение", Соглашение);
					СтруктураЗаполненияЦены.Вставить("Ссылка",     Неопределено);
					
					СтруктураДействий.Вставить("ЗаполнитьУсловияПродаж", СтруктураЗаполненияЦены);
					
				ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.ВидЦены)
							Или (ИспользуетсяЦенообразование25
							И ЦенообразованиеКлиент.НеобходимПересчетЦеныПриИзменении(ТекущаяСтрока.Номенклатура, "Серия")) Тогда
					
					СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", СтруктураЗаполненияЦены);
				
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ТекущаяСтрока = РезультатПоиска[0];
		КонецЕсли;
		
		ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.КоличествоУпаковок + НоваяСтрока.КоличествоУпаковок;
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
		
		Если Не ПоказыватьПодобранныеТовары Тогда
			
			ТекстОповещения = Символы.ПС + НСтр("ru = 'Товар ""[Товар]"" стоимостью [Цена] [Валюта] в количестве [КоличествоУпаковок] [ЕдиницаИзмерения] добавлен в корзину';
												|en = 'The ""[Товар]"" goods of value [Цена] [Валюта] are added to the cart in quantity of [КоличествоУпаковок] [ЕдиницаИзмерения]'");
			
			ВставляемыеЗначения = Новый Структура("Товар, Цена, Валюта, КоличествоУпаковок, ЕдиницаИзмерения");
			
			ВставляемыеЗначения.Товар              = Строка(ТекущаяСтрока.Номенклатура) + ?(ЗначениеЗаполнено(НоваяСтрока.Характеристика)," (" + НоваяСтрока.Характеристика + ")","");
			ВставляемыеЗначения.Цена               = Формат(ТекущаяСтрока.Цена, "ЧДЦ=2; ЧН=");
			ВставляемыеЗначения.Валюта             = Валюта;
			ВставляемыеЗначения.ЕдиницаИзмерения   = ?(ЗначениеЗаполнено(НоваяСтрока.Упаковка), НоваяСтрока.Упаковка, НСтр("ru = 'ед.';
																															|en = 'unit'"));
			ВставляемыеЗначения.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковок;
			
			ТекстОповещения = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТекстОповещения, ВставляемыеЗначения);
			
		КонецЕсли;
		
		ТекущаяСтрока.ЗаказатьНаСклад = Истина;
		Если ЗначениеЗаполнено(ПараметрыУказанияСерий) Тогда
			Если Не ПроверитьУстановитьСтатусСерийНаКлиенте(ТекущаяСтрока, ПараметрыУказанияСерий) Тогда
				МассивИДСтрокПересчетаСтатусаСерий.Добавить(ТекущаяСтрока.ПолучитьИдентификатор());
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивИДСтрокПересчетаСтатусаСерий.Количество() > 0 Тогда
		ЗаполнитьСтатусыУказанияСерий(МассивИДСтрокПересчетаСтатусаСерий);
	КонецЕсли;
	
	Если НовыеСтроки.Количество() > 0 Тогда
		Элементы.Корзина.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
	Возврат ТекстОповещения;
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("АдресТоваровВХранилище")
Функция бг_АдресТоваровВХранилище(УникальныйИдентификаторВладельца)
	
	АдресВХранилище = Неопределено;
	
	Если ПеренестиВДокумент Тогда
		Товары = Объект.Корзина.Выгрузить();
		Если Не ПодборВариантовОбеспечения Тогда
			Товары.ЗаполнитьЗначения(Неопределено, "ВариантОбеспечения");
		КонецЕсли;
#Вставка
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
			// В системе отключено использование характеристик, но характеристики в корзине могут быть 
			// заполнены служебными характеристиками - паллетами.
			// Чтобы при передачи корзины в документы в ТЧ документов не заполнялись характеристики
			// очистим колонку Характеристика перед передачей в документ. 
			Товары.ЗаполнитьЗначения(Неопределено, "Характеристика");
		КонецЕсли;
#КонецВставки
		
		АдресВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификаторВладельца);
		
	КонецЕсли;
	
	Возврат АдресВХранилище;
	
КонецФункции

&НаСервере
Процедура бг_ДобавитьЭлементыПаллетизации()

	ШиринаПоляУпаковкаПаллета = 15;
	ЗаголовокПоляУпаковкаПаллета = НСтр("ru = 'Паллета';
									    |en = 'Pallette'");
	
	СписокХарактеристики.УстановитьОбязательноеИспользование("бг_УпаковкаПаллета", Истина);
	
	ПолеУпаковкаПаллета = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_СписокСтандартныйПоискХарактеристикиУпаковкаПаллета",
		Элементы.СписокСтандартныйПоискХарактеристики,
		"СписокХарактеристики.бг_УпаковкаПаллета");
	ПолеУпаковкаПаллета.Ширина = ШиринаПоляУпаковкаПаллета;
	ПолеУпаковкаПаллета.Заголовок = ЗаголовокПоляУпаковкаПаллета; 
	ПолеУпаковкаПаллета.Видимость = Ложь;
	
	ПолеУпаковкаПаллета = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_СписокРасширенныйПоискХарактеристикиУпаковкаПаллета",
		Элементы.СписокРасширенныйПоискХарактеристики,
		"СписокХарактеристики.бг_УпаковкаПаллета");
	ПолеУпаковкаПаллета.Ширина = ШиринаПоляУпаковкаПаллета;
	ПолеУпаковкаПаллета.Заголовок = ЗаголовокПоляУпаковкаПаллета; 
	ПолеУпаковкаПаллета.Видимость = Ложь;
	
	ПолеУпаковкаПаллета = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
		ЭтотОбъект,
		"бг_КорзинаУпаковкаПаллета",
		Элементы.Корзина,
		"Объект.Корзина.бг_УпаковкаПаллета");
	ПолеУпаковкаПаллета.Ширина = ШиринаПоляУпаковкаПаллета;
	ПолеУпаковкаПаллета.Заголовок = ЗаголовокПоляУпаковкаПаллета; 
	Элементы.Переместить(ПолеУпаковкаПаллета, Элементы.Корзина, Элементы.КорзинаХарактеристика);
	
	// Установим видимость колонки Номенклатура, и переименуем колоку Характеристика 
	// в списке характеристик, так как у нас в служебной характеристике паллете
	// наименование содержит только наименование паллеты.
	Элементы.СписокРасширенныйПоискХарактеристикиНоменклатура.Видимость = Истина;
	Элементы.СписокСтандартныйПоискХарактеристикиНоменклатура.Видимость = Истина;
	
	Элементы.СписокСтандартныйПоискХарактеристикиХарактеристика.Заголовок = ЗаголовокПоляУпаковкаПаллета;
	Элементы.СписокРасширенныйПоискХарактеристикиХарактеристика.Заголовок = ЗаголовокПоляУпаковкаПаллета;
	
	// Скроем колонку Характеристика в корзине, вместо нее добавили колонку Паллета.
	Элементы.КорзинаХарактеристика.Видимость = Ложь;
	
КонецПроцедуры	

#КонецОбласти
