#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла = Файл;
	ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Лист Microsoft Excel'; en = 'List Microsoft Excel'")+ "(*.xlsx)|*.xlsx";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ПоказатьДиалогОткрытияФайлаЗавершение", ЭтотОбъект));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСписокДоступныхПолей(Команда)
	НастройкиКолонок.Очистить();
	
	СписокПолейФайла = "НаименованиеПоставщика,Склад_Тикер,ДлительностьДоставки,ИсполнительДоставки,СпособДоставки";
	ПоляФайла = СтрРазделить(СписокПолейФайла, ",", Ложь);
	Для Каждого ПолеФайла Из ПоляФайла Цикл
		НоваяСтрокаНастройка = НастройкиКолонок.Добавить();
		НоваяСтрокаНастройка.ИмяРеквизита = ПолеФайла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Прочитать(Команда)
	ПрочитатьФайл();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	УстановитьЗначениеФлага(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	УстановитьЗначениеФлага(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройки;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СтраницаЗагрузки(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗагрузкаДанных;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗагруженныеДокументы(Команда)
	Объект.ЗагруженныеДокументы.Очистить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьЗначениеФлага(Значение)
	Для Каждого СтрокаДанные Из Объект.Данные Цикл
		Если Значение = Истина
			И (Не ЗначениеЗаполнено(СтрокаДанные.Поставщик)
				Или Не ЗначениеЗаполнено(СтрокаДанные.Склад)
				Или Не ЗначениеЗаполнено(СтрокаДанные.ДлительностьДоставки)
				Или Не ЗначениеЗаполнено(СтрокаДанные.ВидПеревозки)) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДанные.Флаг = Значение;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОткрытияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Файл = "";
	Если ВыбранныеФайлы.Количество() = 1 Тогда
		Файл = ВыбранныеФайлы[0];
	КонецЕсли;
	
	ПрочитатьФайл();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл()
	Если Не ЗначениеЗаполнено(Файл) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьПомещениеФайлаВоВременноеХранилище();
КонецПроцедуры

&НаКлиенте
Процедура НачатьПомещениеФайлаВоВременноеХранилище()
	АдресВременногоХранилищаФайла = "";
	ОписаниеОповещенияПомещенияФайла = Новый ОписаниеОповещения("ПомещенияФайлаЗавершение", ЭтотОбъект);
	НачатьПомещениеФайла(ОписаниеОповещенияПомещенияФайла, АдресВременногоХранилищаФайла, Файл, Ложь, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		ПрочитатьДанные(Адрес);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные(АдресВременноеХранилище)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременноеХранилище);
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	ДвоичныеДанные.Записать(ИмяФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяФайла);
	УдалитьФайлы(ИмяФайла);
	
	Объект.Данные.Очистить();
	СоответствиеКолонок = СоответствиеКолонок();
	ДанныеЗаполнениеСсылок = Неопределено;
	
	Для НомерСтроки = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		НоваяСтрока = Объект.Данные.Добавить();
		
		Для Каждого КолонкаТаблица Из СоответствиеКолонок Цикл
			ЗначениеФайл = СокрЛП(ТабличныйДокумент.Область("R" + Формат(НомерСтроки,"ЧГ=0")  + "C" + КолонкаТаблица.Значение.НомерКолонки).Текст);
			НоваяСтрока[КолонкаТаблица.Ключ] = ЗначениеФайл;
		КонецЦикла;
		
		ЗаполнитьСсылочныеТипы(НоваяСтрока, ДанныеЗаполнениеСсылок); 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СоответствиеКолонок()
	СоответствиеКолонок = Новый Соответствие;
	Для Каждого СтрокаНастройкиКолонок Из НастройкиКолонок Цикл
		Если Не ЗначениеЗаполнено(СтрокаНастройкиКолонок.НомерКолонки) Тогда
			Продолжить;
		КонецЕсли;
		
		СоответствиеКолонок.Вставить(СтрокаНастройкиКолонок.ИмяРеквизита, Новый Структура("НомерКолонки", СтрокаНастройкиКолонок.НомерКолонки));
	КонецЦикла;
	
	Возврат СоответствиеКолонок;
КонецФункции

&НаСервере
Процедура ЗаполнитьСсылочныеТипы(СтрокаДанные, ДанныеЗаполнениеСсылок)
	Если ДанныеЗаполнениеСсылок = Неопределено Тогда
		ДанныеЗаполнениеСсылок = Новый Структура;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	Контрагенты.НаименованиеПолное КАК Наименование
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	НЕ Контрагенты.ПометкаУдаления
		|	И Контрагенты.НаименованиеПолное <> """"";
		Результат = Запрос.ВыполнитьПакет();
		
		Выборка = Результат[0].Выбрать();
		СоответствиеДанные = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			СоответствиеДанные.Вставить(НРЕГ(СокрЛП(Выборка.Наименование)), Выборка.Ссылка);
		КонецЦикла;
		ДанныеЗаполнениеСсылок.Вставить("СоответствиеКонтрагенты", СоответствиеДанные);
	КонецЕсли;
	
	СтрокаДанные.Поставщик = ДанныеЗаполнениеСсылок.СоответствиеКонтрагенты.Получить(НРЕГ(СокрЛП(СтрокаДанные.НаименованиеПоставщика)));
	
	ОтборСклады = Новый Структура("Склад_Тикер", СокрЛП(СтрокаДанные.Склад_Тикер));
	СтрокиСоотвестствие = СоответствиеСклады.НайтиСтроки(ОтборСклады);
	Если СтрокиСоотвестствие.Количество() > 0 Тогда
		СтрокаДанные.Склад = СтрокиСоотвестствие[0].Склад;
	КонецЕсли;
	
	ОтборВидыПеревозки = Новый Структура("ИсполнительДоставки, СпособДоставки", СокрЛП(СтрокаДанные.ИсполнительДоставки), СокрЛП(СтрокаДанные.СпособДоставки));
	СтрокиСоотвестствие = СоответствиеВидыПеревозки.НайтиСтроки(ОтборВидыПеревозки);
	Если СтрокиСоотвестствие.Количество() > 0 Тогда
		СтрокаДанные.ВидПеревозки = СтрокиСоотвестствие[0].ВидПеревозки;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	Для Каждого СтрокаДанные Из Объект.Данные Цикл
		Если Не СтрокаДанные.Флаг Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.бг_СоответствиеВидовДоставкиОтПоставщиков.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Поставщик.Установить(СтрокаДанные.Поставщик);
		НаборЗаписей.Отбор.Склад.Установить(СтрокаДанные.Склад);
		НаборЗаписей.Отбор.ДлительностьДоставки.Установить(СтрокаДанные.ДлительностьДоставки);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Поставщик = СтрокаДанные.Поставщик;
		НоваяЗапись.Склад = СтрокаДанные.Склад;
		НоваяЗапись.ДлительностьДоставки = СтрокаДанные.ДлительностьДоставки;
		НоваяЗапись.ВидПеревозки = СтрокаДанные.ВидПеревозки;
		
		НаборЗаписей.Записать();
	КонецЦикла;
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Загрузка выполнена'"));
КонецПроцедуры

#КонецОбласти
