#Область ПрограммныйИнтерфейс

// Выполняет замену спецификации и продукции в документе выпуска и связанных объектах
//
// Параметры:
//   ДокументВыпуска - ДокументСсылка.ЭтапПроизводства2_2
//	 НоваяСпецификация - СправочникСсылка.РесурсныеСпецификации
//
// Возвращаемое значение:
//   ТекстовыйДокумент - протокол замены
//
Функция ВыполнитьЗамену(ДокументВыпуска, НоваяСпецификация) Экспорт
	Результат = Новый ТекстовыйДокумент;
	ДанныеЗамены = ПодготовитьДанныеЗамены(ДокументВыпуска, НоваяСпецификация);  
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	Попытка
		ОтменитьПроведениеДокументов(ДанныеЗамены.СкладскойДокумент, Результат);
		ОтменитьПроведениеДокументов(ДанныеЗамены.ФинансовыйДокумент, Результат);
		ОбработатьСериюНоменклатуры(ДанныеЗамены, Результат);
		ОбработатьПартиюПроизводства(ДанныеЗамены, Результат);
		ОбработатьЭтапРесурснойСпецификации(ДанныеЗамены, Результат);
		ОбработатьДокументыСПУМ(ДанныеЗамены, Результат);
		ОбработатьДокументВыпуска(ДанныеЗамены, Результат);
		ОбработатьФинансовыйДокумент(ДанныеЗамены, Результат);
		ОбработатьСкладскойДокумент(ДанныеЗамены, Результат);
		ОбработатьВыпускВЛабораторию(ДанныеЗамены, Результат);
		ОбработатьОтчетОПроизводствеЕГАИС(ДанныеЗамены, Результат);
		ОбработатьСоответствиеНоменклатурыЕГАИС(ДанныеЗамены, Результат);
		ЗафиксироватьТранзакцию();
		Результат.ДобавитьСтроку(НСтр("ru='Обработка завершена успешно'"));
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Результат.ДобавитьСтроку(ТекстОшибки);
		Результат.ДобавитьСтроку(НСтр("ru='Обработка завершена с ошибками. Замена не выполнена'"));
		ОтменитьТранзакцию();
	КонецПопытки;
	Возврат Результат;
КонецФункции

// Получает сведения о документе выпуска и связанных объектах
//
// Параметры:
//   ДокументВыпуска - ДокументСсылка.ЭтапПроизводства2_2
//
// Возвращаемое значение:
//   Структура - сведения о документе выпуска и связанных объектах:
//       * ПродукцияВыпуск - СправочникСсылка.Номенклатура - выпускаемое изделие
//       * СерияВыпуск - СправочникСсылка.СерииНоменклатуры - серия выпускаемого изделия
//       * СпецификацияВыпуск - СправочникСсылка.ресурсныеСпецификации - спецификация выпуска
//       * ФинансовыйДокумент - ДокументСсылка.ДвижениеПродукцииИМатериалов - передача продукции из производства
//       * СкладскойДокумент - ДокументСсылка.ПриходныйОрдерНаТовары - приход на склад готовой продукции
//
Функция ДанныеДокументаВыпуска(ДокументВыпуска) Экспорт
	Результат = ДанныеДокументаВыпускаШаблон();
	Если Не ЗначениеЗаполнено(ДокументВыпуска) Тогда
		ДобавитьИнформацию(
			НСтр("ru='Документ выпуска не выбран'"),
			Результат,
			"Ошибка");
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаДанныеВыпуска(); 
		Запрос.УстановитьПараметр("Ссылка", ДокументВыпуска);
		РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	
		ИндексПроизводствоБезЗаказа = РезультатЗапросаПакет.ВГраница();
		ИндексОтчетОПроизводствеЕГАИС = ИндексПроизводствоБезЗаказа - 1;
		ИндексСкладскиеДокументы = ИндексОтчетОПроизводствеЕГАИС - 1;
		ИндексФинансовыеДокументы = ИндексСкладскиеДокументы - 1;
		ИндексВыпуск = ИндексФинансовыеДокументы - 1;
		ИндексДокументыСПУМ = ИндексВыпуск - 1;
	
		ТаблицаВыпуска = РезультатЗапросаПакет[ИндексВыпуск].Выгрузить();
		ДобавитьДанныеВыпуска(Результат, ТаблицаВыпуска);

		ТаблицаДокументовСПУМ = РезультатЗапросаПакет[ИндексДокументыСПУМ].Выгрузить();
		ДобавитьДанныеСвязанногоДокумента("ДокументыСПУМ", Результат, ТаблицаДокументовСПУМ);
	
		ТаблицаСкладскиеДокументы = РезультатЗапросаПакет[ИндексСкладскиеДокументы].Выгрузить();
		ДобавитьДанныеСвязанногоДокумента("СкладскойДокумент", Результат, ТаблицаСкладскиеДокументы);
	
		ТаблицаФинансовыеДокументы = РезультатЗапросаПакет[ИндексФинансовыеДокументы].Выгрузить();
		ДобавитьДанныеСвязанногоДокумента("ФинансовыйДокумент", Результат, ТаблицаФинансовыеДокументы);
	
		ТаблицаВыпускВЛабораторию = РезультатЗапросаПакет[ИндексПроизводствоБезЗаказа].Выгрузить();
		ДобавитьДанныеСвязанногоДокумента("ВыпускВЛабораторию", Результат, ТаблицаВыпускВЛабораторию);
	
		ТаблицаОтчетОПроизводствеЕГАИС = РезультатЗапросаПакет[ИндексОтчетОПроизводствеЕГАИС].Выгрузить();
		ДобавитьДанныеСвязанногоДокумента("ОтчетОПроизводствеЕГАИС", Результат, ТаблицаОтчетОПроизводствеЕГАИС);
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДанныеВыпуска

Функция ТекстЗапросаДанныеВыпуска()
	Результат = 
	"ВЫБРАТЬ
	|	ДвижениеПродукцииИМатериалов.Ссылка КАК ФинансовыйДокумент,
	|	ДвижениеПродукцииИМатериалов.Проведен КАК Проведен
	|ПОМЕСТИТЬ втВсеФинансовыеДокументы
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|ГДЕ
	|	ДвижениеПродукцииИМатериалов.Распоряжение = &Ссылка
	|	И ДвижениеПродукцииИМатериалов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапПроизводства2_2ВыходныеИзделия.Номенклатура КАК ПродукцияВыпуск,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Серия КАК СерияВыпуск,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка КАК Ссылка,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Проведен КАК Проведен,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Спецификация КАК СпецификацияВыпуск,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Этап КАК ЭтапВыпуск,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.ПартияПроизводства КАК ПартияВыпуск
	|ПОМЕСТИТЬ втДанныеВыпуска
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ЭтапПроизводства2_2ВыходныеИзделия
	|ГДЕ
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка = &Ссылка
	|	И ЭтапПроизводства2_2ВыходныеИзделия.Произведено
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапПроизводства2_2ВыходныеИзделия.Номенклатура,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Серия,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Спецификация,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Проведен,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.Этап,
	|	ЭтапПроизводства2_2ВыходныеИзделия.Ссылка.ПартияПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бг_ДвижениеМарокСПУМ.Регистратор КАК Ссылка,
	|	ИСТИНА КАК Проведен
	|ИЗ
	|	РегистрСведений.бг_ДвижениеМарок КАК бг_ДвижениеМарокЭтап
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бг_ДвижениеМарок КАК бг_ДвижениеМарокСПУМ
	|		ПО бг_ДвижениеМарокЭтап.ГУИДМарки = бг_ДвижениеМарокСПУМ.ГУИДМарки
	|			И (бг_ДвижениеМарокЭтап.Регистратор = &Ссылка)
	|			И (бг_ДвижениеМарокСПУМ.Активность)
	|			И (бг_ДвижениеМарокСПУМ.Регистратор ССЫЛКА Документ.битДанныеСПроизводственнойЛинии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеВыпуска.ПродукцияВыпуск КАК ПродукцияВыпуск,
	|	втДанныеВыпуска.СерияВыпуск КАК СерияВыпуск,
	|	втДанныеВыпуска.Ссылка КАК Ссылка,
	|	втДанныеВыпуска.ПартияВыпуск КАК ПартияВыпуск,
	|	втДанныеВыпуска.ЭтапВыпуск КАК ЭтапВыпуск,
	|	втДанныеВыпуска.Проведен КАК Проведен,
	|	втДанныеВыпуска.СпецификацияВыпуск КАК СпецификацияВыпуск
	|ИЗ
	|	втДанныеВыпуска КАК втДанныеВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеФинансовыеДокументы.ФинансовыйДокумент КАК Ссылка,
	|	втВсеФинансовыеДокументы.Проведен КАК Проведен
	|ИЗ
	|	втВсеФинансовыеДокументы КАК втВсеФинансовыеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПриходныйОрдерНаТовары.Проведен КАК Проведен
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеФинансовыеДокументы КАК втФинансовыеДокументы
	|		ПО ПриходныйОрдерНаТовары.Распоряжение = втФинансовыеДокументы.ФинансовыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	битОтчетОПроизводствеЕГАИС.Ссылка КАК Ссылка,
	|	битОтчетОПроизводствеЕГАИС.Проведен КАК Проведен
	|ИЗ
	|	Документ.битОтчетОПроизводствеЕГАИС КАК битОтчетОПроизводствеЕГАИС
	|ГДЕ
	|	битОтчетОПроизводствеЕГАИС.ДокументОснование = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроизводствоБезЗаказа.Ссылка КАК Ссылка,
	|	ПроизводствоБезЗаказа.Ссылка.Проведен КАК Проведен
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ПроизводствоБезЗаказа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеВыпуска КАК втДанныеВыпуска
	|		ПО (втДанныеВыпуска.ПродукцияВыпуск = ПроизводствоБезЗаказа.Номенклатура)
	|			И (втДанныеВыпуска.СерияВыпуск = ПроизводствоБезЗаказа.Серия)";
	Возврат Результат;
КонецФункции

Функция ДобавитьДокумент(ИмяДокумента, ДанныеРезультат, ДанныеИсточник)
	Результат = 0;
	ДанныеРезультат[ИмяДокумента] = Новый Массив;
	Для каждого СтрокаДанные Из ДанныеИсточник Цикл
		ДанныеДокумента = Новый Структура("Ссылка, Проведен");
		ЗаполнитьЗначенияСвойств(ДанныеДокумента, СтрокаДанные);
		ДанныеРезультат[ИмяДокумента].Добавить(ДанныеДокумента);
		Если СтрокаДанные.Проведен Тогда
			Результат = Результат + 1;
		КонецЕсли;
	КонецЦикла;   
	Возврат Результат;
КонецФункции
	
Процедура ДобавитьИнформацию(Текст, ДанныеРезультат, Уровень = "Ошибка")
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	Если ВРег(Уровень) = ВРег("Ошибка") Тогда
		ИмяФлага = "ЕстьОшибки"; 
		ИмяТекста = "ОшибкиТекст";
	ИначеЕсли ВРег(Уровень) = ВРег("Предупреждение") Тогда
		ИмяФлага = "ЕстьПредупреждения"; 
		ИмяТекста = "ПредупрежденияТекст";
	Иначе
		Возврат;
	КонецЕсли;
	ДанныеРезультат[ИмяФлага] = Истина;
	ДанныеРезультат[ИмяТекста] = 
		ДанныеРезультат[ИмяТекста] +
		?(ДанныеРезультат[ИмяТекста] = "", "", Символы.ПС) +
		Текст;		
КонецПроцедуры

Функция ДанныеДокументаВыпускаШаблон()
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибки", Ложь);
	Результат.Вставить("ОшибкиТекст", "");
	Результат.Вставить("ЕстьПредупреждения", Ложь);
	Результат.Вставить("ПредупрежденияТекст", "");
	Результат.Вставить("ПродукцияВыпуск");
	Результат.Вставить("СерияВыпуск");
	Результат.Вставить("СпецификацияВыпуск");
	Результат.Вставить("ПартияВыпуск");
	Результат.Вставить("ЭтапВыпуск");
	Результат.Вставить("ДокументВыпуска");
	Результат.Вставить("ДокументыСПУМ");
	Результат.Вставить("ФинансовыйДокумент");
	Результат.Вставить("СкладскойДокумент");
	Результат.Вставить("ВыпускВЛабораторию");
	Результат.Вставить("ОтчетОПроизводствеЕГАИС");
	Возврат Результат;	
КонецФункции

Процедура ДобавитьДанныеВыпуска(ДанныеРезультат, ТаблицаИсточник)
	Если ТаблицаИсточник.Количество() > 1 Тогда 
		ДобавитьИнформацию(
			НСтр("ru='Документом выпущено более 1 номенклатуры продукции, замена невозможна'"),
			ДанныеРезультат,
			"Ошибка");
	ИначеЕсли ТаблицаИсточник.Количество() = 0 Тогда
		ДобавитьИнформацию(
			НСтр("ru='Документом не выпущено никакой продукции, замена невозможна'"),
			ДанныеРезультат,
			"Ошибка");
	Иначе
		СтрокаВыпуска = ТаблицаИсточник[0];
		ЗаполнитьЗначенияСвойств(ДанныеРезультат, СтрокаВыпуска); 
		КоличествоПроведенных = ДобавитьДокумент("ДокументВыпуска", ДанныеРезультат, ТаблицаИсточник);
		Если КоличествоПроведенных = 0 Тогда
			ДобавитьИнформацию(НСтр("ru='Документ выпуска не проведен'"), ДанныеРезультат, "Предупреждение");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьДанныеСвязанногоДокумента(ИмяДокумента, ДанныеРезультат, ТаблицаИсточник)
	КоличествоПроведенных = ДобавитьДокумент(ИмяДокумента, ДанныеРезультат, ТаблицаИсточник);                     
	Если КоличествоПроведенных > 1 Тогда 
		ТекстСообщения = НСтр("ru='%1. Всего проведенных %2. Будут изменены все'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ИмяДокументаВСообщении(ИмяДокумента), КоличествоПроведенных);
		ДобавитьИнформацию(ТекстСообщения, ДанныеРезультат,	"Предупреждение");
	КонецЕсли;
КонецПроцедуры                                     

Функция ИмяДокументаВСообщении(ИмяДокумента) 
	Если ИмяДокумента = "ФинансовыйДокумент" Тогда
		Результат = НСтр("ru='Финансовые документы'");
	ИначеЕсли ИмяДокумента = "СкладскойДокумент" Тогда
		Результат = НСтр("ru='Складские документы'");
	ИначеЕсли ИмяДокумента = "ВыпускВЛабораторию" Тогда
		Результат = НСтр("ru='Выпуски в лабораторию'");
	ИначеЕсли ИмяДокумента = "ДокументыСПУМ" Тогда
		Результат = НСтр("ru='Данные с производственной линии'");
	ИначеЕсли ИмяДокумента = "ОтчетОПроизводствеЕГАИС" Тогда
		Результат = НСтр("ru='Отчеты о производстве ЕГАИС'");
	Иначе
		Результат = ИмяДокумента;
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ЗаменаНоменклатуры

Процедура СообщитьУспешно(ТекстПротокола)
	ТекстПротокола.ДобавитьСтроку(НСтр("ru='Успешно'"));
КонецПроцедуры

Процедура СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, Объект, ЕстьСпецификация = Ложь, ЕстьНоменклатура = Истина)
	Если ЕстьСпецификация И ЕстьНоменклатура Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Заменяем номенклатуру и спецификацию в %1...'"), Объект);
	ИначеЕсли ЕстьСпецификация И Не ЕстьНоменклатура Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Заменяем спецификацию в %1...'"), Объект);
	ИначеЕсли Не ЕстьСпецификация И ЕстьНоменклатура Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Заменяем номенклатуру в %1...'"), Объект);
	Иначе
		Возврат;
	КонецЕсли;
	ТекстПротокола.ДобавитьСтроку(ТекстСообщения);
КонецПроцедуры

Процедура СообщитьЗаписьОбъекта(ТекстПротокола, Объект, РежимЗаписи = Неопределено)
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Отменяем проведение %1...'"), Объект);
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Проводим %1...'"), Объект);
	Иначе                                                                                           
		ТекстСообщения = СтрШаблон(НСтр("ru='Записываем %1...'"), Объект);
	КонецЕсли;
	ТекстПротокола.ДобавитьСтроку(ТекстСообщения);
КонецПроцедуры

Процедура ОтменитьПроведениеДокументов(ДокументыКОтмене, ТекстПротокола)
	Если Не ЗначениеЗаполнено(ДокументыКОтмене) Тогда
		Возврат;
	КонецЕсли;
	Для каждого ДокументСтруктура Из ДокументыКОтмене Цикл
		Если ДокументСтруктура.Проведен Тогда            
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСтруктура.Ссылка, РежимЗаписиДокумента.ОтменаПроведения);
			ДокументОбъект = ДокументСтруктура.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			СообщитьУспешно(ТекстПротокола);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьСериюНоменклатуры(ДанныеЗамены, ТекстПротокола)                           
	Если ЗначениеЗаполнено(ДанныеЗамены.СерияВыпуск) Тогда
		СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДанныеЗамены.СерияВыпуск);
		СерияОбъект = ДанныеЗамены.СерияВыпуск.ПолучитьОбъект();
		СерияОбъект.бг_Номенклатура = ДанныеЗамены.НоваяНоменклатура;
		СерияОбъект.ОбменДанными.Загрузка = Истина;
		СерияОбъект.Записать();
		СообщитьУспешно(ТекстПротокола);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьПартиюПроизводства(ДанныеЗамены, ТекстПротокола)                           
	Если ЗначениеЗаполнено(ДанныеЗамены.ПартияВыпуск) Тогда
		СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДанныеЗамены.ПартияВыпуск, Истина);
		ПартияОбъект = ДанныеЗамены.ПартияВыпуск.ПолучитьОбъект();
		ПартияОбъект.ОсновноеИзделиеНоменклатура = ДанныеЗамены.НоваяНоменклатура;
		ПартияОбъект.Спецификация = ДанныеЗамены.НоваяСпецификация;
		ПартияОбъект.Записать();
		СообщитьУспешно(ТекстПротокола);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьЭтапРесурснойСпецификации(ДанныеЗамены, ТекстПротокола)                           
	Если ЗначениеЗаполнено(ДанныеЗамены.ЭтапВыпуск) Тогда
		СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДанныеЗамены.ЭтапВыпуск, Истина, Ложь);
		ЭтапОбъект = ДанныеЗамены.ЭтапВыпуск.ПолучитьОбъект();
		ЭтапОбъект.Владелец = ДанныеЗамены.НоваяСпецификация;
		ЭтапОбъект.Наименование = Строка(ДанныеЗамены.НоваяНоменклатура);
		ЭтапОбъект.Записать();
		СообщитьУспешно(ТекстПротокола);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьДокументыСПУМ(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.ДокументыСПУМ) Тогда 
		Для каждого ДанныеДокументаСПУМ Из ДанныеЗамены.ДокументыСПУМ Цикл
			ДокументСПУМ = ДанныеДокументаСПУМ.Ссылка;
			СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДокументСПУМ);
			ДокументОбъект = ДокументСПУМ.ПолучитьОбъект();
			ДокументОбъект.Номенклатура = ДанныеЗамены.НоваяНоменклатура;
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСПУМ, РежимЗаписиДокумента.Запись);
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьЗаписьДвижений", Истина);
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			СообщитьУспешно(ТекстПротокола);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьДокументВыпуска(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.ДокументВыпуска) Тогда
		СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДанныеЗамены.ДокументВыпуска[0].Ссылка, Истина);
		ДокументОбъект = ДанныеЗамены.ДокументВыпуска[0].Ссылка.ПолучитьОбъект();
		ДокументОбъект.Спецификация = ДанныеЗамены.НоваяСпецификация;
		ДокументОбъект.НаименованиеЭтапа = Строка(ДанныеЗамены.НоваяНоменклатура);
		ОбработатьТабличнуюЧасть(ДокументОбъект, "ВыходныеИзделия", ДанныеЗамены);
		Если ДанныеЗамены.ДокументВыпуска[0].Проведен Тогда
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
		Иначе
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;     
		СообщитьЗаписьОбъекта(ТекстПротокола, ДанныеЗамены.ДокументВыпуска[0].Ссылка, РежимЗаписи);
		ДокументОбъект.Записать(РежимЗаписи);
		СообщитьУспешно(ТекстПротокола);
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьФинансовыйДокумент(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.ФинансовыйДокумент) Тогда 
		Для каждого ДокументСтруктура Из ДанныеЗамены.ФинансовыйДокумент Цикл
			СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДокументСтруктура.Ссылка);
			ДокументОбъект = ДокументСтруктура.Ссылка.ПолучитьОбъект();
			ОбработатьТабличнуюЧасть(ДокументОбъект, "Товары", ДанныеЗамены);
			Если ДокументСтруктура.Проведен Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСтруктура.Ссылка, РежимЗаписи);
			ДокументОбъект.Записать(РежимЗаписи);
			СообщитьУспешно(ТекстПротокола);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьСкладскойДокумент(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.СкладскойДокумент) Тогда 
		Для каждого ДокументСтруктура Из ДанныеЗамены.СкладскойДокумент Цикл
			СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДокументСтруктура.Ссылка);
			ДокументОбъект = ДокументСтруктура.Ссылка.ПолучитьОбъект();
			ОбработатьТабличнуюЧасть(ДокументОбъект, "Товары", ДанныеЗамены);
			Если ДокументСтруктура.Проведен Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСтруктура.Ссылка, РежимЗаписи);
			ДокументОбъект.Записать(РежимЗаписи);
			СообщитьУспешно(ТекстПротокола);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьВыпускВЛабораторию(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.ВыпускВЛабораторию) Тогда 
		Для каждого ДокументСтруктура Из ДанныеЗамены.ВыпускВЛабораторию Цикл
			СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДокументСтруктура.Ссылка);
			ДокументОбъект = ДокументСтруктура.Ссылка.ПолучитьОбъект();
			ОбработатьТабличнуюЧасть(ДокументОбъект, "ВыходныеИзделия", ДанныеЗамены);
			Если ДокументСтруктура.Проведен Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСтруктура.Ссылка, РежимЗаписи);
			ДокументОбъект.Записать(РежимЗаписи);
			СообщитьУспешно(ТекстПротокола);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьСоответствиеНоменклатурыЕГАИС(ДанныеЗамены, ТекстПротокола)  
	
	ТекстПротокола.ДобавитьСтроку(НСтр("ru='Заменяем номенклатуру в Соответствии номенклатуры ЕГАИС'"));
	НаборЗаписейБыло = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписейБыло.Отбор.Серия.Установить(ДанныеЗамены.СерияВыпуск);
	НаборЗаписейБыло.Отбор.Номенклатура.Установить(ДанныеЗамены.ПродукцияВыпуск);
	НаборЗаписейБыло.Прочитать();
	ДанныеРегистра = НаборЗаписейБыло.Выгрузить();
	НаборЗаписейБыло.Очистить();
	НаборЗаписейБыло.Записать(Истина);

	НаборЗаписейСтало = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписейСтало.Отбор.Серия.Установить(ДанныеЗамены.СерияВыпуск);
	НаборЗаписейСтало.Отбор.Номенклатура.Установить(ДанныеЗамены.НоваяНоменклатура);
	НаборЗаписейСтало.Загрузить(ДанныеРегистра);
	Для каждого СтрокаЗапись Из НаборЗаписейСтало Цикл 
		СтрокаЗапись.Номенклатура = ДанныеЗамены.НоваяНоменклатура;
	КонецЦикла;
	НаборЗаписейСтало.Записать(Истина);
	СообщитьУспешно(ТекстПротокола);
	
КонецПроцедуры                                     

Процедура ОбработатьОтчетОПроизводствеЕГАИС(ДанныеЗамены, ТекстПротокола)  
	Если ЗначениеЗаполнено(ДанныеЗамены.ОтчетОПроизводствеЕГАИС) Тогда 
		Для каждого ДокументСтруктура Из ДанныеЗамены.ОтчетОПроизводствеЕГАИС Цикл
			СообщитьЗаменяемНоменклатуруСпецификацию(ТекстПротокола, ДокументСтруктура.Ссылка);
			ДокументОбъект = ДокументСтруктура.Ссылка.ПолучитьОбъект();
			ОбработатьТабличнуюЧасть(ДокументОбъект, "Товары", ДанныеЗамены);
			РежимЗаписи = РежимЗаписиДокумента.Запись;
			СообщитьЗаписьОбъекта(ТекстПротокола, ДокументСтруктура.Ссылка, РежимЗаписи);
			ДокументОбъект.Записать(РежимЗаписи);
			СообщитьУспешно(ТекстПротокола);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                     

Процедура ОбработатьТабличнуюЧасть(ДокументОбъект, ИмяТабличнойЧасти, ДанныеЗамены)
	МетаданныеТабличнойЧасти = ДокументОбъект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти];
	ЕстьСпецификация = Не МетаданныеТабличнойЧасти.Реквизиты.Найти("Спецификация") = Неопределено;
	Для каждого СтрокаДокумент Из ДокументОбъект[ИмяТабличнойЧасти] Цикл
		Если СтрокаДокумент.Номенклатура = ДанныеЗамены.ПродукцияВыпуск 
			И СтрокаДокумент.Серия = ДанныеЗамены.СерияВыпуск  Тогда
			СтрокаДокумент.Номенклатура = ДанныеЗамены.НоваяНоменклатура;
			Если ЕстьСпецификация Тогда 
				СтрокаДокумент.Спецификация = ДанныеЗамены.НоваяСпецификация;
			КонецЕсли;				
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПодготовитьДанныеЗамены(ДокументВыпуска, НоваяСпецификация)
	Результат = ДанныеДокументаВыпуска(ДокументВыпуска);
	Результат.Вставить("НоваяСпецификация", НоваяСпецификация);
	Номенклатура = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСпецификация, "ОсновноеИзделиеНоменклатура");
	Результат.Вставить("НоваяНоменклатура", Номенклатура);
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецОбласти