#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции	

#Область Печать

// Добавляет команду печати печатной формы "Качественное удостоверение" в коллекцию команд печати документа.
//
// Параметры:
//	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//	УсловиеВидимости - Структура - Условие видимости печатной формы
//	
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - элемент коллекции КомандыПечати, содержащий описание команды печати.
//
Функция ДобавитьКомандуПечати(КомандыПечати, УсловиеВидимости = Неопределено) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.бг_ПечатьКачественногоУдостоверения";
	КомандаПечати.Идентификатор = "бг_КачественноеУдостоверение";
	КомандаПечати.Представление = НСтр("ru='Качественное удостоверение с пиктограммами (горизонтальное)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	Если ЗначениеЗаполнено(УсловиеВидимости) Тогда
		КомандаПечати.УсловияВидимости.Добавить(УсловиеВидимости);
	КонецЕсли;
	
	Возврат КомандаПечати;
	
КонецФункции

// Формирует печатные формы объекта.
//
// Параметры:
//	МассивОбъектов			- Массив Из ДокументСсылка	- ссылки на объекты которые нужно распечатать.
//	ПараметрыПечати			- Структура					- дополнительные параметры печати.
//	КоллекцияПечатныхФорм	- ТаблицаЗначений			- сформированные табличные документы.
//	ОбъектыПечати			- СписокЗначений			- объекты печати.
//	ПараметрыВывода			- Структура					- параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_КачественноеУдостоверение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_КачественноеУдостоверение",
			НСтр("ru='Качественное удостоверение с пиктограммами (горизонтальное)'"),
			СформироватьПечатнуюФормуКачественноеУдостоверение(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));			
			
	КонецЕсли;

КонецПроцедуры

#Область ПечатьУдостоверениеОКачестве

Функция СформироватьПечатнуюФормуКачественноеУдостоверение(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КАЧЕСТВЕННОЕ_УДОСТОВЕРЕНИЕ";

	НомерТипаДокумента = 0;

	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.бг_ДанныеДляПечатнойФормыКачественногоУдостоверения(
			ПараметрыПечати, 
			СтруктураОбъектов.Значение); 
		
		ЗаполнитьТабличныйДокументКачественногоУдостоверения(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура ЗаполнитьТабличныйДокументКачественногоУдостоверения(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	СведенияПоДокументам = ДанныеДляПечати.СведенияПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	РезультатыАнализа = ДанныеДляПечати.РезультатыАнализа.Выгрузить();
	ПиктограммыНоменклатуры = ДанныеДляПечати.ПиктограммыНоменклатуры.Выгрузить();
	ФорматДаты = "ДФ=dd.MM.yyyy";
	
	ИменаАлкогольнойПродукцииПоЧастиКода = СоответствиеИменАлкогольнойПродукцииЧастямКода();
	
	ШаблонИмениМакета = "ПФ_MXL_Удостоверение%1%";

	ПервыйДокумент = Истина;	
	
	Пока СведенияПоДокументам.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияПоСериям = СведенияПоДокументам.Выбрать();
		
		Пока СведенияПоСериям.Следующий() Цикл
			
			// вывод формы только для собственной продукции
			Если Не ЗначениеЗаполнено(СведенияПоСериям.ПроизводительЕГАИСОрганизация) Тогда				
				Продолжить;	
			КонецЕсли;	
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НаименованиеАлкогольнойПродукции = ИменаАлкогольнойПродукцииПоЧастиКода.Получить(
				Сред(СведенияПоСериям.КодАлкогольнойПродукции, 1, 3));
				
			Если НаименованиеАлкогольнойПродукции = "Виски" Тогда
				
				ЗначениеВидаАлкогольнойПродукции = ИменаАлкогольнойПродукцииПоЧастиКода.Получить(
					Сред(СведенияПоСериям.КодАлкогольнойПродукции, 1, 4));
					
				Если ЗначениеВидаАлкогольнойПродукции <> Неопределено Тогда	
					НаименованиеАлкогольнойПродукции = ЗначениеВидаАлкогольнойПродукции;
				КонецЕсли;	
		
			КонецЕсли;
			
			Если НаименованиеАлкогольнойПродукции = Неопределено Тогда
				НаименованиеАлкогольнойПродукции = "Настойка";	
			КонецЕсли;	
			
			Макет = ПолучитьМакет(СтрЗаменить(ШаблонИмениМакета, "%1%", НаименованиеАлкогольнойПродукции));
				
			// вывод пиктограммы
			СтрокаПиктограммы = ПиктограммыНоменклатуры.Найти(
				СведенияПоСериям.Номенклатура, 
				"Номенклатура");
			
			Если СтрокаПиктограммы <> Неопределено 
				И ЗначениеЗаполнено(СтрокаПиктограммы.ПрисоединенныйФайл) Тогда
				
				ДанныеПрисоединенногоФайла = РаботаСФайлами.ДвоичныеДанныеФайла(
					СтрокаПиктограммы.ПрисоединенныйФайл, 
					Ложь);
				
				Если ДанныеПрисоединенногоФайла <> Неопределено Тогда
					
					ПиктограммаНоменклатуры = Новый Картинка(ДанныеПрисоединенногоФайла); 
					
					Область = Макет.ПолучитьОбласть("Пиктограмма");
					Область.Рисунки.КартинкаПиктограмма.Картинка = ПиктограммаНоменклатуры;
					ТабличныйДокумент.Вывести(Область);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// шапка
			Область = Макет.ПолучитьОбласть("Шапка");
			
			Область.Параметры.Заполнить(СведенияПоСериям);
			
			Шаблон = НСтр("ru='%1: %2 № %3 (%4 - %5)'");	

			Область.Параметры.Декларация = ?(
				ЗначениеЗаполнено(СведенияПоСериям.ДекларацияОСоответствии), 
				СтрШаблон(
					Шаблон,
					СокрЛП(СведенияПоСериям.ТипСертификата),
					СокрЛП(СведенияПоСериям.ОрганВыдачиДекларацииОСоответствии), 
					СокрЛП(СведенияПоСериям.НомерДекларацииОСоответствии), 
					Формат(СведенияПоСериям.ДатаВыдачиДекларацииОСоответствии, ФорматДаты), 
					Формат(СведенияПоСериям.ДатаОкончанияСрокаДействияДекларации, ФорматДаты)), 
				НСтр("ru='Декларация о соответствии:  №  ( - )'"));	
			
			Область.Параметры.Удостоверение = СтрШаблон(
				НСтр("ru='Удостоверение о качестве №%1'"), 
				СведенияПоСериям.НомерДокумента);
				
			Область.Параметры.ДатаВыдачи = СтрШаблон(
				НСтр("ru='Дата выдачи: %1'"), 
				Формат(СведенияПоСериям.ДатаДокумента, ФорматДаты));
				
			Область.Параметры.ДатыРозлива = Формат(СведенияПоСериям.ДатаРозлива, ФорматДаты);
			
			Область.Параметры.Лицензия = ПредставлениеЛицензииПоставщикаНаПроизводство(СведенияПоСериям);
			
			Область.Параметры.ПроизводительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(
				ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
					СведенияПоСериям.Производитель, 
					СведенияПоСериям.ДатаДокумента),
				"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,");	
				
			ТабличныйДокумент.Вывести(Область);
			
			// показатели
			Область = Макет.ПолучитьОбласть("Показатели");
			
			Отбор = Новый Структура(
				"Документ,Номенклатура,Серия", 
				СведенияПоСериям.Документ, СведенияПоСериям.Номенклатура, СведенияПоСериям.Серия);
				
			ПоказателиАнализа = РезультатыАнализа.НайтиСтроки(Отбор);	
			
			ЗаполняемыеПоказатели = ЗначенияПоказателейТиповогоАнализа(
				ПоказателиАнализа, 
				НаименованиеАлкогольнойПродукции);	
			
			Область.Параметры.Заполнить(ЗаполняемыеПоказатели);
			
			ЗаполнитьПустыеПараметрыСтрокиПоказателей(НаименованиеАлкогольнойПродукции, Область);
			
			Область.Параметры.ДатыРозлива = Формат(СведенияПоСериям.ДатаРозлива, ФорматДаты);
			
			ТабличныйДокумент.Вывести(Область);
			
			// подвал
			Область = Макет.ПолучитьОбласть("Подвал");
			
			Область.Параметры.Заполнить(СведенияПоСериям);
			
			Область.Параметры.ДатаНомерНакладной = СтрШаблон(
				НСтр("ru='%1 от %2'"), 
				СведенияПоСериям.НомерДокумента, 
				Формат(СведенияПоСериям.ДатаДокумента, ФорматДаты));
			
			НаименованиеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(
				ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
					СведенияПоСериям.Контрагент, 
					СведенияПоСериям.ДатаДокумента), 
				"СокращенноеНаименование,");
			
			Если ТипЗнч(СведенияПоДокументам.Документ) = Тип("ДокументСсылка.битСертификацияНоменклатуры") Тогда	
				ПредставлениеПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(
					ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
						СведенияПоСериям.Контрагент, 
						СведенияПоСериям.ДатаДокумента),
					"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес");	
			Иначе			
				РеквизитыКлиентаПунктаРазгрузки = ФормированиеПечатныхФорм.ОписаниеОрганизации(
					ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
						СведенияПоСериям.КлиентПунктРазгрузки, 
						СведенияПоСериям.ДатаДокумента), 
					"ИНН,КПП");
						
				ПредставлениеПокупателя = СтрШаблон(
					НСтр("ru='%1, %2, %3'"), 
					НаименованиеКонтрагента, 
					РеквизитыКлиентаПунктаРазгрузки,
					СведенияПоСериям.АдресПунктРазгрузки);	
			КонецЕсли;
				
			Область.Параметры.Покупатель = ПредставлениеПокупателя;	
				
			Область.Параметры.Сотрудник = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(
				СведенияПоСериям.Ответственный);
			
			Если ЗначениеЗаполнено(СведенияПоСериям.ОтветственноеЛицо) Тогда 
				
				СклоненияОснования = ПолучитьСклоненияСтроки(
					СведенияПоСериям.ДокументПраваПодписи,, 
					"ПД=Дательный");
					
				ДокументОснование = ?(СклоненияОснования.Количество() <> 0, НРег(СклоненияОснования[0]), "");	
					
				Область.Параметры.Доверенность = СтрШаблон(
					НСтр("ru='по %1 %2 от %3'"),
					ДокументОснование,
					СведенияПоСериям.НомерОснования,
					Формат(СведенияПоСериям.ДатаОснования, ФорматДаты));
					
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, 
			НомерСтрокиНачало, 
			ОбъектыПечати, 
			СведенияПоДокументам.Документ);
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Соответствие имен видов алкоголя частям кода
// 
// Возвращаемое значение:
// Соответствие - Сопоставляет первые несколько цифр кода 
// справочника "ВидыАлкогольнойПродукции" наименованиям алкоголя
//
Функция СоответствиеИменАлкогольнойПродукцииЧастямКода()
	
	ИменаАлкогольнойПродукцииПоЧастиКода = Новый Соответствие;

	// водка
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("200", "Водка");
	
	// коньяк
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("229", "Коньяк");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("231", "Коньяк");
	
	// виски
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("237", "Виски");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("280", "Виски");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("236", "Виски");
	
	// настойка
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("2807", "Настойка");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("2808", "Настойка");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("2809", "Настойка");
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("2810", "Настойка");
		
	// бренди
	ИменаАлкогольнойПродукцииПоЧастиКода.Вставить("232", "Бренди");
	
	Возврат ИменаАлкогольнойПродукцииПоЧастиКода;
	
КонецФункции	

Функция ПредставлениеЛицензииПоставщикаНаПроизводство(СведенияПоСериям)
	
	ФорматДаты = "ДФ=dd.MM.yyyy";
	
	Если Не ЗначениеЗаполнено(СведенияПоСериям.ЛицензияНаПроизводство) Тогда
		Возврат "";	
	КонецЕсли;	
	
	ШаблонЛицензии = НСтр("ru='Серия: %1 %2 № (%3 - %4), 
								|Дата выдачи: %5
								|Выдана: %6
								|%7'");
		
	Если ЗначениеЗаполнено(СведенияПоСериям.ВидЛицензируемойДеятельности) Тогда	
		ХарактеристикаВидовЛицензируемойДеятельности = ?(
			ЗначениеЗаполнено(СведенияПоСериям.ВидЛицензируемойДеятельностиПримечание), 
			СокрЛП(СведенияПоСериям.ВидЛицензируемойДеятельностиПримечание), 
			СокрЛП(СведенияПоСериям.ВидЛицензируемойДеятельностиНаименование));	
	Иначе	
		ХарактеристикаВидовЛицензируемойДеятельности = 
			НСтр("ru='на производство, хранения и поставки произведенных спиртных напитков (водки, ликероводочных изделий, коньяков из обработанных коньяков)'");		
	КонецЕсли;		
	
	Возврат СтрШаблон(
				ШаблонЛицензии, 
				СокрЛП(СведенияПоСериям.ЛицензияНаПроизводствоСерия),
				СокрЛП(СведенияПоСериям.ЛицензияНаПроизводствоНомер),
				Формат(СведенияПоСериям. ЛицензияНаПроизводствоДатаНачалаСрокаДействия, ФорматДаты),
				Формат(СведенияПоСериям.ЛицензияНаПроизводствоДатаОкончанияСрокаДействия, ФорматДаты),
				Формат(СведенияПоСериям.ЛицензияНаПроизводствоДатаВыдачи, ФорматДаты),
				СокрЛП(СведенияПоСериям.ЛицензияНаПроизводствоОрганВыдачи),
				ХарактеристикаВидовЛицензируемойДеятельности);;	
		
КонецФункции	

Функция ИмяПараметраПоЧастиНаименованияПоказателя(НаименованиеПоказателя)
	
	Параметр = "";
	
    ИменаПараметров = Новый Соответствие;
	
	ИменаПараметров.Вставить("вид", 			"ВнешнийВид");
	ИменаПараметров.Вставить("вкус", 			"Вкус");
	ИменаПараметров.Вставить("цвет", 			"Цвет");
	ИменаПараметров.Вставить("аромат", 			"Аромат");
	ИменаПараметров.Вставить("крепость", 		"Крепость");
	ИменаПараметров.Вставить("щелочность", 		"Щелочность");
	ИменаПараметров.Вставить("цветность", 		"Цветность");
	ИменаПараметров.Вставить("сложные эфиры", 	"КонцентрацияСложныхЭфиров");
	ИменаПараметров.Вставить("альдегид", 		"КонцентрацияУксусногоАльдегида");
	ИменаПараметров.Вставить("сивуш", 			"КонцентрацияСивушногоМасла");
	ИменаПараметров.Вставить("метиловый спирт", "ДоляМетиловогоСпирта");
	ИменаПараметров.Вставить("объемная доля метилового спирта", "ДоляМетиловогоСпирта");
	ИменаПараметров.Вставить("фурфурол", 		"КонцентрацияФурфурола");
	ИменаПараметров.Вставить("высших спиртов", 	"КонцентрацияВысшихСпиртов");
	ИменаПараметров.Вставить("желез", 			"КонцентрацияЖелеза");
	ИменаПараметров.Вставить("летучих кислот",	"КонцентрацияЛетучихКислот");
	ИменаПараметров.Вставить("метилового спирта", "КонцентрацияМетиловогоСпирта");
	ИменаПараметров.Вставить("сахаров", 		"КонцентрацияСахаров");
	ИменаПараметров.Вставить("средних эфиров", 	"КонцентрацияСреднихЭфиров");
	ИменаПараметров.Вставить("этилового спирта", "ДоляЭтиловогоСпирта");
	ИменаПараметров.Вставить("приведенного экстракта", "КонцентрацияПриведенногоЭкстракта");
	ИменаПараметров.Вставить("экстракта", 		"КонцентрацияОбщегоЭкстракта");
	ИменаПараметров.Вставить("сахара", 			"КонцентрацияСахара");
	ИменаПараметров.Вставить("лимонную кислоту", "КонцентрацияКислот");
	
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		
		Если Найти(НРег(НаименованиеПоказателя), ИмяПараметра.Ключ) > 0 Тогда
			
			Параметр = ИмяПараметра.Значение;
			Прервать;
			
		КонецЕсли;	
			
	КонецЦикла;	
	
	Возврат Параметр;
	
КонецФункции	

Процедура ЗаполнитьПустыеПараметрыСтрокиПоказателей(НаименованиеАлкогольнойПродукции, ОбластьПоказателей)

	Если НаименованиеАлкогольнойПродукции = "Настойка" Тогда

		ОбластьПоказателей.Параметры.ЦветностьНорма = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.ЦветностьНорма), 
			0, 
			ОбластьПоказателей.Параметры.ЦветностьНорма);

		ОбластьПоказателей.Параметры.ЦветностьФакт = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.ЦветностьФакт), 
			0, 
			ОбластьПоказателей.Параметры.ЦветностьФакт);

		ОбластьПоказателей.Параметры.КонцентрацияКислотНорма = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.КонцентрацияКислотНорма), 
			0, 
			ОбластьПоказателей.Параметры.КонцентрацияКислотНорма);

		ОбластьПоказателей.Параметры.КонцентрацияСахараНорма = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.КонцентрацияСахараНорма), 
			0, 
			ОбластьПоказателей.Параметры.КонцентрацияСахараНорма);

		ОбластьПоказателей.Параметры.КонцентрацияОбщегоЭкстрактаФакт = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.КонцентрацияОбщегоЭкстрактаФакт), 
			0, 
			ОбластьПоказателей.Параметры.КонцентрацияОбщегоЭкстрактаФакт);

		ОбластьПоказателей.Параметры.КонцентрацияСахараФакт = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.КонцентрацияСахараФакт), 
			0, 
			ОбластьПоказателей.Параметры.КонцентрацияСахараФакт);

		ОбластьПоказателей.Параметры.КонцентрацияКислотФакт = ?(
			Не ЗначениеЗаполнено(ОбластьПоказателей.Параметры.КонцентрацияКислотФакт), 
			0, 
			ОбластьПоказателей.Параметры.КонцентрацияКислотФакт);

	КонецЕсли;

КонецПроцедуры

Функция ЗначенияПоказателейТиповогоАнализа(ПоказателиАнализа, НаименованиеАлкогольнойПродукции)

	ЗаполняемыеПоказатели = Новый Структура;
	ШаблонЗначенийПоказателя = НСтр("ru='%1%2'");
	ШаблонЗначенияВИнтервалеНорма = НСтр("ru='%1...%2'");
	ШаблонЗначенияПогрешностьНорма = НСтр("ru='%1 %2 %3'");
	СимволПлюсМинус = 177;
	
	Для Каждого ЗначенияПоказателя Из ПоказателиАнализа Цикл	
		
		ИмяПараметра = ИмяПараметраПоЧастиНаименованияПоказателя(ЗначенияПоказателя.Показатель);
		
		Если ПустаяСтрока(ИмяПараметра) 
			Или ЗначенияПоказателя.ВидРезультата = Перечисления.бг_ВидыРезультатовЛабораторныхАнализов.Поддиапазон Тогда
			Продолжить;	
		КонецЕсли;	
		
		Если ЗначенияПоказателя.ВидРезультата = Перечисления.бг_ВидыРезультатовЛабораторныхАнализов.ЗначениеИзСписка Тогда	
			ЗаполняемыеПоказатели.Вставить(ИмяПараметра, ЗначенияПоказателя.Значение);
			Продолжить;
		КонецЕсли;
		
		ПараметрНорма = СтрШаблон(ШаблонЗначенийПоказателя, ИмяПараметра, "Норма");
		ПараметрФакт = СтрШаблон(ШаблонЗначенийПоказателя, ИмяПараметра, "Факт");
		ЗначениеПараметраНорма = "";
		
		Если ЗначенияПоказателя.ВидРезультата = Перечисления.бг_ВидыРезультатовЛабораторныхАнализов.ЧислоВИнтервале 
			И ЗначенияПоказателя.МаксимальноеНормативноеЗначение <> 0 Тогда
			
			ЗначениеПараметраНорма = СтрШаблон(
				ШаблонЗначенияВИнтервалеНорма, 
				Строка(ЗначенияПоказателя.МинимальноеНормативноеЗначение), 
				Строка(ЗначенияПоказателя.МаксимальноеНормативноеЗначение));
					
		КонецЕсли;
		
		Если ЗначенияПоказателя.ВидРезультата = Перечисления.бг_ВидыРезультатовЛабораторныхАнализов.ЗначениеСПогрешностью 
			И ЗначенияПоказателя.МаксимальноеНормативноеЗначение <> 0 Тогда
			
			ЗначениеПараметраНорма = СтрШаблон(
				ШаблонЗначенияПогрешностьНорма, 
				Строка((ЗначенияПоказателя.МинимальноеНормативноеЗначение 
						+ ЗначенияПоказателя.МаксимальноеНормативноеЗначение) / 2), 
				Символ(СимволПлюсМинус),
				Строка((ЗначенияПоказателя.МаксимальноеНормативноеЗначение 
						- ЗначенияПоказателя.МинимальноеНормативноеЗначение) / 2));
						
		КонецЕсли;
			
		ЗначениеПараметраФакт = ЗначенияПоказателя.Значение;
		
		ОпределитьПоказателиПоУмолчанию(
			ИмяПараметра, 
			ЗначениеПараметраНорма, 
			ЗначениеПараметраФакт, 
			НаименованиеАлкогольнойПродукции);
		
		ЗаполняемыеПоказатели.Вставить(ПараметрНорма, ЗначениеПараметраНорма);
		ЗаполняемыеПоказатели.Вставить(ПараметрФакт, ЗначениеПараметраФакт);
		
	КонецЦикла;
	
	Возврат ЗаполняемыеПоказатели;
	
КонецФункции

Процедура ОпределитьПоказателиПоУмолчанию(ИмяПараметра, ЗначениеПараметраНорма, 
	ЗначениеПараметраФакт, НаименованиеАлкогольнойПродукции)
	
	ЭтоВиски = НаименованиеАлкогольнойПродукции = "Виски";

	Если ИмяПараметра = "Цветность" Тогда
		ЗначениеПараметраНорма = СтрЗаменить(ЗначениеПараметраНорма, "0...", "не более ");	
	КонецЕсли;
	
	Если ИмяПараметра = "КонцентрацияЛетучихКислот" Тогда
		ЗначениеПараметраНорма = "200,0";	
	КонецЕсли;
	
	Если ИмяПараметра = "КонцентрацияЖелеза" Тогда
		ЗначениеПараметраНорма = ?(ЭтоВиски, "1,0", "1,5");	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ЗначениеПараметраНорма) Тогда
		
		Если ИмяПараметра = "Крепость" Тогда	
			ЗначениеПараметраНорма = ?(ЭтоВиски, "40 ± 0,2", "40");	
		КонецЕсли;
		
		Если ИмяПараметра = "КонцентрацияСложныхЭфиров" Тогда
			ЗначениеПараметраНорма = ?(ЭтоВиски, "50 - 1500", ЗначениеПараметраНорма);	
		КонецЕсли;	
		
		Если ИмяПараметра = "КонцентрацияУксусногоАльдегида" Тогда
			ЗначениеПараметраНорма = ?(ЭтоВиски, "10 - 350", ЗначениеПараметраНорма);	
		КонецЕсли;	
		
		Если ИмяПараметра = "КонцентрацияСивушногоМасла" Тогда
			ЗначениеПараметраНорма = ?(ЭтоВиски, "500 - 6000", ЗначениеПараметраНорма);		
		КонецЕсли;
		
		Если ИмяПараметра = "ДоляМетиловогоСпирта" Тогда
			ЗначениеПараметраНорма = ?(ЭтоВиски, "0,05", ЗначениеПараметраНорма);	
		КонецЕсли;
		
		Если ИмяПараметра = "КонцентрацияФурфурола" Тогда
			ЗначениеПараметраНорма = ?(ЭтоВиски, "30", ЗначениеПараметраНорма);	
		КонецЕсли;
						
	КонецЕсли;
	
	ЗначениеФактПоУмолчанию = Неопределено;
	
	Если ИмяПараметра = "Щелочность" Тогда 	
		ЗначениеФактПоУмолчанию = 0.5;	
	КонецЕсли;
	
	Если Не ЭтоВиски 
		И (ИмяПараметра = "КонцентрацияСложныхЭфиров" 
			Или ИмяПараметра = "КонцентрацияУксусногоАльдегида" 
			Или ИмяПараметра = "КонцентрацияСивушногоМасла") Тогда
			
		ЗначениеФактПоУмолчанию = 0.5;	
			
	КонецЕсли;
	
	Если ИмяПараметра = "КонцентрацияКислот" 
		Или ИмяПараметра = "КонцентрацияСахара" 
		Или ИмяПараметра = "КонцентрацияОбщегоЭкстракта" Тогда
		
		ЗначениеФактПоУмолчанию = 0.1;
		
	КонецЕсли;
	
	Если ИмяПараметра = "КонцентрацияЖелеза" Тогда	
		ЗначениеФактПоУмолчанию = 0.25;
	КонецЕсли;
	
	Если ИмяПараметра = "КонцентрацияФурфурола" Тогда
		ЗначениеФактПоУмолчанию = 8;	
	КонецЕсли;
	
	Если ИмяПараметра = "ДоляМетиловогоСпирта" Тогда
		ЗначениеФактПоУмолчанию = 0.0001;	
	КонецЕсли;
	
	Если ЗначениеФактПоУмолчанию <> Неопределено 
		И (Не ЗначениеЗаполнено(ЗначениеПараметраФакт) 
			Или ЗначениеПараметраФакт < ЗначениеФактПоУмолчанию) Тогда
			
		ЗаменяемыйШаблон = НСтр("ru='< %1'");
		ЗначениеПараметраФакт = СтрШаблон(ЗаменяемыйШаблон, ЗначениеФактПоУмолчанию);
			
	КонецЕсли;		
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли