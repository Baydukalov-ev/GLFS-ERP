
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
			
	бг_ДобавитьРеквизитТТНИсходящаяЕГАИС();
	бг_ДобавитьЭлементТТНИсходящаяЕГАИС();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ДобавитьРеквизитТТНИсходящаяЕГАИС()
	
	ДобавляемыеРеквизиты = Новый Массив;

	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_СоздаватьТТНИсходящаяЕГАИС",
			Новый ОписаниеТипов("Булево"),
			, // Путь
			Метаданные.Документы.ТТНИсходящаяЕГАИС.Синоним,
			Истина));
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьЭлементТТНИсходящаяЕГАИС()

	ПолеТТНИсходящаяЕГАИС = Элементы.Добавить(
		"бг_СоздаватьТТНИсходящаяЕГАИС",
		Тип("ПолеФормы"),
		Элементы.ГруппаПродажаСоздать);
	ПолеТТНИсходящаяЕГАИС.ПутьКДанным = "бг_СоздаватьТТНИсходящаяЕГАИС";
	ПолеТТНИсходящаяЕГАИС.Вид = ВидПоляФормы.ПолеФлажка;
	ПолеТТНИсходящаяЕГАИС.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	ПолеТТНИсходящаяЕГАИС.ТолькоПросмотр = Истина;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&ИзменениеИКонтроль("ПолучитьПараметры")
Функция бг_ПолучитьПараметры(Источник)

	СтруктураПараметров = Новый Структура();

	СтруктураПараметров.Вставить("КлючОбъекта",                      Источник.КлючОбъекта);
	СтруктураПараметров.Вставить("Организация",                      Источник.Организация);
	СтруктураПараметров.Вставить("Склад",                            Источник.Склад);
	СтруктураПараметров.Вставить("СостояниеНакладной",               Источник.СостояниеНакладной);
	СтруктураПараметров.Вставить("СостояниеОрдера",                  Источник.СостояниеОрдера);
	СтруктураПараметров.Вставить("СохраненыНастройкиОформления",     Источник.СохраненыНастройкиОформления);

	СтруктураПараметров.Вставить("ПечататьАктВыполненныхРабот",      Источник.ПечататьАктВыполненныхРабот);
	СтруктураПараметров.Вставить("ПечататьРеализациюТоваровУслуг",   Источник.ПечататьРеализациюТоваровУслуг);
	СтруктураПараметров.Вставить("ПечататьПриходныйКассовыйОрдер",   Источник.ПечататьПриходныйКассовыйОрдер);
	СтруктураПараметров.Вставить("ПечататьПередачуТоваровХранителю", Источник.ПечататьПередачуТоваровХранителю);
	СтруктураПараметров.Вставить("СоздаватьДокументПродажи",         Источник.СоздаватьДокументПродажи);
	СтруктураПараметров.Вставить("СоздаватьПриходныйКассовыйОрдер",  Источник.СоздаватьПриходныйКассовыйОрдер);
	СтруктураПараметров.Вставить("ПробиватьФискальныйЧек",           Источник.ПробиватьФискальныйЧек);
	//++ Локализация
	СтруктураПараметров.Вставить("СоздаватьСчетФактуру",             Источник.СоздаватьСчетФактуру);
	//-- Локализация
	СтруктураПараметров.Вставить("НеОткрыватьФормуСозданногоДокумента", Источник.НеОткрыватьФормуСозданногоДокумента);
            	#Вставка
	СтруктураПараметров.Вставить("бг_СоздаватьТТНИсходящаяЕГАИС", 	Источник.бг_СоздаватьТТНИсходящаяЕГАИС);
	#КонецВставки
	
	Возврат СтруктураПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
&После("УстановитьВидимостьДоступность")
Процедура бг_УстановитьВидимостьДоступность(Форма)

	Форма.Элементы.НастройкиПодключаемогоОборудования.Видимость = Форма.ПробиватьФискальныйЧек;
	
	ОбработатьИзменениеФлага(
		Форма.СоздаватьДокументПродажи,
		Форма.Элементы.бг_СоздаватьТТНИсходящаяЕГАИС,
		Форма.бг_СоздаватьТТНИсходящаяЕГАИС);
		
КонецПроцедуры

#КонецОбласти