
#Область Печать

&Перед("Печать")
Процедура бг_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)

	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_ПФ_MXL_Invoice") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_ПФ_MXL_Invoice",
			НСтр("ru = 'Invoice';|en = 'Invoice'"),
			бг_СформироватьПечатнуюФормуInvoice(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
   	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "бг_ПФ_MXL_УпаковочныйЛист") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"бг_ПФ_MXL_УпаковочныйЛист",
			НСтр("ru = ''Упаковочный лист';|en = 'Packing list'"),
			бг_СформироватьПечатнуюФормуУпаковочныйЛист(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Invoice

Функция бг_СформироватьПечатнуюФормуInvoice(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_бг_INVOICE";
	
	НомерТипаДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.бг_ДанныеДляПечатныхФормInvoiceУпаковочныйЛист(
							 ПараметрыПечати,
							 СтруктураОбъектов.Значение);
		
		бг_ЗаполнитьТабличныйДокументInvoice(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ПараметрыПечати,
			ОбъектыПечати);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура бг_ЗаполнитьТабличныйДокументInvoice(ТабличныйДокумент,
												ДанныеДляПечати,
												ПараметрыПечати,
												ОбъектыПечати)
	
	ДанныеПечати 	= ДанныеДляПечати.РезультатПоШапке.Выбрать(); 
	ДанныеЕмкости	= ДанныеДляПечати.РезультатПоЕмкости.Выбрать();
	Товары 			= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	Макет			= УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьСчетовНаОплату.бг_ПФ_MXL_Invoice_ru");
	
	ПервыйДокумент = Истина;
	АнглоязычнаяВерсия = ПараметрыПечати.бг_АнглоязычнаяВерсия;
	
	Пока ДанныеПечати.Следующий() Цикл

		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ТаблицаТовары 	= Товары.НайтиСтроки(СтруктураПоиска);
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ИменаОбластей = бг_ИменаОбластейПечатныхФормInvoiceУпаковочныйЛист(ПараметрыПечати);
		
		ОбластьШапка				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьШапка);
		ОбластьЗаголовокТаблицы  	= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьЗаголовокТаблицы);
		ОбластьСтрокаТаблицы		= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьСтрокаТаблицы);
		ОбластьВсего				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьВсего);
		ОбластьПодвал				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьПодвал);
		
		бг_ЗаполнитьРеквизитыШапкиInvoice(ДанныеПечати, ОбластьШапка, ТабличныйДокумент);

		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		Если АнглоязычнаяВерсия 
				И ДанныеПечати.Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			ОбластьЗаголовокТаблицы.Параметры.Валюта = НСтр("ru = 'RUB'");
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыводШапки = 0;
			
		МассивПроверкиВывода = Новый Массив;
			
		ВсегоСумма = 0;
		ВсегоКоличество = 0;
		ВсегоКоличествоМест = 0;
		ВсегоМассаНетто = 0;
		ВсегоМассаБрутто = 0;
		НомерСтроки = 0;
		
		Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			Если НомерСтроки = 0 И ВыводШапки <> 2 Тогда
				ВыводШапки = 1;
			КонецЕсли; 
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(СтрокаТовары);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
			
			Если АнглоязычнаяВерсия
				И Не ПустаяСтрока(СтрокаТовары.НаименованиеПоСертификатуНаАнглийском) Тогда 
				ОбластьСтрокаТаблицы.Параметры.НаименованиеПолное = СтрокаТовары.НаименованиеПоСертификатуНаАнглийском;
			КонецЕсли;
			
			МассивПроверкиВывода.Очистить();
			МассивПроверкиВывода.Добавить(ОбластьСтрокаТаблицы);
			МассивПроверкиВывода.Добавить(ОбластьПодвал);
			
			Если НомерСтроки = ТаблицаТовары.Количество() Тогда
				МассивПроверкиВывода.Добавить(ОбластьВсего);
			КонецЕсли;
				
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			ВсегоСумма = ВсегоСумма + СтрокаТовары.Сумма;
			ВсегоКоличество = ВсегоКоличество + СтрокаТовары.Количество;
			ВсегоКоличествоМест = ВсегоКоличествоМест + СтрокаТовары.КоличествоМест;
			ВсегоМассаНетто = ВсегоМассаНетто + СтрокаТовары.МассаНетто;
			ВсегоМассаБрутто = ВсегоМассаБрутто + СтрокаТовары.МассаБрутто;
		КонецЦикла;
		
		СписокПараметров = Новый Структура();
		СписокПараметров.Вставить("ВсегоКоличество"		, ВсегоКоличество);
		СписокПараметров.Вставить("Всего"				, ФормированиеПечатныхФорм.ФорматСумм(ВсегоСумма));
		СписокПараметров.Вставить("ВсегоМест"			, ВсегоКоличествоМест); 
		СписокПараметров.Вставить("ВсегоМассаНетто"		, ВсегоМассаНетто);
		СписокПараметров.Вставить("ВсегоМассаБрутто"	, ВсегоМассаБрутто); 
		СписокПараметров.Вставить("Емкости"				, бг_ТекстЕмкостиДляПечатныхФормInvoice(
															ДанныеЕмкости, АнглоязычнаяВерсия));
		СписокПараметров.Вставить("УсловияПоставки"		, ДанныеПечати.УсловияПоставки);
		СписокПараметров.Вставить("ОтветственныйЗаПодписаниеИнвойса", ДанныеПечати.ОтветственныйЗаПодписаниеИнвойса);
		
		ОбластьВсего.Параметры.Заполнить(СписокПараметров);
		бг_ЗаполнитьРеквизитыПодвалаInvoiceУпаковочныйЛист(ОбластьПодвал, СписокПараметров, ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_ЗаполнитьРеквизитыШапкиInvoice(ДанныеПечати, ОбластьМакета, ТабличныйДокумент)
	
	НомерДатаДоговора 	= СтрШаблон(Нстр("ru = '№ %1 от %2'"),
							 ДанныеПечати.НомерДоговора,
							 Формат(ДанныеПечати.ДатаДоговора,"ДФ=dd.MM.yyyy"));  
							
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									 ДанныеПечати.Контрагент,
									 ДанныеПечати.Дата);
	СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									 ДанныеПечати.Грузополучатель,
									 ДанныеПечати.Дата);

	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									ДанныеПечати.ОрганизацияПоставщик,
									 ДанныеПечати.Дата);
									 
	СписокПараметров = Новый Структура();

	СписокПараметров.Вставить("Номер"					, ДанныеПечати.Номер);
	СписокПараметров.Вставить("Дата"					, ДанныеПечати.Дата);
	СписокПараметров.Вставить("НомерДатаДоговора"		, НомерДатаДоговора);
	СписокПараметров.Вставить("ПредставлениеПолучателя"	, СведенияОГрузополучателе.ПолноеНаименование);
	СписокПараметров.Вставить("ИННПокупателя"			, СведенияОПокупателе.ИНН);
	СписокПараметров.Вставить("Грузополучатель"			, ДанныеПечати.НаименованиеПунктаНазначения);
	СписокПараметров.Вставить("АдресОтгрузки"			, ДанныеПечати.АдресОтгрузки); 
	СписокПараметров.Вставить("АдресПокупателя"			, СведенияОПокупателе.бг_МеждународныйАдрес);
    	СписокПараметров.Вставить("АдресПоставщика"			, СведенияОПоставщике.ФактическийАдрес);
	СписокПараметров.Вставить("ПредставлениеПоставщика"	, СведенияОПоставщике.Представление);
	СписокПараметров.Вставить("ИНН"						, СведенияОПоставщике.ИНН);
	СписокПараметров.Вставить("КПП"						, СведенияОПоставщике.КПП);
	СписокПараметров.Вставить("ОКПО"					, СведенияОПоставщике.КодПоОКПО);
	СписокПараметров.Вставить("ОКВЭД"					, СведенияОПоставщике.КодОКВЭД2);
	СписокПараметров.Вставить("ГрузоотправительАдрес"	, ДанныеПечати.ГрузоотправительАдрес);

	ОбластьМакета.Параметры.Заполнить(СписокПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Функция бг_ТекстЕмкостиДляПечатныхФормInvoice(Данные, АнглоязычнаяВерсия)
	
	ТекстЕмкость = ?(АнглоязычнаяВерсия, Нстр("ru = '%1, %2 L - %3 bottles.'"), Нстр("ru = '%1, %2 л - %3 бут.'"));
	
	Емкости = "";
	Пока Данные.Следующий() Цикл
		Емкости = СтрШаблон(ТекстЕмкость,
			Емкости, Данные.Емкость, Данные.КоличествоВКоробке);
	КонецЦикла; 
	
	Возврат Сред(Емкости, 3);
	
КонецФункции

#КонецОбласти

#Область УпаковочныйЛист

Функция бг_СформироватьПечатнуюФормуУпаковочныйЛист(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_бг_УпаковочныйЛист";
	
	НомерТипаДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.бг_ДанныеДляПечатныхФормInvoiceУпаковочныйЛист(
							 ПараметрыПечати,
							 СтруктураОбъектов.Значение);
		
		бг_ЗаполнитьТабличныйДокументУпаковочныйЛист(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			ПараметрыПечати);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура бг_ЗаполнитьТабличныйДокументУпаковочныйЛист(ТабличныйДокумент,
														ДанныеДляПечати,
														ОбъектыПечати,
														ПараметрыПечати)
	
	ДанныеПечати 	= ДанныеДляПечати.РезультатПоШапке.Выбрать(); 
	Товары 			= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	Макет			= УправлениеПечатью.МакетПечатнойФормы(
						"Обработка.ПечатьСчетовНаОплату.бг_ПФ_MXL_УпаковочныйЛист_ru");
	
	ПервыйДокумент = Истина;
	АнглоязычнаяВерсия = ПараметрыПечати.бг_АнглоязычнаяВерсия;
	
	Пока ДанныеПечати.Следующий() Цикл

		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ТаблицаТовары 	= Товары.НайтиСтроки(СтруктураПоиска);
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ИменаОбластей = бг_ИменаОбластейПечатныхФормInvoiceУпаковочныйЛист(ПараметрыПечати);
		
		ОбластьШапка				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьШапка);
		ОбластьЗаголовокТаблицы  	= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьЗаголовокТаблицы);
		ОбластьСтрокаТаблицы		= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьСтрокаТаблицы);
		ОбластьВсего				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьВсего);
		ОбластьПодвал				= Макет.ПолучитьОбласть(ИменаОбластей.ОбластьПодвал);
		
		бг_ЗаполнитьРеквизитыШапкиУпаковочныйЛист(ДанныеПечати, ОбластьШапка, ТабличныйДокумент);
		
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыводШапки = 0;
			
		МассивПроверкиВывода = Новый Массив;
			
		ВсегоСумма = 0;
		ВсегоКоличество = 0;
		ВсегоКоличествоМест = 0;
		ВсегоМассаНетто = 0;
		ВсегоМассаБрутто = 0;
		ВсегоПаллет = 0;
		НомерСтроки = 0;
		
		Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			Если НомерСтроки = 0 И ВыводШапки <> 2 Тогда
				ВыводШапки = 1;
			КонецЕсли; 
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(СтрокаТовары);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
			
			Если АнглоязычнаяВерсия
				И Не ПустаяСтрока(СтрокаТовары.НаименованиеПоСертификатуНаАнглийском) Тогда 
				ОбластьСтрокаТаблицы.Параметры.НаименованиеПолное = СтрокаТовары.НаименованиеПоСертификатуНаАнглийском;
			КонецЕсли;
			
			МассивПроверкиВывода.Очистить();
			МассивПроверкиВывода.Добавить(ОбластьСтрокаТаблицы);
			МассивПроверкиВывода.Добавить(ОбластьПодвал);
			
			Если НомерСтроки = ТаблицаТовары.Количество() Тогда
				МассивПроверкиВывода.Добавить(ОбластьВсего);
			КонецЕсли;
				
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			ВсегоСумма = ВсегоСумма + СтрокаТовары.Сумма;
			ВсегоКоличество = ВсегоКоличество + СтрокаТовары.Количество;
			ВсегоКоличествоМест = ВсегоКоличествоМест + СтрокаТовары.КоличествоМест;
			ВсегоМассаНетто = ВсегоМассаНетто + СтрокаТовары.МассаНетто;
			ВсегоМассаБрутто = ВсегоМассаБрутто + СтрокаТовары.МассаБрутто;
			ВсегоПаллет = ВсегоПаллет + СтрокаТовары.КоличествоПаллет;
		КонецЦикла;
		
		СписокПараметров = Новый Структура();
		СписокПараметров.Вставить("ВсегоКоличество"		, ВсегоКоличество);
		СписокПараметров.Вставить("Всего"				, ФормированиеПечатныхФорм.ФорматСумм(ВсегоСумма));
		СписокПараметров.Вставить("ВсегоМест"			, ВсегоКоличествоМест); 
		СписокПараметров.Вставить("ВсегоМассаНетто"		, ВсегоМассаНетто);
		СписокПараметров.Вставить("ВсегоМассаБрутто"	, ВсегоМассаБрутто); 
		СписокПараметров.Вставить("ВсегоПаллет"			, ВсегоПаллет); 
		
		ОбластьВсего.Параметры.Заполнить(СписокПараметров);
		бг_ЗаполнитьРеквизитыПодвалаInvoiceУпаковочныйЛист(ОбластьПодвал, СписокПараметров, ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьВсего);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_ЗаполнитьРеквизитыШапкиУпаковочныйЛист(ДанныеПечати, ОбластьМакета, ТабличныйДокумент)
	
	НомерДатаДоговора 	= СтрШаблон(Нстр("ru = '№ %1 от %2'"),
							 ДанныеПечати.НомерДоговора,
							 Формат(ДанныеПечати.ДатаДоговора,"ДФ=dd.MM.yyyy"));  
							
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									 ДанныеПечати.Контрагент,
									 ДанныеПечати.Дата);
	СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									 ДанныеПечати.Грузополучатель,
									 ДанныеПечати.Дата);

	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
									ДанныеПечати.ОрганизацияПоставщик,
									 ДанныеПечати.Дата);

	СписокПараметров = Новый Структура();

	СписокПараметров.Вставить("Номер"					, ДанныеПечати.Номер);
	СписокПараметров.Вставить("Дата"					, ДанныеПечати.Дата);
	СписокПараметров.Вставить("НомерДатаДоговора"		, НомерДатаДоговора);
	СписокПараметров.Вставить("ПредставлениеПолучателя"	, СведенияОГрузополучателе.ПолноеНаименование);
	СписокПараметров.Вставить("ИННПокупателя"			, СведенияОПокупателе.ИНН);
	СписокПараметров.Вставить("Грузополучатель"			, ДанныеПечати.НаименованиеПунктаНазначения);
	СписокПараметров.Вставить("АдресОтгрузки"			, ДанныеПечати.АдресОтгрузки);
	СписокПараметров.Вставить("АдресПокупателя"			, СведенияОПокупателе.бг_МеждународныйАдрес);
	    СписокПараметров.Вставить("УсловияПоставки"			, ДанныеПечати.УсловияПоставки);
	СписокПараметров.Вставить("ГрузоотправительКПП"		, ДанныеПечати.ГрузоотправительКПП);
	СписокПараметров.Вставить("АдресПоставщика"			, СведенияОПоставщике.ФактическийАдрес);
	СписокПараметров.Вставить("ПредставлениеПоставщика"	, СведенияОПоставщике.Представление);
	СписокПараметров.Вставить("ИНН"						, СведенияОПоставщике.ИНН);
	СписокПараметров.Вставить("КПП"						, СведенияОПоставщике.КПП);
	СписокПараметров.Вставить("ОКПО"					, СведенияОПоставщике.КодПоОКПО);
	СписокПараметров.Вставить("ОКВЭД"					, СведенияОПоставщике.КодОКВЭД2);
	СписокПараметров.Вставить("ГрузоотправительАдрес"	, ДанныеПечати.ГрузоотправительАдрес);

	ОбластьМакета.Параметры.Заполнить(СписокПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция бг_ИменаОбластейПечатныхФормInvoiceУпаковочныйЛист(ПараметрыПечати)
	
	ИменаОбластей = Новый Структура;
	ИменаОбластей.Вставить("ОбластьШапка"				, "Шапка");
	ИменаОбластей.Вставить("ОбластьЗаголовокТаблицы"	, "ЗаголовокТаблицы");
	ИменаОбластей.Вставить("ОбластьСтрокаТаблицы"		, "СтрокаТаблицы");
	ИменаОбластей.Вставить("ОбластьВсего"				, "Всего");
	ИменаОбластей.Вставить("ОбластьПодвал"				, "Подвал");

	Если ПараметрыПечати.Свойство("бг_АнглоязычнаяВерсия")
		И ПараметрыПечати.бг_АнглоязычнаяВерсия Тогда
		ИменаОбластей.ОбластьШапка 				= "Шапка_en";
		ИменаОбластей.ОбластьЗаголовокТаблицы 	= "ЗаголовокТаблицы_en";
		ИменаОбластей.ОбластьВсего 				= "Всего_en";
		ИменаОбластей.ОбластьПодвал 			= "Подвал_en";
	КонецЕсли;
	
	Возврат ИменаОбластей;
	
КонецФункции

Процедура бг_ЗаполнитьРеквизитыПодвалаInvoiceУпаковочныйЛист(ОбластьПодвала, СписокПараметров, ДанныеПечати)
	
	ШаблонПриказа = НСтр("ru='на основании дов. №%1 от %2'");
	ФорматДаты = "ДФ=dd.MM.yyyy";
	ОтветственныеЛицаОрганизации = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(
					ДанныеПечати.Организация,
					ДанныеПечати.Дата);

	ОтветственныйЗаПодписаниеИнвойса = ?(ЗначениеЗаполнено(ДанныеПечати.ОтветственныйЗаПодписаниеИнвойса),
		ДанныеПечати.ОтветственныйЗаПодписаниеИнвойса,
		ОтветственныеЛицаОрганизации.Руководитель); 
		
	ПредставлениеПриказа = ?(
		Не ПустаяСтрока(ДанныеПечати.НомерДокументаПраваПодписи),
		СтрШаблон(
			ШаблонПриказа,
			ДанныеПечати.НомерДокументаПраваПодписи, 
			Формат(ДанныеПечати.ДатаДокументаПраваПодписи, ФорматДаты)), "");

	СписокПараметров.Вставить(
		"Ответственный",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныйЗаПодписаниеИнвойса, ДанныеПечати.Дата));  
	СписокПараметров.Вставить("Приказ", ПредставлениеПриказа);
	
	ОбластьПодвала.Параметры.Заполнить(СписокПараметров);
	
КонецПроцедуры

#КонецОбласти



