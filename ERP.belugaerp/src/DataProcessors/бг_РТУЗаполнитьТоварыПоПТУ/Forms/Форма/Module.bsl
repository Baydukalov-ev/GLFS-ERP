
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектыНазначения") Тогда
		Объект.СсылкаНаОбъект = Параметры.ОбъектыНазначения[0];
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Данная обработка заполнения может быть вызвана только из формы документа'");
		Сообщение.Сообщить();
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КлючевыеРеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СсылкаНаОбъект, 
		"Организация, ЦенаВключаетНДС");
	
	Организация = КлючевыеРеквизитыДокументаОснования.Организация;
	ОбщаяНаценка = 5;
	ЦенаВключаетНДС = Истина;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='В реализации не выбрана организация'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого СтрокаТЧ Из ВладелецФормы.Объект.Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.бг_ДокументОснованиеПоступлениеОтПоставщика) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокДокументовПриобретениеТоваровУслуг.НайтиПоЗначению(
			СтрокаТЧ.бг_ДокументОснованиеПоступлениеОтПоставщика) = Неопределено Тогда
			СписокДокументовПриобретениеТоваровУслуг.Добавить(
				СтрокаТЧ.бг_ДокументОснованиеПоступлениеОтПоставщика);
		КонецЕсли;
	КонецЦикла;
	
	Склад = ВладелецФормы.Объект.Склад;
	
	Если СписокДокументовПриобретениеТоваровУслуг.Количество() <> 0 Тогда
		ЗаполнитьТаблицуФормы();
	КонецЕсли;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура кнУстановитьОбщуюНаценку(Команда)
	
	УстановитьОбщуюНаценку();
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПеренестиТоварыВДокумент", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru='Очистить табличную часть товары перед заполнением?'"),
		РежимДиалогаВопрос.ДаНетОтмена,
		,
		,
		НСтр("ru='Перенести номенклатуру в документ?'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокДокументовПриобретениеТоваровУслугОткрытие(Элемент, СтандартнаяОбработка)
	
	Если СписокДокументовПриобретениеТоваровУслуг.Количество() = 1
		И ЗначениеЗаполнено(СписокДокументовПриобретениеТоваровУслуг[0]) Тогда
		ОткрытьЗначение(СписокДокументовПриобретениеТоваровУслуг[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслугПриИзменении(Элемент)
	
	Если СписокДокументовПриобретениеТоваровУслуг.Количество() <> 0 Тогда
		
		ЗаполнитьТаблицуФормы();
		
	КонецЕсли;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПТиУПриИзменении(Элемент)
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПТиУВыбраноПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыПТиУ.ТекущиеДанные;
	
	ТекущаяСтрока.СуммаРеализации = Окр(ТекущаяСтрока.Выбрано * ТекущаяСтрока.ЦенаРеализации, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПТиУНаценкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыПТиУ.ТекущиеДанные;
	
	БазаДляРасчета = ?(ЦенаВключаетНДС, ТекущаяСтрока.СуммаСНДС, ТекущаяСтрока.Сумма);
	Коэффициент = 1 + (ТекущаяСтрока.Наценка / 100);
	
	ТекущаяСтрока.СуммаРеализации	= БазаДляРасчета * Коэффициент;
	ТекущаяСтрока.ЦенаРеализации		= Окр(ТекущаяСтрока.СуммаРеализации / ТекущаяСтрока.Выбрано, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПТиУЦенаРеализацииПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыПТиУ.ТекущиеДанные;
	
	ТекущаяСтрока.СуммаРеализации = Окр(ТекущаяСтрока.Выбрано * ТекущаяСтрока.ЦенаРеализации, 2);
	Если ТекущаяСтрока.Цена <> 0 Тогда
		ТекущаяСтрока.Наценка = Окр(ТекущаяСтрока.ЦенаРеализации * 100 / ТекущаяСтрока.Цена, 2) - 100;
	Иначе
		ТекущаяСтрока.Наценка = 0;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПТиУСуммаРеализацииПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТоварыПТиУ.ТекущиеДанные;
	
	ТекущаяСтрока.ЦенаРеализации = Окр(ТекущаяСтрока.СуммаРеализации / ТекущаяСтрока.Выбрано, 2);
	Если ТекущаяСтрока.Цена <> 0 Тогда
		ТекущаяСтрока.Наценка = Окр(ТекущаяСтрока.ЦенаРеализации * 100 / ТекущаяСтрока.Цена, 2) - 100;
	Иначе
		ТекущаяСтрока.Наценка = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщаяНаценкаПриИзменении(Элемент)
	
	УстановитьОбщуюНаценку();
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	
	Для каждого СтрокаТоварыПТиУ Из ТоварыПТиУ Цикл
		
		БазаДляРасчета = ?(ЦенаВключаетНДС, СтрокаТоварыПТиУ.СуммаСНДС, СтрокаТоварыПТиУ.Сумма);
		Коэффициент = 1 + (СтрокаТоварыПТиУ.Наценка / 100);
		
		СтрокаТоварыПТиУ.СуммаРеализации	= БазаДляРасчета * Коэффициент;
		СтрокаТоварыПТиУ.ЦенаРеализации		= Окр(СтрокаТоварыПТиУ.СуммаРеализации / СтрокаТоварыПТиУ.Выбрано, 2);
		
	КонецЦикла;
	
	ПересчитатьИтогиВТаблице();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИфункции
	
&НаСервере
Процедура ЗаполнитьТаблицуФормы()
	
	ТоварыПТиУ.Очистить();
	
	Если СписокДокументовПриобретениеТоваровУслуг.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ЭтоГруппа") = Истина Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовПриобретениеТоваровУслуг", СписокДокументовПриобретениеТоваровУслуг);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	ПриобретениеТоваровУслугТовары.Упаковка КАК Упаковка,
		|	ПриобретениеТоваровУслугТовары.Количество КАК Количество,
		|	ПриобретениеТоваровУслугТовары.Цена КАК Цена,
		|	ПриобретениеТоваровУслугТовары.Сумма КАК Сумма,
		|	ПриобретениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
		|	ПриобретениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
		|	ПриобретениеТоваровУслугТовары.СуммаСНДС КАК СуммаСНДС,
		|	ПриобретениеТоваровУслугТовары.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
		|	ПриобретениеТоваровУслугТовары.НоменклатураПартнера КАК НоменклатураПартнера,
		|	ПриобретениеТоваровУслугТовары.КодСтроки КАК КодСтроки,
		|	ПриобретениеТоваровУслугТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ПриобретениеТоваровУслугТовары.Номенклатура.бг_ЕК_СУМ КАК СУМ,
		|	ПриобретениеТоваровУслугТовары.Номенклатура.СтавкаНДС КАК СтавкаНДСНоменклатуры,
		|	ПриобретениеТоваровУслугТовары.Склад КАК Склад,
		|	ПриобретениеТоваровУслугТовары.Ссылка КАК ПоступлениеОтПоставщика
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
		|ГДЕ
		|	ПриобретениеТоваровУслугТовары.Ссылка В(&СписокДокументовПриобретениеТоваровУслуг)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетПереработчикаПродукция.Номенклатура,
		|	ОтчетПереработчикаПродукция.Упаковка,
		|	ОтчетПереработчикаПродукция.Количество,
		|	0,
		|	0,
		|	ОтчетПереработчикаПродукция.Ссылка.СтавкаНДС,
		|	0,
		|	0,
		|	Null,
		|	NULL,
		|	ОтчетПереработчикаПродукция.КодСтроки,
		|	ОтчетПереработчикаПродукция.КоличествоУпаковок,
		|	ОтчетПереработчикаПродукция.Номенклатура.бг_ЕК_СУМ,
		|	ОтчетПереработчикаПродукция.Номенклатура.СтавкаНДС,
		|	&Склад,
		|	ОтчетПереработчикаПродукция.Ссылка
		|ИЗ
		|	Документ.ОтчетПереработчика.Продукция КАК ОтчетПереработчикаПродукция
		|ГДЕ
		|	ОтчетПереработчикаПродукция.Ссылка В(&СписокДокументовПриобретениеТоваровУслуг)";
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеСтрокиТовары = РезультатЗапроса.Выбрать();
	
	Пока ДанныеСтрокиТовары.Следующий() Цикл
		
		НоваяСтрокаТовары = ТоварыПТиУ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ДанныеСтрокиТовары);
		
		НоваяСтрокаТовары.Выбрано			= ДанныеСтрокиТовары.КоличествоУпаковок;
		НоваяСтрокаТовары.Наценка			= ОбщаяНаценка;
		
		БазаДляРасчета = ?(ЦенаВключаетНДС, НоваяСтрокаТовары.СуммаСНДС, НоваяСтрокаТовары.Сумма);
		Коэффициент = 1 + (ОбщаяНаценка / 100);
		
		НоваяСтрокаТовары.СуммаРеализации	= БазаДляРасчета * Коэффициент;
		НоваяСтрокаТовары.ЦенаРеализации	= Окр(НоваяСтрокаТовары.СуммаРеализации / НоваяСтрокаТовары.Выбрано, 2);
		Если НоваяСтрокаТовары.КоличествоУпаковок = 0 Тогда
			НоваяСтрокаТовары.КоэффициентУпаковки = 1;
		Иначе
			НоваяСтрокаТовары.КоэффициентУпаковки = НоваяСтрокаТовары.Количество / НоваяСтрокаТовары.КоличествоУпаковок;
		КонецЕсли;	
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиВТаблице()
	
	ИтогКоличество			= ТоварыПТиУ.Итог("Количество");
	ИтогКоличествоУпаковок	= ТоварыПТиУ.Итог("КоличествоУпаковок");
	ИтогСумма				= ТоварыПТиУ.Итог("Сумма");
	ИтогСуммаНДС			= ТоварыПТиУ.Итог("СуммаНДС");
	ИтогСуммаСНДС			= ТоварыПТиУ.Итог("СуммаСНДС");
	ИтогВыбрано				= ТоварыПТиУ.Итог("Выбрано");
	ИтогСуммаРеализации		= ТоварыПТиУ.Итог("СуммаРеализации");	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоэффициентыУпаковок(ДанныеУпаковок)
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.КоэффициентыУпаковок(ДанныеУпаковок);
	
КонецФункции
	
&НаКлиенте
Процедура УстановитьОбщуюНаценку()
	
	Для каждого СтрокаТоварыПТиУ Из ТоварыПТиУ Цикл
		
		БазаДляРасчета = ?(ЦенаВключаетНДС, СтрокаТоварыПТиУ.СуммаСНДС, СтрокаТоварыПТиУ.Сумма);
		Коэффициент = 1 + (ОбщаяНаценка / 100);
		
		СтрокаТоварыПТиУ.СуммаРеализации	= БазаДляРасчета * Коэффициент;
		СтрокаТоварыПТиУ.ЦенаРеализации		= Окр(СтрокаТоварыПТиУ.СуммаРеализации / СтрокаТоварыПТиУ.Выбрано, 2);
		СтрокаТоварыПТиУ.Наценка			= ОбщаяНаценка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтоговыеПоказатели()
	
	ТребуетсяЗалогЗаТару = ВладелецФормы.Объект.ТребуетсяЗалогЗаТару;
	
	ВладелецФормы.СуммаВсего = ?(ТребуетсяЗалогЗаТару,
		ВладелецФормы.Объект.Товары.Итог("СуммаСНДС"),
		ВладелецФормы.Объект.Товары.Итог("СуммаСНДСБезВозвратнойТары"));
	ВладелецФормы.СуммаНДС = ?(ТребуетсяЗалогЗаТару,
		ВладелецФормы.Объект.Товары.Итог("СуммаНДС"),
		ВладелецФормы.Объект.Товары.Итог("СуммаНДСБезВозвратнойТары"));
	СуммаАвтоСкидки = ?(ТребуетсяЗалогЗаТару,
		ВладелецФормы.Объект.Товары.Итог("СуммаАвтоматическойСкидки"),
		ВладелецФормы.Объект.Товары.Итог("СуммаАвтоматическойСкидкиБезВозвратнойТары"));
	СуммаРучнойСкидки = ?(ТребуетсяЗалогЗаТару,
		ВладелецФормы.Объект.Товары.Итог("СуммаРучнойСкидки"),
		ВладелецФормы.Объект.Товары.Итог("СуммаРучнойСкидкиБезВозвратнойТары"));
	ВладелецФормы.СуммаСкидки       = СуммаАвтоСкидки + СуммаРучнойСкидки;
	ВладелецФормы.СуммаЗалогаЗаТару = ?(ТребуетсяЗалогЗаТару,ВладелецФормы.Объект.Товары.Итог("СуммаСНДС")
			- ВладелецФормы.Объект.Товары.Итог("СуммаСНДСБезВозвратнойТары"),0);
	
	ВладелецФормы.СуммаСверхЗаказа = ВладелецФормы.Объект.Товары.Итог("СуммаСверхЗаказа");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗависимыеРеквизиты()
	
	Возврат Новый Структура(
		"БезВозвратнойТары",
		"Сумма,СуммаНДС,СуммаСНДС,СуммаАвтоматическойСкидки,СуммаРучнойСкидки");
	
КонецФункции

&НаКлиенте
Процедура ПеренестиТоварыВДокумент(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
        Возврат;
	КонецЕсли;
	
	Товары = ВладелецФормы.Объект.Товары;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	    // Очистить табличную часть документа перед заполнением
		Товары.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТоварыПТиУ Цикл
		
		НоваяСтрокаТовары = Товары.Добавить();
		
		НоваяСтрокаТовары.Номенклатура			= СтрокаТаблицы.Номенклатура;
		НоваяСтрокаТовары.Упаковка				= СтрокаТаблицы.Упаковка;
		НоваяСтрокаТовары.Склад					= СтрокаТаблицы.Склад;
		НоваяСтрокаТовары.КоличествоУпаковок 	= СтрокаТаблицы.Выбрано;
		НоваяСтрокаТовары.Количество			= СтрокаТаблицы.Выбрано * СтрокаТаблицы.КоэффициентУпаковки;
		
		НоваяСтрокаТовары.СтавкаНДС	= СтрокаТаблицы.СтавкаНДСНоменклатуры;
		НоваяСтрокаТовары.Цена		= СтрокаТаблицы.ЦенаРеализации;
		НоваяСтрокаТовары.Сумма		= СтрокаТаблицы.СуммаРеализации;
		
		НоваяСтрокаТовары.СуммаНДС	= УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
			НоваяСтрокаТовары.Сумма,
			НоваяСтрокаТовары.СтавкаНДС,
			ЦенаВключаетНДС,
			ВладелецФормы.Объект.НалогообложениеНДС);
		
		Если ЦенаВключаетНДС Тогда
			НоваяСтрокаТовары.СуммаСНДС	= НоваяСтрокаТовары.Сумма;
		Иначе
			НоваяСтрокаТовары.СуммаСНДС	= НоваяСтрокаТовары.Сумма + НоваяСтрокаТовары.СуммаНДС;
		КонецЕсли;
		
		// Обработка строки ТЧ при изменении реквизитов
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", ВладелецФормы.Объект.ВернутьМногооборотнуюТару);
		СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", ВладелецФормы.Объект.ВернутьМногооборотнуюТару);
		СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
		СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
		СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
		СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", 
			Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
			ВладелецФормы.Объект.РеализацияПоЗаказам, ВладелецФормы.Объект.ТребуетсяЗалогЗаТару));
		СтруктураДействий.Вставить("ЗаполнитьПодразделениеВСтрокеТЧ", 
			Новый Структура("Подразделение", ВладелецФормы.Объект.Подразделение));
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, Неопределено);
		
		НоваяСтрокаТовары.бг_ДокументОснованиеПоступлениеОтПоставщика = СтрокаТаблицы.ПоступлениеОтПоставщика;
		
	КонецЦикла;
	
	РассчитатьИтоговыеПоказатели();
	
	СкидкиНаценкиЗаполнениеКлиент.СброситьФлагСкидкиРассчитаны(ВладелецФормы);
	ВладелецФормы.Модифицированность = Истина;
	ВладелецФормы.Объект.бг_СозданНаОснованииПоступленияОтПоставщика = Истина;   
	ВладелецФормы.Элементы.бг_ДокументОснованиеПоступлениеОтПоставщика.Видимость = Истина;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

#КонецОбласти


