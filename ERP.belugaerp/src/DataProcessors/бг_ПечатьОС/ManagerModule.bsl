#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Печать

// Сформировать печатные формы объектов
//
// Параметры:
// 		МассивОбъектов - Массив - Массив ссылок на объекты которые нужно распечатать
// 		ПараметрыПечати - Структура - Структура дополнительных параметров печати
// 		КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
// 		ОбъектыПечати - Объекты печати
// 		ПараметрыВывода - Структура - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1_Георгиевский") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС1_Георгиевский",
			НСтр("ru = 'ОС-1 (Акт о приеме-передаче ОС)';
			|en = 'FA-1 (Certificate of FA handover)'"),
			СформироватьПечатнуюФормуОС1(
				МассивОбъектов,
				ОбъектыПечати,
				ПараметрыПечати,
				Неопределено));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС4_Георгиевский") Тогда 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС4_Георгиевский",
			НСтр("ru = 'ОС-4 (Акт о списании ОС)';
			|en = 'FA-4 (FA retirement certificate)'"),
			СформироватьПечатнуюФормуОС4(
				МассивОбъектов,
				ОбъектыПечати,
				ПараметрыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС2_Георгиевский") Тогда 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, "ОС2_Георгиевский",
			НСтр("ru = 'ОС-2 (Накладная на внутреннее перемещение ОС)';
			|en = 'FA-2 (FA internal transfer note)'"),
			СформироватьПечатнуюФормуОС2(
				МассивОбъектов, 
				ОбъектыПечати, 
				ПараметрыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС3_Модернизация_Георгиевский") Тогда 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС3_Модернизация_Георгиевский",
			НСтр("ru = 'ОС-3 (Акт о приеме-сдаче отремонтированных ОС)';
			|en = 'FA-3 (Acceptance certificate of repaired FA)'"),
			СформироватьПечатнуюФормуОС3(
				МассивОбъектов, 
				ОбъектыПечати, 
				ПараметрыПечати));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС3_Дооборудование_Георгиевский") Тогда 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС3_Дооборудование_Георгиевский",
			НСтр("ru = 'ОС-3 (Акт о приеме-сдаче дооборудованных ОС)';
			|en = 'FA-3 (Acceptance certificate of repaired FA)'"),
			СформироватьПечатнуюФормуОС3_Дооборудование(
				МассивОбъектов, 
				ОбъектыПечати, 
				ПараметрыПечати));
						
	КонецЕсли;
	
КонецПроцедуры

#Область ОС1_ПринятиеКУчету_Продажа

Функция СформироватьПечатнуюФормуОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОВводеВЭксплуатацию";
	
	ПервыйДокумент = Истина;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();		
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОС1(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати);		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументОС1(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	
	ШаблонОшибки = НСтр("ru = 'В документе %1 отсутствуют основные средства. Печать ""ОС-1"" не требуется';
	|en = 'Fixed assets are missing in document %1. It is not required to print ""FA-1""'");
		
	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоТабличнымЧастям = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураОтбора = Новый Структура("Ссылка");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл	
		СтруктураОтбора.Ссылка = ВыборкаДокументы.Ссылка;
		ВыборкаПоТабличнымЧастям.Сбросить();
		Если Не ВыборкаПоТабличнымЧастям.НайтиСледующий(СтруктураОтбора) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибки,
					ВыборкаДокументы.Ссылка
				),
				ВыборкаДокументы.Ссылка);
			Продолжить;
		КонецЕсли;
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		Если ТипЗнч(ВыборкаДокументы.Ссылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4") Тогда
			ЗаполнитьМакетОС1_АктОВводеВЭксплуатацию(ТабличныйДокумент, ВыборкаДокументы, ВыборкаПоСтрокам);
		Иначе
			ЗаполнитьМакетОС1_АктОПродажеОбъекта(ТабличныйДокумент, ВыборкаДокументы, ВыборкаПоСтрокам);	
		КонецЕсли;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьМакетОС1_АктОВводеВЭксплуатацию(ТабличныйДокумент, ВыборкаПоШапкеДокумента, ВыборкаПоОС)
	
	СведенияОСдатчике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
		ВыборкаПоШапкеДокумента.Сдатчик, ВыборкаПоШапкеДокумента.ДатаДокумента,, ВыборкаПоШапкеДокумента.БанковскийСчетСдатчика);
	СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
		ВыборкаПоШапкеДокумента.Получатель, ВыборкаПоШапкеДокумента.ДатаДокумента,, ВыборкаПоШапкеДокумента.БанковскийСчетПолучателя);
	ОтветственныеЛицаПолучатель = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(
		ВыборкаПоШапкеДокумента.Получатель, ВыборкаПоШапкеДокумента.ДатаДокумента);
	ДолжностьПринялМОЛ = ДолжностьФизическогоЛица(ВыборкаПоШапкеДокумента.ПринялМОЛ, ВыборкаПоШапкеДокумента.ДатаДокумента);
	
	Макет = ПолучитьМакет("АктОВводеВЭксплуатацию");
	
	// заполним шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапкеДокумента);	
	Если СведенияОСдатчике <> Неопределено тогда
		ОбластьМакета.Параметры.ОрганизацияСдатчик = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОСдатчике, "НаименованиеДляПечатныхФорм");
	КонецЕсли;
	Если СведенияОПолучателе <> Неопределено тогда
		ОбластьМакета.Параметры.Организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "НаименованиеДляПечатныхФорм");
	КонецЕсли;
	Если ОтветственныеЛицаПолучатель.Свойство("Руководитель") Тогда
		ОбластьМакета.Параметры.Руководитель = СокращенноеФИОФизическогоЛица(ОтветственныеЛицаПолучатель.Руководитель);
	КонецЕсли;
	ОтветственныеЛицаПолучатель.Свойство("РуководительДолжность", ОбластьМакета.Параметры.ДолжностьРуководителя);	
	Если ВыборкаПоОС.Следующий() Тогда
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
		ВыборкаПоОС.Сбросить();
	КонецЕсли;
 	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// заполним таблицу ОС
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТабл");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	НомерСтроки = 1;
	Пока ВыборкаПоОС.Следующий() Цикл	
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");	
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
		ОбластьМакета.Параметры.НомерПП = НомерСтроки;	
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтроки = НомерСтроки + 1;	
	КонецЦикла;
	
	// заполним подвал
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапкеДокумента); 
	Если ОтветственныеЛицаПолучатель.Свойство("ГлавныйБухгалтер") Тогда
		ОбластьМакета.Параметры.ГлавныйБухгалтерПолучателя = СокращенноеФИОФизическогоЛица(ОтветственныеЛицаПолучатель.ГлавныйБухгалтер);
	КонецЕсли;
	ОбластьМакета.Параметры.ПринялМОЛ = СокращенноеФИОФизическогоЛица(ВыборкаПоШапкеДокумента.ПринялМОЛ);	
	ОбластьМакета.Параметры.ДолжностьПринялМОЛ = ДолжностьПринялМОЛ;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьМакетОС1_АктОПродажеОбъекта(ТабличныйДокумент, ВыборкаПоШапкеДокумента, ВыборкаПоОС)
	
	СведенияОСдатчике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
		ВыборкаПоШапкеДокумента.Сдатчик, ВыборкаПоШапкеДокумента.ДатаДокумента,, ВыборкаПоШапкеДокумента.БанковскийСчетСдатчика);
	ОтветственныеЛицаСдатчик = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(
		ВыборкаПоШапкеДокумента.Сдатчик, ВыборкаПоШапкеДокумента.ДатаДокумента);
	ДолжностьСдалМОЛ = ДолжностьФизическогоЛица(ВыборкаПоШапкеДокумента.СдалМОЛ, ВыборкаПоШапкеДокумента.ДатаДокумента);
	
	Макет = ПолучитьМакет("АктОПродажеОбъекта");
	
	Пока ВыборкаПоОС.Следующий() Цикл
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		Если СведенияОСдатчике <> Неопределено тогда
			ОбластьМакета.Параметры.ОрганизацияСдатчик = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОСдатчике, "НаименованиеДляПечатныхФорм");
		КонецЕсли;
		Если ОтветственныеЛицаСдатчик.Свойство("Руководитель") Тогда
			ОбластьМакета.Параметры.РуководительСдатчик = СокращенноеФИОФизическогоЛица(ОтветственныеЛицаСдатчик.Руководитель);
		КонецЕсли;
		ОтветственныеЛицаСдатчик.Свойство("РуководительДолжность", ОбластьМакета.Параметры.ДолжностьРуководителяСдатчик);
		ОбластьМакета.Параметры.Заполнить(ДанныеДоговораРеализацииОсновногоСредства(ВыборкаПоШапкеДокумента.Ссылка, ВыборкаПоОС.НомерИнвентарный));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);	
		ОбластьМакета.Параметры.Заполнить(ЗначенияНДСРеализуемогоОсновногоСредства(ВыборкаПоШапкеДокумента.Ссылка, ВыборкаПоОС.НомерИнвентарный));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Раздел2");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС); 
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		Если ОтветственныеЛицаСдатчик.Свойство("ГлавныйБухгалтер") Тогда
			ОбластьМакета.Параметры.ГлавныйБухгалтерСдатчика = СокращенноеФИОФизическогоЛица(ОтветственныеЛицаСдатчик.ГлавныйБухгалтер);
		КонецЕсли;
		ОбластьМакета.Параметры.СдалМОЛ = СокращенноеФИОФизическогоЛица(ВыборкаПоШапкеДокумента.СдалМОЛ);	
		ОбластьМакета.Параметры.ДолжностьСдалМОЛ = ВыборкаПоШапкеДокумента.ДолжностьСдалМОЛ;	
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОС4_Списание

Функция СформироватьПечатнуюФормуОС4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_АктОСписанииОС"; 
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ПолеСверху 			= 0;
	ТабличныйДокумент.ПолеСнизу 			= 0;
	
	ПервыйДокумент = Истина;	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОС4(СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОС4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументОС4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ШаблонСообщенияОбОшибке = НСтр("ru = 'Для документа %1 не требуется акт о списании (ОС-4)';
	|en = 'Retirement certificate (FA-4) is not required for the %1 document'");
		
	ВыборкаДокументы = ДанныеДляПечати.ПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураОтбора = Новый Структура("Ссылка");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		Если ВыборкаДокументы.ЧастичнаяЛиквидация Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ШаблонСообщенияОбОшибке, ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
		КонецЕсли;
		
		ВыборкаПоСтрокам = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();		
		КонецЕсли;	
		ПервыйДокумент = Ложь;
		
		ЗаполнитьМакетОС4_АктОСписанииОС(ТабличныйДокумент, ВыборкаДокументы, ВыборкаПоСтрокам);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьМакетОС4_АктОСписанииОС(ТабличныйДокумент, ВыборкаДокументы, ВыборкаОС)
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");		
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ДанныеФизЛица = УправлениеВнеоборотнымиАктивамиПереопределяемый.ДанныеФизЛица(
		ВыборкаДокументы.Организация, ВыборкаДокументы.МОЛ, ВыборкаДокументы.Дата, Истина);
	
	Макет = ПолучитьМакет("АктОСписанииОС");
	НомерСтроки = 1;
	ЭтоПерваяСтрока = Истина;	
	Пока ВыборкаОС.Следующий() Цикл	
		Если ЭтоПерваяСтрока Тогда
			Область = Макет.ПолучитьОбласть("Заголовок");
			Область.Параметры.Заполнить(ВыборкаОС);
			Область.Параметры.Организация = ПредставлениеОрганизации;
			Область.Параметры.МОЛ = СокращенноеФИОФизическогоЛица(ВыборкаОС.МОЛ);
			Если ОтветственныеЛица.Свойство("Руководитель") Тогда
				Область.Параметры.Руководитель = СокращенноеФИОФизическогоЛица(ОтветственныеЛица.Руководитель);
			КонецЕсли;
			ОтветственныеЛица.Свойство("РуководительДолжность", Область.Параметры.ДолжностьРуководителя);		
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ШапкаТабл");
			ТабличныйДокумент.Вывести(Область);
			
			ЭтоПерваяСтрока = Ложь;
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаОС); 
		Область.Параметры.НомерПП = НомерСтроки;
		
		Область.Параметры.СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ВыборкаОС.ДатаПринятияКУчету, ВыборкаОС.Дата);;
		
		СтоимостьОС = ВыборкаОС.Стоимость;
		Если ВыборкаОС.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету Тогда
			СтоимостьОС = ВыборкаОС.НачСтоимость;
		КонецЕсли;
		Область.Параметры.НачСтоимость = СтоимостьОС;
		
		АмортизацияОС = 0;
		Если ВыборкаОС.ПорядокПогашенияСтоимости <> Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету Тогда 
			АмортизацияОС = ВыборкаОС.НачАмортизация;	
		КонецЕсли;
		Область.Параметры.НачАмортизация = АмортизацияОС;
		
		ОстСтоимость = 0;
		Если ВыборкаОС.ПорядокПогашенияСтоимости <> Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету Тогда
			ОстСтоимость = СтоимостьОС - АмортизацияОС;	
		КонецЕсли;		
		Область.Параметры.ОстСтоимость = ОстСтоимость;
		
		ТабличныйДокумент.Вывести(Область);
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Подвал");	
	Если ОтветственныеЛица.Свойство("ГлавныйБухгалтер") Тогда
		Область.Параметры.ГлавБух = СокращенноеФИОФизическогоЛица(ОтветственныеЛица.ГлавныйБухгалтер);
	КонецЕсли;
	ТабличныйДокумент.Вывести(Область);		
	
КонецПроцедуры

#КонецОбласти

#Область ОС2_Перемещение

Функция СформироватьПечатнуюФормуОС2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_Акт_на_перемещение_ОС";
	ТабличныйДокумент.ПолеСверху         	= 0;
	ТабличныйДокумент.ПолеСлева          	= 0;
	ТабличныйДокумент.ПолеСнизу          	= 0;
	ТабличныйДокумент.ПолеСправа         	= 0;
	
	ДанныеДляПечати	= ДанныеДляПечатиОС2(МассивОбъектов);			
	ВыборкаДокументы = ДанныеДляПечати.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ПервыйДокумент = Истина;	
	Пока ВыборкаДокументы.Следующий() Цикл		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();		
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьМакетОС2_АктНаВнутреннееПеремещениеОС(ТабличныйДокумент, ВыборкаДокументы);	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеДляПечатиОС2(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втОбъектыДокументов
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";	
	
	Запрос.Выполнить();
	
	ВнеоборотныеАктивыЛокализация.ПолучитьСведенияОбОсновныхСредствахВДокументах(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Организация КАК Организация,
	|	Документ.Организация.ВалютаРегламентированногоУчета.Наименование КАК Валюта,
	|	Документ.Организация.КодПоОКПО КАК КодПоОКПО,
	|	Документ.Подразделение КАК ПодразделениеОрганизации,
	|	Документ.Подразделение.Наименование КАК ПодразделениеОрганизацииНаименование,
	|	Документ.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	Документ.ПодразделениеПолучатель.Наименование КАК ПодразделениеПолучательНаименование,
	|	Документ.Подразделение КАК ПодрСдатчик,
	|	Документ.ПодразделениеПолучатель КАК ПодрПолучатель,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.МОЛ КАК МОЛСдатчик,
	|	Документ.МОЛПолучатель КАК МОЛПолучатель,
	|	втОбъектыДокументов.НомерСтроки КАК НомерСтроки,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА втОбъектыДокументов.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА втОбъектыДокументов.ОсновноеСредство.Наименование
	|		ИНАЧЕ втОбъектыДокументов.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОС,
	|	втОбъектыДокументов.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|	втОбъектыДокументов.ОсновноеСредство.ИнвентарныйНомер КАК ИнвНомер,
	|	ВЫБОР 
	|		КОГДА втСведенияОбъектовДокументов.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) 
	|			ТОГДА ЕСТЬNULL(втСведенияОбъектовДокументов.ЗалоговаяСтоимостьПриход, 0)
	|		ИНАЧЕ ЕСТЬNULL(втСведенияОбъектовДокументов.СтоимостьПриход, 0)
	|	КОНЕЦ КАК СуммаПеремещения,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СведенияАктуальны, ЛОЖЬ) КАК СведенияАктуальны,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.ПервоначальнаяСтоимостьБУ, 0) КАК НачСтоимость
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокументов КАК втОбъектыДокументов
	|		ПО (втОбъектыДокументов.Ссылка = Документ.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|		ПО (втОбъектыДокументов.Ссылка = втСведенияОбъектовДокументов.Ссылка)
	|			И (втОбъектыДокументов.ОсновноеСредство = втСведенияОбъектовДокументов.ОсновноеСредство)
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ 
	|	МИНИМУМ(СведенияАктуальны)
	|ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьМакетОС2_АктНаВнутреннееПеремещениеОС(ТабличныйДокумент, ВыборкаДокументы)
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ДолжностьМОЛСдатчик = ДолжностьФизическогоЛица(ВыборкаДокументы.МОЛСдатчик, ВыборкаДокументы.Дата);
	ДолжностьМОЛПолучатель = ДолжностьФизическогоЛица(ВыборкаДокументы.МОЛПолучатель, ВыборкаДокументы.Дата);
	
	Макет = ПолучитьМакет("АктНаВнутреннееПеремещениеОС");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
	ОбластьШапка.Параметры.Организация = ПредставлениеОрганизации;	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	НомерСтроки = 1;
	ВыборкаПоОС = ВыборкаДокументы.Выбрать();
	Пока ВыборкаПоОС.Следующий() Цикл	
		ОбластьСтрока.Параметры.Заполнить(ВыборкаПоОС);	
		ОбластьСтрока.Параметры.НомерПП = НомерСтроки; 
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
		НомерСтроки = НомерСтроки + 1;	
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Заполнить(ВыборкаДокументы);
	Если ОтветственныеЛица.Свойство("ГлавныйБухгалтер") Тогда
		ОбластьПодвал.Параметры.ГлавБух = СокращенноеФИОФизическогоЛица(ОтветственныеЛица.ГлавныйБухгалтер);
	КонецЕсли;
	ОбластьПодвал.Параметры.ДолжностьМОЛСдал =  ДолжностьМОЛСдатчик;
	ОбластьПодвал.Параметры.ДолжностьМОЛПринял =  ДолжностьМОЛПолучатель;	
	ОбластьПодвал.Параметры.МОЛСдал = СокращенноеФИОФизическогоЛица(ВыборкаДокументы.МОЛСдатчик);
	ОбластьПодвал.Параметры.МОЛПринял = СокращенноеФИОФизическогоЛица(ВыборкаДокументы.МОЛПолучатель);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецОбласти

#Область ОС3_Модернизация_Дооборудование

Функция СформироватьПечатнуюФормуОС3(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_Акт_о_модернизации";
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ПолеСверху 			= 0;
	ТабличныйДокумент.ПолеСнизу 			= 0;
	
	ДанныеДляПечати	= ДанныеДляПечатиОС3(МассивОбъектов);	
	ВыборкаДокументы = ДанныеДляПечати.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ПервыйДокумент = Истина;	
	Пока ВыборкаДокументы.Следующий() Цикл		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();		
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьМакетОС3(ТабличныйДокумент, ВыборкаДокументы, "АктОМодернизации");	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуОС3_Дооборудование(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_Акт_о_дооборудовании";
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ПолеСверху 			= 0;
	ТабличныйДокумент.ПолеСнизу 			= 0;
	
	ДанныеДляПечати	= ДанныеДляПечатиОС3(МассивОбъектов);			
	ВыборкаДокументы = ДанныеДляПечати.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ПервыйДокумент = Истина;	
	Пока ВыборкаДокументы.Следующий() Цикл		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();		
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьМакетОС3(ТабличныйДокумент, ВыборкаДокументы, "АктОДооборудовании");	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеДляПечатиОС3(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втОбъектыДокументов
	|ИЗ
	|	Документ.МодернизацияОС2_4 КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";	
	
	Запрос.Выполнить();
	
	ВнеоборотныеАктивыЛокализация.ПолучитьСведенияОбОсновныхСредствахВДокументах(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Организация.КодПоОКПО КАК КодПоОКПООрганизации,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	Документ.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СобытияОС.ПустаяСсылка) КАК ВидРабот,
	|	втОбъектыДокументов.НомерСтроки КАК ПорядковыйНомер,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА втОбъектыДокументов.ОсновноеСредство.НаименованиеПолное = """"
	|			ТОГДА втОбъектыДокументов.ОсновноеСредство.Наименование
	|		ИНАЧЕ втОбъектыДокументов.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК НаимОС,
	|	втОбъектыДокументов.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	втОбъектыДокументов.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
	|	втОбъектыДокументов.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СтоимостьПриход, 0) КАК СуммаЗатрат,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.НакопленнаяАмортизация, 0) КАК НакопленнаяАмортизация,
	|	РАЗНОСТЬДАТ(втСведенияОбъектовДокументов.ДатаПринятияКУчету, втОбъектыДокументов.Дата, МЕСЯЦ) КАК СрокЭксплуатации,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.ИнвентарныйНомер, """") КАК ИнвНомер,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СведенияАктуальны, ЛОЖЬ) КАК СведенияАктуальны,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	втСведенияОбъектовДокументов.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.МОЛ, """") КАК МОЛ,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.НакопленнаяСтоимость, 0) - ЕСТЬNULL(втСведенияОбъектовДокументов.СтоимостьПриход, 0) КАК НачСтоимостьДо
	|ИЗ
	|	Документ.МодернизацияОС2_4 КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокументов КАК втОбъектыДокументов
	|		ПО (втОбъектыДокументов.Ссылка = Документ.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|		ПО (втОбъектыДокументов.Ссылка = втСведенияОбъектовДокументов.Ссылка)
	|			И (втОбъектыДокументов.ОсновноеСредство = втСведенияОбъектовДокументов.ОсновноеСредство)
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка
	|ИТОГИ
	|	МИНИМУМ(СведенияАктуальны),
	|	СУММА(СуммаЗатрат),
	|	СУММА(СрокЭксплуатации)
	|ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьМакетОС3(ТабличныйДокумент, ВыборкаДокументы, ИмяМакета)
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	
	Макет = ПолучитьМакет(ИмяМакета);	
	
	ВыборкаОС = ВыборкаДокументы.Выбрать();
	Пока ВыборкаОС.Следующий() Цикл	
		Область = Макет.ПолучитьОбласть("Заголовок");
		
		Область.Параметры.Заполнить(ВыборкаОС);
		Область.Параметры.Организация = ПредставлениеОрганизации;
		Если ОтветственныеЛица.Свойство("Руководитель") Тогда
			Область.Параметры.Руководитель = СокращенноеФИОФизическогоЛица(ОтветственныеЛица.Руководитель);
		КонецЕсли;
		ОтветственныеЛица.Свойство("РуководительДолжность", Область.Параметры.ДолжностьРуководителя);
		Если ОтветственныеЛица.Свойство("ГлавныйБухгалтер") Тогда
			Область.Параметры.ГлавБух = СокращенноеФИОФизическогоЛица(ОтветственныеЛица.ГлавныйБухгалтер);
		КонецЕсли;
		Область.Параметры.МОЛ = СокращенноеФИОФизическогоЛица(ВыборкаОС.МОЛ); 
		Область.Параметры.ДолжностьМОЛ = ДолжностьФизическогоЛица(ВыборкаОС.МОЛ, ВыборкаДокументы.Дата);
		
		СрокЭкспл = 0;
		Если ЗначениеЗаполнено(ВыборкаОС.ДатаПринятияКУчету) Тогда
			СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ВыборкаОС.ДатаПринятияКУчету, ВыборкаОС.Дата);
		КонецЕсли;
		Область.Параметры.СрокЭкспл = СрокЭкспл;	
		Область.Параметры.ОстСтоимостьДо = ВыборкаОС.НачСтоимостьДо - ВыборкаОС.НакопленнаяАмортизация;
		Область.Параметры.НачСтоимостьПосле = ВыборкаОС.НачСтоимостьДо + ВыборкаОС.СуммаЗатрат;	
		Область.Параметры.ОстСтоимостьПосле = ВыборкаОС.НачСтоимостьДо + ВыборкаОС.СуммаЗатрат - ВыборкаОС.НакопленнаяАмортизация;
		
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

Функция СокращенноеФИОФизическогоЛица(ФизическоеЛицо) 
	
	ФИОСтруктура = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ФизическоеЛицо, "Фамилия, Инициалы, Наименование");
	
	СокращенноеФИО = СокрЛП(ФИОСтруктура.Наименование);
	Если ЗначениеЗаполнено(ФИОСтруктура.Фамилия) И ЗначениеЗаполнено(ФИОСтруктура.Фамилия) Тогда
		СокращенноеФИО = СтрШаблон("%1 %2", СокрЛП(ФИОСтруктура.Фамилия), СокрЛП(ФИОСтруктура.Инициалы));
	КонецЕсли;
	
	Возврат СокращенноеФИО;
	
КонецФункции

Функция ДолжностьФизическогоЛица(ФизическоеЛицо, Дата)
	
	// Пока должности не используют в ПФ. Но возможно это им понадобится
	Возврат Неопределено;
	
КонецФункции

Функция ЗначенияНДСРеализуемогоОсновногоСредства(Документ, ИнвентарныйНомерОС)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодготовкаКПередачеОС2_4ОС.СтавкаНДС КАК СтавкаНДС,
		|	ПодготовкаКПередачеОС2_4ОС.СуммаНДС КАК СуммаНДС,
		|	ПодготовкаКПередачеОС2_4ОС.СуммаСНДС КАК СуммаСНДС
		|ИЗ
		|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК ПодготовкаКПередачеОС2_4ОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|		ПО ПодготовкаКПередачеОС2_4ОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка
		|ГДЕ
		|	ПодготовкаКПередачеОС2_4ОС.Ссылка = &Ссылка
		|	И ОбъектыЭксплуатации.ИнвентарныйНомер = &ИнвентарныйНомер";		
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомерОС);
	Запрос.УстановитьПараметр("Ссылка", Документ);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗначенияНДС	= Новый Структура("СтавкаНДС, СуммаНДС, СуммаСНДС", 0, 0, 0);
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		ЗаполнитьЗначенияСвойств(ЗначенияНДС, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат ЗначенияНДС;	
	
КонецФункции

Функция ДанныеДоговораРеализацииОсновногоСредства(Документ, ИнвентарныйНомерОС)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Дата КАК ДатаДоговора,
		|	ДоговорыКонтрагентов.Номер КАК НомерДоговора
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияУслугПрочихАктивов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК РеализацияУслугПрочихАктивовДоходы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|			ПО РеализацияУслугПрочихАктивовДоходы.АналитикаДоходов = ОбъектыЭксплуатации.Ссылка
		|		ПО РеализацияУслугПрочихАктивов.Ссылка = РеализацияУслугПрочихАктивовДоходы.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО РеализацияУслугПрочихАктивов.Договор = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	РеализацияУслугПрочихАктивов.ДокументОснование = &ДокументОснование
		|	И ОбъектыЭксплуатации.ИнвентарныйНомер = &ИнвентарныйНомер";	
	Запрос.УстановитьПараметр("ДокументОснование", Документ);
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомерОС);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеДоговора = Новый Структура("ДатаДоговора, НомерДоговора");
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		ЗаполнитьЗначенияСвойств(ДанныеДоговора, ВыборкаДетальныеЗаписи);	
	КонецЕсли;
	
	Возврат ДанныеДоговора;
	
КонецФункции

#КонецОбласти

#КонецЕсли
