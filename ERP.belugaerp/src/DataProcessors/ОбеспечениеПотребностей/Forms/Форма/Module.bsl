#Область ОбработчикиСобытийФормы

&НаСервере
Процедура бг_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ИмяКоманды       = "бг_ЗаказМатериаловВПроизводствоКВыполнению";
	ЗаголовокКоманды = НСтр("ru = 'Заказ материалов в производство: К выполнению'");
	бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьКнопкуНаФорму(ЭтотОбъект, ИмяКоманды,
								Элементы.УстановитьСтатус, ЗаголовокКоманды,
								ИмяКоманды, ИмяКоманды, , ВидКнопкиФормы.КнопкаКоманднойПанели);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура бг_ЗаказМатериаловВПроизводствоКВыполнению(Команда)
	
	ОчиститьСообщения();
	
	МассивСсылок = Новый Массив();
	Для Каждого Идентификатор Из Элементы.СформированныеЗаказы.ВыделенныеСтроки Цикл
		СтрокаСписка = ТаблицаДокументы.НайтиПоИдентификатору(Идентификатор);
		Если ТипЗнч(СтрокаСписка.Документ) = Тип("ДокументСсылка.ЗаказМатериаловВПроизводство") Тогда
			МассивСсылок.Добавить(Новый Структура("Ссылка, ИдентификаторСтроки", СтрокаСписка.Документ, Идентификатор));
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивСсылок) Тогда
		УстановитьСтатусНаСервере(МассивСсылок, "КВыполнению");
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно установить статус. Не выбраны заказы материалов в производство'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ШагСформированныеЗаказы

&ИзменениеИКонтроль("УстановитьСтатусНаСервере")
&НаСервере
Процедура бг_УстановитьСтатусНаСервере(МассивСсылок, Статус)
	
	ШаблонОшибкиЗаблокировать     = НСтр("ru = 'Не удалось заблокировать %1. %2';
										|en = 'Cannot block %1. %2'");
	ШаблонОшибкиЗаписать          = НСтр("ru = 'Не удалось записать %1. %2';
										|en = 'Cannot save %1. %2'");
	
	Для Каждого Элемент Из МассивСсылок Цикл
		
		// Захват объекта для редактирования
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Элемент.Ссылка);
		Исключение
			ТекстОшибки = СтрШаблон(ШаблонОшибкиЗаблокировать, Элемент.Ссылка, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Элемент.Ссылка);
			Продолжить;
		КонецПопытки;
		
		// Получение объекта документа
		ДокументОбъект = Элемент.Ссылка.ПолучитьОбъект();
		
#Вставка
		бг_ВыполнитьДополнительныеДействияУстановкаСтатуса(ДокументОбъект, Статус);
#КонецВставки		
		// Установка статуса документа
		Если Не ДокументОбъект.УстановитьСтатус(Статус, Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		
		// Запись документа
		Попытка
			
			ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			
			СтрокаТаблицы = ТаблицаДокументы.НайтиПоИдентификатору(Элемент.ИдентификаторСтроки);
			СтрокаТаблицы.Статус = ДокументОбъект.Статус;
			
		Исключение
			ТекстОшибки = СтрШаблон(ШаблонОшибкиЗаписать, Элемент.Ссылка, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Элемент.Ссылка);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура бг_ВыполнитьДополнительныеДействияУстановкаСтатуса(ДокументОбъект, Статус)
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗаказМатериаловВПроизводство")
		И Статус = "КВыполнению" Тогда
		бг_УстановитьВариантОбеспечения(ДокументОбъект.Товары, Перечисления.ВариантыОбеспечения.Отгрузить);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура бг_УстановитьВариантОбеспечения(ТабличнаяЧасть, ВариантОбеспечения)
	Для Каждого СтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
		СтрокаТабличнаяЧасть.ВариантОбеспечения = ВариантОбеспечения;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
