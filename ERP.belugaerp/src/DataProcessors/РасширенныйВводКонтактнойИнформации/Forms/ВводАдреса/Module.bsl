#Область ОбработчикиСобытий

&НаСервере
Процедура бг_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	бг_ДобавитьРеквизитыФормы();
	бг_ДобавитьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура бг_ДобавитьРеквизитыФормы()
	
	ДобавляемыеРеквизиты = Новый Массив;

	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы(
			"бг_РедактироватьПредставление",
			Новый ОписаниеТипов("Булево")));

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

КонецПроцедуры

&НаСервере
Процедура бг_ДобавитьЭлементыФормы()
	
	бг_РедактироватьПредставление = бг_МодификацияИнтерфейсовОбщегоНазначенияСервер.ДобавитьПолеНаФорму(
										ЭтаФорма, 
										"бг_РедактироватьПредставление",
										Элементы.ГруппаПредставлениеАдреса,
										"бг_РедактироватьПредставление",
										,
										Элементы.ПредставлениеАдреса,
										"ПолеФлажка");
										
	бг_РедактироватьПредставление.Заголовок = "Редактировать представление";
	бг_РедактироватьПредставление.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	бг_РедактироватьПредставление.УстановитьДействие("ПриИзменении", "бг_РедактироватьПредставлениеПриИзменении");
	
КонецПроцедуры

&НаКлиенте
Процедура бг_РедактироватьПредставлениеПриИзменении()
	
	Если ЭтотОбъект.бг_РедактироватьПредставление Тогда
		Элементы.ПредставлениеАдреса.ТолькоПросмотр = Ложь;	
	Иначе
		Элементы.ПредставлениеАдреса.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&Вместо("ПодтвердитьИЗакрыть")
Процедура бг_ПодтвердитьИЗакрыть(Результат, ДополнительныеПараметры)
	
	Если Модифицированность Тогда // При немодифицированности работает как "отмена".

//#Удаление
		//Контекст = Новый Структура("ВидКонтактнойИнформации, НаселенныйПунктДетально, ОсновнаяСтрана, Страна");
//#КонецУдаления

//#Вставка
		Контекст = Новый Структура("ВидКонтактнойИнформации, НаселенныйПунктДетально, ОсновнаяСтрана, Страна, ПредставлениеОтредактировано, Представление");
//#КонецВставки	

		ЗаполнитьЗначенияСвойств(Контекст, ЭтотОбъект);

//#Вставка
		Если ЭтотОбъект.бг_РедактироватьПредставление Тогда
			Контекст.ПредставлениеОтредактировано = Истина;
			Контекст.Представление = ЭтотОбъект.ПредставлениеАдреса;
		Иначе
		    Контекст.ПредставлениеОтредактировано = Ложь;
		КонецЕсли;
//#КонецВставки

		Результат = РезультатВыбора(Контекст, ВозвращатьСписокЗначений);
		
		// Флаги вида были прочитаны заново.
		ВидКонтактнойИнформации = Контекст.ВидКонтактнойИнформации;
		
		Если (ВидКонтактнойИнформации.ПроверятьКорректность	И Не РазрешитьВводАдресаВСвободнойФорме
			Или ВидКонтактнойИнформации.МеждународныйФорматАдреса)
			И Результат.ОшибкиЗаполнения.Количество() > 0 Тогда
			
			СообщитьОбОшибкахЗаполнения(Результат.ОшибкиЗаполнения, Ложь);
			Возврат;
			
		КонецЕсли;
		
		Результат = Результат.ДанныеВыбора;
		
		Если ВидКонтактнойИнформации.ХранитьИсториюИзменений Тогда
			ОбработатьКонтактнуюИнформациюСИсторией(Результат);
		КонецЕсли;
		
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Результат.Вставить("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов", КонтактнаяИнформацияОписаниеДополнительныхРеквизитов);
		КонецЕсли;
		
		СброситьМодифицированностьПриВыборе();
#Если ВебКлиент Тогда
		ФлагЗакрытия = ЗакрыватьПриВыборе;
		ЗакрыватьПриВыборе = Ложь;
		ОповеститьОВыборе(Результат);
		ЗакрыватьПриВыборе = ФлагЗакрытия;
#Иначе
		ОповеститьОВыборе(Результат);
#КонецЕсли
		СохранитьСостояниеФормы();
		
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Если (МодальныйРежим Или ЗакрыватьПриВыборе) И Открыта() Тогда
		СброситьМодифицированностьПриВыборе();
		СохранитьСостояниеФормы();
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
&Вместо("РезультатВыбора")
Функция бг_РезультатВыбора(Контекст, ВозвращатьСписокЗначений = Ложь)
	
	// Обновляем некоторые флаги
	ВидКИ = Контекст.ВидКонтактнойИнформации; // см. УправлениеКонтактнойИнформациейСлужебный.СтруктураВидаКонтактнойИнформации
	ЗначениеФлагов = УправлениеКонтактнойИнформациейСлужебный.СтруктураВидаКонтактнойИнформации(ВидКИ.Ссылка);
	
	ВидКИ.ТолькоНациональныйАдрес = ЗначениеФлагов.ТолькоНациональныйАдрес;
	ВидКИ.ПроверятьКорректность   = ЗначениеФлагов.ПроверятьКорректность;
	
	НаселенныйПунктДетально = Контекст.НаселенныйПунктДетально;
	Результат      = Новый Структура("ДанныеВыбора, ОшибкиЗаполнения");
	
	НаселенныйПунктДетально.Value = РаботаСАдресамиКлиентСервер.ПредставлениеАдреса(НаселенныйПунктДетально, ВидКИ.ВключатьСтрануВПредставление);
	
//#Вставка
	Если Контекст.Свойство("ПредставлениеОтредактировано")
		И Контекст.ПредставлениеОтредактировано Тогда
		НаселенныйПунктДетально.Value = Контекст.Представление;
	КонецЕсли;
//#КонецВставки
	
	Если ВозвращатьСписокЗначений Тогда
		ДанныеВыбора = Обработки.РасширенныйВводКонтактнойИнформации.КонтактнаяИнформацияВСтаруюСтруктуру(НаселенныйПунктДетально);
	ИначеЕсли Контекст.Страна = Контекст.ОсновнаяСтрана И ПустаяСтрока(НаселенныйПунктДетально.Value) Тогда
		ДанныеВыбора = "";
	Иначе
		ДанныеВыбора = НаселенныйПунктДетально;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеВыбора) = Тип("Структура") Тогда
		Если ПустаяСтрока(ДанныеВыбора.countryCode) Тогда
			СведенияОСтране = УправлениеКонтактнойИнформацией.ДанныеСтраныМира(Неопределено, ДанныеВыбора.Country);
			Если СведенияОСтране <> Неопределено Тогда
				ДанныеВыбора.countryCode = СведенияОСтране.Код;
			КонецЕсли;
		КонецЕсли;
		
		Значение = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(ДанныеВыбора);
		КонтактнаяИнформация = УправлениеКонтактнойИнформациейЛокализация.КонтактнаяИнформацияИзJSONВXML(ДанныеВыбора, Перечисления.ТипыКонтактнойИнформации.Адрес);
	Иначе
		Значение             = "";
		КонтактнаяИнформация = "";
	КонецЕсли;
	
	Результат.ДанныеВыбора = Новый Структура;
	Результат.ДанныеВыбора.Вставить("КонтактнаяИнформация", КонтактнаяИнформация);
	Результат.ДанныеВыбора.Вставить("Значение", Значение);
	Результат.ДанныеВыбора.Вставить("Представление", НаселенныйПунктДетально.Value);
	Результат.ДанныеВыбора.Вставить("Комментарий", НаселенныйПунктДетально.Comment);
	Результат.ДанныеВыбора.Вставить("ВведеноВСвободнойФорме",
		УправлениеКонтактнойИнформациейСлужебный.АдресВведенВСвободнойФорме(НаселенныйПунктДетально));
		
	// ошибки заполнения
	Результат.ОшибкиЗаполнения = Новый Массив;
	ПроверятьКорректность = ВидКИ.ПроверятьКорректность Или ВидКИ.МеждународныйФорматАдреса;
	Если ПроверятьКорректность И ЗначениеЗаполнено(Значение) Тогда
		Результат.ОшибкиЗаполнения = Обработки.РасширенныйВводКонтактнойИнформации.ОшибкиЗаполненияАдреса(
			Значение, ВидКИ);
	КонецЕсли;
		
	Результат.ДанныеВыбора.Вставить("ВВидеГиперссылки", Контекст.ВидКонтактнойИнформации.ВидРедактирования = "Диалог");
	
	// Подавляем перенос строк в возвращаемом отдельно представлении.
	Результат.ДанныеВыбора.Представление = СокрЛП(СтрЗаменить(Результат.ДанныеВыбора.Представление, Символы.ПС, " "));
	Результат.ДанныеВыбора.Вставить("Вид",ВидКИ.Ссылка);
	Результат.ДанныеВыбора.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Возврат Результат;
КонецФункции

#КонецОбласти

