#Область ПрограммныйИнтерфейс

// Возвращает структуру с параметрами для работы с процедурой ЗаполнитьРегистрыСведенийПоЛимитамИОтсрочкам 
// 
//
Функция ПараметрыЗаписиВРегистрыСведений() Экспорт

	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Источник");
	ПараметрыЗаписи.Вставить("ВидЛимитаОтсрочки");
	ПараметрыЗаписи.Вставить("ТаблицаДанныхДляЗаписи");
	ПараметрыЗаписи.Вставить("ГрузитьПоПунктуНазначения");
	
	Возврат ПараметрыЗаписи;
	
КонецФункции

// Возвращает структур для хранения результата загрузки
// 
//
Функция РезультатЗагрузки() Экспорт

	РезультатЗагрузки = Новый  Структура;
	РезультатЗагрузки.Вставить("ЕстьОшибки", Ложь);
	РезультатЗагрузки.Вставить("СтрокиСОшибкамиЗагрузки", Новый Массив);
	РезультатЗагрузки.Вставить("ТекстСообщенияПользователю", "");
	
	Возврат РезультатЗагрузки;
	
КонецФункции

// В зависимости от переданных праметром осуществляет запись в соответствующий регистр сведений.
//
//
Процедура ДобавитьЗаписиВРегистрыЛимитовИОтсрочек(ПараметрыЗаписи, ТаблицаДанныхДляЗаписи, РезультатЗагрузки) Экспорт
	
	Если Не ЗначениеЗаполнено(ПараметрыЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Источник = "РегистрСведений.бг_КредитныеЛимиты.Форма.ФормаСписка" Тогда
		ДобавитьЗаписиКредитныхЛимитов(ПараметрыЗаписи, 
										ТаблицаДанныхДляЗаписи, 
										РезультатЗагрузки);	
	ИначеЕсли ПараметрыЗаписи.Источник = "РегистрСведений.бг_ОтсрочкиПлатежаПокупателям.Форма.ФормаСписка" Тогда
		ДобавитьЗаписиОтсрочекПлатежаПокупателям(ПараметрыЗаписи, 
													ТаблицаДанныхДляЗаписи, 
													РезультатЗагрузки);			
	Иначе		
		РезультатЗагрузки.ЕстьОшибки = Истина;
		РезультатЗагрузки.ТекстСообщенияПользователю = Нстр("ru = 'Вызов команды не из 
															| формы списка соответствующих регистров, 
															| не поддерживается.'");
	КонецЕсли;
		
КонецПроцедуры 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьЗаписиКредитныхЛимитов(ПараметрыЗаписи, ТаблицаДанныхДляЗаписи, РезультатЗагрузки)
	
	СтрокиСОшибками = Новый Массив;
	
	ТаблицаДляДобавленияЗаписей = Новый ТаблицаЗначений;
	ТаблицаДляДобавленияЗаписей = ТаблицаДанныхДляЗаписи.Скопировать();
	КолонкиДляГруппировкиПоКонтрагенту = "Контрагент, КонтрагентНайденный, ИНН";
	КолонкиДляСуммированияПоКонтрагенту = "Сумма, КоличествоДней";

	Если Не ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
		ТаблицаДляДобавленияЗаписей.Свернуть(КолонкиДляГруппировкиПоКонтрагенту, 
												КолонкиДляСуммированияПоКонтрагенту);
	КонецЕсли;
	
  	Для Каждого Строка из ТаблицаДляДобавленияЗаписей Цикл
		МенеджерЗаписи = РегистрыСведений.бг_КредитныеЛимиты.СоздатьМенеджерЗаписи();			
		МенеджерЗаписи.ВидЛимита = ПараметрыЗаписи.ВидЛимитаОтсрочки;
		МенеджерЗаписи.Контрагент = Строка.КонтрагентНайденный;
		Если ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
			МенеджерЗаписи.ПунктНазначения = Строка.ПунктНазначения;
		КонецЕсли;
		МенеджерЗаписи.Сумма = Строка.Сумма;
		Попытка
			МенеджерЗаписи.Записать();	
		Исключение	
			Если Не ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
				Отбор = Новый Структура(КолонкиДляГруппировкиПоКонтрагенту);
				ЗаполнитьЗначенияСвойств(Отбор, Строка);
				НайденныеСтрокиСОшибками = ТаблицаДанныхДляЗаписи.НайтиСтроки(Отбор);
			
				Для Каждого Строка Из НайденныеСтрокиСОшибками Цикл
					СтрокаСОшибкой = Новый Структура();
					ЗаполнитьЗначенияСвойств(СтрокаСОшибкой, Строка);										
					СтрокиСОшибками.Добавить(СтрокаСОшибкой);
	            КонецЦикла;
			Иначе
				СтрокаСОшибкой = Новый Структура();
				СтрокаСОшибкой.Вставить("Контрагент");
				СтрокаСОшибкой.Вставить("ИНН");
				СтрокаСОшибкой.Вставить("ТТКПП");
				СтрокаСОшибкой.Вставить("КодТТSY");
				СтрокаСОшибкой.Вставить("Сумма");
				
				ЗаполнитьЗначенияСвойств(СтрокаСОшибкой, Строка);
				СтрокиСОшибками.Добавить(СтрокаСОшибкой);
			КонецЕсли;				
			
			РезультатЗагрузки.ЕстьОшибки = Истина;
			
		КонецПопытки;
	КонецЦикла;	
		
	Если РезультатЗагрузки.ЕстьОшибки Тогда
		РезультатЗагрузки.СтрокиСОшибкамиЗагрузки = СтрокиСОшибками;
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьЗаписиОтсрочекПлатежаПокупателям(ПараметрыЗаписи, ТаблицаДанныхДляЗаписи, РезультатЗагрузки)
	
	СтрокиСОшибками = Новый Массив;
	
	ТаблицаДляДобавленияЗаписей = Новый ТаблицаЗначений;
	ТаблицаДляДобавленияЗаписей = ТаблицаДанныхДляЗаписи.Скопировать();
	КолонкиДляГруппировкиПоКонтрагенту = "Контрагент, КонтрагентНайденный, ИНН";
	КолонкиДляСуммированияПоКонтрагенту = "Сумма, КоличествоДней";

	Если Не ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
		ТаблицаДляДобавленияЗаписей.Свернуть(КолонкиДляГруппировкиПоКонтрагенту, 
												КолонкиДляСуммированияПоКонтрагенту);
	КонецЕсли;	
	
  	Для Каждого Строка из ТаблицаДляДобавленияЗаписей Цикл
		МенеджерЗаписи = РегистрыСведений.бг_ОтсрочкиПлатежаПокупателям.СоздатьМенеджерЗаписи();			
		МенеджерЗаписи.ТипОтсрочки = ПараметрыЗаписи.ВидЛимитаОтсрочки;
		МенеджерЗаписи.Контрагент = Строка.КонтрагентНайденный;
		Если ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
			МенеджерЗаписи.ПунктНазначения = Строка.ПунктНазначения;
		КонецЕсли;
		МенеджерЗаписи.Количество = Строка.КоличествоДней;
		Попытка
			МенеджерЗаписи.Записать();	
		Исключение
			Если Не ПараметрыЗаписи.ГрузитьПоПунктуНазначения Тогда
				Отбор = Новый Структура(КолонкиДляГруппировкиПоКонтрагенту);
				ЗаполнитьЗначенияСвойств(Отбор, Строка);
				НайденныеСтрокиСОшибками = ТаблицаДанныхДляЗаписи.НайтиСтроки(Отбор);
				
				Для Каждого Строка Из НайденныеСтрокиСОшибками Цикл
					СтрокаСОшибкой = Новый Структура();
					ЗаполнитьЗначенияСвойств(СтрокаСОшибкой, Строка);										
					СтрокиСОшибками.Добавить(СтрокаСОшибкой);
	            КонецЦикла;
			Иначе
				СтрокаСОшибкой = Новый Структура();
				СтрокаСОшибкой.Вставить("Контрагент");
				СтрокаСОшибкой.Вставить("ИНН");
				СтрокаСОшибкой.Вставить("ТТКПП");
				СтрокаСОшибкой.Вставить("КодТТSY");
				СтрокаСОшибкой.Вставить("КоличествоДней");
				
				ЗаполнитьЗначенияСвойств(СтрокаСОшибкой, Строка);
				СтрокиСОшибками.Добавить(СтрокаСОшибкой);	
			КонецЕсли;
			
			РезультатЗагрузки.ЕстьОшибки = Истина;
		КонецПопытки;
	КонецЦикла;	
		
	Если РезультатЗагрузки.ЕстьОшибки Тогда
		РезультатЗагрузки.СтрокиСОшибкамиЗагрузки = СтрокиСОшибками;
	КонецЕсли;		
		
КонецПроцедуры

#КонецОбласти
