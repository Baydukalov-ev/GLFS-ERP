
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьТаблицыДляЗагрузки();
	Источник = Параметры.Источник;
	УстановитьПараметрыОтображенияЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

 &НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаЗагрузкаЛимитов" 
		 Или Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаЗагрузкаОтсрочек" Тогда
	
		Элементы.ГруппаЗагрузкаЛимитов.Видимость = Ложь;
		Элементы.ГруппаЗагрузкаОтсрочек.Видимость = Ложь;		
		ВыполнитьСопоставление();
		Элементы.ГруппаРезультатСопоставления.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультатСопоставления;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаРезультатСопоставления" Тогда			
		
		Если Не ПроверитьЗаполнение() Тогда
			ТекстСообщения = НСтр("ru = 'Требуется заполнить поля, обязательные к заполнению.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);			
			Возврат;			
		КонецЕсли;
		
		ПараметрыЗаписи = ПараметрыЗаписиВРегистры();
		ПараметрыЗаписи.Источник = Источник;
		Если Источник = "РегистрСведений.бг_КредитныеЛимиты.Форма.ФормаСписка" 
			И ЗначениеЗаполнено(ВидЛимита) Тогда
			ПараметрыЗаписи.ВидЛимитаОтсрочки = ВидЛимита;
		ИначеЕсли Источник = "РегистрСведений.бг_ОтсрочкиПлатежаПокупателям.Форма.ФормаСписка" 
			И ЗначениеЗаполнено(ВидОтсрочки) Тогда
		    ПараметрыЗаписи.ВидЛимитаОтсрочки = ВидОтсрочки;
		Иначе
			ТекстСообщения = НСтр("ru = 'Проверьте заполнение Вида лимита / Вида отсрочки, 
									|а так же параметра Источник'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		ПараметрыЗаписи.ГрузитьПоПунктуНазначения = ГрузитьПоПунктуНазначения;
				
		Результат = ЗагрузитьДанныеВРегистр(ПараметрыЗаписи);
		
		Если Результат.ЕстьОшибки Тогда
			Для Каждого Строка Из Результат.СтрокиСОшибкамиЗагрузки Цикл
				НоваяСтрока = Объект.Ошибки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);				
			КонецЦикла;
			Элементы.ГруппаРезультатСопоставления.Видимость = Ложь;
			Элементы.ГруппаОшибки.Видимость = Истина;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибки;
			
			Если ЗначениеЗаполнено(Результат.ТекстСообщенияПользователю) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстСообщенияПользователю);				
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Готово'"));
		КонецЕсли;
		
        ВладелецФормы.Элементы.Список.Обновить();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаОшибки" Тогда
	    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);	
    	ПоказатьВопрос(Оповещение,
        			НСтр("ru = 'Хотите повторить сопоставление и загрузку?'"),
        			РежимДиалогаВопрос.ДаНетОтмена); 								
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Элементы.ГруппаОшибки.Видимость = Ложь;		
		Элементы.ГруппаРезультатСопоставления.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультатСопоставления;
		ВыполнитьСопоставление();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьТаблицыДляЗагрузки()
	
	Макет = Обработки.бг_ЗагрузкаЛимитовИОтсрочекПокупателям.ПолучитьМакет("МакетЗагрузки");
	
	ТабличныйДокументДляЗагрузкиЛимитов = Новый ТабличныйДокумент;
	ТабличныйДокументДляЗагрузкиОтсрочек = Новый ТабличныйДокумент;
	
	ОбластьОсновное = Макет.ПолучитьОбласть("Основное");	
	ТабличныйДокументДляЗагрузкиЛимитов.Вывести(ОбластьОсновное);
	ТабличныйДокументДляЗагрузкиОтсрочек.Вывести(ОбластьОсновное);
	
	ОбластьСумма = Макет.ПолучитьОбласть("Сумма");
	ОбластьКоличествоДней = Макет.ПолучитьОбласть("КоличествоДней");
	
	ТабличныйДокументДляЗагрузкиЛимитов.Присоединить(ОбластьСумма);
	ТабличныйДокументДляЗагрузкиОтсрочек.Присоединить(ОбластьКоличествоДней);
	
	Объект.ТаблицаЛимитовДляЗагрузки.Вывести(ТабличныйДокументДляЗагрузкиЛимитов);
	Объект.ТаблицаОтсрочекДляЗагрузки.Вывести(ТабличныйДокументДляЗагрузкиОтсрочек);
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьПараметрыОтображенияЭлементовФормы()

	Если ЗначениеЗаполнено(Источник) Тогда
		Если Источник = "РегистрСведений.бг_КредитныеЛимиты.Форма.ФормаСписка" Тогда
			Элементы.ГруппаЗагрузкаОтсрочек.Видимость = Ложь;
			Элементы.ВидОтсрочки.Видимость = Ложь; 
			ЭтаФорма.Заголовок = "Загрузка лимитов отгрузки покупателям";
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗагрузкаЛимитов;
		ИначеЕсли Источник = "РегистрСведений.бг_ОтсрочкиПлатежаПокупателям.Форма.ФормаСписка" Тогда
			Элементы.ГруппаЗагрузкаЛимитов.Видимость = Ложь;
			Элементы.ВидЛимита.Видимость = Ложь;
			ЭтаФорма.Заголовок = "Загрузка отсрочек платежа покупателям";
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗагрузкаОтсрочек;
		КонецЕсли;
		
		Элементы.ГруппаОшибки.Видимость = Ложь;
		
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСопоставление()
	
	Построитель = Новый ПостроительОтчета;
	
	ЗагрузкаЛимитов = Ложь;
	ЗагрузкаОтсрочек = Ложь;
	ПовторнаяОбработка = Ложь;
	
	
	ИмяТекущейСтраницыФормы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	Если ИмяТекущейСтраницыФормы = "ГруппаЗагрузкаЛимитов" Тогда
		ЗагрузкаЛимитов = Истина;
	ИначеЕсли ИмяТекущейСтраницыФормы = "ГруппаЗагрузкаОтсрочек" Тогда
		ЗагрузкаОтсрочек = Истина;	
	ИначеЕсли ИмяТекущейСтраницыФормы = "ГруппаРезультатСопоставления" Тогда
		ПовторнаяОбработка = Истина;	
	Иначе
		Возврат;	
	КонецЕсли;	
	
	
	Результат = Новый ТаблицаЗначений();
	Если ЗагрузкаЛимитов Тогда	
		ТабличныйДокумент = Объект.ТаблицаЛимитовДляЗагрузки; 
		ОбластьПолученияДанных = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, 7);
		ОписаниеИсточникаДанных = Новый ОписаниеИсточникаДанных(ОбластьПолученияДанных);
		Построитель.ИсточникДанных = ОписаниеИсточникаДанных; 
		Элементы.ДанныеДляЗагрузкиКоличествоДней.Видимость = Ложь;
		Построитель.Выполнить();
		Результат = Построитель.Результат.Выгрузить();	
	ИначеЕсли ЗагрузкаОтсрочек Тогда	
		ТабличныйДокумент = Объект.ТаблицаОтсрочекДляЗагрузки;
		ОбластьПолученияДанных = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, 7);
		ОписаниеИсточникаДанных = Новый ОписаниеИсточникаДанных(ОбластьПолученияДанных);		
		Построитель.ИсточникДанных = ОписаниеИсточникаДанных;		
		Элементы.ДанныеДляЗагрузкиСумма.Видимость = Ложь;	
		Построитель.Выполнить();
		Результат = Построитель.Результат.Выгрузить();
	ИначеЕсли ПовторнаяОбработка Тогда
		Результат = Объект.Ошибки.Выгрузить();
		Объект.Ошибки.Очистить();
	КонецЕсли;
		
	РезультатПроверкиВозможностиЗагрузки = ПроверитьВозможностьЗагрузки(Результат);
	
	Если РезультатПроверкиВозможностиЗагрузки Тогда	
		
		МВТ = Новый МенеджерВременныхТаблиц;
		ПоместитьРезультатВоВременнуюТаблицу(МВТ, Результат);
		
		ДополнитьРезультатЗагрузкиСопоставлением(МВТ, Результат);
		
		Объект.ДанныеДляЗагрузки.Загрузить(Результат);
	Иначе	
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить загрузку. 
									|проверьте корректность заполнения колонки Контрагент'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьЗагрузки(ТаблицаЗначений)
	
	Для Каждого Строка Из ТаблицаЗначений Цикл	
		Если Не ЗначениеЗаполнено(Строка.Контрагент) Тогда 
			Возврат Ложь;
		КонецЕсли;		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции
	
&НаСервере
Процедура ПоместитьРезультатВоВременнуюТаблицу(МВТ, ТаблицаСРезультатомЗагрузки)
		
	КолонкаДляПреобразованияВЧисло = "";	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляЗагрузки.Контрагент КАК Контрагент,
	|	ТаблицаДляЗагрузки.ИНН КАК ИНН,
	|	ТаблицаДляЗагрузки.ТТКПП КАК ТТКПП,
	|	ТаблицаДляЗагрузки.КодТТSY КАК КодТТSY,
	|	&СуммаКоличество&
	|ПОМЕСТИТЬ РезультатЗагрузки
	|ИЗ
	|	&ТаблицаДляЗагрузки КАК ТаблицаДляЗагрузки";
	
	Если ТаблицаСРезультатомЗагрузки.Колонки.Найти("Сумма") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаКоличество&", "ТаблицаДляЗагрузки.Сумма КАК Сумма");
		КолонкаДляПреобразованияВЧисло = "Сумма";		
	ИначеЕсли ТаблицаСРезультатомЗагрузки.Колонки.Найти("КоличествоДней") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаКоличество&", "ТаблицаДляЗагрузки.КоличествоДней КАК КоличествоДней");
		КолонкаДляПреобразованияВЧисло = "КоличествоДней";
	КонецЕсли;
	
	Для Каждого Строка Из ТаблицаСРезультатомЗагрузки Цикл
	    Строка[КолонкаДляПреобразованияВЧисло] = СтрЗаменить(Строка[КолонкаДляПреобразованияВЧисло], " ", "");
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаДляЗагрузки", ТаблицаСРезультатомЗагрузки);
	
	РезультатЗапроса = Запрос.Выполнить();	
		
КонецПроцедуры

&НаСервере
Процедура ДополнитьРезультатЗагрузкиСопоставлением(МВТ, Результат)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	РезультатЗагрузки КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ Различные
	|	Контрагенты.Ссылка КАК КонтрагентНайденный,
	|   Контрагенты.ИНН КАК ИНН
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ИсходныеДанные.ИНН = Контрагенты.ИНН
	|				И Контрагенты.ОбособленноеПодразделение = ЛОЖЬ
	|				И Контрагенты.ПометкаУдаления = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ Различные
	|	битПунктыНазначения.Ссылка КАК ПунктНазначения,
	|   битПунктыНазначения.КодТТSY КАК КодTTSY
	|ПОМЕСТИТЬ ПунктыНазначения
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.битПунктыНазначения КАК битПунктыНазначения
	|		ПО (ИсходныеДанные.КодТТSY = битПунктыНазначения.КодТТSY 
	|				И битПунктыНазначения.ПометкаУдаления = ЛОЖЬ) 
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Контрагенты КАК Контрагенты
	|		ПО (ВЫБОР КОГДА ИсходныеДанные.ИНН <> """" ТОГДА ИсходныеДанные.ИНН = Контрагенты.ИНН КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПунктыНазначения КАК ПунктыНазначения
	|		ПО (ВЫБОР КОГДА ИсходныеДанные.КодТТSY <> """" ТОГДА ИсходныеДанные.КодТТSY = ПунктыНазначения.КодTTSY КОНЕЦ)
    |
	|";
	
	Результат = Запрос.Выполнить().Выгрузить();	
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеВРегистр(ПараметрыЗаписи)	
	
	ТаблицаДанныхДляЗаписи = Объект.ДанныеДляЗагрузки.Выгрузить();
	ОбработкаЗагрузкаЛимитовИОтсрочекПокупателям = Обработки.бг_ЗагрузкаЛимитовИОтсрочекПокупателям;
	РезультатЗагрузки = ОбработкаЗагрузкаЛимитовИОтсрочекПокупателям.РезультатЗагрузки();
	ОбработкаЗагрузкаЛимитовИОтсрочекПокупателям.ДобавитьЗаписиВРегистрыЛимитовИОтсрочек(
																							ПараметрыЗаписи, 
																							ТаблицаДанныхДляЗаписи, 
																							РезультатЗагрузки);	
																								
																								
	Возврат РезультатЗагрузки; 																								
																																																
КонецФункции

&НаСервере
Функция ПараметрыЗаписиВРегистры()
	Возврат Обработки.бг_ЗагрузкаЛимитовИОтсрочекПокупателям.ПараметрыЗаписиВРегистрыСведений();
КонецФункции

#КонецОбласти



