#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Восстанавливает движения по регистру бг_АкцизПоПриобретеннымЦенностям
//
// Параметры:
//  Аналитики     - Таблица значений с аналитикой, подлежащей восстановлению
//  НачалоПериода - Дата начала восстановления движений
//  КонецПериода  - Дата окончания восстановления движений
//
Процедура ВосстановитьПоследовательностьДвижений(Аналитики, НачалоПериода, КонецПериода) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Аналитики.Организация КАК Организация,
	|	Аналитики.Номенклатура КАК Номенклатура,
	|	Аналитики.СерияНоменклатуры КАК СерияНоменклатуры,
	|	Аналитики.Сделка КАК Сделка,
	|	Аналитики.СостояниеСырья КАК СостояниеСырья,
	|	Аналитики.СтатусАкциза КАК СтатусАкциза,
	|	Аналитики.Продукция КАК Продукция,
	|	Аналитики.СерияПродукции КАК СерияПродукции
	|ПОМЕСТИТЬ АналитикиВосстановлениеДвижений
	|ИЗ
	|	&Аналитики КАК Аналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Сделка,
	|	СостояниеСырья,
	|	СтатусАкциза,
	|	Продукция,
	|	СерияПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АкцизПоПриобретеннымЦенностям.Регистратор КАК Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(АкцизПоПриобретеннымЦенностям.Регистратор) КАК РегистраторПредставление,
	|	АкцизПоПриобретеннымЦенностям.Период КАК Период,
	|	ВЫБОР 
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА 0
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ПоступлениеТоваровНаСклад
	|			ТОГДА 1
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ТОГДА 2
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА 3
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|			ТОГДА 4
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА 5
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|			И ВЫРАЗИТЬ(АкцизПоПриобретеннымЦенностям.Регистратор КАК Документ.ДвижениеПродукцииИМатериалов).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
	|			ТОГДА 6
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|			ТОГДА 7
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ПроизводствоБезЗаказа
	|			ТОГДА 8
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|			И ВЫРАЗИТЬ(АкцизПоПриобретеннымЦенностям.Регистратор КАК Документ.ДвижениеПродукцииИМатериалов).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|			ТОГДА 9
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|			ТОГДА 10
	|		КОГДА АкцизПоПриобретеннымЦенностям.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА 11
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПриоритетДокументов,
	|	ИСТИНА КАК Проведен
	|ИЗ
	|	АналитикиВосстановлениеДвижений КАК АналитикиВосстановлениеДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бг_АкцизПоПриобретеннымЦенностям КАК АкцизПоПриобретеннымЦенностям
	|		ПО АналитикиВосстановлениеДвижений.Организация = АкцизПоПриобретеннымЦенностям.Организация
	|			И АналитикиВосстановлениеДвижений.Номенклатура = АкцизПоПриобретеннымЦенностям.Номенклатура
	|			И АналитикиВосстановлениеДвижений.СерияНоменклатуры = АкцизПоПриобретеннымЦенностям.СерияНоменклатуры
	|			И АналитикиВосстановлениеДвижений.Сделка = АкцизПоПриобретеннымЦенностям.Сделка
	|			И АналитикиВосстановлениеДвижений.СостояниеСырья = АкцизПоПриобретеннымЦенностям.СостояниеСырья
	|			И АналитикиВосстановлениеДвижений.СтатусАкциза = АкцизПоПриобретеннымЦенностям.СтатусАкциза
	|			И АналитикиВосстановлениеДвижений.Продукция = АкцизПоПриобретеннымЦенностям.Продукция
	|			И АналитикиВосстановлениеДвижений.СерияПродукции = АкцизПоПриобретеннымЦенностям.СерияПродукции
	|ГДЕ
	|	АкцизПоПриобретеннымЦенностям.Период >= &НачалоПериода
	|	И АкцизПоПриобретеннымЦенностям.Период <= &КонецПериода
	|	И ТИПЗНАЧЕНИЯ(АкцизПоПриобретеннымЦенностям.Регистратор) В (&ОбрабатываемыеТипыДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ПриоритетДокументов";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АкцизПоПриобретеннымЦенностям.Период <= &КонецПериода", "");
	
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("Аналитики",     Аналитики);
	Запрос.УстановитьПараметр("ОбрабатываемыеТипыДокументов", 
		ОбрабатываемыеТипыДокументовВосстановлениеПоследовательностиДвижений());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	СформироватьДвиженияПоАкцизам(Выборка);
КонецПроцедуры

Процедура СформироватьДвиженияПоАкцизам(ВыборкаДокументы) Экспорт
	НачатьТранзакцию();
	
	Попытка
		Отказ = Ложь;
		
		// Очистка движений
		Пока ВыборкаДокументы.Следующий() Цикл
			ОчиститьДвиженияПоАкцизам(ВыборкаДокументы.Регистратор);
		КонецЦикла;
		
		ВыборкаДокументы.Сбросить();
		
		Пока ВыборкаДокументы.Следующий() Цикл
			Если Не ВыборкаДокументы.Проведен Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаблокироватьДанныеДляРедактирования(ВыборкаДокументы.Регистратор);
			
			ДокументОбъект = ВыборкаДокументы.Регистратор.ПолучитьОбъект();
			СформироватьДвижения(ДокументОбъект, Отказ);
			
			Если Отказ Тогда
				ВызватьИсключение ОписаниеОшибки();
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Переформированы движения по акцизам %1 документов'"), 
			ВыборкаДокументы.Количество());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Исключение
		ОтменитьТранзакцию();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось переформировать движения для %1. %2'"), 
			ВыборкаДокументы.РегистраторПредставление, ОписаниеОшибки());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("бг_АктуализацияДвиженийПоАкцизам", 
			УровеньЖурналаРегистрации.Ошибка, , ,
			ТекстСообщения);	
			
		ВызватьИсключение НСтр("ru = 'Не удалось восстановить последовательность движений'");
	КонецПопытки;
КонецПроцедуры

// Переформировывает движения по регистру бг_АкцизПоПриобретеннымЦенностям 
// на основании результата запроса
//
// Параметры:
//  РезультатЗапроса - Резултат запроса выборки документов с группировкой по дням
//
Процедура СформироватьДвиженияПоАкцизамПоДням(РезультатЗапроса) Экспорт
	
	ВыборкаПоДням = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоДням.Следующий() Цикл
		
		ВыборкаДокументы = ВыборкаПоДням.Выбрать();
		
		НачатьТранзакцию();
		
		Попытка
			Отказ = Ложь;
			
			// Очистка движений
			Пока ВыборкаДокументы.Следующий() Цикл
				ОчиститьДвиженияПоАкцизам(ВыборкаДокументы.Регистратор);
			КонецЦикла;
			
			ВыборкаДокументы.Сбросить();
			
			Пока ВыборкаДокументы.Следующий() Цикл
				
				ЗаблокироватьДанныеДляРедактирования(ВыборкаДокументы.Регистратор);
				
				ДокументОбъект = ВыборкаДокументы.Регистратор.ПолучитьОбъект();
				СформироватьДвижения(ДокументОбъект, Отказ);
				
				Если Отказ Тогда
					ВызватьИсключение ОписаниеОшибки();
				КонецЕсли;
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = '%2: Переформированы движения по акцизам %1 документов'"), 
				ВыборкаДокументы.Количество(), Формат(ВыборкаПоДням.Дата, "ДФ=dd.MM.yyyy"));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось переформировать движения для %1. %2'"), 
				ВыборкаДокументы.РегистраторПредставление, ОписаниеОшибки());
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);

			ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("бг_АктуализацияДвиженийПоАкцизам", 
				УровеньЖурналаРегистрации.Ошибка, , ,
				ТекстСообщения);	
			
			ВызватьИсключение НСтр("ru = 'Не удалось восстановить последовательность движений'");
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьДвиженияПоАкцизам(ДокументСсылка)
	НаборЗаписей = РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПересчетДвижений");
	НаборЗаписей.Записать();
	
	МетаданныеРегистрВыпускПродукции = Метаданные.РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностямВыпускПродукции;
	Если МетаданныеРегистрВыпускПродукции.СтандартныеРеквизиты.Регистратор.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
		НаборЗаписей = РегистрыНакопления.бг_АкцизПоПриобретеннымЦенностямВыпускПродукции.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьДвижения(ДокументОбъект, Отказ)
	// Перезаполнение акцизов
	ИмяМетаданныхДокумента = ДокументОбъект.Метаданные().Имя;
	ДокументыПерезаполненияАкциза = "ЗаявлениеОВвозеТоваров, КорректировкаРеализации, ТаможеннаяДекларацияИмпорт";
	Если СтрНайти(ДокументыПерезаполненияАкциза, ИмяМетаданныхДокумента) = 0 Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям", Истина);
		ДокументОбъект.бг_ЗаполнитьАкцизыПоПриобретеннымЦенностям(Отказ);
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("адаптер_ЭтоГрупповаяОбработкаДанных", Истина);
	ДокументОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	ДокументОбъект.ОбменДанными.Загрузка = Истина;
	ДокументОбъект.Записать();
	
	Регистры = Новый Структура;
	Регистры.Вставить("бг_АкцизПоПриобретеннымЦенностям");
	Регистры.Вставить("бг_АкцизПоПриобретеннымЦенностямВыпускПродукции");
	
	ТаблицыДляДвижений = ПроведениеДокументов.ДанныеДокументаДляПроведения(ДокументОбъект.Ссылка, Регистры);
	
	бг_УчетБанковскихГарантий.ОтразитьДвижения(ТаблицыДляДвижений, ДокументОбъект.Движения, Ложь);
	
	Для каждого Регистр Из Регистры Цикл
		Если ДокументОбъект.Движения.Найти(Регистр.Ключ) <> Неопределено Тогда
			ДокументОбъект.Движения[Регистр.Ключ].Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ОбрабатываемыеТипыДокументовВосстановлениеПоследовательностиДвижений()
	ОбрабатываемыеТипыДокументов = Новый Массив;
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтКлиента"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровНаСклад"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ПроизводствоБезЗаказа"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	ОбрабатываемыеТипыДокументов.Добавить(Тип("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Возврат ОбрабатываемыеТипыДокументов;
КонецФункции

#КонецОбласти

#КонецЕсли
